(window["webpackJsonp"] = window["webpackJsonp"] || []).push([["main"],{

/***/ "./$$_lazy_route_resource lazy recursive":
/*!******************************************************!*\
  !*** ./$$_lazy_route_resource lazy namespace object ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function webpackEmptyAsyncContext(req) {
	// Here Promise.resolve().then() is used instead of new Promise() to prevent
	// uncaught exception popping up in devtools
	return Promise.resolve().then(function() {
		var e = new Error("Cannot find module '" + req + "'");
		e.code = 'MODULE_NOT_FOUND';
		throw e;
	});
}
webpackEmptyAsyncContext.keys = function() { return []; };
webpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;
module.exports = webpackEmptyAsyncContext;
webpackEmptyAsyncContext.id = "./$$_lazy_route_resource lazy recursive";

/***/ }),

/***/ "./node_modules/moment/locale sync recursive ^\\.\\/.*$":
/*!**************************************************!*\
  !*** ./node_modules/moment/locale sync ^\.\/.*$ ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var map = {
	"./af": "./node_modules/moment/locale/af.js",
	"./af.js": "./node_modules/moment/locale/af.js",
	"./ar": "./node_modules/moment/locale/ar.js",
	"./ar-dz": "./node_modules/moment/locale/ar-dz.js",
	"./ar-dz.js": "./node_modules/moment/locale/ar-dz.js",
	"./ar-kw": "./node_modules/moment/locale/ar-kw.js",
	"./ar-kw.js": "./node_modules/moment/locale/ar-kw.js",
	"./ar-ly": "./node_modules/moment/locale/ar-ly.js",
	"./ar-ly.js": "./node_modules/moment/locale/ar-ly.js",
	"./ar-ma": "./node_modules/moment/locale/ar-ma.js",
	"./ar-ma.js": "./node_modules/moment/locale/ar-ma.js",
	"./ar-sa": "./node_modules/moment/locale/ar-sa.js",
	"./ar-sa.js": "./node_modules/moment/locale/ar-sa.js",
	"./ar-tn": "./node_modules/moment/locale/ar-tn.js",
	"./ar-tn.js": "./node_modules/moment/locale/ar-tn.js",
	"./ar.js": "./node_modules/moment/locale/ar.js",
	"./az": "./node_modules/moment/locale/az.js",
	"./az.js": "./node_modules/moment/locale/az.js",
	"./be": "./node_modules/moment/locale/be.js",
	"./be.js": "./node_modules/moment/locale/be.js",
	"./bg": "./node_modules/moment/locale/bg.js",
	"./bg.js": "./node_modules/moment/locale/bg.js",
	"./bm": "./node_modules/moment/locale/bm.js",
	"./bm.js": "./node_modules/moment/locale/bm.js",
	"./bn": "./node_modules/moment/locale/bn.js",
	"./bn.js": "./node_modules/moment/locale/bn.js",
	"./bo": "./node_modules/moment/locale/bo.js",
	"./bo.js": "./node_modules/moment/locale/bo.js",
	"./br": "./node_modules/moment/locale/br.js",
	"./br.js": "./node_modules/moment/locale/br.js",
	"./bs": "./node_modules/moment/locale/bs.js",
	"./bs.js": "./node_modules/moment/locale/bs.js",
	"./ca": "./node_modules/moment/locale/ca.js",
	"./ca.js": "./node_modules/moment/locale/ca.js",
	"./cs": "./node_modules/moment/locale/cs.js",
	"./cs.js": "./node_modules/moment/locale/cs.js",
	"./cv": "./node_modules/moment/locale/cv.js",
	"./cv.js": "./node_modules/moment/locale/cv.js",
	"./cy": "./node_modules/moment/locale/cy.js",
	"./cy.js": "./node_modules/moment/locale/cy.js",
	"./da": "./node_modules/moment/locale/da.js",
	"./da.js": "./node_modules/moment/locale/da.js",
	"./de": "./node_modules/moment/locale/de.js",
	"./de-at": "./node_modules/moment/locale/de-at.js",
	"./de-at.js": "./node_modules/moment/locale/de-at.js",
	"./de-ch": "./node_modules/moment/locale/de-ch.js",
	"./de-ch.js": "./node_modules/moment/locale/de-ch.js",
	"./de.js": "./node_modules/moment/locale/de.js",
	"./dv": "./node_modules/moment/locale/dv.js",
	"./dv.js": "./node_modules/moment/locale/dv.js",
	"./el": "./node_modules/moment/locale/el.js",
	"./el.js": "./node_modules/moment/locale/el.js",
	"./en-SG": "./node_modules/moment/locale/en-SG.js",
	"./en-SG.js": "./node_modules/moment/locale/en-SG.js",
	"./en-au": "./node_modules/moment/locale/en-au.js",
	"./en-au.js": "./node_modules/moment/locale/en-au.js",
	"./en-ca": "./node_modules/moment/locale/en-ca.js",
	"./en-ca.js": "./node_modules/moment/locale/en-ca.js",
	"./en-gb": "./node_modules/moment/locale/en-gb.js",
	"./en-gb.js": "./node_modules/moment/locale/en-gb.js",
	"./en-ie": "./node_modules/moment/locale/en-ie.js",
	"./en-ie.js": "./node_modules/moment/locale/en-ie.js",
	"./en-il": "./node_modules/moment/locale/en-il.js",
	"./en-il.js": "./node_modules/moment/locale/en-il.js",
	"./en-nz": "./node_modules/moment/locale/en-nz.js",
	"./en-nz.js": "./node_modules/moment/locale/en-nz.js",
	"./eo": "./node_modules/moment/locale/eo.js",
	"./eo.js": "./node_modules/moment/locale/eo.js",
	"./es": "./node_modules/moment/locale/es.js",
	"./es-do": "./node_modules/moment/locale/es-do.js",
	"./es-do.js": "./node_modules/moment/locale/es-do.js",
	"./es-us": "./node_modules/moment/locale/es-us.js",
	"./es-us.js": "./node_modules/moment/locale/es-us.js",
	"./es.js": "./node_modules/moment/locale/es.js",
	"./et": "./node_modules/moment/locale/et.js",
	"./et.js": "./node_modules/moment/locale/et.js",
	"./eu": "./node_modules/moment/locale/eu.js",
	"./eu.js": "./node_modules/moment/locale/eu.js",
	"./fa": "./node_modules/moment/locale/fa.js",
	"./fa.js": "./node_modules/moment/locale/fa.js",
	"./fi": "./node_modules/moment/locale/fi.js",
	"./fi.js": "./node_modules/moment/locale/fi.js",
	"./fo": "./node_modules/moment/locale/fo.js",
	"./fo.js": "./node_modules/moment/locale/fo.js",
	"./fr": "./node_modules/moment/locale/fr.js",
	"./fr-ca": "./node_modules/moment/locale/fr-ca.js",
	"./fr-ca.js": "./node_modules/moment/locale/fr-ca.js",
	"./fr-ch": "./node_modules/moment/locale/fr-ch.js",
	"./fr-ch.js": "./node_modules/moment/locale/fr-ch.js",
	"./fr.js": "./node_modules/moment/locale/fr.js",
	"./fy": "./node_modules/moment/locale/fy.js",
	"./fy.js": "./node_modules/moment/locale/fy.js",
	"./ga": "./node_modules/moment/locale/ga.js",
	"./ga.js": "./node_modules/moment/locale/ga.js",
	"./gd": "./node_modules/moment/locale/gd.js",
	"./gd.js": "./node_modules/moment/locale/gd.js",
	"./gl": "./node_modules/moment/locale/gl.js",
	"./gl.js": "./node_modules/moment/locale/gl.js",
	"./gom-latn": "./node_modules/moment/locale/gom-latn.js",
	"./gom-latn.js": "./node_modules/moment/locale/gom-latn.js",
	"./gu": "./node_modules/moment/locale/gu.js",
	"./gu.js": "./node_modules/moment/locale/gu.js",
	"./he": "./node_modules/moment/locale/he.js",
	"./he.js": "./node_modules/moment/locale/he.js",
	"./hi": "./node_modules/moment/locale/hi.js",
	"./hi.js": "./node_modules/moment/locale/hi.js",
	"./hr": "./node_modules/moment/locale/hr.js",
	"./hr.js": "./node_modules/moment/locale/hr.js",
	"./hu": "./node_modules/moment/locale/hu.js",
	"./hu.js": "./node_modules/moment/locale/hu.js",
	"./hy-am": "./node_modules/moment/locale/hy-am.js",
	"./hy-am.js": "./node_modules/moment/locale/hy-am.js",
	"./id": "./node_modules/moment/locale/id.js",
	"./id.js": "./node_modules/moment/locale/id.js",
	"./is": "./node_modules/moment/locale/is.js",
	"./is.js": "./node_modules/moment/locale/is.js",
	"./it": "./node_modules/moment/locale/it.js",
	"./it-ch": "./node_modules/moment/locale/it-ch.js",
	"./it-ch.js": "./node_modules/moment/locale/it-ch.js",
	"./it.js": "./node_modules/moment/locale/it.js",
	"./ja": "./node_modules/moment/locale/ja.js",
	"./ja.js": "./node_modules/moment/locale/ja.js",
	"./jv": "./node_modules/moment/locale/jv.js",
	"./jv.js": "./node_modules/moment/locale/jv.js",
	"./ka": "./node_modules/moment/locale/ka.js",
	"./ka.js": "./node_modules/moment/locale/ka.js",
	"./kk": "./node_modules/moment/locale/kk.js",
	"./kk.js": "./node_modules/moment/locale/kk.js",
	"./km": "./node_modules/moment/locale/km.js",
	"./km.js": "./node_modules/moment/locale/km.js",
	"./kn": "./node_modules/moment/locale/kn.js",
	"./kn.js": "./node_modules/moment/locale/kn.js",
	"./ko": "./node_modules/moment/locale/ko.js",
	"./ko.js": "./node_modules/moment/locale/ko.js",
	"./ku": "./node_modules/moment/locale/ku.js",
	"./ku.js": "./node_modules/moment/locale/ku.js",
	"./ky": "./node_modules/moment/locale/ky.js",
	"./ky.js": "./node_modules/moment/locale/ky.js",
	"./lb": "./node_modules/moment/locale/lb.js",
	"./lb.js": "./node_modules/moment/locale/lb.js",
	"./lo": "./node_modules/moment/locale/lo.js",
	"./lo.js": "./node_modules/moment/locale/lo.js",
	"./lt": "./node_modules/moment/locale/lt.js",
	"./lt.js": "./node_modules/moment/locale/lt.js",
	"./lv": "./node_modules/moment/locale/lv.js",
	"./lv.js": "./node_modules/moment/locale/lv.js",
	"./me": "./node_modules/moment/locale/me.js",
	"./me.js": "./node_modules/moment/locale/me.js",
	"./mi": "./node_modules/moment/locale/mi.js",
	"./mi.js": "./node_modules/moment/locale/mi.js",
	"./mk": "./node_modules/moment/locale/mk.js",
	"./mk.js": "./node_modules/moment/locale/mk.js",
	"./ml": "./node_modules/moment/locale/ml.js",
	"./ml.js": "./node_modules/moment/locale/ml.js",
	"./mn": "./node_modules/moment/locale/mn.js",
	"./mn.js": "./node_modules/moment/locale/mn.js",
	"./mr": "./node_modules/moment/locale/mr.js",
	"./mr.js": "./node_modules/moment/locale/mr.js",
	"./ms": "./node_modules/moment/locale/ms.js",
	"./ms-my": "./node_modules/moment/locale/ms-my.js",
	"./ms-my.js": "./node_modules/moment/locale/ms-my.js",
	"./ms.js": "./node_modules/moment/locale/ms.js",
	"./mt": "./node_modules/moment/locale/mt.js",
	"./mt.js": "./node_modules/moment/locale/mt.js",
	"./my": "./node_modules/moment/locale/my.js",
	"./my.js": "./node_modules/moment/locale/my.js",
	"./nb": "./node_modules/moment/locale/nb.js",
	"./nb.js": "./node_modules/moment/locale/nb.js",
	"./ne": "./node_modules/moment/locale/ne.js",
	"./ne.js": "./node_modules/moment/locale/ne.js",
	"./nl": "./node_modules/moment/locale/nl.js",
	"./nl-be": "./node_modules/moment/locale/nl-be.js",
	"./nl-be.js": "./node_modules/moment/locale/nl-be.js",
	"./nl.js": "./node_modules/moment/locale/nl.js",
	"./nn": "./node_modules/moment/locale/nn.js",
	"./nn.js": "./node_modules/moment/locale/nn.js",
	"./pa-in": "./node_modules/moment/locale/pa-in.js",
	"./pa-in.js": "./node_modules/moment/locale/pa-in.js",
	"./pl": "./node_modules/moment/locale/pl.js",
	"./pl.js": "./node_modules/moment/locale/pl.js",
	"./pt": "./node_modules/moment/locale/pt.js",
	"./pt-br": "./node_modules/moment/locale/pt-br.js",
	"./pt-br.js": "./node_modules/moment/locale/pt-br.js",
	"./pt.js": "./node_modules/moment/locale/pt.js",
	"./ro": "./node_modules/moment/locale/ro.js",
	"./ro.js": "./node_modules/moment/locale/ro.js",
	"./ru": "./node_modules/moment/locale/ru.js",
	"./ru.js": "./node_modules/moment/locale/ru.js",
	"./sd": "./node_modules/moment/locale/sd.js",
	"./sd.js": "./node_modules/moment/locale/sd.js",
	"./se": "./node_modules/moment/locale/se.js",
	"./se.js": "./node_modules/moment/locale/se.js",
	"./si": "./node_modules/moment/locale/si.js",
	"./si.js": "./node_modules/moment/locale/si.js",
	"./sk": "./node_modules/moment/locale/sk.js",
	"./sk.js": "./node_modules/moment/locale/sk.js",
	"./sl": "./node_modules/moment/locale/sl.js",
	"./sl.js": "./node_modules/moment/locale/sl.js",
	"./sq": "./node_modules/moment/locale/sq.js",
	"./sq.js": "./node_modules/moment/locale/sq.js",
	"./sr": "./node_modules/moment/locale/sr.js",
	"./sr-cyrl": "./node_modules/moment/locale/sr-cyrl.js",
	"./sr-cyrl.js": "./node_modules/moment/locale/sr-cyrl.js",
	"./sr.js": "./node_modules/moment/locale/sr.js",
	"./ss": "./node_modules/moment/locale/ss.js",
	"./ss.js": "./node_modules/moment/locale/ss.js",
	"./sv": "./node_modules/moment/locale/sv.js",
	"./sv.js": "./node_modules/moment/locale/sv.js",
	"./sw": "./node_modules/moment/locale/sw.js",
	"./sw.js": "./node_modules/moment/locale/sw.js",
	"./ta": "./node_modules/moment/locale/ta.js",
	"./ta.js": "./node_modules/moment/locale/ta.js",
	"./te": "./node_modules/moment/locale/te.js",
	"./te.js": "./node_modules/moment/locale/te.js",
	"./tet": "./node_modules/moment/locale/tet.js",
	"./tet.js": "./node_modules/moment/locale/tet.js",
	"./tg": "./node_modules/moment/locale/tg.js",
	"./tg.js": "./node_modules/moment/locale/tg.js",
	"./th": "./node_modules/moment/locale/th.js",
	"./th.js": "./node_modules/moment/locale/th.js",
	"./tl-ph": "./node_modules/moment/locale/tl-ph.js",
	"./tl-ph.js": "./node_modules/moment/locale/tl-ph.js",
	"./tlh": "./node_modules/moment/locale/tlh.js",
	"./tlh.js": "./node_modules/moment/locale/tlh.js",
	"./tr": "./node_modules/moment/locale/tr.js",
	"./tr.js": "./node_modules/moment/locale/tr.js",
	"./tzl": "./node_modules/moment/locale/tzl.js",
	"./tzl.js": "./node_modules/moment/locale/tzl.js",
	"./tzm": "./node_modules/moment/locale/tzm.js",
	"./tzm-latn": "./node_modules/moment/locale/tzm-latn.js",
	"./tzm-latn.js": "./node_modules/moment/locale/tzm-latn.js",
	"./tzm.js": "./node_modules/moment/locale/tzm.js",
	"./ug-cn": "./node_modules/moment/locale/ug-cn.js",
	"./ug-cn.js": "./node_modules/moment/locale/ug-cn.js",
	"./uk": "./node_modules/moment/locale/uk.js",
	"./uk.js": "./node_modules/moment/locale/uk.js",
	"./ur": "./node_modules/moment/locale/ur.js",
	"./ur.js": "./node_modules/moment/locale/ur.js",
	"./uz": "./node_modules/moment/locale/uz.js",
	"./uz-latn": "./node_modules/moment/locale/uz-latn.js",
	"./uz-latn.js": "./node_modules/moment/locale/uz-latn.js",
	"./uz.js": "./node_modules/moment/locale/uz.js",
	"./vi": "./node_modules/moment/locale/vi.js",
	"./vi.js": "./node_modules/moment/locale/vi.js",
	"./x-pseudo": "./node_modules/moment/locale/x-pseudo.js",
	"./x-pseudo.js": "./node_modules/moment/locale/x-pseudo.js",
	"./yo": "./node_modules/moment/locale/yo.js",
	"./yo.js": "./node_modules/moment/locale/yo.js",
	"./zh-cn": "./node_modules/moment/locale/zh-cn.js",
	"./zh-cn.js": "./node_modules/moment/locale/zh-cn.js",
	"./zh-hk": "./node_modules/moment/locale/zh-hk.js",
	"./zh-hk.js": "./node_modules/moment/locale/zh-hk.js",
	"./zh-tw": "./node_modules/moment/locale/zh-tw.js",
	"./zh-tw.js": "./node_modules/moment/locale/zh-tw.js"
};


function webpackContext(req) {
	var id = webpackContextResolve(req);
	return __webpack_require__(id);
}
function webpackContextResolve(req) {
	if(!__webpack_require__.o(map, req)) {
		var e = new Error("Cannot find module '" + req + "'");
		e.code = 'MODULE_NOT_FOUND';
		throw e;
	}
	return map[req];
}
webpackContext.keys = function webpackContextKeys() {
	return Object.keys(map);
};
webpackContext.resolve = webpackContextResolve;
module.exports = webpackContext;
webpackContext.id = "./node_modules/moment/locale sync recursive ^\\.\\/.*$";

/***/ }),

/***/ "./node_modules/raw-loader/dist/cjs.js!./src/app/add-new-user-modal/add-new-user-modal.component.html":
/*!************************************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/add-new-user-modal/add-new-user-modal.component.html ***!
  \************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<!--ADD NEW USER -->\n<div>\n    <div class=\"login-modal\" id=\"myModal3\">\n      <div class=\"modal-dialog modal-dialog-centered modal-lg\">\n        <div class=\"modal-content\">\n  \n          <!-- Modal Header -->\n          <div class=\"modal-header\">\n            <h4 class=\"modal-title\">Add new user  </h4>\n          </div>\n  \n          <form [formGroup]=\"submitUser\">\n            <!-- Modal body -->\n            <div class=\"modal-body\" >\n        \n              <div class=\"row\">\n                  <div class=\"col-12 col-md-6\">\n                      <div class=\"form-group margin-bottom-10\">\n                          <label for=\"national-identification\" class=\"col-form-label\"> National Identification <em style=\"font-style: normal;\" class=\"text-danger-black\">*</em> </label>\n                          <input class=\"form-control\" type=\"text\" value=\"\" id=\"\" formControlName=\"NationalId\" (blur)=\"onBlurNationalIdentity($event.target.value)\" (keyup)=\"onBlurNationalIdentitykeyup($event.target.value)\"  maxlength=\"10\">\n                          <div class=\"validation-errors text-danger\">\n                              <div *ngFor=\"let validation of validation_messages.NationalId\">\n                                <div col-12 class=\"error-message\"\n                                  *ngIf=\"submitUser.get('NationalId').hasError(validation.type) && (submitUser.get('NationalId').dirty || submitUser.get('NationalId').touched)\">\n                                  {{ validation.message }}\n                                </div>\n                              </div>\n                              <div col-12 class=\"error-message\"\n                                  *ngIf=\"isNotValidNationalId && (submitUser.get('NationalId').dirty || submitUser.get('NationalId').touched)\">\n                                  {{ninresponseMessage}}\n                                </div>\n                          </div>\n                      </div>\n                  </div>\n    \n                  <div class=\"col-12 col-md-6\">\n                      <div class=\"form-group margin-bottom-10\">\n                          <label for=\"national-identification\" class=\"col-form-label\"> Date of birth <em style=\"font-style: normal;\" class=\"text-danger-black\">*</em> </label>\n                          <!--<input class=\"form-control\" type=\"text\" value=\"\" id=\"\" formControlName=\"dateOfBirth\">-->\n\n                          <div class=\"ui-g ui-fluid\">\n                              <div class=\"col-md-9 padding-null calendar-icon-wrap\" style=\"max-width: 100%;flex: 100%;\">\n                                <p-calendar\n                                placeholder=\"DD/MM/YYYY\"\n                                [readonlyInput]=\"true\"\n                                yearRange=\"1950:2050\"\n                                [monthNavigator]=\"true\"\n                                [yearNavigator]=\"true\"\n                                formControlName=\"dateOfBirth\"\n                                [showIcon]=\"true\"\n                                [(ngModel)]=\"dateOfBirth\"\n                                class=\"calendar-text\"\n                                [showIcon]=\"true\"\n                                [maxDate]=\"maxDate\"\n                                (onSelect)=\"getDOB(dateOfBirth)\"\n                                dateFormat=\"dd/mm/yy\"></p-calendar>\n                                <div class=\"validation-errors text-danger\">\n                                  <div *ngFor=\"let validation of validation_messages.dateOfBirth\">\n                                    <div col-12 class=\"error-message\"\n                                      *ngIf=\"submitUser.get('dateOfBirth').hasError(validation.type) && (submitUser.get('dateOfBirth').dirty || submitUser.get('dateOfBirth').touched)\">\n                                      {{ validation.message }}\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                      </div>\n                  </div>\n\n\n    \n                  <div class=\"col-12 col-md-6\">\n                      <div class=\"form-group margin-bottom-10\">\n                          <label for=\"national-identification\" class=\"col-form-label\"> First Name <em style=\"font-style: normal;\" class=\"text-danger-black\">*</em> </label>\n                          <input class=\"form-control profile-txt1\" type=\"text\" value=\"\" id=\"\" formControlName=\"FirstName\" readonly>\n                      </div>\n                  </div>\n    \n                  <div class=\"col-12 col-md-6\">\n                      <div class=\"form-group margin-bottom-10\">\n                          <label for=\"national-identification\" class=\"col-form-label\"> Last Name <em style=\"font-style: normal;\" class=\"text-danger-black\">*</em> </label>\n                          <input class=\"form-control profile-txt1\" type=\"text\" value=\"\" id=\"\" formControlName=\"LastName\" readonly>\n                      </div>\n                  </div>\n    \n                  <div class=\"col-12 col-md-6\">\n                      <div class=\"form-group margin-bottom-10\">\n                          <label for=\"national-identification\" class=\"col-form-label\"> Mobile Number <em style=\"font-style: normal;\" class=\"text-danger-black\">*</em> </label>\n                          <input class=\"form-control\" type=\"text\" value=\"\" id=\"\" formControlName=\"mobileNo\" maxlength=\"10\" (blur)=\"onBlurMobile($event.target.value)\">\n                          <div class=\"validation-errors text-danger\">\n                              <div *ngFor=\"let validation of validation_messages.mobileNo\">\n                                <div col-12 class=\"error-message\"\n                                  *ngIf=\"submitUser.get('mobileNo').hasError(validation.type) && (submitUser.get('mobileNo').dirty || submitUser.get('mobileNo').touched)\">\n                                  {{ validation.message }}\n                                </div>\n                              </div>\n                          </div>\n                      </div>\n                  </div>\n    \n                  <div class=\"col-12 col-md-6\">\n                      <div class=\"form-group margin-bottom-10\">\n                          <label for=\"national-identification\" class=\"col-form-label\"> Email <em style=\"font-style: normal;\" class=\"text-danger-black\">*</em> </label>\n                          <input class=\"form-control\" type=\"text\" value=\"\" id=\"\" formControlName=\"Email\">\n                          <div class=\"validation-errors text-danger\">\n                              <div *ngFor=\"let validation of validation_messages.Email\">\n                                <div col-12 class=\"error-message\"\n                                  *ngIf=\"submitUser.get('Email').hasError(validation.type) && (submitUser.get('Email').dirty || submitUser.get('Email').touched)\">\n                                  {{ validation.message }}\n                                </div>\n                              </div>\n                          </div>\n                      </div>\n                  </div>\n    \n                  <div class=\"col-12 col-md-6\">\n                      <div class=\"form-group margin-bottom-10\">\n                          <div class=\"margin-top-10 text-left\" style=\"margin-top: 14px;margin-bottom: 0px;\">\n                              <div class=\"checkbox\">\n                                  <label class=\"container-checkbox\" style=\"margin-bottom: 7px;\"> New user has onboard resolution?\n    \n                                      <input type=\"checkbox\" checked=\"checked\" formControlName=\"OnboardResolution\" (change)=\"onCaangeResolution($event)\">\n                                      <span class=\"checkmark\"></span>\n                                  </label>\n                              </div>\n                          </div>\n                          <div [ngClass]=\"{'pointer-none': submitUser.get('OnboardResolution')?.value == false || submitUser.get('OnboardResolution')?.value == ''}\">\n                              <div class=\"input-group mb-3 margin-bottom-10\">\n                                  <div class=\"custom-file\" >\n                                    <input #resolutionFile type=\"file\" class=\"custom-file-input\"\n                                      id=\"inputGroupFile05\" formControlName=\"lalFile\"\n                                      (change)=\"fileProgress($event, 'lal')\" />\n                                    <div *ngIf=\"isSelectedlalFile; else notShowlal\">\n                                      <label class=\"custom-file-label\"\n                                        for=\"inputGroupFile05\" *ngIf=\"submitUser.get('OnboardResolution')?.value == true\">{{lalFile.name | summary}}</label>\n                                      <label class=\"custom-file-label\"\n                                        for=\"inputGroupFile05\" *ngIf=\"submitUser.get('OnboardResolution')?.value == false || submitUser.get('OnboardResolution')?.value == ''\">Not Selected</label>\n                                    </div>\n                                    <ng-template #notShowlal>\n                                      <label class=\"custom-file-label\"\n                                        for=\"inputGroupFile05\">{{notSelected}}</label>\n                                    </ng-template>\n\n\n                                  </div>\n                                </div>\n                                <div class=\"validation-errors text-danger \" style=\"margin-top: 0px;\">\n                                  <!-- <div *ngFor=\"let validation of validation_messages.lalFile\">\n                                    <div col-12 class=\"error-message\"\n                                      *ngIf=\"submitUser.get('lalFile').hasError(validation.date_error) && (submitUser.get('lalFile').dirty || submitUser.get('lalFile').touched)\">\n                                      {{ validation.message }}\n                                    </div>\n                                  </div> -->\n                                  <div col-12 class=\"error-message\" *ngIf=\"submitUser.get('lalFile').errors?.date_error && submitUser.get('lalFile').touched\">\n                                    {{submitUser.get('lalFile').errors?.date_error}} \n                                  </div>\n                                </div>\n\n                          </div>\n                      </div>\n                  </div>\n    \n                  <div class=\"col-12 col-md-6\">\n                      <div class=\"form-group margin-bottom-10\">\n                          <div class=\"margin-top-10 text-left\">\n                              <div class=\"attach-label padding-null\">\n                                  <label for=\"cr\" class=\"col-form-label\"> National Identification Number <em style=\"font-style: normal;\" class=\"text-danger-black\">*</em></label>\n                              </div>\n                          </div>\n                          <div>\n                              \n                              <div class=\"input-group mb-3 margin-bottom-10\">\n                                  <div class=\"custom-file\">\n                                    <input type=\"file\" class=\"custom-file-input\"\n                                      id=\"inputGroupFile02\" formControlName=\"rniFile\"\n                                      (change)=\"fileProgress($event, 'rni')\" />\n                                    <div *ngIf=\"isSelectedrniFile; else notShow\">\n                                      <label class=\"custom-file-label\"\n                                        for=\"inputGroupFile05\">{{this.rniFile.name | summary}}</label>\n                                    </div>\n                                    <ng-template #notShow>\n                                      <label class=\"custom-file-label\"\n                                        for=\"inputGroupFile05\">{{notSelected}}</label>\n                                    </ng-template>\n                                  </div>\n                                </div>\n                                <!-- <div class=\"text-danger m-top-17\">This is a required field</div> -->\n                                <div class=\"validation-errors text-danger \"  style=\"margin-top: 0px;\">\n                                  <div *ngFor=\"let validation of validation_messages.rniFile\">\n                                    <div col-12 class=\"error-message\"\n                                      *ngIf=\"submitUser.get('rniFile').hasError(validation.type) && (submitUser.get('rniFile').dirty || submitUser.get('rniFile').touched)\">\n                                      {{ validation.message }}\n                                    </div>\n                                  </div>\n                                </div>\n                          </div>\n                      </div>\n                  </div>\n                  <div class=\"col-12 col-md-6\">\n                      <div class=\"form-group margin-bottom-10\">\n                          <div class=\"text-left margin-bottom-10\" style=\"margin-top:5px;\">\n                              <div class=\"attach-label padding-null\">\n                                  <label for=\"cr\" class=\"col-form-label\"> Authorization Letter <em style=\"font-style: normal;\" class=\"text-danger-black\">*</em></label>\n                              </div>\n                          </div>\n                          <div>\n                              <div class=\"input-group\">\n                                  <div class=\"custom-file\">\n                                    <input type=\"file\" class=\"custom-file-input\"\n                                      id=\"inputGroupFile04\" formControlName=\"laglFile\"\n                                      (change)=\"fileProgress($event, 'lagl')\" />\n                                    <!-- <label class=\"custom-file-label\" for=\"inputGroupFile04\">{{this.laglFile.name}}</label> -->\n                                    <div *ngIf=\"isSelectedlaglFile; else notShowlagl\">\n                                      <label class=\"custom-file-label\"\n                                        for=\"inputGroupFile05\">{{this.laglFile.name | summary}}</label>\n                                    </div>\n                                    <ng-template #notShowlagl>\n                                      <label class=\"custom-file-label\"\n                                        for=\"inputGroupFile05\">{{notSelected}}</label>\n                                    </ng-template>\n                                  </div>\n                                </div>\n                                <!-- <div class=\"text-danger m-top-17\">This is a required field</div> -->\n                                <div class=\"validation-errors text-danger\"  style=\"margin-top: 0px;\">\n                                  <div *ngFor=\"let validation of validation_messages.laglFile\">\n                                    <div col-12 class=\"error-message\"\n                                      *ngIf=\"submitUser.get('laglFile').hasError(validation.type) && (submitUser.get('laglFile').dirty || submitUser.get('laglFile').touched)\">\n                                      {{ validation.message }}\n                                    </div>\n                                  </div>\n                                </div>\n                          </div>\n                      </div>\n                  </div>\n    \n                  <div class=\"col-12 col-md-6\"></div>\n    \n                  <div class=\"col-12 col-md-6\">\n                      <div class=\"form-group margin-bottom-10\" style=\"margin-top:5px;\">\n                        <label for=\"bank\" class=\"col-form-label\">Select Bank <em style=\"font-style: normal;\"\n                            class=\"text-danger-black\">*</em></label>\n                         <!--<select class=\"form-control\" formControlName=\"bankName\">\n                          <option>Please select</option>\n                        </select> -->\n                        <select class=\"form-control \" formControlName=\"bankName\" required \n                         >\n                        <option>Select Bank </option>\n                        <option *ngFor=\"let listOfBankNames of bankNamesList\">\n                          {{listOfBankNames.tBankmaster.bankName}}\n                        </option>\n                      </select>\n                      <!-- <mat-from-field> \n                      <mat-form-field style=\"position: relative;\">\n                        <mat-select [formControl]=\"bankName\" multiple >\n                          <mat-option *ngFor=\"let listOfBankNames of bankNamesList\" [value]=\"topping\"> {{listOfBankNames.tBankmaster.bankName}}</mat-option>\n                          \n                        </mat-select>\n                      </mat-form-field> \n                      array: {{dropdownListBank | json}}-->\n                      <!-- <ng-multiselect-dropdown *ngIf=\"dropdownListBank && dropdownListBank.length > 0\"\n                        [placeholder]=\"'Please Select Bank'\"\n                        [data]=\"dropdownListBank\"\n                        formControlName=\"bankName\"\n                        [settings]=\"dropdownSettingsBank\"\n                        (onSelect)=\"onItemSelect($event)\"\n                        (onSelectAll)=\"onSelectAll($event)\"\n                        required\n                      >\n                      </ng-multiselect-dropdown> -->\n\n                      <!-- </mat-from-field> -->\n                        <div class=\"validation-errors text-danger\">\n                          <div *ngFor=\"let validation of validation_messages.bankName\">\n                            <div col-12 class=\"error-message\"\n                              *ngIf=\"submitUser.get('bankName').hasError(validation.type) && (submitUser.get('bankName').dirty || submitUser.get('bankName').touched)\">\n                              {{ validation.message }}\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                    <div class=\"col-12 col-md-6\">\n        \n                      <div class=\"form-group margin-bottom-10\" style=\"margin-top:5px;\">\n                        <label for=\"iban\" class=\"col-form-label\">Select IBAN <em style=\"font-style: normal;\"\n                            class=\"text-danger-black\">*</em></label>\n                         <!--<select class=\"form-control\" formControlName=\"IBAN\">\n                          <option>SA80000132165498745125</option>\n                        </select> -->\n                        <select class=\"form-control\" formControlName=\"IBAN\" required>\n                          <option>Select IBAN </option>\n                          <option *ngFor=\"let listOfBankNames of bankNamesList\">\n                            {{listOfBankNames.ibanNo}}\n                          </option>\n                        </select>\n                        <!-- <ng-multiselect-dropdown *ngIf=\"bankNamesList && bankNamesList.length > 0\"\n                          [placeholder]=\"'Please select  IBAN'\"\n                          [data]=\"bankNamesList\"\n                          formControlName=\"IBAN\"\n                          [settings]=\"dropdownSettings\"\n                          (onSelect)=\"onItemSelect($event)\"\n                          (onSelectAll)=\"onSelectAll($event)\"\n                          required\n                        >\n                        </ng-multiselect-dropdown> -->\n\n                        <div class=\"validation-errors text-danger\">\n                          <div *ngFor=\"let validation of validation_messages.IBAN\">\n                            <div col-12 class=\"error-message\"\n                              *ngIf=\"submitUser.get('IBAN').hasError(validation.type) && (submitUser.get('IBAN').dirty || submitUser.get('IBAN').touched)\">\n                              {{ validation.message }}\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n    \n              </div>\n    \n            </div>\n            <div class=\"modal-footer\">\n                <div class=\"row\">\n                    <div class=\"col-12\">\n                        <div class=\"btn-wrap\">\n                            <button type=\"reset\" class=\"btn btn-gry btn-margin-2\" (click)=\"closeAddUserButton()\">Cancel</button>\n                            <button [ngClass]=\"{'pointer-none':isSubmitLoading}\" style=\"margin-left: 5px;\" type=\"button\" class=\"btn btn-success btn-margin-2\" (click)=\"addUserSubmit()\">{{isSubmitLoading?'Submitting...':'Save'}}</button>\n                        </div>\n      \n                    </div>\n                </div>\n            </div>\n          </form>\n  \n  \n        </div>\n      </div>\n    </div>\n  </div>\n\n <!--  <ng-multiselect-dropdown\n    [placeholder]=\"'custom placeholder'\"\n    [data]=\"dropdownList\"\n    formControlName=\"IBAN\"\n    [(ngModel)]=\"selectedItems\"\n    [settings]=\"dropdownSettings\"\n    (onSelect)=\"onItemSelect($event)\"\n    (onSelectAll)=\"onSelectAll($event)\"\n  >\n  </ng-multiselect-dropdown> -->\n\n  <!--ADD NEW USER -->");

/***/ }),

/***/ "./node_modules/raw-loader/dist/cjs.js!./src/app/add-new-workflow/add-new-workflow.component.html":
/*!********************************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/add-new-workflow/add-new-workflow.component.html ***!
  \********************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<!--Content-->\n<!--===========================\n\t\t\tStart Content\n\t\t\t============================-->\n            <div class=\"pt-0 kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor kt-margin-top-50 kt-content-padding\">\n                <div class=\"kt-container\">\n                    <!--Middle Content Here-->\n            \n                    <div class=\"row\">\n                        <!--<div class=\"col-12 col-sm-3 col-md-3 col-lg-3 left-panel-menu-wrap w-20 fixed-wrap\">\n            \n                            \n                            <ul class=\"vertical-menu\">\n                                <li *ngIf=\"roleId == 1\"><a routerLink=\"/dashboard\"><span class=\"db-icon\"></span>{{'HOME.Dashboard' | translate}}</a></li>\n                                <li *ngIf=\"roleId == 1\"><a routerLink=\"/privateLgManagement\"><span class=\"lg-icon\"></span>{{'HOME.LG_Management' | translate}}</a>\n                                <li *ngIf=\"roleId == 1\"><a routerLink=\"/requestLgIssuance\"><span class=\"lg-icon\"></span>{{'HOME.LG_issuance' | translate}}</a></li>\n                                <li *ngIf=\"roleId == 1\"><a routerLink=\"/privatependingtasks\"><span class=\"lg-icon\"></span>{{'HOME.Pending_Tasks' | translate}}</a>\n                                <li *ngIf=\"roleId == 1\"><a routerLink=\"/privateaccountmanagement\" class=\"active\"><span class=\"ta-icon\"></span>Account Management</a></li>\n                            </ul>\n                            \n                        </div>-->\n                        <app-sidemenu></app-sidemenu>\n                        <!--<div class=\"col-12 col-sm-3 col-md-3 col-lg-3 left-panel-menu-wrap w-20 fixed-wrap\">\n                            <div class=\"left-menu-panel\">\n                                <nav class=\"nav\" role=\"navigation\">\n                                    <ul class=\"nav-list vertical-menu\">\n                                        <li>\n                                            <input id=\"group-0\" type=\"checkbox\" hidden />\n                                            <label for=\"group-0\"><a routerLink=\"/dashboard\"><span class=\"hm-icon\"></span>Home</a></label>\n                                        </li>\n                                        <li>\n                                            <input id=\"group-12\" type=\"checkbox\" hidden />\n                                            <label for=\"group-12\"><span class=\"fa fa-angle-right\"></span><a href=\"javascript:;\"><span class=\"lg-icon\"></span>LG Management</a></label>\n                                            <ul class=\"group-list\">\n                                                <li *ngIf=\"menuIssuanceCreate\">\n                                                    <input id=\"group-6\" type=\"checkbox\" hidden />\n                                                     <label for=\"group-6\"><a routerLink=\"/requestLgIssuance\"><span class=\"lg-icon\"></span>Issuance</a></label>\n                                                </li>\n                                                <li *ngIf=\"menuAmendCreate\">\n                                                    <input id=\"group-7\" type=\"checkbox\" hidden />\n                                                     <label for=\"group-7\"><a href=\"javascript:;\"><span class=\"lg-icon\"></span>Amendment</a></label>\n                                                </li>\n                                                <li *ngIf=\"menuConfiscateCreate\">\n                                                    <input id=\"group-8\" type=\"checkbox\" hidden />\n                                                     <label for=\"group-8\"><a href=\"javascript:;\"><span class=\"lg-icon\"></span>Confiscation</a></label>\n                                                </li>\n                                                <li *ngIf=\"menuReleaseCreate\">\n                                                    <input id=\"group-9\" type=\"checkbox\" hidden />\n                                                     <label for=\"group-9\"><a href=\"javascript:;\"><span class=\"lg-icon\"></span>Release</a></label>\n                                                </li>\n                                                <li >\n                                                    <input id=\"group-10\" type=\"checkbox\" hidden />\n                                                     <label for=\"group-10\"><a routerLink=\"/privatependingtasks\"><span class=\"lg-icon\"></span>Pending tasks</a></label>\n                                                </li>\n                                            </ul>\n                                        </li>\n                                        <li>\n                                            <input id=\"group-4\" type=\"checkbox\" hidden />\n                                            <label for=\"group-4\"><a routerLink=\"/privateaccountmanagement\"><span class=\"ta-icon\"></span>Account Management</a></label>\n                                        </li>\n                                    </ul>\n                                </nav>\n                            </div>\n                        </div>-->\n            \n            \n            \n            \n            \n            \n                        <div class=\"col-12 col-sm-9 col-md-9 col-lg-9 padding-null scroll-wrap\">\n            \n                            <div class=\"grey-bg\">\n                                <section class=\"design-process-section\" id=\"process-tab\">\n                                    <div>\n                                        <div>\n                                            <div>\n                                                <div class=\"text-left1\">\n                                                    <h3 class=\"kt-login__title pt-3 m-0 mb-30\">LG workflow</h3>\n                                                </div>\n                                                <!-- Tab panes -->\n                                                <div class=\"tab-content\">\n                                                    <div role=\"tabpanel\" class=\"tab-pane active\" id=\"discover\">\n                                                        <div class=\"design-process-content\">\n                                                            <form>\n                                                                <div class=\"row\">\n            \n                                                                    <div class=\"col-sm-12\">\n            \n                                                                        <div class=\"kt-portlet\">\n                                                                            <div class=\"kt-portlet__head\">\n                                                                                <div class=\"kt-portlet__head-label\">\n                                                                                    <h3 class=\"kt-portlet__head-title\"></h3>\n                                                                                </div>\n                                                                            </div>\n                                                                            <div class=\"kt-form kt-form--label-right\">\n                                                                                <div class=\"kt-portlet__body\">\n                                                                                    <div class=\"container\">\n                    <form [formGroup]=\"workflowForm\">\n            \n                     \n                    <div class=\"row d-flex justify-content-between add-new-block-top-area\">\n                        \n                        <div class=\"col-md-4\">\n                            <div class=\"form-group\">\n                                <label for=\"Description\" class=\"col-form-label d-block\">Workflow Name</label>\n            \n                                <mat-form-field appearance=\"outline\">\n                                    <input matInput type=\"text\" formControlName=\"workflow_desc\">\n                                  </mat-form-field>\n                                <!--<input class=\"form-control\" type=\"text\" value=\"\" id=\"\" formControlName=\"workflow_desc\">-->\n                                <input class=\"form-control\" type=\"hidden\" value=\"\" id=\"\" formControlName=\"entity_id\">\n            \n                            </div>\n                        </div>\n                        <!--<div class=\"col-md-4\">\n                            <div class=\"form-group\">\n                                <label for=\"searchs\" class=\"col-form-label\">Search</label>\n                                <input class=\"form-control\" type=\"text\" value=\"\" id=\"\">\n                            </div> \n                        </div>-->\n                        <div class=\"col-md-12\">\n                            <div class=\"kt-portlet\">\n                                <div class=\"new-blue-table border-none active-workflow-table\">\n                                    <div class=\"table-responsive\">\n                                        <table class=\"table table-bordered table-hover workflow-table\">\n                                            <thead>\n                                                <tr>\n                                                    <th class=\"w-awtable-1\">#</th>\n                                                    <th class=\"w-awtable-15\">Name</th>\n                                                    <th class=\"w-awtable-14\">Bank</th>\n                                                    <th class=\"w-awtable-24\">IBAN</th>\n                                                    <th>Action</th>\n                                                    <th class=\"w-awtable-12\">Price limit</th>\n                                                    <th>Bond type</th>\n                                                    <th>Activity</th>\n                                                    <th class=\"w-awtable-10\">&nbsp;</th>\n                                                </tr>\n                                            </thead>\n                                            <tbody>\n                                                <ng-container formArrayName=\"steps\" *ngFor=\"let step of workflowForm.controls.steps.controls; let i=index;let last = last;\">\n            \n                                               \n                                                <tr [formGroupName]=\"i\">\n                                                    <td>{{i+1}}\n                                                        <input type=\"text\" formControlName=\"step\" [(ngModel)]=\"i\" hidden=true>\n                                                        \n                                                    </td>\n                                                    <td>\n                                                        <mat-form-field appearance=\"outline\">\n                                                            <mat-select formControlName=\"login_id\">\n                                                                <mat-option value=\"\">Please select</mat-option>\n                                                                <mat-option *ngFor=\"let supplier of supplierList\" value=\"{{supplier.loginId}}\">{{supplier.supplierName}}</mat-option>\n                                                            </mat-select>\n                                                          </mat-form-field>\n                                                    </td>\n                                                    <td>\n                                                        <mat-form-field appearance=\"outline\">\n                                                            <mat-select formControlName=\"bank_code\" [(ngModel)]=\"bank_code\" (selectionChange)=\"onSelectBank(bank_code)\">\n                                                              <mat-option value=\"\">Please select</mat-option>\n                                                              <mat-option *ngFor=\"let listOfBankNames of bankIBANList\" value=\"{{listOfBankNames.bank_code}}\">{{listOfBankNames.bank_name}}</mat-option>\n                                                            </mat-select>\n                                                          </mat-form-field>\n                                                    </td>\n                                                    <td>\n                                                        <mat-form-field appearance=\"outline\">\n                                                            <mat-select formControlName=\"iban_no\" [(ngModel)]=\"iban_no\" multiple>\n                                                                <mat-option *ngFor=\"let IBAN of IBANList\" value=\"{{IBAN}}\">{{IBAN}}</mat-option>\n                                                            </mat-select>\n                                                          </mat-form-field>\n                                                    </td>\n                                                    <td>\n                                                        \n                                                         <!-- <mat-form-field>\n                                                            <mat-select formControlName=\"action_id\">\n                                                                <mat-option>Please select</mat-option>\n                                                                <mat-option *ngFor=\"let action of actionList\" value=\"{{action.action_id}}\">{{action.action_nm}}</mat-option>\n                                                            </mat-select>\n                                                          </mat-form-field>-->\n            \n                                                          <mat-form-field *ngIf=\"i == 0\" appearance=\"outline\">\n                                                            <mat-select formControlName=\"action_id\" panelClass=\"active-table-panel\">\n                                                                <ng-container *ngFor=\"let action of actionList\">\n                                                                <mat-option  value=\"{{action.action_id}}\" *ngIf=\"action.action_id == '1'\" (click)=\"onSelectAction(action.action_id,i,last)\" >{{action.action_nm}}</mat-option>\n                                                            </ng-container>\n                                                            </mat-select>\n                                                          </mat-form-field>\n            \n                                                          <mat-form-field *ngIf=\"i != 0\" appearance=\"outline\">\n                                                            <mat-select formControlName=\"action_id\" panelClass=\"active-table-panel\">\n                                                                <ng-container *ngFor=\"let action of actionList\">\n                                                                <mat-option  value=\"{{action.action_id}}\" *ngIf=\"action.action_id != '1'\" (click)=\"onSelectAction(action.action_id,i,last)\" >{{action.action_nm}}</mat-option>\n                                                            </ng-container>\n                                                            </mat-select>\n                                                          </mat-form-field>\n                                                    </td>\n                                                    \n                                                   \n                                                    <td>\n                                                        <mat-form-field appearance=\"outline\">\n                                                          <input matInput type=\"text\" formControlName=\"price_limit\" [(ngModel)]=\"price_limit\" >\n                                                        </mat-form-field>\n                                                      </td>\n                                                    <td>\n                                                        <mat-form-field appearance=\"outline\">\n                                                            <mat-select formControlName=\"lg_type_id\" [(ngModel)]=\"lg_type_id\" panelClass=\"active-table-panel\" multiple>\n                                                              <mat-option *ngFor=\"let lgType of lgTypeList\" value=\"{{lgType[0]}}\">{{lgType[1]}}</mat-option>\n                                                            </mat-select>\n                                                          </mat-form-field>\n                                                    </td>\n                                                    <td>\n                                                        <mat-form-field appearance=\"outline\">\n                                                            <mat-select formControlName=\"activity_id\" [(ngModel)]=\"activity_id\">\n                                                                <mat-option value=\"\">Please select</mat-option>\n                                                                <mat-option *ngFor=\"let activity of activityList\" value=\"{{activity.activity_id}}\">{{activity.activity_nm}}</mat-option>\n                                                            </mat-select>\n                                                          </mat-form-field>\n                                                    </td>\n                                                    <td>\n                                                        <div class=\"plus-img-wrap\"><a href=\"javascript:void(0)\" (click)=\"addStep(i,last)\"><img src=\"../../assets/images/plus1.png\" alt=\"image\"></a></div>\n                                                    </td>\n                                                </tr>\n                                            </ng-container>\n                                            </tbody>\n                                        </table>\n                                        <!--<button mat-raised-button [disabled]=\"workflowForm.invalid\" type=\"submit\" (click)=\"saveworkflow()\" class=\"sub-margin\">Save</button>-->\n                                        <button mat-raised-button [disabled]=\"(workflowForm.invalid || isworkflowdisable || isnormaluser)\" type=\"submit\" (click)=\"saveworkflow()\" class=\"sub-margin\">Save</button>\n                                    </div>\n                                </div>\n            \n                            </div>\n                        </div>\n                    </div>\n                  \n                    </form>\n                    <p>Form Data:  {{workflowForm.value | json}}</p>\n                    <p>Is Valid: {{workflowForm.valid}}</p>\n                                                                                    </div>\n            \n                                                                                </div>\n                                                                            </div>\n                                                                        </div>\n                                                                        <!--/-->\n                                                                        <div class=\"kt-footer__copyright mt-20\">\n                                                                            2019&nbsp;©&nbsp;Wthaq\n                                                                        </div>\n                                                                    </div>\n                                                                </div>\n                                                            </form>\n            \n                                                        </div>\n                                                    </div>\n                                                </div>\n            \n                                            </div>\n                                        </div>\n                                    </div>\n                                </section>\n                            </div>\n                        </div>\n                    </div>\n            \n                    <!--Middle Content Here-->\n                </div>\n            </div>\n                        <!--===========================\n                                    End Content\n                                    ============================-->\n                        <!--/Content-->\n                        <script src=\"js/plugins.bundle.js\" type=\"text/javascript\"></script>\n                        <!-- end::Body -->\n                        ");

/***/ }),

/***/ "./node_modules/raw-loader/dist/cjs.js!./src/app/admin-dash-board/admin-dash-board.component.html":
/*!********************************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/admin-dash-board/admin-dash-board.component.html ***!
  \********************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<!--===========================\n                        Start Content\n                        ============================-->\n                        <div class=\"pt-0 kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor kt-margin-top-50\">\n                          <div class=\"kt-container\">\n                              <!--New Design Here-->\n                              <div class=\"row\">\n                                <div class=\"col-12 col-sm-3 col-md-3 col-lg-3 left-panel-menu-wrap w-20 fixed-wrap\">\n                                  \n                                  <ul class=\"vertical-menu\">\n                                    <li *ngIf=\"roleId == 3\"><a routerLink=\"/adminDashboard\" class=\"active\"><span class=\"db-icon\"></span>{{'HOME.Dashboard' | translate}}</a></li>\n                \n                                    <li *ngIf=\"roleId == 2\"><a routerLink=\"/govDashboard\"><span class=\"db-icon\"></span>{{'HOME.Dashboard' | translate}}</a></li>\n                                    \n                                    <li *ngIf=\"roleId == 1\"><a routerLink=\"/dashboard\"><span class=\"db-icon\"></span>{{'HOME.Dashboard' | translate}}</a></li>\n                \n                                    <li *ngIf=\"roleId == 1\"><a routerLink=\"/requestLgIssuance\"><span class=\"lg-icon\"></span>{{'HOME.LG_issuance' | translate}}</a></li>\n                                    <li *ngIf=\"roleId == 3\"><a routerLink=\"/pendingtasks\"><span class=\"lg-icon\"></span>{{'HOME.Pending_Tasks' | translate}}</a></li>\n                                    <li *ngIf=\"roleId == 1\"><a routerLink=\"/privatependingtasks\"><span class=\"lg-icon\"></span>{{'HOME.Pending_Tasks' | translate}}</a>\n                                  </ul>\n                                </div>\n                                <div class=\"col-12 col-sm-9 col-md-9 col-lg-9 padding-null scroll-wrap\">\n                                  <!-- <div class=\"white-area\">\n                                    <div class=\"user-area\">\n                                      <span class=\"user-img-wrap\"><img src=\"../../assets/images/user.png\" alt=\"image\"\n                                          class=\"user-img\"></span><span>Abdulla Ahmad</span>\n                                    </div>\n                                    <div class=\"clear\"></div>\n                                  </div> -->\n                                 \n                                  <div class=\"grey-bg\">\n                                    <section class=\"design-process-section\" id=\"process-tab\">\n                                      <div>\n                                        <div>\n                                          <div>\n                                            \n                                            <!-- Tab panes -->\n                                            <div class=\"tab-content\">\n                                              <div role=\"tabpanel\" class=\"tab-pane active\" id=\"discover\">\n                                                <div class=\"design-process-content\">\n                \n                \n                \n                                                  <!--Top piechart area-->\n                                                  <div class=\"row pichart-area\">\n                                                    <div class=\"col-12 col-sm-12 col-md-12 col-lg-8\">\n                                                        \n                                                    \n                                                    <ul class=\"dashboard-list-left\">\n                                                      <li class=\"border-green\"><span class=\"dashboard-list-left-big-txt\">{{ActiveLG}}</span><span class=\"dashboard-list-left-small-txt\">{{'HOME.Active_Letter_Guarantees' | translate}}</span></li>\n                                                      <li class=\"border-bluish-green\"><span class=\"dashboard-list-left-big-txt\">{{ExpiredLG}}</span><span class=\"dashboard-list-left-small-txt\">{{'HOME.Expired_Letter_Guarantees' | translate}}</span></li>\n                                                      <li class=\"border-blue\"><span class=\"dashboard-list-left-big-txt\">{{PendingLG}}</span><span class=\"dashboard-list-left-small-txt\">{{'HOME.Pending_Letter_Guarantees' | translate}}</span></li>\n                                                      <li class=\"border-blue\"><span class=\"dashboard-list-left-big-txt\">{{PendingApprovalLG}}</span><span class=\"dashboard-list-left-small-txt\">{{'HOME.Pending_Approval' | translate}}</span></li>\n                                                  </ul>\n                                                  \n                                               </div>\n                                                    <!--Pie chart-->\n                                                    <div *ngIf=\"pieChartLabels?.length > 0\" class=\"col-12 col-sm-12 col-md-12 col-lg-4\">\n                                                      <div class=\"chart-wrapper\">\n                                                        <canvas baseChart \n                                                          height=\"130\"\n                                                          width=\"130\"\n                                                          [chartType]=\"pieChartType\"\n                                                          [options]=\"pieChartOptions\"\n                                                          [plugins]=\"pieChartPlugins\"\n                                                          [data]=\"pieChartData\" \n                                                          [labels]=\"pieChartLabels\"\n                                                          [colors]=\"pieChartColors\"  \n                                                          [legend]=\"pieChartLegend\">\n                                                        </canvas>\n                                                      </div>\n                                                    </div>\n                                                    <!--pie chart-->\n                                                  </div>\n                                                  <!--/Top piechart area-->\n                                                  <form>\n                \n                                                    <div class=\"row\">\n                                                      <div class=\"col-sm-12\">\n                                                        <div class=\"kt-portlet\">\n                                                          <div class=\"kt-portlet__head\">\n                                                            <div class=\"kt-portlet__head-label\">\n                                                              <h3 class=\"kt-portlet__head-title\">\n                                                                {{'HOME.Active_Letter_Guarantees' | translate}}\n                                                              </h3>\n                                                            </div>\n                                                          </div>\n                                                          <!--begin::Form-->\n                                                          <div class=\"kt-form kt-form--label-right\">\n                                                            <div class=\"kt-portlet__body\">\n                                                              <div class=\"container\">\n                                                                <div class=\"row\">\n                                                                 <div class=\"col-md-12\">\n                                                                    <div class=\"kt-portlet no-shadow\">\n                                                                      <div class=\"new-blue-table1\">\n                                                                        <div class=\"table-responsive\">\n\n                                                                          <div *ngIf=\"this.translate.currentLang == 'en'\">\n                                                                           <div *ngIf=\"LGLists?.length > 0; then thenBlock else elseBlock\"> </div>\n                                                                              <ng-template #thenBlock>\n                                                                                <table datatable [dtOptions]=\"dtOptions\" class=\"table table-bordered table-striped table-hover\">\n                                                                                  <thead>\n                                                                                  <tr>\n                                                                                  <th class=\"table-col-7\">#</th>\n                                                                                  <th class=\"\">{{'HOME.LG_Number' | translate}}</th>\n                                                                                  <th class=\"\">{{'HOME.LG_amount' | translate}}</th>\n                                                                                  <th class=\"\">{{'HOME.Beneficiary' | translate}}</th>\n                                                                                  <th class=\"\">{{'HOME.Bank' | translate}}</th>\n                                                                                  <th class=\"\">{{'HOME.LG_TYPE' | translate}}</th>\n                                                                                  <th class=\"\">{{'HOME.LG_Status' | translate}}</th>\n                                                                                  <th class=\"\">{{'HOME.Start_Date' | translate}}</th>\n                                                                                  <th class=\"\">{{'HOME.End_Date' | translate}}</th>\n                                                                                  </tr>\n                                                                                  </thead>\n                                                                                  <tbody>\n                                                                                  <tr *ngFor=\"let LGList of LGLists; let i = index \" (click)=\"RowSelected(LGList)\">\n                                                                                    <td>{{i+1}}</td>\n                                                                                    <td>{{LGList.lg_no}}</td>\n                                                                                    <td>{{LGList.lG_amount}}</td>\n                                                                                    <td>{{LGList.beneficiary_name}}</td>\n                                                                                    <td>{{LGList.bank_name}}</td>\n                                                                                    <td>{{LGList.lg_type}}</td>\n                                                                                    <td>{{LGList.status}}</td>\n                                                                                    <td>{{LGList.start_date}}</td>\n                                                                                    <td>{{LGList.end_date}}</td>\n                                                                                  </tr>\n                                                                                  </tbody>\n                                                                              </table>\n                                                                              </ng-template>\n                                                                              <ng-template #elseBlock>\n                                                                                <table datatable [dtOptions]=\"dtOptions\" class=\"table table-bordered table-striped table-hover\">\n                                                                                  <thead>\n                                                                                    <tr>\n                                                                                    <th class=\"table-col-7\">#</th>\n                                                                                    <th class=\"\">{{'HOME.LG_Number' | translate}}</th>\n                                                                                    <th class=\"\">{{'HOME.LG_amount' | translate}}</th>\n                                                                                    <th class=\"\">{{'HOME.Beneficiary' | translate}}</th>\n                                                                                    <th class=\"\">{{'HOME.Bank' | translate}}</th>\n                                                                                    <th class=\"\">{{'HOME.LG_TYPE' | translate}}</th>\n                                                                                    <th class=\"\">{{'HOME.LG_Status' | translate}}</th>\n                                                                                    <th class=\"\">{{'HOME.Start_Date' | translate}}</th>\n                                                                                    <th class=\"\">{{'HOME.End_Date' | translate}}</th>\n                                                                                  </tr>\n                                                                                  </thead>\n                                                                                  <tbody>\n                                                                                    <tr *ngFor=\"let LGList of LGLists; let i = index \" (click)=\"RowSelected(LGList)\">\n                                                                                      <td>{{i+1}}</td>\n                                                                                      <td>{{LGList.lg_no}}</td>\n                                                                                      <td>{{LGList.lG_amount}}</td>\n                                                                                      <td>{{LGList.beneficiary_name}}</td>\n                                                                                      <td>{{LGList.bank_name}}</td>\n                                                                                      <td>{{LGList.lg_type}}</td>\n                                                                                      <td>{{LGList.status}}</td>\n                                                                                      <td>{{LGList.start_date}}</td>\n                                                                                      <td>{{LGList.end_date}}</td>\n                                                                                    </tr>\n                                                                                  </tbody>\n                                                                              </table>\n                                                                              </ng-template>\n                                                                            </div>\n                                                                            <div *ngIf=\"this.translate.currentLang == 'ar'\">\n                                                                              <div *ngIf=\"LGLists?.length > 0; then thenBlock else elseBlock\"> </div>\n                                                                                 <ng-template #thenBlock>\n                                                                                   <table datatable [dtOptions]=\"dtOptionsAR\" class=\"table table-bordered table-striped table-hover\">\n                                                                                     <thead>\n                                                                                       <tr>\n                                                                                       <th class=\"table-col-7\">#</th>\n                                                                                       <th class=\"\">{{'HOME.LG_Number' | translate}}</th>\n                                                                                      <th class=\"\">{{'HOME.LG_amount' | translate}}</th>\n                                                                                      <th class=\"\">{{'HOME.Beneficiary' | translate}}</th>\n                                                                                      <th class=\"\">{{'HOME.Bank' | translate}}</th>\n                                                                                      <th class=\"\">{{'HOME.LG_TYPE' | translate}}</th>\n                                                                                      <th class=\"\">{{'HOME.LG_Status' | translate}}</th>\n                                                                                      <th class=\"\">{{'HOME.Start_Date' | translate}}</th>\n                                                                                      <th class=\"\">{{'HOME.End_Date' | translate}}</th>\n                                                                                     </tr>\n                                                                                     </thead>\n                                                                                     <tbody>\n                                                                                     <tr *ngFor=\"let LGList of LGLists; let i = index \" (click)=\"RowSelected(LGList)\">\n                                                                                       <td>{{i+1}}</td>\n                                                                                       <td>{{LGList.lg_no}}</td>\n                                                                                       <td>{{LGList.lG_amount}}</td>\n                                                                                       <td>{{LGList.beneficiary_name}}</td>\n                                                                                       <td>{{LGList.bank_name}}</td>\n                                                                                       <td>{{LGList.lg_type}}</td>\n                                                                                       <td>{{LGList.status}}</td>\n                                                                                       <td>{{LGList.start_date}}</td>\n                                                                                       <td>{{LGList.end_date}}</td>\n                                                                                     </tr>\n                                                                                     </tbody>\n                                                                                 </table>\n                                                                                 </ng-template>\n                                                                                 <ng-template #elseBlock>\n                                                                                   <table datatable [dtOptions]=\"dtOptionsAR\" class=\"table table-bordered table-striped table-hover\">\n                                                                                     <thead>\n                                                                                       <tr>\n                                                                                       <th class=\"table-col-7\">#</th>\n                                                                                       <th class=\"\">{{'HOME.LG_Number' | translate}}</th>\n                                                                                      <th class=\"\">{{'HOME.LG_amount' | translate}}</th>\n                                                                                      <th class=\"\">{{'HOME.Beneficiary' | translate}}</th>\n                                                                                      <th class=\"\">{{'HOME.Bank' | translate}}</th>\n                                                                                      <th class=\"\">{{'HOME.LG_TYPE' | translate}}</th>\n                                                                                      <th class=\"\">{{'HOME.LG_Status' | translate}}</th>\n                                                                                      <th class=\"\">{{'HOME.Start_Date' | translate}}</th>\n                                                                                      <th class=\"\">{{'HOME.End_Date' | translate}}</th>\n                                                                                     </tr>\n                                                                                     </thead>\n                                                                                     <tbody>\n                                                                                       <tr *ngFor=\"let LGList of LGLists; let i = index \" (click)=\"RowSelected(LGList)\">\n                                                                                         <td>{{i+1}}</td>\n                                                                                         <td>{{LGList.lg_no}}</td>\n                                                                                         <td>{{LGList.lG_amount}}</td>\n                                                                                         <td>{{LGList.beneficiary_name}}</td>\n                                                                                         <td>{{LGList.bank_name}}</td>\n                                                                                         <td>{{LGList.lg_type}}</td>\n                                                                                         <td>{{LGList.status}}</td>\n                                                                                         <td>{{LGList.start_date}}</td>\n                                                                                         <td>{{LGList.end_date}}</td>\n                                                                                       </tr>\n                                                                                     </tbody>\n                                                                                 </table>\n                                                                                 </ng-template>\n                                                                               </div>\n                                                                        </div>\n                                                                      </div>\n                                                                    </div>\n                                                                  </div>\n                                                                </div>\n                                                              </div>\n                                                            </div>\n                                                          </div>\n                                                        </div>\n                                                      </div>\n                                                    </div>\n                \n                \n                                                  </form>\n                \n                                                </div>\n                                              </div>\n                                            </div>\n                \n                                          </div>\n                                        </div>\n                                      </div>\n                                    </section>\n                                  </div>\n                                </div>\n                              </div>\n                              <!--New Design Here-->\n                            </div>\n                          </div>\n                          <!--===========================\n                                        End Content\n                                        ============================-->\n                        <!--begin::Global Theme Bundle(used by all pages) -->\n                    <script src=\"../../assets/js/plugins.bundle.js\" type=\"text/javascript\"></script>\n                    <!-- end::Body -->");

/***/ }),

/***/ "./node_modules/raw-loader/dist/cjs.js!./src/app/app.component.html":
/*!**************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/app.component.html ***!
  \**************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<!-- <nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\n  <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n    <ul class=\"navbar-nav mr-auto\">\n      <li class=\"nav-item active\">\n        <a class=\"nav-link\" routerLink=\"privateEntityReg\">Go to Private Registration Page</a>\n      </li>\n      <li class=\"nav-item active\">\n        <a class=\"nav-link\" routerLink=\"governmentEntityReg\">Go to Government Registration Page</a>\n      </li>\n    </ul>\n  </div>\n</nav> -->\n\n<!-- <app-login></app-login> -->\n\n<app-header></app-header>\n<router-outlet></router-outlet>\n<app-footer></app-footer>\n<!-- <select #langselect (change)=\"loadStyle(langselect.value);translate.use(langselect.value)\" class=\"translate-option\"  class=\"translate-option\">\n  <option *ngFor=\"let lang of translate.getLangs()\" value={{lang}}>{{lang==\"en\"?\"English\":\"Arabic\"}}</option>\n</select> -->\n\n");

/***/ }),

/***/ "./node_modules/raw-loader/dist/cjs.js!./src/app/dash-board/dash-board.component.html":
/*!********************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/dash-board/dash-board.component.html ***!
  \********************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("\n\n \n          <!--===========================\n                        Start Content\n                        ============================-->\n                        <div class=\"pt-0 kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor kt-margin-top-50\">\n                          <div class=\"kt-container\">\n                            <!--New Design Here-->\n                            <div class=\"row\">\n                              <div *ngIf=\"isBankVerification\">\n                                <app-sidemenu></app-sidemenu>\n                              </div>\n                              <!--<div class=\"col-12 col-sm-3 col-md-3 col-lg-3 left-panel-menu-wrap w-20 fixed-wrap\">\n                                <ul *ngIf=\"isBankVerification\"  class=\"vertical-menu\">\n                                  <li><a routerLink=\"/dashboard\" class=\"active\"><span class=\"db-icon\"></span>{{'HOME.Dashboard' | translate}}</a></li>\n                                  <li *ngIf=\"roleId == 1\"><a routerLink=\"/privateLgManagement\"><span class=\"lg-icon\"></span>{{'HOME.LG_Management' | translate}}</a>\n                                  <li *ngIf=\"roleId == 1\"><a routerLink=\"/requestLgIssuance\"><span class=\"lg-icon\"></span>{{'HOME.LG_issuance' | translate}}</a></li>\n                                  <li *ngIf=\"roleId == 3\"><a routerLink=\"/pendingtasks\"><span class=\"lg-icon\"></span>{{'HOME.Pending_Tasks' | translate}}</a></li>\n                                  <li *ngIf=\"roleId == 1\"><a routerLink=\"/privatependingtasks\"><span class=\"lg-icon\"></span>{{'HOME.Pending_Tasks' | translate}}</a></li>\n                                  <li *ngIf=\"roleId == 1\"><a routerLink=\"/privateaccountmanagement\"><span class=\"ta-icon\"></span>Account Management</a></li>\n                                </ul>\n                              </div>-->\n\n                              <div *ngIf=\"!isBankVerification\" class=\"col-12 col-sm-3 col-md-3 col-lg-3 left-panel-menu-wrap w-20 fixed-wrap\">\n                                <ul class=\"vertical-menu\">\n                                  <li><a routerLink=\"/dashboard\" class=\"active\"><span class=\"db-icon\"></span>{{'HOME.Dashboard' | translate}}</a></li>\n                                </ul>\n                              </div>\n\n                              <div class=\"col-12 col-sm-9 col-md-9 col-lg-9 padding-null scroll-wrap\">\n                                <!-- <div class=\"white-area\">\n                                  <div class=\"user-area\">\n                                    <span class=\"user-img-wrap\"><img src=\"../../assets/images/user.png\" alt=\"image\"\n                                        class=\"user-img\"></span><span>Abdulla Ahmad</span>\n                                  </div>\n                                  <div class=\"clear\"></div>\n                                </div> -->\n                               <!--  <div class=\"white-area\">\n                                  <div class=\"top-dropdown\">\n                                    <div class=\"user-area top-dropbtn\">\n                                      <span class=\"user-img-wrap\"><img src=\"../../assets/images/user.png\" alt=\"image\"\n                                          class=\"user-img\"></span><span>{{userName}}\n                                      </span>\n                                    </div>\n                                    <div class=\"top-dropdown-content\">\n                                      <a href=\"javascript:;\">\n                                        <span class=\"user-img-wrap\"><img src=\"../../assets/images/settings.png\" alt=\"image\"\n                                            class=\"user-img\"></span><span>Account\n                                        </span>\n                                      </a>\n                                      <a href=\"javascript:;\">\n                                        <span class=\"user-img-wrap\"><img src=\"../../assets/images/logout.png\" alt=\"image\"\n                                            class=\"user-img\"></span><span>Logout\n                                        </span>\n                                      </a>\n                                    </div>\n                                  </div>\n                                  <div class=\"clear\"></div>\n                                </div> -->\n                                <div class=\"grey-bg\">\n                                  <section class=\"design-process-section\" id=\"process-tab\">\n                                    <div>\n                                      <div>\n                                        <div>\n                                          \n                                          <!-- Tab panes -->\n                                          <div class=\"tab-content\">\n                                            <div role=\"tabpanel\" class=\"tab-pane active\" id=\"discover\">\n                                              <div class=\"design-process-content\">\n              \n              <!-- Bank Verification Pending -->\n              <div class=\"row\" *ngIf=\"!isBankVerification\">\n                <div class=\"col-sm-12\">\n                  <div class=\"pop-block\">\n                    <div class=\"blue-block\"><img src=\"../../assets/images/alert.png\" alt=\"alert-icon\" class=\"alert-icon\"></div>\n                      <p>{{commonService.alertMsgforRegistrationFinal}}</p>\n                    <div class=\"clearfix\"></div>\n                  </div>\n                </div>\n              </div>\n            <!-- Bank Verification Pending -->\n              \n                                                <!--Top piechart area-->\n                                                <div class=\"row pichart-area\">\n                                                  <div class=\"col-12 col-sm-12 col-md-12 col-lg-8\">\n                                                      \n                                                    \n                                                  <ul class=\"dashboard-list-left\">\n                                                    <li class=\"border-green\"><span class=\"dashboard-list-left-big-txt\">{{ActiveLG}}</span><span class=\"dashboard-list-left-small-txt\">{{'HOME.Active_Letter_Guarantees' | translate}}</span></li>\n                                                    <li class=\"border-bluish-green\"><span class=\"dashboard-list-left-big-txt\">{{ExpiredLG}}</span><span class=\"dashboard-list-left-small-txt\">{{'HOME.Expired_Letter_Guarantees' | translate}}</span></li>\n                                                    <li class=\"border-blue\"><span class=\"dashboard-list-left-big-txt\">{{PendingLG}}</span><span class=\"dashboard-list-left-small-txt\">{{'HOME.Pending_Letter_Guarantees' | translate}}</span></li>\n                                                    <li class=\"border-blue\"><span class=\"dashboard-list-left-big-txt\">{{PendingApprovalLG}}</span><span class=\"dashboard-list-left-small-txt\">{{'HOME.Pending_Approval' | translate}}</span></li>\n                                                </ul>\n                                                \n                                             </div>\n                                                  <!--Pie chart-->\n                                                  <div *ngIf=\"pieChartLabels?.length > 0\" class=\"col-12 col-sm-12 col-md-12 col-lg-4\">\n                                                    <div class=\"chart-wrapper\">\n                                                      <canvas baseChart \n                                                        height=\"130\"\n                                                        width=\"130\"\n                                                        [chartType]=\"pieChartType\"\n                                                        [options]=\"pieChartOptions\"\n                                                        [plugins]=\"pieChartPlugins\"\n                                                        [data]=\"pieChartData\" \n                                                        [labels]=\"pieChartLabels\"\n                                                        [colors]=\"pieChartColors\" \n                                                        [legend]=\"pieChartLegend\">\n                                                      </canvas>\n                                                    </div>\n                                                  </div>\n                                                  <!--pie chart-->\n                                                </div>\n                                                <!--/Top piechart area-->\n                                                <form>\n              \n                                                  <div class=\"row\">\n                                                    <div class=\"col-sm-12\">\n                                                      <div class=\"kt-portlet\">\n                                                        <div class=\"kt-portlet__head\">\n                                                          <div class=\"kt-portlet__head-label\">\n                                                            <h3 class=\"kt-portlet__head-title\">\n                                                              {{'HOME.Active_letters_guarantee' | translate}}\n                                                            </h3>\n                                                          </div>\n                                                        </div>\n                                                        <!--begin::Form-->\n                                                        <div class=\"kt-form kt-form--label-right\">\n                                                          <div class=\"kt-portlet__body\">\n                                                            <div class=\"container\">\n                                                              <div class=\"row\">\n                                                               <div class=\"col-md-12\">\n                                                                  <div class=\"kt-portlet no-shadow\">\n                                                                    <div class=\"new-blue-table1\">\n                                                                      <div class=\"table-responsive\">\n                                                                        <div *ngIf=\"this.translate.currentLang == 'en'\">\n                                                                         <div *ngIf=\"LGLists?.length > 0; then thenBlock else elseBlock\"> </div>\n              \n                                                                            <ng-template #thenBlock>\n                                                                              <table datatable [dtOptions]=\"dtOptions\" class=\"table table-bordered table-striped table-hover\">\n                                                                                <thead>\n                                                                                  <tr>\n                                                                                  <th class=\"table-col-7\">#</th>\n                                                                                  <th class=\"\">{{'HOME.LG_Number' | translate}}</th>\n                                                                                  <th class=\"\">{{'HOME.LG_amount' | translate}}</th>\n                                                                                  <th class=\"\">{{'HOME.Beneficiary' | translate}}</th>\n                                                                                  <th class=\"\">{{'HOME.Bank' | translate}}</th>\n                                                                                  <th class=\"\">{{'HOME.LG_TYPE' | translate}}</th>\n                                                                                  <th class=\"\">{{'HOME.LG_Status' | translate}}</th>\n                                                                                  <th class=\"\">{{'HOME.Start_Date' | translate}}</th>\n                                                                                  <th class=\"\">{{'HOME.End_Date' | translate}}</th>\n                                                                                </tr>\n                                                                                </thead>\n                                                                                <tbody>\n                                                                                <tr *ngFor=\"let LGList of LGLists; let i = index \" (click)=\"RowSelected(LGList)\">\n                                                                                  <td>{{i+1}}</td>\n                                                                                  <td>{{LGList.lg_no}}</td>\n                                                                                  <td>{{LGList.lG_amount}}</td>\n                                                                                  <td>{{LGList.beneficiary_name}}</td>\n                                                                                  <td>{{LGList.bank_name}}</td>\n                                                                                  <td>{{LGList.lg_type}}</td>\n                                                                                  <td>{{LGList.status}}</td>\n                                                                                  <td>{{LGList.start_date}}</td>\n                                                                                  <td>{{LGList.end_date}}</td>\n                                                                                </tr>\n                                                                                \n                                                                                </tbody>\n                                                                            </table>\n                                                                            </ng-template>\n              \n              \n                                                                            <ng-template #elseBlock>\n                                                                              <table datatable [dtOptions]=\"dtOptions\" class=\"table table-bordered table-striped table-hover\">\n                                                                                <thead>\n                                                                                  <tr>\n                                                                                    <th class=\"table-col-7\">#</th>\n                                                                                    <th class=\"\">{{'HOME.LG_Number' | translate}}</th>\n                                                                                    <th class=\"\">{{'HOME.LG_amount' | translate}}</th>\n                                                                                    <th class=\"\">{{'HOME.Beneficiary' | translate}}</th>\n                                                                                    <th class=\"\">{{'HOME.Bank' | translate}}</th>\n                                                                                    <th class=\"\">{{'HOME.LG_TYPE' | translate}}</th>\n                                                                                    <th class=\"\">{{'HOME.LG_Status' | translate}}</th>\n                                                                                    <th class=\"\">{{'HOME.Start_Date' | translate}}</th>\n                                                                                    <th class=\"\">{{'HOME.End_Date' | translate}}</th>\n                                                                                </tr>\n                                                                                </thead>\n                                                                                <tbody>\n                                                                                  <tr *ngFor=\"let LGList of LGLists; let i = index \" (click)=\"RowSelected(LGList)\">\n                                                                                    <td>{{i+1}}</td>\n                                                                                    <td>{{LGList.lg_no}}</td>\n                                                                                    <td>{{LGList.lG_amount}}</td>\n                                                                                    <td>{{LGList.beneficiary_name}}</td>\n                                                                                    <td>{{LGList.bank_name}}</td>\n                                                                                    <td>{{LGList.lg_type}}</td>\n                                                                                    <td>{{LGList.status}}</td>\n                                                                                    <td>{{LGList.start_date}}</td>\n                                                                                    <td>{{LGList.end_date}}</td>\n                                                                                  </tr>\n                                                                                </tbody>\n                                                                            </table>\n                                                                            </ng-template>\n                                                                        </div>\n\n                                                                        <div *ngIf=\"this.translate.currentLang == 'ar'\">\n                                                                          <div *ngIf=\"LGLists?.length > 0; then thenBlock else elseBlock\"> </div>\n               \n                                                                             <ng-template #thenBlock>\n                                                                               <table datatable [dtOptions]=\"dtOptionsAR\" class=\"table table-bordered table-striped table-hover\">\n                                                                                 <thead>\n                                                                                   <tr>\n                                                                                   <th class=\"table-col-7\">#</th>\n                                                                                   <th class=\"\">{{'HOME.LG_Number' | translate}}</th>\n                                                                                   <th class=\"\">{{'HOME.LG_amount' | translate}}</th>\n                                                                                   <th class=\"\">{{'HOME.Beneficiary' | translate}}</th>\n                                                                                   <th class=\"\">{{'HOME.Bank' | translate}}</th>\n                                                                                   <th class=\"\">{{'HOME.LG_TYPE' | translate}}</th>\n                                                                                   <th class=\"\">{{'HOME.LG_Status' | translate}}</th>\n                                                                                   <th class=\"\">{{'HOME.Start_Date' | translate}}</th>\n                                                                                   <th class=\"\">{{'HOME.End_Date' | translate}}</th>\n                                                                                 </tr>\n                                                                                 </thead>\n                                                                                 <tbody>\n                                                                                 <tr *ngFor=\"let LGList of LGLists; let i = index \" (click)=\"RowSelected(LGList)\">\n                                                                                   <td>{{i+1}}</td>\n                                                                                   <td>{{LGList.lg_no}}</td>\n                                                                                   <td>{{LGList.lG_amount}}</td>\n                                                                                   <td>{{LGList.beneficiary_name}}</td>\n                                                                                   <td>{{LGList.bank_name}}</td>\n                                                                                   <td>{{LGList.lg_type}}</td>\n                                                                                   <td>{{LGList.status}}</td>\n                                                                                   <td>{{LGList.start_date}}</td>\n                                                                                   <td>{{LGList.end_date}}</td>\n                                                                                 </tr>\n                                                                                 \n                                                                                 </tbody>\n                                                                             </table>\n                                                                             </ng-template>\n               \n               \n                                                                             <ng-template #elseBlock>\n                                                                               <table datatable [dtOptions]=\"dtOptionsAR\" class=\"table table-bordered table-striped table-hover\">\n                                                                                 <thead>\n                                                                                   <tr>\n                                                                                     <th class=\"table-col-7\">#</th>\n                                                                                     <th class=\"\">{{'HOME.LG_Number' | translate}}</th>\n                                                                                     <th class=\"\">{{'HOME.LG_amount' | translate}}</th>\n                                                                                     <th class=\"\">{{'HOME.Beneficiary' | translate}}</th>\n                                                                                     <th class=\"\">{{'HOME.Bank' | translate}}</th>\n                                                                                     <th class=\"\">{{'HOME.LG_TYPE' | translate}}</th>\n                                                                                     <th class=\"\">{{'HOME.LG_Status' | translate}}</th>\n                                                                                     <th class=\"\">{{'HOME.Start_Date' | translate}}</th>\n                                                                                     <th class=\"\">{{'HOME.End_Date' | translate}}</th>\n                                                                                 </tr>\n                                                                                 </thead>\n                                                                                 <tbody>\n                                                                                   <tr *ngFor=\"let LGList of LGLists; let i = index \" (click)=\"RowSelected(LGList)\">\n                                                                                     <td>{{i+1}}</td>\n                                                                                     <td>{{LGList.lg_no}}</td>\n                                                                                     <td>{{LGList.lG_amount}}</td>\n                                                                                     <td>{{LGList.beneficiary_name}}</td>\n                                                                                     <td>{{LGList.bank_name}}</td>\n                                                                                     <td>{{LGList.lg_type}}</td>\n                                                                                     <td>{{LGList.status}}</td>\n                                                                                     <td>{{LGList.start_date}}</td>\n                                                                                     <td>{{LGList.end_date}}</td>\n                                                                                   </tr>\n                                                                                 </tbody>\n                                                                             </table>\n                                                                             </ng-template>\n                                                                         </div>\n                                                                      </div>\n                                                                    </div>\n                                                                  </div>\n                                                                </div>\n                                                              </div>\n                                                            </div>\n                                                          </div>\n                                                        </div>\n                                                      </div>\n                                                    </div>\n                                                  </div>\n              \n              \n                                                </form>\n              \n                                              </div>\n                                            </div>\n                                          </div>\n              \n                                        </div>\n                                      </div>\n                                    </div>\n                                  </section>\n                                </div>\n                                \n                              </div>\n                            </div>\n                            <!--New Design Here-->\n                          </div>\n                        </div>\n                        <!--===========================\n                                      End Content\n                                      ============================-->\n                     \n                <!--begin::Global Theme Bundle(used by all pages) -->\n                <script src=\"../../assets/js/plugins.bundle.js\" type=\"text/javascript\"></script>\n                <!-- end::Body -->\n                <!-- end::Body -->\n              \n              \n              ");

/***/ }),

/***/ "./node_modules/raw-loader/dist/cjs.js!./src/app/edit-user-details/edit-user-details.component.html":
/*!**********************************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/edit-user-details/edit-user-details.component.html ***!
  \**********************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("\n<!--===========================Start Content ============================-->\n<div class=\"pt-0 kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor kt-margin-top-50 kt-content-padding\">\n    <div class=\"kt-container\">\n        <!--Middle Content Here-->\n\n        <div class=\"row\">\n             <app-sidemenu></app-sidemenu>\n            <!-- <div class=\"col-12 col-sm-3 col-md-3 col-lg-3 left-panel-menu-wrap w-20 fixed-wrap\">\n                <div class=\"col-12 col-sm-3 col-md-3 col-lg-3 left-panel-menu-wrap w-20 fixed-wrap\">\n                    <ul class=\"vertical-menu\">\n                      <li *ngIf=\"roleId == 1\"><a routerLink=\"/dashboard\"><span class=\"db-icon\"></span>{{'HOME.Dashboard' | translate}}</a></li>\n                      <li *ngIf=\"roleId == 1\"><a routerLink=\"/privateLgManagement\"><span class=\"lg-icon\"></span>{{'HOME.LG_Management' | translate}}</a>\n                      <li *ngIf=\"roleId == 1\"><a routerLink=\"/requestLgIssuance\"><span class=\"lg-icon\"></span>{{'HOME.LG_issuance' | translate}}</a></li>\n                      <li *ngIf=\"roleId == 1\"><a routerLink=\"/privatependingtasks\"><span class=\"lg-icon\"></span>{{'HOME.Pending_Tasks' | translate}}</a>\n                      <li *ngIf=\"roleId == 1\"><a routerLink=\"/privateaccountmanagement\" class=\"active\"><span class=\"ta-icon\"></span>Account Management</a></li>\n                    </ul>\n                </div>\n            </div> -->\n            <div class=\"col-12 col-sm-9 col-md-9 col-lg-9 padding-null scroll-wrap\">\n\n                <div class=\"grey-bg\">\n                    <section class=\"design-process-section\" id=\"process-tab\">\n                        <div>\n                            <div>\n                                <div>\n                                    <div class=\"text-left1\">\n                                        <h3 class=\"kt-login__title pt-3 m-0 mb-30\">User Details</h3>\n                                    </div>\n                                    <!-- Tab panes -->\n                                    <div class=\"tab-content\">\n                                        <div role=\"tabpanel\" class=\"tab-pane active\" id=\"discover\">\n                                            <div class=\"design-process-content\">\n\n                                                <div class=\"row\">\n                                                    <div class=\"col-sm-12\">\n\n                                                        <!--New Design-->\n                                                        <form [formGroup]=\"submitUser\" (submit)=\"editUserSubmit()\">\n                                                            <div class=\"kt-portlet\">\n                                                                <div class=\"kt-portlet__head\">\n                                                                    <div class=\"kt-portlet__head-label\">\n                                                                        <h3 class=\"kt-portlet__head-title\">User Detail</h3>\n                                                                    </div>\n                                                                </div>\n                                                                <div class=\"kt-form kt-form--label-right\">\n                                                                    <div class=\"kt-portlet__body\">\n                                                                        <div class=\"container\">\n\n                                                                            <div class=\"row\">\n                                                                                <div class=\"col-12 col-md-6\">\n                                                                                    <div class=\"form-group margin-bottom-10\">\n                                                                                        <label for=\"national-identification\" class=\"col-form-label\">National Identification <em style=\"font-style: normal;\" class=\"text-danger-black\">*</em> </label>\n                                                                                        <input class=\"form-control profile-txt1 col-md-9\" type=\"text\" formControlName=\"NationalId\" readonly>\n                                                                                    </div>\n                                                                                </div>\n                                                                                <div class=\"col-12 col-md-6\">\n\n                                                                                    <div class=\"form-group margin-bottom-10\">\n                                                                                        <label for=\"dob\" class=\"col-form-label\">Date of birth <em style=\"font-style: normal;\" class=\"text-danger-black\">*</em></label>\n                                                                                        <input class=\"form-control profile-txt1 col-md-9\" type=\"text\" formControlName=\"dateOfBirth\" readonly>\n                                                                                    </div>\n                                                                                </div>\n                                                                                <div class=\"col-12 col-md-6\">\n                                                                                    <div class=\"form-group margin-bottom-10\">\n                                                                                        <label for=\"first-name\" class=\"col-form-label\">First name <em style=\"font-style: normal;\" class=\"text-danger-black\">*</em></label>\n                                                                                        <input class=\"form-control profile-txt1 col-md-9\" type=\"text\" formControlName=\"FirstName\" readonly>\n                                                                                    </div>\n                                                                                </div>\n\n                                                                                <div class=\"col-12 col-md-6\">\n                                                                                    <div class=\"form-group margin-bottom-10\">\n                                                                                        <label for=\"last-name\" class=\"col-form-label\">Last name <em style=\"font-style: normal;\" class=\"text-danger-black\">*</em> </label>\n                                                                                        <input class=\"form-control profile-txt1 col-md-9\" type=\"text\" formControlName=\"LastName\" readonly>\n                                                                                    </div>\n                                                                                </div>\n\n                                                                                <div class=\"col-12 col-md-6\">\n                                                                                    <div class=\"form-group margin-bottom-10\">\n                                                                                        <label for=\"mob-no-registered-in-absher\" class=\"col-form-label\"> Mobile number registered in Absher <em style=\"font-style: normal;\" class=\"text-danger-black\">*</em> </label>\n                                                                                        <input class=\"form-control profile-txt1 col-md-9\" type=\"text\" formControlName=\"mobileNo\" readonly>\n                                                                                    </div>\n                                                                                </div>\n\n                                                                                <div class=\"col-12 col-md-6\">\n                                                                                    <div class=\"form-group margin-bottom-10\">\n                                                                                        <label for=\"email\" class=\"col-form-label\"> Email <em style=\"font-style: normal;\" class=\"text-danger-black\">*</em> </label>\n                                                                                        <input class=\"form-control col-md-9\" type=\"text\" formControlName=\"Email\" >\n                                                                                        <div class=\"validation-errors text-danger\">\n                                                                                          <div *ngFor=\"let validation of validation_messages.Email\">\n                                                                                            <div col-12 class=\"error-message\"\n                                                                                              *ngIf=\"submitUser.get('Email').hasError(validation.type) && (submitUser.get('Email').dirty || submitUser.get('Email').touched)\">\n                                                                                              {{ validation.message }}\n                                                                                            </div>\n                                                                                          </div>\n                                                                                      </div>\n                                                                                    </div>\n                                                                                </div>\n\n                                                                                <div class=\"col-12 col-md-6\">\n                                                                                    <div class=\"form-group margin-bottom-10\">\n                                                                                        <div class=\"btn-wrap\">\n                                                                                            <button (click)=\"openResetPasswordModal()\" type=\"button\" class=\"btn btn-success\">Reset Password</button>\n                                                                                        </div>\n                                                                                    </div>\n                                                                                </div>\n                                                                                <div class=\"col-12 col-md-6\">\n                                                                                    <div class=\"form-group margin-top-30\" style=\"margin-top: 10px;\">\n                                                                                        <div>\n                                                                                            <label class=\"container-radio-btn\">Activate\n                                                                                                <input type=\"radio\" checked=\"checked\" formControlName=\"activeDeactive\" value=\"Y\" >\n                                                                                                <span class=\"checkmark\"></span>\n                                                                                            </label>\n                                                                                            <label class=\"container-radio-btn\"> Deactivate\n                                                                                                <input type=\"radio\" formControlName=\"activeDeactive\" value=\"N\">\n                                                                                                <span class=\"checkmark\"></span>\n                                                                                            </label>\n                                                                                            <div class=\"validation-errors text-danger\">\n                                                                                              <div *ngFor=\"let validation of validation_messages.activeDeactive\">\n                                                                                                <div col-12 class=\"error-message\"\n                                                                                                  *ngIf=\"submitUser.get('activeDeactive').hasError(validation.type) && (submitUser.get('activeDeactive').dirty || submitUser.get('activeDeactive').touched)\">\n                                                                                                  {{ validation.message }}\n                                                                                                </div>\n                                                                                              </div>\n                                                                                          </div>\n                                                                                        </div>\n                                                                                    </div>\n                                                                                </div>\n                                                                            </div>\n                                                                        </div>\n\n                                                                    </div>\n                                                                </div>\n                                                            </div>\n                                                            <!--/-->\n                                                            <div class=\"kt-portlet\">\n                                                                <div class=\"kt-portlet__head\">\n                                                                    <div class=\"kt-portlet__head-label\">\n                                                                        <h3 class=\"kt-portlet__head-title\">User privileges management</h3>\n                                                                    </div>\n                                                                </div>\n                                                                <div class=\"kt-form kt-form--label-right\">\n                                                                    <div class=\"kt-portlet__body\">\n                                                                        <div class=\"container\">\n\n                                                                            <div class=\"row\">\n                                                                               <!--  <div class=\"col-md-12 text-center\">\n                                                                                    <p class=\"mid-txt\"> * Multi choices for DD list! * </p>\n                                                                                </div> -->\n                                                                            </div>\n                                                                            <div class=\"row\" formArrayName=\"contacts\">\n                                                                                <div class=\"col-12 col-md-12\" *ngFor=\"let item of submitUser.get('contacts').controls; let i = index; let first = first; let last = last;  let odd = odd\">\n                                                                                    <div class=\"row\"  [formGroupName]=\"i\">\n                                                                                        <div class=\"col-md-6\" >\n                                                                                            <div class=\"form-group margin-bottom-10\">\n                                                                                                <label for=\"select-bank\" class=\"col-form-label\">Select bank <em style=\"font-style: normal;\" class=\"text-danger-black\">*</em> </label>\n                                                                                                <select class=\"form-control form-control col-md-9 \" \n                                                                                                formControlName=\"bankName\"\n                                                                                                (change)=\"onSelectBank(item, $event.target.value, 'reset')\"\n                                                                                                \n                                                                                                >\n                                                                                                     <!-- (change)=\"onSelectBank(item, $event.target.value)\" -->\n                                                                                                     <!-- [value]=\"\" -->\n                                                                                                    <option [value]=\"\">Select Bank </option>\n                                                                                                    <option *ngFor=\"let listOfBankNames of bankNamesList\" [value]=\"listOfBankNames.bank_code\">\n                                                                                                      {{listOfBankNames.bank_name}}\n                                                                                                    </option>\n                                                                                                  </select>\n                                                                                                  <div class=\"validation-errors text-danger\">\n                                                                                                      <div *ngFor=\"let validation of validation_messages.bankName\">\n                                                                                                        <div col-12 class=\"error-message\"\n                                                                                                          *ngIf=\"item.get('bankName').hasError(validation.type) && (item.get('bankName').dirty || item.get('bankName').touched)\">\n                                                                                                          {{ validation.message }}\n                                                                                                        </div>\n                                                                                                      </div>\n                                                                                                  </div>\n                                                                                            </div>\n                                                                                        </div>\n\n                                                                                        <div class=\"col-md-6\">\n                                                                                            <div class=\"form-group margin-bottom-10\">\n                                                                                                <label for=\"select-bank\" class=\"col-form-label\" style=\"float: left;width: 100%;\">Select IBAN  <em style=\"font-style: normal;\" class=\"text-danger-black\">*</em> </label>\n                                                                                                <!-- <select class=\"form-control\" formControlName=\"IBAN\">\n                                                                                                  <option>Select IBAN </option>\n                                                                                                  <option *ngFor=\"let listOfBankNames of bankNamesList\">\n                                                                                                    {{listOfBankNames.ibanNo}}\n                                                                                                  </option>\n                                                                                                </select> -->\n\n                                                                                                <ng-multiselect-dropdown style=\"float: left;padding: 0px;\" class=\" col-md-9\" *ngIf=\"bankNamesList && bankNamesList.length > 0\"\n                                                                                                  [placeholder]=\"'Select IBAN'\"\n                                                                                                  [data]=\"item.bankNamesList\"\n                                                                                                  formControlName=\"iban\"\n                                                                                                  [settings]=\"dropdownSettings\"\n                                                                                                  (onSelect)=\"onItemSelect($event)\"\n                                                                                                  (onSelectAll)=\"onSelectAll($event)\"\n                                                                                                >\n                                                                                                </ng-multiselect-dropdown>\n\n                                                                                                <div class=\"validation-errors text-danger\">\n                                                                                                      <div *ngFor=\"let validation of validation_messages.iban\">\n                                                                                                        <div col-12 style=\"float: left;\" class=\"error-message\"\n                                                                                                          *ngIf=\"item.get('iban').hasError(validation.type) && (item.get('iban').dirty || item.get('iban').touched)\">\n                                                                                                          {{ validation.message }}\n                                                                                                        </div>\n                                                                                                      </div>\n                                                                                                  </div>\n\n                                                                                            </div>\n                                                                                            <div  style=\"margin-top: 0px;\">\n                                                                                                \n\n                                                                                                <!-- add -->\n                                                                                                <button class=\"addmore-btn btn\" (click)=\"addMore('contacts')\" *ngIf=\"first || last\">  \n                                                                                                     <i class=\"fa fa-plus\"></i>  \n                                                                                                </button>\n\n                                                                                                <!-- remove -->\n                                                                                                <button class=\"addmore-btn btn remove\" (click)=\"removeMoreItem('contacts', i)\" [hidden]=\"first\"> \n                                                                                                    <i class=\"fa fa-trash\"></i> \n                                                                                                </button>\n                                                                                                \n                                                                                            </div>\n                                                                                        </div>\n                                                                                        \n                                                                                    \n\n                                                                                    </div>\n                                                                                </div>\n                                                                            </div>\n                                                                            <div class=\"row\">\n\n                                                                                <!-- <div class=\"col-12 col-md-6\">\n                                                                                    <div class=\"form-group margin-bottom-10\">\n                                                                                        <label for=\"type-of-actions\" class=\"col-form-label\">Type of actions <em style=\"font-style: normal;\" class=\"text-danger-black\">*</em> </label>\n                                                                                        <select class=\"form-control col-md-9\">\n                                                                                            <option></option>\n                                                                                        </select>\n                                                                                    </div>\n                                                                                </div>\n\n                                                                                <div class=\"col-12 col-md-6\">\n                                                                                    <div class=\"form-group margin-bottom-10\">\n                                                                                        <label for=\"bond-price-limit\" class=\"col-form-label\">Bond price limit <em style=\"font-style: normal;\" class=\"text-danger-black\">*</em> </label>\n                                                                                        <input class=\"form-control profile-txt1 col-md-9\" type=\"text\" value=\"\" id=\"\" readonly=\"\">\n                                                                                    </div>\n                                                                                </div> -->\n\n                                                                                <div class=\"col-12 col-md-6\">\n                                                                                    <!-- <div class=\"row\">\n                                                                                        <div class=\"col-12 col-md-12 frm1\">\n                                                                                            <div class=\"form-group margin-bottom-10\">\n                                                                                                <label for=\"select-iban\" class=\"col-form-label\">Select IBAN <em style=\"font-style: normal;\" class=\"text-danger-black\">*</em> </label>\n                                                                                                <div class=\"select-iban-box col-md-9\">\n                                                                                                    <div class=\"form-group mmargin-bottom-10\">\n                                                                                                        <div class=\"checkbox\">\n                                                                                                            <label class=\"container-checkbox\"> SA940000121521492238372\n\n                                                                                                                <input type=\"checkbox\" checked=\"checked\">\n                                                                                                                <span class=\"checkmark\"></span>\n                                                                                                            </label>\n                                                                                                        </div>\n                                                                                                    </div>\n                                                                                                    <div class=\"form-group mmargin-bottom-10\">\n                                                                                                        <div class=\"checkbox\">\n                                                                                                            <label class=\"container-checkbox\"> SA940000514521492211111\n\n                                                                                                                <input type=\"checkbox\" checked=\"checked\">\n                                                                                                                <span class=\"checkmark\"></span>\n                                                                                                            </label>\n                                                                                                        </div>\n                                                                                                    </div>\n                                                                                                    <div class=\"form-group mmargin-bottom-10\">\n                                                                                                        <div class=\"checkbox\">\n                                                                                                            <label class=\"container-checkbox\"> SA940000514521492211111\n\n                                                                                                                <input type=\"checkbox\">\n                                                                                                                <span class=\"checkmark\"></span>\n                                                                                                            </label>\n                                                                                                        </div>\n                                                                                                    </div>\n                                                                                                </div>\n                                                                                                <label for=\"type-of-bonds\" class=\"col-form-label\">Type of bonds <em style=\"font-style: normal;\" class=\"text-danger-black\">*</em> </label>\n                                                                                                <select class=\"form-control col-md-9\">\n                                                                                                    <option>Bid bond, Performance bond </option>\n                                                                                                </select>\n                                                                                            </div>\n                                                                                        </div>\n                                                                                        <div class=\"col-12 col-md-12\">\n                                                                                            <div class=\"form-group margin-bottom-10 margin-top-20\">\n                                                                                                <div class=\"checkbox m-top-11\">\n                                                                                                    <label class=\"container-checkbox\"> Grant all privileges?\n\n                                                                                                        <input type=\"checkbox\" checked=\"checked\">\n                                                                                                        <span class=\"checkmark\"></span>\n                                                                                                    </label>\n                                                                                                </div>\n                                                                                            </div>\n                                                                                        </div>\n                                                                                    </div> -->\n                                                                                </div>\n\n                                                                            </div>\n\n                                                                            <!-- <div class=\"row\">\n                                                                                <div class=\"col-12 col-md-6\">\n                                                                                    <p class=\"assigned-txt-wrap\" style=\"margin-top: 30px;\">Assigned privileges </p>\n                                                                                </div>\n                                                                                <div class=\"col-md-12\">\n                                                                                    <div class=\"new-blue-table border-none\">\n                                                                                        <div class=\"table-responsive\">\n                                                                                            <table class=\"table table-bordered table-striped table-hover\">\n                                                                                                <thead>\n                                                                                                    <tr>\n                                                                                                        <th>#</th>\n                                                                                                        <th>Bank name</th>\n                                                                                                        <th>IBAN</th>\n                                                                                                        <th>Privileges</th>\n                                                                                                        <th>Status</th>\n                                                                                                        <th>Actions</th>\n                                                                                                    </tr>\n                                                                                                </thead>\n                                                                                                <tbody>\n                                                                                                    <tr>\n                                                                                                        <td>1</td>\n                                                                                                        <td>SABB</td>\n                                                                                                        <td>SA940000121521492238372</td>\n                                                                                                        <td>All</td>\n                                                                                                        <td>Active</td>\n                                                                                                        <td>\n                                                                                                            <div>\n                                                                                                                <label class=\"container-radio-btn\"> Deactivate\n                                                                                                                    <input type=\"radio\" name=\"radio\">\n                                                                                                                    <span class=\"checkmark\"></span>\n                                                                                                                </label>\n                                                                                                            </div>\n                                                                                                        </td>\n                                                                                                    </tr>\n                                                                                                    <tr>\n                                                                                                        <td>2</td>\n                                                                                                        <td>Alrajhi</td>\n                                                                                                        <td>SA950000313608010054279</td>\n                                                                                                        <td>Limited</td>\n                                                                                                        <td>Deactive</td>\n                                                                                                        <td>\n                                                                                                            <div>\n                                                                                                                <label class=\"container-radio-btn\"> Deactivate\n                                                                                                                    <input type=\"radio\" name=\"radio\">\n                                                                                                                    <span class=\"checkmark\"></span>\n                                                                                                                </label>\n                                                                                                            </div>\n                                                                                                        </td>\n                                                                                                    </tr>\n                                                                                                    <tr>\n                                                                                                        <td>3</td>\n                                                                                                        <td>ANB</td>\n                                                                                                        <td>SA840000521365214788881</td>\n                                                                                                        <td>All</td>\n                                                                                                        <td>Active</td>\n                                                                                                        <td>\n                                                                                                            <div>\n                                                                                                                <label class=\"container-radio-btn\"> Deactivate\n                                                                                                                    <input type=\"radio\" name=\"radio\">\n                                                                                                                    <span class=\"checkmark\"></span>\n                                                                                                                </label>\n                                                                                                            </div>\n                                                                                                        </td>\n                                                                                                    </tr>\n\n                                                                                                </tbody>\n                                                                                            </table>\n                                                                                        </div>\n                                                                                    </div>\n                                                                                </div>\n                                                                            </div> -->\n\n                                                                        </div>\n\n                                                                    </div>\n                                                                </div>\n                                                            </div>\n                                                            <!--/-->\n                                                            <!--New Design-->\n\n                                                            <div class=\"kt-portlet__foot\">\n                                                                <div class=\"kt-form__actions\">\n                                                                    <div class=\"row\">\n                                                                        <div class=\"col-12\">\n                                                                            <div class=\"btn-wrap\">\n                                                                                <button type=\"button\" (click)=\"goCancel()\" class=\"btn btn-gry\"> Cancel </button>\n                                                                                <button  type=\"submit\" class=\"btn btn-success\" style=\"margin-left: 5px;\"> Save </button>\n                                                                            </div>\n\n                                                                        </div>\n                                                                    </div>\n                                                                </div>\n                                                            </div>\n                                                        </form>\n                                                    </div>\n                                                </div>\n\n                                            </div>\n                                        </div>\n                                    </div>\n\n                                </div>\n                            </div>\n                        </div>\n                    </section>\n                </div>\n            </div>\n        </div>\n\n        <!--Middle Content Here-->\n    </div>\n</div>");

/***/ }),

/***/ "./node_modules/raw-loader/dist/cjs.js!./src/app/footer/footer.component.html":
/*!************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/footer/footer.component.html ***!
  \************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<div *ngIf=\"routefooter=='/dashboard' || routefooter=='/privatependingtasks' || routefooter=='/requestLgIssuance' || routefooter=='/pendingtasks' || routefooter=='/govDashboard' || routefooter=='/requestLgIssuanceApproval' || routefooter=='/requestLgIssuanceGovApproval' || routefooter=='/governmentEntityRegistrationView'\n || routefooter=='/requestLgIssuance' || routefooter=='/privateLgManagement' || \n routefooter=='/adminDashboard'|| routefooter=='/privateLgManagement' || \n routefooter=='/govLgManagement'|| routefooter=='/privateentityreginfo' || routefooter=='requestLgIssuancePayment'\"> \n    <div class=\"kt-container\">\n        <div class=\"row\">\n            <div class=\"col-md-12\">\n                <div class=\"kt-footer__copyright footer-copyright\">\n                    {{'HOME.2019' | translate}} &nbsp;©&nbsp;Wthaq\n                </div>\n            </div>\n        </div>\n    </div>\n    </div>\n    \n    <div *ngIf=\"routefooter=='/privateEntityReg' || routefooter=='/privateEntityReg2' || routefooter=='/privateEntityReg3' || routefooter=='/privateEntityRegFinal'\">\n        <div class=\"kt-container\">\n            <div class=\"row\">\n                <div class=\"col-md-12\">\n                    <div class=\"kt-footer__copyright footer-copyright\">\n                        2019&nbsp;©&nbsp;Wthaq\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n    \n    \n    <div *ngIf=\"routefooter=='/governmentEntityReg' || routefooter=='/governmentEntityReg2' || routefooter=='/governmentEntityReg3'\">\n    \n        <div class=\"kt-container\">\n            <div class=\"row\">\n                <div class=\"col-md-12\">\n                    <div class=\"kt-footer__copyright footer-copyright\">\n                        2019&nbsp;©&nbsp;Wthaq\n                    </div>\n                </div>\n            </div>\n        </div>\n    \n        </div>\n\n\n\n        <div *ngIf=\"routefooter=='/home' \">\n\n        <!--starts footer-->\n    <footer class=\"footer  d-flex\">\n        <div class=\"container\">\n            <div class=\"footer_float_right\">\n                <p class=\"footer-float-right footer-right-side\">{{'HOME.All_Rights_Reserved' | translate}} </p> <img src=\"../../assets/images/tabadul-logo.svg\" alt=\"tabadul logo\" class=\"footer-float-right footer-right-side\"> <span class=\"footer-float-right footer-right-side\"> 2019 &copy; </span></div>\n            <div class=\"footer-float-left\"><a class=\"footer-float-left footer-left-side\" routerLink=\"/help\">{{'HOME.Help' | translate}}</a></div>\n            <div class=\"clearfix\"></div>\n        </div>\n    </footer>\n    <!--/Ends footer-->\n</div>\n\n\n\n\n\n\n\n<div *ngIf=\"routefooter=='/requestLgIssuancePayment'\">\n    \n    <div class=\"kt-container\">\n        <div class=\"row\">\n            <div class=\"col-md-12\">\n                <div class=\"kt-footer__copyright footer-copyright\">\n                    2019&nbsp;©&nbsp;Wthaq\n                </div>\n            </div>\n        </div>\n    </div>\n\n    </div>\n");

/***/ }),

/***/ "./node_modules/raw-loader/dist/cjs.js!./src/app/forgot-password/forgot-password.component.html":
/*!******************************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/forgot-password/forgot-password.component.html ***!
  \******************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<!DOCTYPE html>\n\n<html lang=\"en\">\n<!-- begin::Head -->\n\n<head>\n  <meta charset=\"utf-8\" />\n\n  <title>Wthaq | Forgot Password Page</title>\n  <meta name=\"description\" content=\"Updates and statistics\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\n  <!--begin::Global Theme Styles(used by all pages) -->\n  <link href=\"../../assets/css/style.bundle.css\" rel=\"stylesheet\" type=\"text/css\">\n  <!--end::Global Theme Styles -->\n  <!--begin::Layout Skins(used by all pages) -->\n  <link href=\"../../assets/css/custom-style.css\" rel=\"stylesheet\" type=\"text/css\">\n  <!--end::Layout Skins -->\n</head>\n<!-- end::Head -->\n\n<!-- begin::Body -->\n\n<body class=\"login-bg\">\n  <div class=\"container\">\n    <div class=\"row center-content\">\n\n\n      <div class=\"col-9 col-sm-9 col-md-4 margin-top-7\">\n        <div *ngIf=\"isOpenAlert\">\n            <div class=\"pop-block\" >\n                <div class=\"blue-block\"><img src=\"../../assets/images/alert.png\"\n                    alt=\"alert-icon\" class=\"alert-icon\"></div>\n                <p>{{'HOME.email_with_new_password' | translate }}</p>\n                <div class=\"clearfix\"></div>\n              </div>\n        </div>\n\n        <div class=\"login-wrap\">\n          <div class=\"kt-portlet mt-5\">\n            <form class=\"kt-form kt-form--label-right\" [formGroup]=\"submitForgotPassword\">\n              <div class=\"kt-portlet__head\"><span class=\"login-title\">{{'HOME.Forgot_Password' | translate}}</span></div>\n              <div class=\"kt-portlet__body login-body-wrap\">\n                <div class=\"form-group row\">\n                  <div class=\"col-12\">\n                    <label for=\"user-id\" class=\"col-form-label\">{{'HOME.Eqama_National_identification_Number' | translate}}</label>\n                    <input class=\"form-control\" type=\"text\" value=\"\" id=\"\" formControlName=\"userIdForgotPass\" maxlength=\"10\">\n                    <div class=\"validation-errors text-danger\">\n                        <div\n                          *ngFor=\"let validation of validation_messages.userIdForgotPass\">\n                          <div col-12 class=\"error-message\"\n                            *ngIf=\"submitForgotPassword.get('userIdForgotPass').hasError(validation.type) && (submitForgotPassword.get('userIdForgotPass').dirty || submitForgotPassword.get('userIdForgotPass').touched)\">\n                            {{ validation.message }}\n                          </div>\n                        </div>\n                      </div>\n                  </div>\n                </div>\n                <!-- <div class=\"form-group row\">\n                                        <div class=\"col-12\">\n                                             <label for=\"password\" class=\"col-form-label\">Mobile No</label>\n                                            <input class=\"form-control\" type=\"password\" value=\"\" id=\"password-field\" formControlName=\"mobileNo\">\n                                        </div>\n                                    </div>\n                                    <div class=\"form-group row\">\n                                        <div class=\"col-12\">\n                                             <label for=\"password\" class=\"col-form-label\">OTP</label>\n                                            <input class=\"form-control\" type=\"password\" value=\"\" id=\"password-field\" formControlName=\"otp\">\n                                        </div>\n                                    </div> -->\n                <div class=\"kt-login__actions\">\n                  <div class=\"login-btn-wrap forget-btn-wrap\">\n                    <button type=\"reset\" class=\"btn btn-gry pull-left\" (click)=\"resetForm()\">{{'HOME.Cancel' | translate}}</button>\n                    <button type=\"button\" class=\"btn btn-success pull-right\" (click)=\"onSubmit()\">{{'HOME.submit' | translate}}</button>\n                  </div>\n                </div>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <!--begin::Global Theme Bundle(used by all pages) -->\n  <script src=\"../../assets/js/plugins.bundle.js\" type=\"text/javascript\"></script>\n  <!--end::Page Vendors -->\n\n</body>\n<!-- end::Body -->\n\n</html>");

/***/ }),

/***/ "./node_modules/raw-loader/dist/cjs.js!./src/app/general-modal/general-modal.component.html":
/*!**************************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/general-modal/general-modal.component.html ***!
  \**************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<div *ngIf=\"pageData.callerModule=='LOADER'\">\n\n  <div class=\"login-modal\" id=\"myModal\">\n    <div class=\"modal-dialog modal-dialog-centered\">\n      <div class=\"modal-content\">\n\n        <!-- Modal Header -->\n        <div class=\"modal-header\">\n          <h4 class=\"modal-title\">{{pageData.headerTitle |translate}}</h4>\n        </div>\n\n        <!-- Modal body -->\n        <div class=\"modal-body text-center\">\n          <div class=\"row\">\n            <div class=\"col-md-12\">\n\n              <div class=\"form-group margin-bottom-20\">\n                <label class=\"col-form-label\">{{pageData.bodyLabel |translate}}</label>\n                <label class=\"col-form-label\" style=\"text-align: center;\"><img\n                    src=\"../../assets/images/{{pageData.imgName}}\" alt=\"{{pageData.bodyLabel}}\"></label>\n              </div>\n              <div class=\"validation-errors text-danger\">\n\n              </div>\n\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-12\">\n              <div class=\"btn-wrap\">\n\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n\n\n</div>\n\n\n\n\n\n\n\n\n<div *ngIf=\"pageData.callerModule=='LOGIN_SUBMIT_ERROR'\">\n\n  <div class=\"login-modal\" id=\"myModal\">\n    <div class=\"modal-dialog modal-dialog-centered\">\n      <div class=\"modal-content\">\n\n        <!-- Modal Header -->\n        <div class=\"modal-header\">\n          <h4 class=\"modal-title\">{{pageData.headerTitle | translate}}</h4>\n        </div>\n\n        <!-- Modal body -->\n        <div class=\"modal-body text-center\">\n          <div class=\"row\">\n            <div class=\"col-md-12\">\n\n              <div class=\"form-group margin-bottom-20\">\n                <label class=\"col-form-label\">{{pageData.bodyLabel |translate}}</label>\n                <label class=\"col-form-label\">{{pageData.description | translate}}</label>\n                <label class=\"col-form-label\"><strong><small>{{pageData.hint |translate}}</small></strong></label>\n\n\n              </div>\n              <div class=\"validation-errors text-danger\">\n\n              </div>\n\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-12\">\n              <div class=\"btn-wrap\">\n                <button class=\"btn btn-primary button\" type=\"button\" (click)=\"close()\">\n                  OK\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n\n\n</div>\n\n\n\n\n\n<div *ngIf=\"pageData.callerModule=='SUBMIT_REDIRECT'\">\n\n  <div class=\"login-modal\" id=\"myModal\">\n    <div class=\"modal-dialog modal-dialog-centered\">\n      <div class=\"modal-content\">\n\n        <!-- Modal Header -->\n        <div class=\"modal-header\">\n          <h4 class=\"modal-title\">{{pageData.headerTitle |translate}}</h4>\n        </div>\n\n        <!-- Modal body -->\n        <div class=\"modal-body text-center\">\n          <div class=\"row\">\n            <div class=\"col-md-12\">\n\n              <div class=\"form-group margin-bottom-20\">\n                <label class=\"col-form-label\">{{pageData.bodyLabel}}</label>\n                <label class=\"col-form-label\">{{pageData.description |translate}}</label>\n                <label class=\"col-form-label\"><strong><small>{{pageData.hint |translate}}</small></strong></label>\n\n\n              </div>\n              <div class=\"validation-errors text-danger\">\n\n              </div>\n\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-12\">\n              <div class=\"btn-wrap\">\n                <button class=\"btn btn-success\" type=\"button\" (click)=\"closeAndRedirect()\">\n                  {{'HOME.OK' | translate}}\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n\n\n</div>\n\n\n\n\n\n\n\n\n<div *ngIf=\"pageData.callerModule=='GENERAL_MESSAGE'\">\n\n  <div class=\"login-modal\" id=\"myModal\">\n    <div class=\"modal-dialog modal-dialog-centered\">\n      <div class=\"modal-content\">\n\n        <!-- Modal Header -->\n        <div class=\"modal-header\">\n          <h4 class=\"modal-title\">{{pageData.headerTitle | translate}}</h4>\n        </div>\n\n        <!-- Modal body -->\n        <div class=\"modal-body text-center\">\n          <div class=\"row\">\n            <div class=\"col-md-12\">\n\n              <div class=\"form-group margin-bottom-20\">\n                <label class=\"col-form-label\">{{pageData.description | translate}}</label>\n                <label class=\"col-form-label\"><strong><small>{{pageData.hint | translate}}</small></strong></label>\n\n\n              </div>\n              <div class=\"validation-errors text-danger\">\n\n              </div>\n\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-12\">\n              <div class=\"btn-wrap\">\n                <button class=\"btn btn-success\" type=\"button\" (click)=\"closeOnly()\">\n                  {{'HOME.OK' | translate}}\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n\n\n</div>\n\n\n\n<div *ngIf=\"pageData.callerModule=='LG_EMAIL'\">\n  <div class=\"login-modal\" id=\"myModal\">\n    <div class=\"modal-dialog modal-dialog-centered modal-lg\">\n      <div class=\"modal-content\">\n\n        <!-- Modal Header -->\n        <div class=\"modal-header\">\n          <h4 class=\"modal-title\">Email</h4>\n        </div>\n\n        <!-- Modal body -->\n        <div class=\"modal-body text-center\" [formGroup]=\"submitEmail\">\n          <div class=\"row\">\n            <div class=\"col-md-12\">\n\n              <div class=\"form-group margin-bottom-20\">\n                <label for=\"email\">Email <em style=\"font-style: normal;\" class=\"text-danger-black\">*</em></label>\n                <input class=\"form-control\" type=\"email\" value=\"\" id=\"\" [(ngModel)]=\"email\" formControlName=\"email\">\n\n\n              </div>\n              <div class=\"validation-errors text-danger\">\n                <div *ngFor=\"let validation of validation_messages.email\">\n                  <div col-12 class=\"error-message\"\n                    *ngIf=\"submitEmail.get('email').hasError(validation.type) && (submitEmail.get('email').dirty || submitEmail.get('email').touched)\">\n                    {{ validation.message }}\n                  </div>\n                </div>\n              </div>\n\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-12\">\n              <div class=\"btn-wrap\">\n                <button class=\"btn btn-success\" type=\"button\" (click)=\"emailSubmit()\">\n                  OK\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n\n\n\n<div *ngIf=\"pageData.callerModule=='confirm'\">\n\n  <div class=\"login-modal\" id=\"myModal\">\n    <div class=\"modal-dialog modal-dialog-centered\">\n      <div class=\"modal-content\">\n\n        <!-- Modal Header -->\n        <div class=\"modal-header\">\n          <h4 class=\"modal-title\">{{pageData.headerTitle |translate}}</h4>\n        </div>\n\n        <!-- Modal body -->\n        <div class=\"modal-body text-center\">\n          <div class=\"row\">\n            <div class=\"col-md-12\">\n\n              <div class=\"form-group margin-bottom-20\">\n                <label class=\"col-form-label\">{{pageData.bodyLabel |translate}}</label>\n\n\n\n              </div>\n              <div class=\"validation-errors text-danger\">\n\n              </div>\n\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-12\">\n              <div class=\"btn-wrap\">\n\n                <button class=\"btn btn-gry btn-margin-5\" type=\"button\"\n                  (click)=\"confirmlogout()\">{{'HOME.OK' |translate}}</button>\n                <button class=\"btn btn-success btn-margin-5\" type=\"button\"\n                  (click)=\"dialogRef.close(false)\">{{'HOME.Cancel' |translate}}</button>\n\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n\n\n</div>\n\n\n\n<div *ngIf=\"pageData.callerModule=='close'\">\n\n  <div class=\"login-modal\" id=\"myModal\">\n    <div class=\"modal-dialog modal-dialog-centered\">\n      <div class=\"modal-content\">\n\n        <!-- Modal Header -->\n        <div class=\"modal-header\">\n          <h4 class=\"modal-title\">{{pageData.headerTitle |translate}}</h4>\n        </div>\n\n        <!-- Modal body -->\n        <div class=\"modal-body text-center\">\n          <div class=\"row\">\n            <div class=\"col-md-12\">\n\n              <div class=\"form-group margin-bottom-20\">\n                <label class=\"col-form-label\">{{pageData.bodyLabel |translate}}</label>\n\n\n\n              </div>\n              <div class=\"validation-errors text-danger\">\n\n              </div>\n\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-12\">\n              <div class=\"btn-wrap\">\n\n                <button class=\"btn btn-gry btn-margin-5\" type=\"button\"\n                  (click)=\"closebutton()\">{{'HOME.OK' | translate}}</button>\n                <button class=\"btn btn-success btn-margin-5\" type=\"button\"\n                  (click)=\"dialogRef.close(false)\">{{'HOME.Cancel' | translate}}</button>\n\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n\n\n</div>\n\n\n<!--Private Entity -->\n<div *ngIf=\"pageData.callerModule=='LG_CONFISCATE'\">\n  <div class=\"login-modal\" id=\"myModal2\">\n    <div class=\"modal-dialog modal-dialog-centered modal-lg\">\n      <div class=\"modal-content\">\n\n        <!-- Modal Header -->\n        <div class=\"modal-header\">\n          <h4 class=\"modal-title\">Confiscate LG</h4>\n        </div>\n\n        <!-- Modal body -->\n        <div class=\"modal-body text-center\" [formGroup]=\"submitConfiscate\">\n          <div class=\"row\">\n            <div class=\"col-12 col-md-6\">\n              <div class=\"form-group margin-bottom-10\">\n                <label for=\"request-id\" class=\"col-form-label\">Request ID <em style=\"font-style: normal;\"\n                    class=\"text-danger-black\">*</em></label>\n                <input class=\"form-control profile-txt1\" type=\"text\" value=\"\" id=\"\" formControlName=\"requestId\"\n                  readonly>\n              </div>\n            </div>\n            <div class=\"col-12 col-md-6\">\n\n              <div class=\"form-group margin-bottom-10\">\n                <label for=\"lg-number\" class=\"col-form-label\">LG number <em style=\"font-style: normal;\"\n                    class=\"text-danger-black\">*</em></label>\n                <input class=\"form-control profile-txt1\" type=\"text\" value=\"\" id=\"\" formControlName=\"lgNumber\" readonly>\n              </div>\n            </div>\n            <div class=\"col-12 col-md-6\">\n              <div class=\"form-group margin-bottom-10\">\n                <label for=\"beneficiary-name\" class=\"col-form-label\">Beneficiary name <em style=\"font-style: normal;\"\n                    class=\"text-danger-black\">*</em> </label>\n                <input class=\"form-control profile-txt1\" type=\"text\" value=\"\" id=\"\" formControlName=\"beneficiaryName\" readonly>\n                  <input class=\"form-control profile-txt1\" type=\"hidden\" value=\"\" id=\"\" formControlName=\"beneficiaryId\" readonly>\n              </div>\n            </div>\n            <div class=\"col-12 col-md-6\">\n\n              <div class=\"form-group margin-bottom-10\">\n                <label for=\"amount\" class=\"col-form-label\">Amount <em style=\"font-style: normal;\"\n                    class=\"text-danger-black\">*</em></label>\n                <input class=\"form-control profile-txt1\" type=\"text\" value=\"\" id=\"\" formControlName=\"amount\" readonly>\n              </div>\n            </div>\n            <div class=\"col-12 col-md-6\">\n              <div class=\"form-group margin-bottom-10\">\n                <label for=\"bank\" class=\"col-form-label\">Select bank <em style=\"font-style: normal;\"\n                    class=\"text-danger-black\">*</em></label>\n                <!-- <select class=\"form-control\" formControlName=\"bankName\">\n                  <option>Please select</option>\n                </select> -->\n                <!--<select class=\"form-control \" formControlName=\"bankName\"\n                (change)=\"onClickBank($event.target.value)\">\n                <option>Select Bank </option>\n                <option *ngFor=\"let listOfBankNames of bankNamesList\">\n                  {{listOfBankNames.tBankmaster.bankName}}\n                </option>\n              </select>-->\n\n              <select class=\"form-control col-md-9\" formControlName=\"bankName\" (change)=\"onClickBank($event.target.value)\">\n                  <option value=\"\">{{'HOME.SELECT_BANK' | translate}} </option>\n                  <option *ngFor=\"let banks of bankIbanList\" value=\"{{banks.bank_code}}\">\n                    {{banks.bank_name}}\n                  </option>\n                </select>\n                <div class=\"validation-errors text-danger\">\n                  <div *ngFor=\"let validation of validation_messages.bankName\">\n                    <div col-12 class=\"error-message\"\n                      *ngIf=\"submitConfiscate.get('bankName').hasError(validation.type) && (submitConfiscate.get('bankName').dirty || submitConfiscate.get('bankName').touched)\">\n                      {{ validation.message }}\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div class=\"col-12 col-md-6\">\n\n              <div class=\"form-group margin-bottom-10\">\n                <label for=\"iban\" class=\"col-form-label\">Select IBAN <em style=\"font-style: normal;\"\n                    class=\"text-danger-black\">*</em></label>\n                <!-- <select class=\"form-control\" formControlName=\"IBAN\">\n                  <option>SA80000132165498745125</option>\n                </select> -->\n               <!-- <select class=\"form-control\" formControlName=\"IBAN\">\n                  <option>Select IBAN </option>\n                  <option *ngFor=\"let listOfBankNames of bankNamesList\">\n                    {{listOfBankNames.ibanNo}}\n                  </option>\n                </select>-->\n\n\n                <select class=\"form-control col-md-9\" formControlName=\"IBAN\">\n                  <option>{{'HOME.SELECT_IBAN' | translate}} </option>\n                  <option *ngFor=\"let ibans of IBANList\" [value]='ibans'>\n                    {{ibans}}\n                  </option>\n                </select>\n                <div class=\"validation-errors text-danger\">\n                  <div *ngFor=\"let validation of validation_messages.IBAN\">\n                    <div col-12 class=\"error-message\"\n                      *ngIf=\"submitConfiscate.get('IBAN').hasError(validation.type) && (submitConfiscate.get('IBAN').dirty || submitConfiscate.get('IBAN').touched)\">\n                      {{ validation.message }}\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            <div class=\"col-12 col-md-12\">\n\n              <div class=\"form-group margin-bottom-10\">\n                <label for=\"reason\" class=\"col-form-label\">Reason <em style=\"font-style: normal;\"\n                    class=\"text-danger-black\">*</em></label>\n                <input class=\"form-control\" type=\"text\" value=\"\" id=\"\" formControlName=\"reason\">\n                <div class=\"validation-errors text-danger\">\n                  <div *ngFor=\"let validation of validation_messages.reason\">\n                    <div col-12 class=\"error-message\"\n                      *ngIf=\"submitConfiscate.get('reason').hasError(validation.type) && (submitConfiscate.get('reason').dirty || submitConfiscate.get('reason').touched)\">\n                      {{ validation.message }}\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            <div class=\"col-md-12\" style=\"text-align:left;\">\n              <div class=\"checkbox margin-top-10\">\n                <label class=\"container-checkbox par-blu-txt\">Partial confiscation?\n                  <input type=\"checkbox\" value=\"\" name=\"c1\" formControlName=\"partialConfiscation\" (change)=\"partialConfiscationchange($event)\">\n                  <span class=\"checkmark\"></span>\n                </label>\n              </div>\n            </div>\n\n            <div class=\"col-12 col-md-6\">\n\n              <div class=\"form-group margin-bottom-10\">\n                <label for=\"confiscation-amount\" class=\"col-form-label\">Confiscation amount <em\n                    style=\"font-style: normal;\" class=\"text-danger-black\">*</em> </label>\n                <input class=\"form-control\" type=\"text\" value=\"\" id=\"\" formControlName=\"confiscationAmount\" [ngStyle]=\"readonlyOnj()\" [readonly]=\"isReadonly\" (keyup)=\"confiscationAmountKeyup($event.target.value)\">\n                <div class=\"validation-errors text-danger\">\n                  <div *ngFor=\"let validation of validation_messages.confiscationAmount\">\n                    <div col-12 class=\"error-message\"\n                      *ngIf=\"submitConfiscate.get('confiscationAmount').hasError(validation.type) && (submitConfiscate.get('confiscationAmount').dirty || submitConfiscate.get('confiscationAmount').touched)\">\n                      {{ validation.message }}\n                    </div>\n                  </div>\n                </div>\n\n                <div class=\"validation-errors text-danger\" *ngIf=\"!isconfiscationAmountOk\">\n                    <div col-12 class=\"error-message\">\n                      Amount should be less than {{pageData.formsdatas.Amount}}\n                    </div>\n                </div>\n                \n\n              </div>\n            </div>\n\n          </div>\n          <div class=\"modal-footer\">\n            <div class=\"container\">\n\n              <div class=\"row\">\n                <div class=\"col-12\">\n                  <div class=\"pop-block red-block-wrap\" *ngIf=\"confiscationInvalid\">\n                    <div class=\"red-block\"><img src=\"../../assets/images/alert.png\" alt=\"alert-icon\"\n                        class=\"alert-icon\"></div>\n                    <p> <b>Error Message</b> Validation failed</p>\n                    <button class=\"dlete-btn-wrap\"><img src=\"../../assets/images/delete-button.png\"\n                        alt=\"image\" class=\"delete-btn\" (click)=\"closeValidationAlert()\"></button>\n                    <div class=\"clearfix\"></div>\n                  </div>\n                </div>\n              </div>\n              <div class=\"row\">\n                <div class=\"col-12\">\n                  <div class=\"btn-wrap\">\n                    <button *ngIf=\"pageData.entity_type == 'GOV'\" type=\"reset\" class=\"btn btn-gry btn-margin-2\"\n                      (click)=\"closeGovLgModalButton()\">Cancel</button>\n                      <button *ngIf=\"pageData.entity_type == 'PRIVATE'\" type=\"reset\" class=\"btn btn-gry btn-margin-2\"\n                      (click)=\"closePrivateLgModalButton()\">Cancel</button>\n                    <button type=\"button\" class=\"btn btn-success btn-margin-2\" (click)=\"confiscateSubmit()\">Submit</button>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n        </div>\n\n      </div>\n    </div>\n  </div>\n</div>\n\n<div *ngIf=\"pageData.callerModule=='LG_AMEND'\">\n  <div class=\"login-modal\" id=\"myModal1\">\n    <div class=\"modal-dialog modal-dialog-centered modal-lg\">\n      <div class=\"modal-content\">\n\n        <!-- Modal Header -->\n        <div class=\"modal-header\">\n          <h4 class=\"modal-title\">{{'HOME.Amend_LG' |translate}}</h4>\n        </div>\n\n        <!-- Modal body -->\n        <div class=\"modal-body text-center\" [formGroup]=\"submitAmend\">\n          <div class=\"row\">\n            <div class=\"col-md-12\">\n\n              <div class=\"row\">\n                <div class=\"col-12 col-md-6\">\n                  <div class=\"form-group margin-bottom-10\">\n                    <label for=\"request-id\" class=\"col-form-label\">Request ID <em style=\"font-style: normal;\"\n                        class=\"text-danger-black\">*</em> </label>\n                    <input class=\"form-control profile-txt1\" type=\"text\" value=\"\" id=\"\" formControlName=\"requestId\"\n                      readonly>\n                  </div>\n                </div>\n                <div class=\"col-12 col-md-6\">\n\n                  <div class=\"form-group margin-bottom-10\">\n                    <label for=\"lg-number\" class=\"col-form-label\">LG number <em style=\"font-style: normal;\"\n                        class=\"text-danger-black\">*</em></label>\n                    <input class=\"form-control profile-txt1\" type=\"text\" value=\"\" id=\"\" formControlName=\"lgNumber\"\n                      readonly>\n                  </div>\n                </div>\n                <div class=\"col-12 col-md-6\">\n                  <div class=\"form-group margin-bottom-10\">\n                    <label for=\"lg-issuance-date\" class=\"col-form-label\">LG issuance date <em\n                        style=\"font-style: normal;\" class=\"text-danger-black\">*</em></label>\n                    <input class=\"form-control profile-txt1\" type=\"text\" value=\"\" id=\"\" formControlName=\"lgIssueDate\"\n                      readonly>\n                  </div>\n                </div>\n\n                <div class=\"col-12 col-md-6\">\n                  <div class=\"form-group margin-bottom-10\">\n                    <label for=\"lg-start-date\" class=\"col-form-label\">LG start date <em style=\"font-style: normal;\"\n                        class=\"text-danger-black\">*</em> </label>\n                    <input class=\"form-control profile-txt1\" type=\"text\" value=\"\" id=\"\" formControlName=\"lgStartDate\"\n                      readonly>\n                  </div>\n                </div>\n\n                <div class=\"col-12 col-md-6\">\n                  <div class=\"form-group margin-bottom-10\">\n                    <label for=\"amendment-amount\" class=\"col-form-label\">Amendment amount <em\n                        style=\"font-style: normal;\" class=\"text-danger-black\">*</em> </label>\n                    <input class=\"form-control\" type=\"text\" value=\"\" id=\"\" formControlName=\"amendmentAmount\" autofocus (keyup)=\"amendAmountKeyup($event.target.value)\">\n                    <div class=\"validation-errors text-danger\">\n                      <div *ngFor=\"let validation of validation_messages.amendmentAmount\">\n                        <div col-12 class=\"error-message\"\n                          *ngIf=\"submitAmend.get('amendmentAmount').hasError(validation.type) && (submitAmend.get('amendmentAmount').dirty || submitAmend.get('amendmentAmount').touched)\">\n                          {{ validation.message }}\n                        </div>\n                      </div>\n                    </div>\n                    <div class=\"validation-errors text-danger\" *ngIf=\"!isAmendAmountOk\">\n                      <div col-12 class=\"error-message\">\n                        Your pricelimit is {{pageData.priceLimit}}\n                      </div>\n                  </div>\n                  </div>\n                </div>\n\n                <div class=\"col-12 col-md-6\">\n                  <div class=\"form-group margin-bottom-10\">\n                    <label for=\"LG end date\" class=\"col-form-label\">LG end date <em style=\"font-style: normal;\"\n                        class=\"text-danger-black\">*</em></label>\n                    <div class=\"ui-g ui-fluid\">\n                      <div class=\"col-md-12 padding-null calendar-icon-wrap\">\n                        <!-- <input class=\"form-control\" type=\"text\" value=\"\" id=\"\" formControlName=\"lgEndDate\"> -->\n                        <p-calendar placeholder=\"DD/MM/YYYY\" [readonlyInput]=\"true\" yearRange=\"1950:2050\"\n                          [monthNavigator]=\"true\" [yearNavigator]=\"true\" formControlName=\"lgEndDate\"\n                           [showIcon]=\"true\" (onSelect)=\"getStartDate(startDate)\" [minDate]=\"minDate\" dateFormat=\"dd/mm/yy\">\n                        </p-calendar>\n                        <div class=\"validation-errors text-danger\">\n                          <div *ngFor=\"let validation of validation_messages.lgEndDate\">\n                            <div col-12 class=\"error-message\"\n                              *ngIf=\"submitAmend.get('lgEndDate').hasError(validation.type) && (submitAmend.get('lgEndDate').dirty || submitAmend.get('lgEndDate').touched || submitAmend.get('lgEndDate').pristine)\">\n                              {{ validation.message }}\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                <div class=\"col-12 col-md-12\">\n\n                  <div class=\"form-group margin-bottom-10\">\n                    <label for=\"confiscation-amount\" class=\"col-form-label\">Write-up</label>\n                    <textarea class=\"write-up-txt\" formControlName=\"writeUp\" *ngIf=\"writeUpTypeEditable\"></textarea>\n                    <textarea class=\"write-up-txt\" formControlName=\"writeUp\" *ngIf=\"!writeUpTypeEditable\" readonly [ngStyle]=\"styleObject()\"></textarea>\n                  </div>\n\n                  <p class=\"txt-wrap-bot-txt\" *ngIf=\"LGaccessType == 'Supplier'\"><em style=\"font-style: normal;\" class=\"text-danger-black\">*</em>\n                    Decreasing LG amount requires Beneficiary approval<br>\n                    <em style=\"font-style: normal;\" class=\"text-danger-black\">*</em>\n                    Decreasing validity requires Beneficiary approval<br>\n                   <span *ngIf=\"writeUpTypeEditable\"> <em style=\"font-style: normal;\" class=\"text-danger-black\">*</em>\n                    Change in Write up text requires Beneficiary approval</span>\n                  </p>\n\n                  <p class=\"txt-wrap-bot-txt\" *ngIf=\"LGaccessType == 'Beneficiary'\"><em style=\"font-style: normal;\" class=\"text-danger-black\">*</em>\n                      Increasing LG amount requires Supplier approval<br>\n                      <span *ngIf=\"writeUpTypeEditable\"> <em style=\"font-style: normal;\" class=\"text-danger-black\">*</em>\n                        Change in Write up text requires Supplier approval</span>\n                    </p>\n                </div>\n\n              </div>\n\n\n            </div>\n          </div>\n          <div class=\"modal-footer\">\n            <div class=\"container\">\n            <div class=\"row\">\n              <div class=\"col-12\">\n                <div class=\"pop-block red-block-wrap\" *ngIf=\"amendInvalid\">\n                  <div class=\"red-block\"><img src=\"../../assets/images/alert.png\" alt=\"alert-icon\"\n                      class=\"alert-icon\"></div>\n                  <p> <b>Error Message</b> Validation failed</p>\n                  <button class=\"dlete-btn-wrap\"><img src=\"../../assets/images/delete-button.png\"\n                      alt=\"image\" class=\"delete-btn\" (click)=\"closeValidationAlert()\"></button>\n                  <div class=\"clearfix\"></div>\n                </div>\n              </div>\n            </div>\n            <div class=\"row\">\n              <div class=\"col-12\">\n                <div class=\"btn-wrap\">\n                    <button *ngIf=\"pageData.entity_type == 'GOV'\" type=\"reset\" class=\"btn btn-gry btn-margin-2\"\n                    (click)=\"closeGovLgModalButton()\">Cancel</button>\n                    <button *ngIf=\"pageData.entity_type == 'PRIVATE'\" type=\"reset\" class=\"btn btn-gry btn-margin-2\"\n                    (click)=\"closePrivateLgModalButton()\">Cancel</button>\n                  <button type=\"button\" class=\"btn btn-success btn-margin-2\" (click)=\"amendSubmit()\">Submit</button>\n                </div>\n\n              </div>\n            </div>\n            </div>\n          </div>\n\n        </div>\n\n      </div>\n    </div>\n  </div>\n</div>\n\n<div *ngIf=\"pageData.callerModule=='LG_RELEASE'\">\n  <div class=\"login-modal\" id=\"myModal3\">\n    <div class=\"modal-dialog modal-dialog-centered modal-lg\">\n      <div class=\"modal-content\">\n\n        <!-- Modal Header -->\n        <div class=\"modal-header\">\n          <h4 class=\"modal-title\">Release LG</h4>\n        </div>\n\n        <!-- Modal body -->\n        <div class=\"modal-body text-center\" [formGroup]=\"submitReleasedLG\">\n          <div class=\"row\">\n            <div class=\"col-md-12\">\n\n              <div class=\"row\">\n                <div class=\"col-12 col-md-6\">\n                  <div class=\"form-group margin-bottom-10\">\n                    <label for=\"request-id\" class=\"col-form-label\">Request ID <em style=\"font-style: normal;\"\n                        class=\"text-danger-black\">*</em></label>\n                    <input class=\"form-control profile-txt1\" type=\"text\" value=\"\" id=\"\" formControlName=\"requestId\"\n                      readonly>\n                  </div>\n                </div>\n                <div class=\"col-12 col-md-6\">\n\n                  <div class=\"form-group margin-bottom-10\">\n                    <label for=\"lg-number\" class=\"col-form-label\">LG number <em style=\"font-style: normal;\"\n                        class=\"text-danger-black\">*</em></label>\n                    <input class=\"form-control profile-txt1\" type=\"text\" value=\"\" id=\"\" formControlName=\"lgNumber\"\n                      readonly>\n                  </div>\n                </div>\n                <div class=\"col-12 col-md-6\">\n                  <div class=\"form-group margin-bottom-10\">\n                    <label for=\"beneficiary-name\" class=\"col-form-label\">Beneficiary name <em\n                        style=\"font-style: normal;\" class=\"text-danger-black\">*</em> </label>\n                    <input class=\"form-control profile-txt1\" type=\"text\" value=\"\" id=\"\"\n                      formControlName=\"beneficiaryName\" readonly>\n                      <input class=\"form-control profile-txt1\" type=\"hidden\" value=\"\" id=\"\"\n                      formControlName=\"beneficiaryId\" readonly>\n                  </div>\n                </div>\n                <div class=\"col-12 col-md-6\">\n\n                  <div class=\"form-group margin-bottom-10\">\n                    <label for=\"amount\" class=\"col-form-label\">Amount <em style=\"font-style: normal;\"\n                        class=\"text-danger-black\">*</em></label>\n                    <input class=\"form-control profile-txt1\" type=\"text\" value=\"\" id=\"\" formControlName=\"amount\"\n                      readonly>\n                  </div>\n                </div>\n                <div class=\"col-12 col-md-12\">\n\n                  <div class=\"form-group margin-bottom-10\">\n                    <label for=\"reason\" class=\"col-form-label\">Reason <em style=\"font-style: normal;\"\n                        class=\"text-danger-black\">*</em></label>\n                    <input class=\"form-control\" type=\"text\" value=\"\" id=\"\" formControlName=\"releaseReason\">\n                    <div class=\"validation-errors text-danger\">\n                      <div *ngFor=\"let validation of validation_messages.releaseReason\">\n                        <div col-12 class=\"error-message\"\n                          *ngIf=\"submitReleasedLG.get('releaseReason').hasError(validation.type) && (submitReleasedLG.get('releaseReason').dirty || submitReleasedLG.get('releaseReason').touched)\">\n                          {{ validation.message }}\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n\n                <div class=\"col-md-12\" style=\"text-align:left;\">\n                  <div class=\"checkbox margin-top-10\">\n                    <label class=\"container-checkbox\">Partial release?\n                      <input type=\"checkbox\" value=\"\" name=\"c1\" formControlName=\"partialRelease\" (change)=\"partialReleasechange($event)\">\n                      <span class=\"checkmark\"></span>\n                    </label>\n                  </div>\n                </div>\n\n                <div class=\"col-12 col-md-6\">\n\n                  <div class=\"form-group margin-bottom-10\">\n                    <label for=\"confiscation-amount\" class=\"col-form-label\">Release amount <em\n                        style=\"font-style: normal;\" class=\"text-danger-black\">*</em> </label>\n                    <input class=\"form-control\" type=\"text\" value=\"\" id=\"\" formControlName=\"releaseAmount\" [ngStyle]=\"readonlyOnj()\" [readonly]=\"isReadonly\" (keyup)=\"releaseAmountKeyup($event.target.value)\">\n                    <div class=\"validation-errors text-danger\">\n                      <div *ngFor=\"let validation of validation_messages.releaseAmount\">\n                        <div col-12 class=\"error-message\"\n                          *ngIf=\"submitReleasedLG.get('releaseAmount').hasError(validation.type) && (submitReleasedLG.get('releaseAmount').dirty || submitReleasedLG.get('releaseAmount').touched)\">\n                          {{ validation.message }}\n                        </div>\n                      </div>\n                    </div>\n                    <div class=\"validation-errors text-danger\" *ngIf=\"!isReleaseAmountOk\">\n                      <div col-12 class=\"error-message\">\n                        Amount should be less than {{pageData.formsdatas.Amount}}\n                      </div>\n                  </div>\n                  </div>\n                </div>\n\n              </div>\n\n\n            </div>\n          </div>\n          <div class=\"modal-footer\">\n            <div class=\"container\">\n            <div class=\"row\">\n              <div class=\"col-12\">\n                <div class=\"pop-block red-block-wrap\" *ngIf=\"confiscationInvalid\">\n                  <div class=\"red-block\"><img src=\"../../assets/images/alert.png\" alt=\"alert-icon\"\n                      class=\"alert-icon\"></div>\n                  <p> <b>Error Message</b> Validation failed</p>\n                  <button class=\"dlete-btn-wrap\"><img src=\"../../assets/images/delete-button.png\"\n                      alt=\"image\" class=\"delete-btn\" (click)=\"closeValidationAlert()\"></button>\n                  <div class=\"clearfix\"></div>\n                </div>\n              </div>\n            </div>\n                \n              <div class=\"row\">\n              <div class=\"col-12\">\n                \n                <div class=\"btn-wrap\">\n                  <button *ngIf=\"pageData.entity_type == 'GOV'\" type=\"reset\" class=\"btn btn-gry btn-margin-2\"\n                    (click)=\"closeGovLgModalButton()\">Cancel</button>\n                    <button *ngIf=\"pageData.entity_type == 'PRIVATE'\" type=\"reset\" class=\"btn btn-gry btn-margin-2\"\n                    (click)=\"closePrivateLgModalButton()\">Cancel</button>\n                  <button type=\"button\" class=\"btn btn-success btn-margin-2\" (click)=\"releaseSubmit()\">Submit</button>\n                </div>\n\n              </div>\n            </div>\n          </div>\n          </div>\n\n        </div>\n\n      </div>\n    </div>\n  </div>\n</div>\n\n<!--Private Entity -->\n\n<!--Gov Entity -->\n<div *ngIf=\"pageData.callerModule=='LG_CONFISCATE_GOV'\">\n  <div class=\"login-modal\" id=\"myModal2\">\n    <div class=\"modal-dialog modal-dialog-centered modal-lg\">\n      <div class=\"modal-content\">\n\n        <!-- Modal Header -->\n        <div class=\"modal-header\">\n          <h4 class=\"modal-title\">Confiscate LG</h4>\n        </div>\n\n        <!-- Modal body -->\n        <div class=\"modal-body text-center\" [formGroup]=\"submitConfiscate\">\n          <div class=\"row\">\n            <div class=\"col-12 col-md-6\">\n              <div class=\"form-group margin-bottom-10\">\n                <label for=\"request-id\" class=\"col-form-label\">Request ID <em style=\"font-style: normal;\"\n                    class=\"text-danger-black\">*</em></label>\n                <input class=\"form-control profile-txt1\" type=\"text\" value=\"\" id=\"\" formControlName=\"requestId\"\n                  readonly>\n              </div>\n            </div>\n            <div class=\"col-12 col-md-6\">\n\n              <div class=\"form-group margin-bottom-10\">\n                <label for=\"lg-number\" class=\"col-form-label\">LG number <em style=\"font-style: normal;\"\n                    class=\"text-danger-black\">*</em></label>\n                <input class=\"form-control profile-txt1\" type=\"text\" value=\"\" id=\"\" formControlName=\"lgNumber\" readonly>\n              </div>\n            </div>\n            <div class=\"col-12 col-md-6\">\n              <div class=\"form-group margin-bottom-10\">\n                <label for=\"beneficiary-name\" class=\"col-form-label\">Beneficiary name <em style=\"font-style: normal;\"\n                    class=\"text-danger-black\">*</em> </label>\n                <input class=\"form-control profile-txt1\" type=\"text\" value=\"\" id=\"\" formControlName=\"beneficiaryName\"\n                  readonly>\n              </div>\n            </div>\n            <div class=\"col-12 col-md-6\">\n\n              <div class=\"form-group margin-bottom-10\">\n                <label for=\"amount\" class=\"col-form-label\">Amount <em style=\"font-style: normal;\"\n                    class=\"text-danger-black\">*</em></label>\n                <input class=\"form-control profile-txt1\" type=\"text\" value=\"\" id=\"\" formControlName=\"amount\" readonly>\n              </div>\n            </div>\n            <div class=\"col-12 col-md-6\">\n              <div class=\"form-group margin-bottom-10\">\n                <label for=\"bank\" class=\"col-form-label\">Select bank <em style=\"font-style: normal;\"\n                    class=\"text-danger-black\">*</em></label>\n                <!-- <select class=\"form-control\" formControlName=\"bankName\">\n                  <option>Please select</option>\n                </select> -->\n                <select class=\"form-control \" formControlName=\"bankName\"\n                (change)=\"onClickBank($event.target.value)\">\n                <option>Select Bank </option>\n                <option *ngFor=\"let listOfBankNames of bankNamesList\">\n                  {{listOfBankNames.tBankmaster.bankName}}\n                </option>\n              </select>\n                <div class=\"validation-errors text-danger\">\n                  <div *ngFor=\"let validation of validation_messages.bankName\">\n                    <div col-12 class=\"error-message\"\n                      *ngIf=\"submitConfiscate.get('bankName').hasError(validation.type) && (submitConfiscate.get('bankName').dirty || submitConfiscate.get('bankName').touched)\">\n                      {{ validation.message }}\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div class=\"col-12 col-md-6\">\n\n              <div class=\"form-group margin-bottom-10\">\n                <label for=\"iban\" class=\"col-form-label\">Select IBAN <em style=\"font-style: normal;\"\n                    class=\"text-danger-black\">*</em></label>\n                <!-- <select class=\"form-control\" formControlName=\"IBAN\">\n                  <option>SA80000132165498745125</option>\n                </select> -->\n                <select class=\"form-control\" formControlName=\"IBAN\">\n                  <option>Select IBAN </option>\n                  <option *ngFor=\"let listOfBankNames of bankNamesList\">\n                    {{listOfBankNames.ibanNo}}\n                  </option>\n                </select>\n                <div class=\"validation-errors text-danger\">\n                  <div *ngFor=\"let validation of validation_messages.IBAN\">\n                    <div col-12 class=\"error-message\"\n                      *ngIf=\"submitConfiscate.get('IBAN').hasError(validation.type) && (submitConfiscate.get('IBAN').dirty || submitConfiscate.get('IBAN').touched)\">\n                      {{ validation.message }}\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            <div class=\"col-12 col-md-12\">\n\n              <div class=\"form-group margin-bottom-10\">\n                <label for=\"reason\" class=\"col-form-label\">Reason <em style=\"font-style: normal;\"\n                    class=\"text-danger-black\">*</em></label>\n                <input class=\"form-control\" type=\"text\" value=\"\" id=\"\" formControlName=\"reason\">\n                <div class=\"validation-errors text-danger\">\n                  <div *ngFor=\"let validation of validation_messages.reason\">\n                    <div col-12 class=\"error-message\"\n                      *ngIf=\"submitConfiscate.get('reason').hasError(validation.type) && (submitConfiscate.get('reason').dirty || submitConfiscate.get('reason').touched)\">\n                      {{ validation.message }}\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            <div class=\"col-md-12\" style=\"text-align:left;\">\n              <div class=\"checkbox margin-top-10\">\n                <label class=\"container-checkbox par-blu-txt\">Partial confiscation?\n                  <input type=\"checkbox\" value=\"\" name=\"c1\" formControlName=\"partialConfiscation\">\n                  <span class=\"checkmark\"></span>\n                </label>\n              </div>\n            </div>\n\n            <div class=\"col-12 col-md-6\">\n\n              <div class=\"form-group margin-bottom-10\">\n                <label for=\"confiscation-amount\" class=\"col-form-label\">Confiscation amount <em\n                    style=\"font-style: normal;\" class=\"text-danger-black\">*</em> </label>\n                <input class=\"form-control\" type=\"text\" value=\"\" id=\"\" formControlName=\"confiscationAmount\">\n                <div class=\"validation-errors text-danger\">\n                  <div *ngFor=\"let validation of validation_messages.confiscationAmount\">\n                    <div col-12 class=\"error-message\"\n                      *ngIf=\"submitConfiscate.get('confiscationAmount').hasError(validation.type) && (submitConfiscate.get('confiscationAmount').dirty || submitConfiscate.get('confiscationAmount').touched)\">\n                      {{ validation.message }}\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n          </div>\n          <div class=\"modal-footer\">\n            <div class=\"row\">\n              <div class=\"col-12\">\n                <div class=\"btn-wrap\">\n                  <button type=\"reset\" class=\"btn btn-gry btn-margin-2\"\n                    (click)=\"closeGovLgModalButton()\">Cancel</button>\n                  <button type=\"button\" class=\"btn btn-success btn-margin-2\" (click)=\"confiscateSubmit()\">Submit</button>\n                </div>\n\n              </div>\n            </div>\n          </div>\n\n        </div>\n\n      </div>\n    </div>\n  </div>\n</div>\n\n<div *ngIf=\"pageData.callerModule=='LG_AMEND_GOV'\">\n  <div class=\"login-modal\" id=\"myModal1\">\n    <div class=\"modal-dialog modal-dialog-centered modal-lg\">\n      <div class=\"modal-content\">\n\n        <!-- Modal Header -->\n        <div class=\"modal-header\">\n          <h4 class=\"modal-title\">{{'HOME.Amend_LG' |translate}}</h4>\n        </div>\n\n        <!-- Modal body -->\n        <div class=\"modal-body text-center\" [formGroup]=\"submitAmend\">\n          <div class=\"row\">\n            <div class=\"col-md-12\">\n\n              <div class=\"row\">\n                <div class=\"col-12 col-md-6\">\n                  <div class=\"form-group margin-bottom-10\">\n                    <label for=\"request-id\" class=\"col-form-label\">Request ID <em style=\"font-style: normal;\"\n                        class=\"text-danger-black\">*</em> </label>\n                    <input class=\"form-control profile-txt1\" type=\"text\" value=\"\" id=\"\" formControlName=\"requestId\"\n                      readonly>\n                  </div>\n                </div>\n                <div class=\"col-12 col-md-6\">\n\n                  <div class=\"form-group margin-bottom-10\">\n                    <label for=\"lg-number\" class=\"col-form-label\">LG number <em style=\"font-style: normal;\"\n                        class=\"text-danger-black\">*</em></label>\n                    <input class=\"form-control profile-txt1\" type=\"text\" value=\"\" id=\"\" formControlName=\"lgNumber\"\n                      readonly>\n                  </div>\n                </div>\n                <div class=\"col-12 col-md-6\">\n                  <div class=\"form-group margin-bottom-10\">\n                    <label for=\"lg-issuance-date\" class=\"col-form-label\">LG issuance date <em\n                        style=\"font-style: normal;\" class=\"text-danger-black\">*</em></label>\n                    <input class=\"form-control profile-txt1\" type=\"text\" value=\"\" id=\"\" formControlName=\"lgIssueDate\"\n                      readonly>\n                  </div>\n                </div>\n\n                <div class=\"col-12 col-md-6\">\n                  <div class=\"form-group margin-bottom-10\">\n                    <label for=\"lg-start-date\" class=\"col-form-label\">LG start date <em style=\"font-style: normal;\"\n                        class=\"text-danger-black\">*</em> </label>\n                    <input class=\"form-control profile-txt1\" type=\"text\" value=\"\" id=\"\" formControlName=\"lgStartDate\"\n                      readonly>\n                  </div>\n                </div>\n\n                <div class=\"col-12 col-md-6\">\n                  <div class=\"form-group margin-bottom-10\">\n                    <label for=\"amendment-amount\" class=\"col-form-label\">Amendment amount <em\n                        style=\"font-style: normal;\" class=\"text-danger-black\">*</em> </label>\n                    <input class=\"form-control\" type=\"text\" value=\"\" id=\"\" formControlName=\"amendmentAmount\">\n                    <div class=\"validation-errors text-danger\">\n                      <div *ngFor=\"let validation of validation_messages.amendmentAmount\">\n                        <div col-12 class=\"error-message\"\n                          *ngIf=\"submitAmend.get('amendmentAmount').hasError(validation.type) && (submitAmend.get('amendmentAmount').dirty || submitAmend.get('amendmentAmount').touched)\">\n                          {{ validation.message }}\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n\n                <div class=\"col-12 col-md-6\">\n                  <div class=\"form-group margin-bottom-10\">\n                    <label for=\"LG end date\" class=\"col-form-label\">LG end date <em style=\"font-style: normal;\"\n                        class=\"text-danger-black\">*</em></label>\n                    <div class=\"ui-g ui-fluid\">\n                      <div class=\"col-md-12 padding-null calendar-icon-wrap\">\n                        <!-- <input class=\"form-control\" type=\"text\" value=\"\" id=\"\" formControlName=\"lgEndDate\"> -->\n                        <p-calendar placeholder=\"DD/MM/YYYY\" [readonlyInput]=\"true\" yearRange=\"1950:2050\"\n                          [monthNavigator]=\"true\" [yearNavigator]=\"true\" formControlName=\"lgEndDate\"\n                          [(ngModel)]=\"lgEndDate\" [showIcon]=\"true\" (onSelect)=\"getStartDate(startDate)\" [minDate]=\"minDate\" dateFormat=\"dd/mm/yy\">\n                        </p-calendar>\n                        <div class=\"validation-errors text-danger\">\n                          <div *ngFor=\"let validation of validation_messages.lgEndDate\">\n                            <div col-12 class=\"error-message\"\n                              *ngIf=\"submitAmend.get('lgEndDate').hasError(validation.type) && (submitAmend.get('lgEndDate').dirty || submitAmend.get('lgEndDate').touched)\">\n                              {{ validation.message }}\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                <div class=\"col-12 col-md-12\">\n\n                  <div class=\"form-group margin-bottom-10\">\n                    <label for=\"confiscation-amount\" class=\"col-form-label\">Write-up</label>\n                    <textarea class=\"write-up-txt\" formControlName=\"writeUp\"></textarea>\n                  </div>\n                  <p class=\"txt-wrap-bot-txt\"><em style=\"font-style: normal;\" class=\"text-danger-black\">*</em>\n                    Increasing\n                    LG amount requires supplier approval</p>\n\n                </div>\n\n              </div>\n\n\n            </div>\n          </div>\n          <div class=\"modal-footer\">\n            <div class=\"row\">\n              <div class=\"col-12\">\n                <div class=\"btn-wrap\">\n                  <button type=\"reset\" class=\"btn btn-gry btn-margin-2\"\n                    (click)=\"closeGovLgModalButton()\">Cancel</button>\n                  <button type=\"button\" class=\"btn btn-success btn-margin-2\" (click)=\"amendSubmit()\">Submit</button>\n                </div>\n\n              </div>\n            </div>\n          </div>\n\n        </div>\n\n      </div>\n    </div>\n  </div>\n</div>\n\n<div *ngIf=\"pageData.callerModule=='LG_RELEASE_GOV'\">\n  <div class=\"login-modal\" id=\"myModal3\">\n    <div class=\"modal-dialog modal-dialog-centered modal-lg\">\n      <div class=\"modal-content\">\n\n        <!-- Modal Header -->\n        <div class=\"modal-header\">\n          <h4 class=\"modal-title\">Release LG</h4>\n        </div>\n\n        <!-- Modal body -->\n        <div class=\"modal-body text-center\" [formGroup]=\"submitReleasedLG\">\n          <div class=\"row\">\n            <div class=\"col-md-12\">\n\n              <div class=\"row\">\n                <div class=\"col-12 col-md-6\">\n                  <div class=\"form-group margin-bottom-10\">\n                    <label for=\"request-id\" class=\"col-form-label\">Request ID <em style=\"font-style: normal;\"\n                        class=\"text-danger-black\">*</em></label>\n                    <input class=\"form-control profile-txt1\" type=\"text\" value=\"\" id=\"\" formControlName=\"requestId\"\n                      readonly>\n                  </div>\n                </div>\n                <div class=\"col-12 col-md-6\">\n\n                  <div class=\"form-group margin-bottom-10\">\n                    <label for=\"lg-number\" class=\"col-form-label\">LG number <em style=\"font-style: normal;\"\n                        class=\"text-danger-black\">*</em></label>\n                    <input class=\"form-control profile-txt1\" type=\"text\" value=\"\" id=\"\" formControlName=\"lgNumber\"\n                      readonly>\n                  </div>\n                </div>\n                <div class=\"col-12 col-md-6\">\n                  <div class=\"form-group margin-bottom-10\">\n                    <label for=\"beneficiary-name\" class=\"col-form-label\">Beneficiary name <em\n                        style=\"font-style: normal;\" class=\"text-danger-black\">*</em> </label>\n                    <input class=\"form-control profile-txt1\" type=\"text\" value=\"\" id=\"\"\n                      formControlName=\"beneficiaryName\" readonly>\n                  </div>\n                </div>\n                <div class=\"col-12 col-md-6\">\n\n                  <div class=\"form-group margin-bottom-10\">\n                    <label for=\"amount\" class=\"col-form-label\">Amount <em style=\"font-style: normal;\"\n                        class=\"text-danger-black\">*</em></label>\n                    <input class=\"form-control profile-txt1\" type=\"text\" value=\"\" id=\"\" formControlName=\"amount\"\n                      readonly>\n                  </div>\n                </div>\n                <div class=\"col-12 col-md-12\">\n\n                  <div class=\"form-group margin-bottom-10\">\n                    <label for=\"reason\" class=\"col-form-label\">Reason <em style=\"font-style: normal;\"\n                        class=\"text-danger-black\">*</em></label>\n                    <input class=\"form-control\" type=\"text\" value=\"\" id=\"\" formControlName=\"releaseReason\">\n                    <div class=\"validation-errors text-danger\">\n                      <div *ngFor=\"let validation of validation_messages.releaseReason\">\n                        <div col-12 class=\"error-message\"\n                          *ngIf=\"submitReleasedLG.get('releaseReason').hasError(validation.type) && (submitReleasedLG.get('releaseReason').dirty || submitReleasedLG.get('releaseReason').touched)\">\n                          {{ validation.message }}\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n\n                <div class=\"col-md-12\" style=\"text-align:left;\">\n                  <div class=\"checkbox margin-top-10\">\n                    <label class=\"container-checkbox\">Partial release?\n                      <input type=\"checkbox\" value=\"\" name=\"c1\" formControlName=\"partialRelease\">\n                      <span class=\"checkmark\"></span>\n                    </label>\n                  </div>\n                </div>\n\n                <div class=\"col-12 col-md-6\">\n\n                  <div class=\"form-group margin-bottom-10\">\n                    <label for=\"confiscation-amount\" class=\"col-form-label\">Release amount <em\n                        style=\"font-style: normal;\" class=\"text-danger-black\">*</em> </label>\n                    <input class=\"form-control\" type=\"text\" value=\"\" id=\"\" formControlName=\"releaseAmount\">\n                    <div class=\"validation-errors text-danger\">\n                      <div *ngFor=\"let validation of validation_messages.releaseAmount\">\n                        <div col-12 class=\"error-message\"\n                          *ngIf=\"submitReleasedLG.get('releaseAmount').hasError(validation.type) && (submitReleasedLG.get('releaseAmount').dirty || submitReleasedLG.get('releaseAmount').touched)\">\n                          {{ validation.message }}\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n\n              </div>\n\n\n            </div>\n          </div>\n          <div class=\"modal-footer\">\n            <div class=\"row\">\n              <div class=\"col-12\">\n                <div class=\"btn-wrap\">\n                  <button type=\"reset\" class=\"btn btn-gry btn-margin-2\"\n                    (click)=\"closeGovLgModalButton()\">Cancel</button>\n                  <button type=\"button\" class=\"btn btn-success btn-margin-2\" (click)=\"releaseSubmit()\">Submit</button>\n                </div>\n\n              </div>\n            </div>\n          </div>\n\n        </div>\n\n      </div>\n    </div>\n  </div>\n</div>\n\n\n<div *ngIf=\"pageData.callerModule=='ACRconfirm'\">\n\n  <div class=\"login-modal\" id=\"myModal\">\n    <div class=\"modal-dialog modal-dialog-centered\">\n      <div class=\"modal-content\">\n\n        <!-- Modal Header -->\n        <div class=\"modal-header\">\n          <h4 class=\"modal-title\">{{pageData.headerTitle |translate}}</h4>\n        </div>\n\n        <!-- Modal body -->\n        <div class=\"modal-body text-center\">\n          <div class=\"row\">\n            <div class=\"col-md-12\">\n\n              <div class=\"form-group margin-bottom-20\">\n                <label class=\"col-form-label\">{{pageData.bodyLabel |translate}}</label>\n\n\n\n              </div>\n              <div class=\"validation-errors text-danger\">\n\n              </div>\n\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-12\">\n              <div class=\"btn-wrap\">\n\n                <button class=\"btn btn-gry btn-margin-5\" type=\"button\"\n                  (click)=\"amendConfirmOk()\">{{'HOME.OK' |translate}}</button>\n                <button class=\"btn btn-success btn-margin-5\" type=\"button\"\n                  (click)=\"amendConfirmCancel()\">{{'HOME.Cancel' |translate}}</button>\n\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n\n\n</div>\n<!--Gov Entity -->\n<!-- Workflow Selection-->\n<div *ngIf=\"pageData.callerModule=='SELECT_WORKFLOW'\">\n\n  <div class=\"login-modal\" id=\"myModal\">\n    <div class=\"modal-dialog modal-dialog-centered\">\n      <div class=\"modal-content\">\n\n        <!-- Modal Header -->\n        <div class=\"modal-header\">\n          <h4 class=\"modal-title\">Select Workflow</h4>\n        </div>\n\n        <!-- Modal body -->\n\n          <div class=\"modal-body text-center\" [formGroup]=\"selectworkflow\">\n            <div class=\"row\">\n              <div class=\"col-12 col-md-6\">\n                <div class=\"form-group margin-bottom-10\">\n                  <label for=\"request-id\" class=\"col-form-label\">Wprkflow <em style=\"font-style: normal;\" class=\"text-danger-black\">*</em></label>\n                  <input class=\"form-control profile-txt1\" type=\"radio\" value=\"\" id=\"\" formControlName=\"workflow_id\">\n                </div>\n              </div>\n            </div>\n            <div class=\"row\">\n              <div class=\"col-12\">\n                <div class=\"btn-wrap\">\n  \n                  <button class=\"btn btn-gry btn-margin-5\" type=\"button\"\n                    (click)=\"amendConfirmOk()\">{{'HOME.OK' |translate}}</button>\n                  <button class=\"btn btn-success btn-margin-5\" type=\"button\"\n                    (click)=\"amendConfirmCancel()\">{{'HOME.Cancel' |translate}}</button>\n  \n                </div>\n              </div>\n            </div>\n          </div>\n\n\n          \n          \n      </div>\n    </div>\n  </div>\n\n\n</div>\n<!-- Workflow Selection-->");

/***/ }),

/***/ "./node_modules/raw-loader/dist/cjs.js!./src/app/gov-entity-dashboard/gov-entity-dashboard.component.html":
/*!****************************************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/gov-entity-dashboard/gov-entity-dashboard.component.html ***!
  \****************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("\n\n\n           <!--===========================\n                        Start Content\n                        ============================-->\n                        <div class=\"pt-0 kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor kt-margin-top-50\">\n                          <div class=\"kt-container\">\n                        <!--New Design Here-->\n                        <div class=\"row\">\n                          <app-sidemenu></app-sidemenu>\n                          <!--<div class=\"col-12 col-sm-3 col-md-3 col-lg-3 left-panel-menu-wrap w-20 fixed-wrap\">\n                            <ul class=\"vertical-menu\">\n                              <li *ngIf=\"roleId == 2\"><a routerLink=\"/govDashboard\" class=\"active\"><span class=\"db-icon\"></span>{{'HOME.Dashboard' | translate}}</a></li>\n                              <li *ngIf=\"roleId == 2\"><a routerLink=\"/govLgManagement\"><span class=\"db-icon\"></span>{{'HOME.LG_Management' | translate}}</a></li>\n                              <li *ngIf=\"roleId == 2\"><a routerLink=\"/governmentpendingtasks\"><span class=\"db-icon\"></span>{{'HOME.Pending_Tasks' | translate}}</a></li>\n                              <li *ngIf=\"roleId == 2\"><a routerLink=\"/governmentaccountmanagement\"><span class=\"db-icon\"></span>Account Management</a></li>\n                            </ul>\n                          </div>-->\n                              <div class=\"col-12 col-sm-9 col-md-9 col-lg-9 padding-null scroll-wrap\">\n                                <!-- <div class=\"white-area\">\n                                  <div class=\"user-area\">\n                                    <span class=\"user-img-wrap\"><img src=\"../../assets/images/user.png\" alt=\"image\"\n                                        class=\"user-img\"></span><span>Abdulla Ahmad</span>\n                                  </div>\n                                  <div class=\"clear\"></div>\n                                </div> -->\n                               \n                                <div class=\"grey-bg\">\n                                  <section class=\"design-process-section\" id=\"process-tab\">\n                                    <div>\n                                      <div>\n                                        <div>\n                                          <!-- Tab panes -->\n                                          <div class=\"tab-content\">\n                                            <div role=\"tabpanel\" class=\"tab-pane active\" id=\"discover\">\n                                              <div class=\"design-process-content\">\n                                                <!--Top piechart area-->\n                                                <div class=\"row pichart-area\">\n                                                  <div class=\"col-12 col-sm-12 col-md-12 col-lg-8\">\n                                                  <ul class=\"dashboard-list-left\">\n                                                    <li class=\"border-green\"><span class=\"dashboard-list-left-big-txt\">{{ActiveLG}}</span><span class=\"dashboard-list-left-small-txt\">{{'HOME.Active_Letter_Guarantees' | translate}}</span></li>\n                                                    <li class=\"border-bluish-green\"><span class=\"dashboard-list-left-big-txt\">{{ExpiredLG}}</span><span class=\"dashboard-list-left-small-txt\">{{'HOME.Expired_Letter_Guarantees' | translate}}</span></li>\n                                                    <li class=\"border-blue\"><span class=\"dashboard-list-left-big-txt\">{{PendingLG}}</span><span class=\"dashboard-list-left-small-txt\">{{'HOME.Pending_Letter_Guarantees' | translate}}</span></li>\n                                                    <li class=\"border-blue\"><span class=\"dashboard-list-left-big-txt\">{{PendingApprovalLG}}</span><span class=\"dashboard-list-left-small-txt\">{{'HOME.Pending_Approval' | translate}}</span></li>\n                                                </ul>\n                                             </div>\n                                                  <!--Pie chart-->\n                                                  <div *ngIf=\"pieChartLabels?.length > 0\" class=\"col-12 col-sm-12 col-md-12 col-lg-4\">\n                                                    <div class=\"chart-wrapper\">\n                                                      <canvas baseChart \n                                                        height=\"130\"\n                                                        width=\"130\"\n                                                        [chartType]=\"pieChartType\"\n                                                        [options]=\"pieChartOptions\"\n                                                        [plugins]=\"pieChartPlugins\"\n                                                        [data]=\"pieChartData\" \n                                                        [labels]=\"pieChartLabels\" \n                                                        [colors]=\"pieChartColors\" \n                                                        [legend]=\"pieChartLegend\">\n                                                      </canvas>\n                                                    </div>\n                                                  </div>\n                                                  <!--pie chart-->\n                                                </div>\n                                                <!--/Top piechart area-->\n                                                <form>\n                                                  <div class=\"row\">\n                                                    <div class=\"col-sm-12\">\n                                                      <div class=\"kt-portlet\">\n                                                        <div class=\"kt-portlet__head\">\n                                                          <div class=\"kt-portlet__head-label\">\n                                                            <h3 class=\"kt-portlet__head-title\">\n                                                              {{'HOME.Active_letters_guarantee' | translate}}\n                                                            </h3>\n                                                          </div>\n                                                        </div>\n                                                        <!--begin::Form-->\n                                                        <div class=\"kt-form kt-form--label-right\">\n                                                          <div class=\"kt-portlet__body\">\n                                                            <div class=\"container\">\n                                                              <div class=\"row\">\n                                                               <div class=\"col-md-12\">\n                                                                  <div class=\"kt-portlet no-shadow\">\n                                                                    <div class=\"new-blue-table1\">\n                                                                      <div class=\"table-responsive\">\n                                                                      <div *ngIf=\"this.translate.currentLang == 'en'\">\n                                                                      <div *ngIf=\"LGLists?.length > 0; then thenBlock else elseBlock\"> </div>\n                                                                          <ng-template #thenBlock>\n                                                                            <table datatable [dtOptions]=\"dtOptions\" class=\"table table-bordered table-striped table-hover\">\n                                                                              <thead>\n                                                                                <tr>\n                                                                                  <th class=\"table-col-7\">#</th>\n                                                                                  <th class=\"\">{{'HOME.LG_Number' | translate}}</th>\n                                                                                  <th class=\"\">{{'HOME.LG_amount' | translate}}</th>\n                                                                                  <th class=\"\">{{'HOME.Beneficiary' | translate}}</th>\n                                                                                  <th class=\"\">{{'HOME.Bank' | translate}}</th>\n                                                                                  <th class=\"\">{{'HOME.LG_TYPE' | translate}}</th>\n                                                                                  <th class=\"\">{{'HOME.LG_Status' | translate}}</th>\n                                                                                  <th class=\"\">{{'HOME.Start_Date' | translate}}</th>\n                                                                                  <th class=\"\">{{'HOME.End_Date' | translate}}</th>\n                                                                              </tr>\n                                                                              </thead>\n                                                                              <tbody>\n                                                                              <tr *ngFor=\"let LGList of LGLists; let i = index \" (click)=\"RowSelected(LGList)\">\n                                                                                <td>{{i+1}}</td>\n                                                                                <td>{{LGList.lg_no}}</td>\n                                                                                <td>{{LGList.lG_amount}}</td>\n                                                                                <td>{{LGList.beneficiary_name}}</td>\n                                                                                <td>{{LGList.bank_name}}</td>\n                                                                                <td>{{LGList.lg_type}}</td>\n                                                                                <td>{{LGList.status}}</td>\n                                                                                <td>{{LGList.start_date}}</td>\n                                                                                <td>{{LGList.end_date}}</td>\n                                                                              </tr>\n                                                                              </tbody>\n                                                                          </table>\n                                                                          </ng-template>\n            \n                                                                          <ng-template #elseBlock>\n                                                                            <table datatable [dtOptions]=\"dtOptions\" class=\"table table-bordered table-striped table-hover\">\n                                                                              <thead>\n                                                                                <tr>\n                                                                                <th class=\"table-col-7\">#</th>\n                                                                                <th class=\"\">{{'HOME.LG_Number' | translate}}</th>\n                                                                                <th class=\"\">{{'HOME.LG_amount' | translate}}</th>\n                                                                                <th class=\"\">{{'HOME.Beneficiary' | translate}}</th>\n                                                                                <th class=\"\">{{'HOME.Bank' | translate}}</th>\n                                                                                <th class=\"\">{{'HOME.LG_TYPE' | translate}}</th>\n                                                                                <th class=\"\">{{'HOME.LG_Status' | translate}}</th>\n                                                                                <th class=\"\">{{'HOME.Start_Date' | translate}}</th>\n                                                                                <th class=\"\">{{'HOME.End_Date' | translate}}</th>\n                                                                              </tr>\n                                                                              </thead>\n                                                                              <tbody>\n                                                                                <tr *ngFor=\"let LGList of LGLists; let i = index \" (click)=\"RowSelected(LGList)\">\n                                                                                  <td>{{i+1}}</td>\n                                                                                  <td>{{LGList.lg_no}}</td>\n                                                                                  <td>{{LGList.lG_amount}}</td>\n                                                                                  <td>{{LGList.beneficiary_name}}</td>\n                                                                                  <td>{{LGList.bank_name}}</td>\n                                                                                  <td>{{LGList.lg_type}}</td>\n                                                                                  <td>{{LGList.status}}</td>\n                                                                                  <td>{{LGList.start_date}}</td>\n                                                                                  <td>{{LGList.end_date}}</td>\n                                                                                </tr>\n                                                                              </tbody>\n                                                                          </table>\n                                                                          </ng-template>\n                                                                        </div>\n\n                                                                        <div *ngIf=\"this.translate.currentLang == 'ar'\">\n                                                                          <div *ngIf=\"LGLists?.length > 0; then thenBlock else elseBlock\"> </div>\n                                                                              <ng-template #thenBlock>\n                                                                                <table datatable [dtOptions]=\"dtOptionsAR\" class=\"table table-bordered table-striped table-hover\">\n                                                                                  <thead>\n                                                                                    <tr>\n                                                                                      <th class=\"table-col-7\">#</th>\n                                                                                      <th class=\"\">{{'HOME.LG_Number' | translate}}</th>\n                                                                                      <th class=\"\">{{'HOME.LG_amount' | translate}}</th>\n                                                                                      <th class=\"\">{{'HOME.Beneficiary' | translate}}</th>\n                                                                                      <th class=\"\">{{'HOME.Bank' | translate}}</th>\n                                                                                      <th class=\"\">{{'HOME.LG_TYPE' | translate}}</th>\n                                                                                      <th class=\"\">{{'HOME.LG_Status' | translate}}</th>\n                                                                                      <th class=\"\">{{'HOME.Start_Date' | translate}}</th>\n                                                                                      <th class=\"\">{{'HOME.End_Date' | translate}}</th>\n                                                                                  </tr>\n                                                                                  </thead>\n                                                                                  <tbody>\n                                                                                  <tr *ngFor=\"let LGList of LGLists; let i = index \" (click)=\"RowSelected(LGList)\">\n                                                                                    <td>{{i+1}}</td>\n                                                                                    <td>{{LGList.lg_no}}</td>\n                                                                                    <td>{{LGList.lG_amount}}</td>\n                                                                                    <td>{{LGList.beneficiary_name}}</td>\n                                                                                    <td>{{LGList.bank_name}}</td>\n                                                                                    <td>{{LGList.lg_type}}</td>\n                                                                                    <td>{{LGList.status}}</td>\n                                                                                    <td>{{LGList.start_date}}</td>\n                                                                                    <td>{{LGList.end_date}}</td>\n                                                                                  </tr>\n                                                                                  </tbody>\n                                                                              </table>\n                                                                              </ng-template>\n                \n                                                                              <ng-template #elseBlock>\n                                                                                <table datatable [dtOptions]=\"dtOptionsAR\" class=\"table table-bordered table-striped table-hover\">\n                                                                                  <thead>\n                                                                                    <tr>\n                                                                                    <th class=\"table-col-7\">#</th>\n                                                                                    <th class=\"\">{{'HOME.LG_Number' | translate}}</th>\n                                                                                    <th class=\"\">{{'HOME.LG_amount' | translate}}</th>\n                                                                                    <th class=\"\">{{'HOME.Beneficiary' | translate}}</th>\n                                                                                    <th class=\"\">{{'HOME.Bank' | translate}}</th>\n                                                                                    <th class=\"\">{{'HOME.LG_TYPE' | translate}}</th>\n                                                                                    <th class=\"\">{{'HOME.LG_Status' | translate}}</th>\n                                                                                    <th class=\"\">{{'HOME.Start_Date' | translate}}</th>\n                                                                                    <th class=\"\">{{'HOME.End_Date' | translate}}</th>\n                                                                                  </tr>\n                                                                                  </thead>\n                                                                                  <tbody>\n                                                                                    <tr *ngFor=\"let LGList of LGLists; let i = index \" (click)=\"RowSelected(LGList)\">\n                                                                                      <td>{{i+1}}</td>\n                                                                                      <td>{{LGList.lg_no}}</td>\n                                                                                      <td>{{LGList.lG_amount}}</td>\n                                                                                      <td>{{LGList.beneficiary_name}}</td>\n                                                                                      <td>{{LGList.bank_name}}</td>\n                                                                                      <td>{{LGList.lg_type}}</td>\n                                                                                      <td>{{LGList.status}}</td>\n                                                                                      <td>{{LGList.start_date}}</td>\n                                                                                      <td>{{LGList.end_date}}</td>\n                                                                                    </tr>\n                                                                                  </tbody>\n                                                                              </table>\n                                                                              </ng-template>\n                                                                            </div>\n                                                                      </div>\n                                                                    </div>\n                                                                  </div>\n                                                                </div>\n                                                              </div>\n                                                            </div>\n                                                          </div>\n                                                        </div>\n                                                      </div>\n                                                    </div>\n                                                  </div>\n                                                </form>\n                                              </div>\n                                            </div>\n                                          </div>\n                                        </div>\n                                      </div>\n                                    </div>\n                                  </section>\n                                </div>\n                              </div>\n                            </div>\n                            <!--New Design Here-->\n                          </div>\n                        </div>\n                        <!--===========================\n                                      End Content\n                                      ============================-->\n        \n  <!--begin::Global Theme Bundle(used by all pages) -->\n  <script src=\"../../assets/js/plugins.bundle.js\" type=\"text/javascript\"></script>\n  <!-- end::Body -->\n\n");

/***/ }),

/***/ "./node_modules/raw-loader/dist/cjs.js!./src/app/gov-lg-details/gov-lg-details.component.html":
/*!****************************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/gov-lg-details/gov-lg-details.component.html ***!
  \****************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("\n\n          <!--===========================\n                    Start Content\n                    ============================-->\n                    <div class=\"pt-0 kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor kt-margin-top-50\">\n                      <div class=\"kt-container\">\n              <!--New Design Here-->\n              <div class=\"row\">\n                <app-sidemenu></app-sidemenu>\n                <!--<div class=\"col-12 col-sm-3 col-md-3 col-lg-3 left-panel-menu-wrap w-20 fixed-wrap\">\n\n                  <ul class=\"vertical-menu\">\n                    <li *ngIf=\"roleId == 2\"><a routerLink=\"/govDashboard\"><span class=\"db-icon\"></span>{{'HOME.Dashboard' | translate}}</a></li>\n                    <li *ngIf=\"roleId == 2\"><a routerLink=\"/govLgManagement\" class=\"active\"><span class=\"db-icon\"></span>{{'HOME.LG_Management' | translate}}</a></li>\n                    <li *ngIf=\"roleId == 2\"><a routerLink=\"/governmentpendingtasks\"><span class=\"db-icon\"></span>{{'HOME.Pending_Tasks' | translate}}</a></li>\n                  </ul>\n                </div>-->\n                <div class=\"col-12 col-sm-9 col-md-9 col-lg-9 padding-null scroll-wrap\">\n\n                  <div class=\"grey-bg\">\n                    <section class=\"design-process-section\" id=\"process-tab\">\n                      <div>\n                        <div>\n                          <div>\n                            <div class=\"text-left1\">\n                              <h3 class=\"kt-login__title pt-3 m-0 mb-30\">{{'HOME.LG_DETAILS' | translate}}</h3>\n                            </div>\n                           \n                            <!-- Tab panes -->\n                            <div class=\"tab-content\">\n                              <div role=\"tabpanel\" class=\"tab-pane active\" id=\"discover\">\n                                <div class=\"design-process-content\">\n                                  <form [formGroup]=\"submitLGIssuanceApproval\">\n                                    <div class=\"row\">\n                                      <div *ngIf=\"isalertMsgforAmendmentStatus\" class=\"col-sm-12\">\n                                        <div class=\"pop-block\">\n                                          <div class=\"blue-block\"><img src=\"../../assets/images/alert.png\"\n                                              alt=\"alert-icon\" class=\"alert-icon\"></div>\n                                          <p>{{alertMsgforPrivateLGApproval}}</p>\n                                          <div class=\"clearfix\"></div>\n                                        </div>\n                                      </div>\n                                      <div class=\"col-sm-12\">\n                                        <div class=\"kt-portlet\">\n                                          <div class=\"kt-portlet__head\">\n                                            <div class=\"kt-portlet__head-label\">\n                                              <h3 class=\"kt-portlet__head-title\">\n                                                {{'HOME.LG_DETAILS' | translate}}\n                                              </h3>\n                                            </div>\n                                          </div>\n\n                                          <div class=\"kt-form kt-form--label-right\">\n                                            <div class=\"kt-portlet__body\">\n                                              <div class=\"container\">\n                                                <div class=\"row\">\n                                                  \n                                                  <div class=\"col-md-6\">\n                                                    <div class=\"form-group margin-bottom-10\">\n                                                      <label for=\"lg-type\" class=\"col-form-label\">Request ID <em\n                                                          style=\"font-style: normal;\"\n                                                          class=\"text-danger-black\">*</em></label>\n                                                      <input class=\"form-control col-md-9 profile-txt1\" type=\"text\"\n                                                        value=\"\" id=\"\" readonly formControlName=\"requestId\">\n                                                    </div>\n                                                  </div>\n                                                  <div class=\"col-md-6\">\n                                                    <div class=\"form-group margin-bottom-10\">\n                                                      <label for=\"lg-type\" class=\"col-form-label\">{{'HOME.LG_Number' | translate}}<em\n                                                          style=\"font-style: normal;\"\n                                                          class=\"text-danger-black\">*</em></label>\n                                                      <input class=\"form-control col-md-9 profile-txt1\" type=\"text\"\n                                                        value=\"\" id=\"\" readonly formControlName=\"LGNumber\">\n                                                    </div>\n                                                  </div>\n                                                  <div class=\"col-md-6\">\n                                                    <div class=\"form-group margin-bottom-10\">\n                                                      <label for=\"lg-type\" class=\"col-form-label\">{{'HOME.LG_TYPE' | translate}} <em\n                                                          style=\"font-style: normal;\"\n                                                          class=\"text-danger-black\">*</em></label>\n                                                      <input class=\"form-control col-md-9 profile-txt1\" type=\"text\"\n                                                        value=\"\" id=\"\" readonly formControlName=\"LGType\">\n                                                    </div>\n                                                  </div>\n                                                  <div class=\"col-md-6\">\n                                                    <div class=\"form-group margin-bottom-10\">\n                                                      <label for=\"lg-type\" class=\"col-form-label\">{{'HOME.WRITE_UP' | translate}}<em\n                                                          style=\"font-style: normal;\"\n                                                          class=\"text-danger-black\">*</em></label>\n                                                      <input class=\"form-control col-md-9 profile-txt1\" type=\"text\"\n                                                        value=\"\" id=\"\" readonly formControlName=\"writeUpType\">\n                                                    </div>\n                                                  </div>\n                                                  <div class=\"col-md-6\">\n                                                    <div class=\"form-group margin-bottom-10\">\n                                                      <label for=\"lg-type\" class=\"col-form-label\">{{'HOME.AMOUNT' | translate}} <em\n                                                          style=\"font-style: normal;\"\n                                                          class=\"text-danger-black\">*</em></label>\n                                                      <input class=\"form-control col-md-9 profile-txt1\" type=\"text\"\n                                                        value=\"\" id=\"\" readonly formControlName=\"Amount\">\n                                                    </div>\n                                                  </div>\n                                                  <div class=\"col-md-6\">\n                                                    <div class=\"form-group margin-bottom-10\">\n                                                      <label for=\"lg-type\" class=\"col-form-label\">{{'HOME.AMOUNT_WORDS' | translate}}<em\n                                                          style=\"font-style: normal;\"\n                                                          class=\"text-danger-black\">*</em></label>\n                                                      <input class=\"form-control col-md-9 profile-txt1\" type=\"text\"\n                                                        value=\"\" id=\"\" readonly formControlName=\"amountInText\">\n                                                    </div>\n                                                  </div>\n\n                                                  <div class=\"col-md-6\">\n                                                    <div class=\"form-group margin-bottom-10\">\n                                                      <label for=\"lg-start-date\" class=\"col-form-label\">{{'HOME.LG_START_DATE' | translate}}\n                                                        <em style=\"font-style: normal;\"\n                                                          class=\"text-danger-black\">*</em></label>\n\n                                                      <!-- <p-calendar [style]=\"{'width':'75%'}\" [inputStyle]=\"{'width':'100%'}\" formControlName=\"LGStartDate\"></p-calendar> -->\n                                                      <input class=\"form-control col-md-9 profile-txt1\" type=\"text\"\n                                                        value=\"\" id=\"\" readonly formControlName=\"LGStartDate\">\n\n                                                    </div>\n                                                  </div>\n\n                                                  <div class=\" col-md-6\">\n                                                    <div class=\" form-group margin-bottom-10\">\n                                                      <label for=\"lg-end-date\" class=\"col-form-label\">{{'HOME.LG_END_DATE' | translate}} <em\n                                                          style=\"font-style: normal;\"\n                                                          class=\"text-danger-black\">*</em></label>\n\n                                                      <!-- <p-calendar [style]=\"{'width':'75%'}\" [inputStyle]=\"{'width':'100%'}\" formControlName=\"LGEndDate\"></p-calendar> -->\n                                                      <input class=\"form-control col-md-9 profile-txt1\" type=\"text\"\n                                                        value=\"\" id=\"\" readonly formControlName=\"LGEndDate\">\n                                                    </div>\n                                                  </div>\n\n                                                  <div class=\"col-md-6\">\n                                                    <div class=\"form-group margin-bottom-10\">\n                                                      <label for=\"amount\" class=\"col-form-label\">{{'HOME.Issue_Date' | translate}} <em\n                                                          style=\"font-style: normal;\"\n                                                          class=\"text-danger-black\">*</em></label>\n                                                      <input class=\"form-control col-md-9 profile-txt1\" type=\"text\"\n                                                        value=\"\" id=\"\" readonly formControlName=\"LGIssueDate\">\n                                                    </div>\n                                                  </div>\n\n                                                  <div class=\"col-md-6\">\n                                                    <div class=\"form-group margin-bottom-10\">\n                                                      <label for=\"currency\" class=\"col-form-label\">{{'HOME.CURRENCY' | translate}} <em\n                                                          style=\"font-style: normal;\"\n                                                          class=\"text-danger-black\">*</em></label>\n                                                      <input class=\"form-control col-md-9 profile-txt1\" type=\"text\"\n                                                        value=\"\" id=\"\" readonly formControlName=\"currency\">\n                                                    </div>\n                                                  </div>\n\n                                                  <div class=\"col-md-6\" *ngIf=\"LGType === 'Zakat Guarantee Bond'\">\n                                                    <div class=\"form-group margin-bottom-10\">\n                                                      <label for=\"amount\" class=\"col-form-label\">{{'HOME.ZAKAT_START_DATE' | translate}}\n                                                      </label>\n                                                      <input class=\"form-control col-md-9 profile-txt1\" type=\"text\"\n                                                        value=\"\" id=\"\" readonly formControlName=\"zakatStartDate\">\n                                                    </div>\n                                                  </div>\n\n                                                  <div class=\"col-md-6\" *ngIf=\"LGType === 'Zakat Guarantee Bond'\">\n                                                    <div class=\"form-group margin-bottom-10\">\n                                                      <label for=\"amount\" class=\"col-form-label\">{{'HOME.ZAKAT_END_DATE' | translate}}\n                                                      </label>\n                                                      <input class=\"form-control col-md-9 profile-txt1\" type=\"text\"\n                                                        value=\"\" id=\"\" readonly formControlName=\"zakatEndDate\">\n                                                    </div>\n                                                  </div>\n\n                                                  <div class=\"col-md-6\">\n                                                    <div class=\"form-group margin-bottom-10\">\n                                                      <label for=\"amount\" class=\"col-form-label\">{{'HOME.PROJECT_NAME' | translate}}</label>\n                                                      <input class=\"form-control col-md-9 profile-txt1\" type=\"text\"\n                                                        value=\"\" id=\"\" readonly formControlName=\"projectName\">\n                                                    </div>\n                                                  </div>\n\n                                                  <div class=\"col-md-6\">\n                                                    <div class=\"form-group margin-bottom-10\">\n                                                      <label for=\"amount\" class=\"col-form-label\">{{'HOME.PROJECT_NUMBER' | translate}}</label>\n                                                      <input class=\"form-control col-md-9 profile-txt1\" type=\"text\"\n                                                        value=\"\" id=\"\" readonly formControlName=\"projectId\">\n                                                    </div>\n                                                  </div>\n\n                                                  <div class=\"col-md-6\">\n                                                    <div class=\"form-group margin-bottom-10\">\n                                                      <label for=\"amount\" class=\"col-form-label\">{{'HOME.PURPOSE_OF_BOND' | translate}}<em\n                                                          style=\"font-style: normal;\"\n                                                          class=\"text-danger-black\">*</em></label>\n                                                      <input class=\"form-control col-md-9 profile-txt1\" type=\"text\"\n                                                        value=\"\" id=\"\" readonly formControlName=\"purposeOfBond\">\n                                                    </div>\n                                                  </div>\n\n                                                  <div class=\"col-md-6\" *ngIf=\"LGType === 'Custom Guarantee Bond'\">\n                                                    <div class=\"form-group margin-bottom-10\">\n                                                      <label for=\"amount\" class=\"col-form-label\">{{'HOME.BAYAN_NUMBER' | translate}}</label>\n                                                      <input class=\"form-control col-md-9 profile-txt1\" type=\"text\"\n                                                        value=\"\" id=\"\" readonly formControlName=\"byanNo\">\n                                                    </div>\n                                                  </div>\n                                                  <div class=\"col-md-12\" style=\"text-align: left;\">\n                                                    <div class=\"checkbox chk-margin-top\">\n                                                      <label class=\"container-checkbox\"> {{'HOME.ACCOUNT_OF_CONTRACT_PROCESSED' | translate}}\n                                                        <input type=\"checkbox\" \n                                                          formControlName=\"ac_of_contract\" disabled=true>\n                                                        <span class=\"checkmark\"></span>\n                                                      </label>\n                                                    </div>\n                                                  </div>\n\n                                                  <div class=\"col-md-12\" *ngIf=\"isEditTnC\">\n                                                    <div class=\"form-group margin-bottom-10\">\n                                                      <label for=\"terms-and-condition\" class=\"col-form-label\">{{'HOME.TERMS_AND_CONDITIONS' | translate}}<em\n                                                        style=\"font-style: normal;\"\n                                                        class=\"text-danger-black\">*</em></label>\n                                                      <div class=\"terms-wrap\" id=\"editable\">\n                                                        <!-- <textarea rows=\"10\" cols=\"100\"\n                                                          formControlName=\"TermsAndCondContent\" [readonly]=\"!isEditTnC\"\n                                                          [ngStyle]=\"{'background-color':isEditTnC === true ? '#fff' : '#efefef'}\">\n                                                          </textarea> -->\n                                                        <textarea rows=\"10\" cols=\"100\"\n                                                          formControlName=\"TermsAndCondContent\"\n                                                          [(ngModel)]=\"TermsAndCondContent\" [readonly]=\"!isEditTnC\"\n                                                          [ngStyle]=\"styleObject()\">\n                                                          </textarea>\n\n                                                        <div *ngIf=\"isEditTnC\">\n                                                          <button type=\"button\" class=\"btn btn-success margin-top-10\"\n                                                            id=\"editBtn1\" (click)=\"updateTnC()\">{{'HOME.Update' | translate}}</button>\n                                                        </div>\n\n                                                      </div>\n                                                    </div>\n                                                  </div>\n\n                                                  <div class=\"col-md-12\" *ngIf=\"!isEditTnC\">\n                                                    <div class=\"form-group margin-bottom-10\">\n                                                      <label for=\"terms-and-condition\" class=\"col-form-label\">{{'HOME.TERMS_AND_CONDITIONS' | translate}}<em\n                                                        style=\"font-style: normal;\"\n                                                        class=\"text-danger-black\">*</em></label>\n                                                      <div  class=\"terms-wrap text-wrap-bordered\">\n                                                          <textarea rows=\"10\" cols=\"100\" formControlName=\"TermsAndCondContent\" readonly [ngStyle]=\"styleObject()\">\n                                                          </textarea>\n                                                      </div>\n                                                      <div class=\"checkbox margin-top-10\">\n                                                        <label class=\"container-checkbox\"> {{'HOME.TERMS_AND_CONDITIONS' | translate}}\n                                                          <input type=\"checkbox\" [(ngModel)]=\"agree_tag\"\n                                                            formControlName=\"agree_tag\" disabled=true >\n                                                          <span class=\"checkmark\"></span>\n                                                        </label>\n                                                      </div>\n                                                    </div>\n                                                  </div>\n\n                                                </div>\n\n                                              </div>\n                                            </div>\n\n                                          </div>\n                                        </div>\n\n                                        <div class=\"kt-portlet__foot\" *ngIf=\"isEnableButtons\">\n                                          <div class=\"kt-form__actions\">\n                                            <div class=\"row\">\n                                              <div class=\"col-12\">\n                                                <div class=\"btn-wrap\">\n                                                  <button type=\"button\" class=\"btn btn-red btn-margin-2\"\n                                                    (click)=\"rejectLGIssuanceApprovalData()\">{{'HOME.Reject' | translate}}</button>\n                                                  <button type=\"button\" class=\"btn btn-success btn-margin-2\"\n                                                    (click)=\"acceptLGIssuanceApprovalData()\">{{'HOME.Accept' | translate}}</button>\n                                                </div>\n\n                                              </div>\n                                            </div>\n                                          </div>\n                                        </div>\n                                        <div class=\"kt-portlet__foot\" *ngIf=\"isEnableGovButtons\">\n                                          <div class=\"kt-form__actions\">\n                                            <div class=\"row\">\n                                              <div class=\"col-12\">\n                                                <div class=\"btn-wrap\">\n                                                  <button type=\"button\" class=\"btn btn-gry btn-margin-2\"\n                                                    (click)=\"resetData()\">{{'HOME.CANCEL' | translate}}</button>\n                                                  <button type=\"button\" class=\"btn btn-success btn-margin-2\"\n                                                    [disabled]=\"isDisablesendBackButton\"\n                                                    (click)=\"sendBackLGIssuanceApprovalData()\">{{'HOME.Send_back' | translate}}</button>\n                                                  <button type=\"button\" class=\"btn btn-gry btn-margin-2\"\n                                                    (click)=\"editLGIssuanceApprovalData()\">{{'HOME.Edit' | translate}}</button>\n                                                  <button type=\"button\" class=\"btn btn-success btn-margin-2\"\n                                                    [disabled]=\"isDisabledApprovedButton\"\n                                                    (click)=\"submitLGIssuanceApprovalData()\">{{'HOME.Approve' | translate}}</button>\n                                                </div>\n\n                                              </div>\n                                            </div>\n                                          </div>\n                                        </div>\n                                        <div class=\"kt-portlet__foot\" *ngIf=\"nsAcceptButton\">\n                                          <div class=\"kt-form__actions\">\n                                            <div class=\"row\">\n                                              <div class=\"col-12\">\n                                                <div class=\"btn-wrap\">\n                                                  <button type=\"button\" class=\"btn btn-gry btn-margin-2\"\n                                                    (click)=\"resetData()\">{{'HOME.CANCEL' | translate}}</button>\n                                                  <!-- <button type=\"button\" class=\"btn btn-success btn-margin-2\"\n                                                    [disabled]=\"isDisablesendBackButton\"\n                                                    (click)=\"sendBackLGIssuanceApprovalData()\">Send Back</button>\n                                                  <button type=\"button\" class=\"btn btn-gry btn-margin-2\"\n                                                    (click)=\"editLGIssuanceApprovalData()\">Edit</button> -->\n                                                  <button type=\"button\" class=\"btn btn-success btn-margin-2\"\n                                                    [disabled]=\"isDisabledApprovedButton\"\n                                                    (click)=\"submitLGIssuanceApprovalData()\">{{'HOME.Approve' | translate}}</button>\n                                                </div>\n\n                                              </div>\n                                            </div>\n                                          </div>\n                                        </div>\n                                      </div>\n                                      <!--/Lg Details-->\n\n\n                                    </div>\n\n\n                                      <!--Applicant Information-->\n\n                                      <div class=\"row\">\n                                        <div class=\"col-sm-12\">\n                                          <div class=\"kt-portlet\">\n                                            <div class=\"kt-portlet__head\">\n                                              <div class=\"kt-portlet__head-label\">\n                                                <h3 class=\"kt-portlet__head-title\">\n                                                {{'HOME.Applicant_Information' | translate}}\n                                                </h3>\n                                              </div>\n                                            </div>\n                                            \n                                            <div class=\"kt-form kt-form--label-right\">\n                                              <div class=\"kt-portlet__body\">\n                                              <div class=\"container\">\n\n                                                <div class=\"row\">\n                                                  <div class=\"col-md-6\">\n                                                    <div class=\"form-group margin-bottom-10\">\n                                                    <label for=\"lg-type\" class=\"col-form-label\"> {{'HOME.CRN' | translate}}<em\n                                                      style=\"font-style: normal;\"\n                                                      class=\"text-danger-black\"></em></label>\n                                                    <input class=\"form-control col-md-9 profile-txt1\" type=\"text\"\n                                                      value=\"{{Applicant_CRN}}\" id=\"\" readonly formControlName=\"Applicant_CRN\">\n                                                    </div>\n                                                  </div>\n                                                  <div class=\"col-md-6\">\n                                                    <div class=\"form-group margin-bottom-10\">\n                                                    <label for=\"lg-type\" class=\"col-form-label\">{{'HOME.Entity_name_Arabic' | translate}} <em\n                                                      style=\"font-style: normal;\"\n                                                      class=\"text-danger-black\"></em></label>\n                                                    <input class=\"form-control col-md-9 profile-txt1\" type=\"text\"\n                                                      value=\"{{Applicant_Entity_name_Arabic}}\" id=\"\" readonly formControlName=\"Applicant_Entity_name_Arabic\">\n                                                    </div>\n                                                  </div>\n                                                </div>\n                                                <div class=\"row\">\n                                                  <div class=\"col-md-6\">\n                                                    <div class=\"form-group margin-bottom-10\">\n                                                    <label for=\"lg-type\" class=\"col-form-label\"> {{'HOME.Selected_Bank' | translate}}<em\n                                                      style=\"font-style: normal;\"\n                                                      class=\"text-danger-black\"></em></label>\n                                                    <input class=\"form-control col-md-9 profile-txt1\" type=\"text\"\n                                                      value=\"{{Applicant_Selected_Bank}}\" id=\"\" readonly formControlName=\"Applicant_Selected_Bank\">\n                                                    </div>\n                                                  </div>\n                                                  <div class=\"col-md-6\">\n                                                    <div class=\"form-group margin-bottom-10\">\n                                                    <label for=\"lg-type\" class=\"col-form-label\">{{'HOME.Selected_IBAN' | translate}} <em\n                                                      style=\"font-style: normal;\"\n                                                      class=\"text-danger-black\"></em></label>\n                                                    <input class=\"form-control col-md-9 profile-txt1\" type=\"text\"\n                                                      value=\"{{Applicant_Selected_IBAN}}\" id=\"\" readonly formControlName=\"Applicant_Selected_IBAN\">\n                                                    </div>\n                                                  </div>\n                                                </div>\n                                                <div class=\"row\">\n                                                  <div class=\"col-md-6\">\n                                                    <div class=\"form-group margin-bottom-10\">\n                                                    <label for=\"lg-type\" class=\"col-form-label\"> {{'HOME.CR_type' | translate}}<em\n                                                      style=\"font-style: normal;\"\n                                                      class=\"text-danger-black\"></em></label>\n                                                    <input class=\"form-control col-md-9 profile-txt1\" type=\"text\"\n                                                      value=\"{{Applicant_CR_type}}\" id=\"\" readonly formControlName=\"Applicant_CR_type\">\n                                                    </div>\n                                                  </div>\n                                                  <div class=\"col-md-6\">\n                                                    <div class=\"form-group margin-bottom-10\">\n                                                    <label for=\"lg-type\" class=\"col-form-label\">{{'HOME.CR_status' | translate}} <em\n                                                      style=\"font-style: normal;\"\n                                                      class=\"text-danger-black\"></em></label>\n                                                    <input class=\"form-control col-md-9 profile-txt1\" type=\"text\"\n                                                      value=\"{{Applicant_CR_status}}\" id=\"\" readonly formControlName=\"Applicant_CR_status\">\n                                                    </div>\n                                                  </div>\n                                                </div>\n                                                <div class=\"row\">\n                                                  <div class=\"col-md-6\">\n                                                    <div class=\"form-group margin-bottom-10\">\n                                                    <label for=\"lg-type\" class=\"col-form-label\"> {{'HOME.CR_Issue_Date' | translate}}<em\n                                                      style=\"font-style: normal;\"\n                                                      class=\"text-danger-black\"></em></label>\n                                                    <input class=\"form-control col-md-9 profile-txt1\" type=\"text\"\n                                                      value=\"{{Applicant_CR_Issue_Date}}\" id=\"\" readonly formControlName=\"Applicant_CR_Issue_Date\">\n                                                    </div>\n                                                  </div>\n                                                  <div class=\"col-md-6\">\n                                                    <div class=\"form-group margin-bottom-10\">\n                                                    <label for=\"lg-type\" class=\"col-form-label\">{{'HOME.CR_expiry_Date' | translate}} <em\n                                                      style=\"font-style: normal;\"\n                                                      class=\"text-danger-black\"></em></label>\n                                                    <input class=\"form-control col-md-9 profile-txt1\" type=\"text\"\n                                                      value=\"{{Applicant_CR_expiry_Date}}\" id=\"\" readonly formControlName=\"Applicant_CR_expiry_Date\">\n                                                    </div>\n                                                  </div>\n                                                </div>\n                                                <div class=\"row\">\n                                                  <div class=\"col-md-6\">\n                                                    <div class=\"form-group margin-bottom-10\">\n                                                    <label for=\"lg-type\" class=\"col-form-label\"> {{'HOME.Address' | translate}}<em\n                                                      style=\"font-style: normal;\"\n                                                      class=\"text-danger-black\"></em></label>\n                                                    <input class=\"form-control col-md-9 profile-txt1\" type=\"text\"\n                                                      value=\"{{Applicant_Address}}\" id=\"\" readonly formControlName=\"Applicant_Address\">\n                                                    </div>\n                                                  </div>\n                                                  <div class=\"col-md-6\">\n                                                    <div class=\"form-group margin-bottom-10\">\n                                                    <label for=\"lg-type\" class=\"col-form-label\">{{'HOME.City' | translate}} <em\n                                                      style=\"font-style: normal;\"\n                                                      class=\"text-danger-black\"></em></label>\n                                                    <input class=\"form-control col-md-9 profile-txt1\" type=\"text\"\n                                                      value=\"{{Applicant_City}}\" id=\"\" readonly formControlName=\"Applicant_City\">\n                                                    </div>\n                                                  </div>\n                                                </div>\n                                              </div>\n                                            </div>\n                                            </div>\n                                            \n                                          </div>\n                                        </div>\n                                      </div>\n                                      <!--Applicant Information-->\n\n\n\n                                      <!--Beneficiary Information-->\n                                      <div class=\"row\">\n                                        <div class=\"col-sm-12\">\n                                          <div class=\"kt-portlet\">\n                                            <div class=\"kt-portlet__head\">\n                                              <div class=\"kt-portlet__head-label\">\n                                                <h3 class=\"kt-portlet__head-title\">\n                                                {{'HOME.Beneficiary_Information' | translate}}\n                                                </h3>\n                                              </div>\n                                            </div>\n                                            \n                                            <div class=\"kt-form kt-form--label-right\">\n                                              <div class=\"kt-portlet__body\">\n                                              <div class=\"container\">\n                                                <div class=\"row\">\n                                                <div class=\"col-md-6\">\n                                                  <div class=\"form-group margin-bottom-10\">\n                                                  <label for=\"lg-type\" class=\"col-form-label\"> {{'HOME.Name' | translate}}<em\n                                                    style=\"font-style: normal;\"\n                                                    class=\"text-danger-black\"></em></label>\n                                                  <input class=\"form-control col-md-9 profile-txt1\" type=\"text\"\n                                                    value=\"\" id=\"\" readonly formControlName=\"Beneficiary_Name\">\n                                                  </div>\n                                                </div>\n                                                <div class=\"col-md-6\">\n                                                  <div class=\"form-group margin-bottom-10\">\n                                                  <label for=\"lg-type\" class=\"col-form-label\">{{'HOME.UID_or_CRN' | translate}} <em\n                                                    style=\"font-style: normal;\"\n                                                    class=\"text-danger-black\"></em></label>\n                                                  <input class=\"form-control col-md-9 profile-txt1\" type=\"text\"\n                                                    value=\"\" id=\"\" readonly formControlName=\"Beneficiary_UID_or_CRN\">\n                                                  </div>\n                                                </div>\n                                                </div>\n                                              </div>\n                                            </div>\n                                            </div>\n                                            \n                                          </div>\n                                        </div>\n                                      </div>\n\n\n                                      <!--Beneficiary Information-->\n\n                                      <!--LG History-->\n                                  <div class=\"row\" *ngIf=\"LG_History.length > 0\">\n                                    <div class=\"col-sm-12\">\n                                      <div class=\"kt-portlet\">\n                                        <div class=\"kt-portlet__head\">\n                                          <div class=\"kt-portlet__head-label\">\n                                            <h3 class=\"kt-portlet__head-title\">LG History</h3>\n                                          </div>\n                                        </div>\n                                        <div class=\"kt-form kt-form--label-right\">\n                                          <div class=\"kt-portlet__body\">\n                                          <div class=\"container\">\n                                            <div class=\"row\">\n                                              <div class=\"col-md-12\">\n                                                 <div class=\"kt-portlet no-shadow\">\n                                                   <div class=\"new-blue-table no-border\">\n                                                     <div class=\"table-responsive\">\n                                                        <table class=\"table table-bordered table-striped table-hover\">\n                                                          <thead>\n                                                            <tr>\n                                                              <th class=\"table-col-7\">#</th>\n                                                              <th class=\"\"> {{'HOME.LG_Number' | translate}}</th>\n                                                              <th class=\"\">Transaction ID</th>\n                                                              <th class=\"\">Changes</th>\n                                                              <th class=\"\">Old Value</th>\n                                                              <th class=\"\">New Value</th>\n                                                              <th class=\"\">Transaction date</th>\n                                                              <th class=\"\">Name</th>\n                                                            </tr>\n                                                          </thead>\n                                                          <tbody>\n                                                            <tr *ngFor=\"let History of LG_History; let i = index \">\n                                                            <td>{{i+1}}</td>\n                                                            <td>{{History.lg_no}}</td>\n                                                            <td>{{History.trans_id}}</td>\n                                                            <td>{{History.status}}</td>\n                                                            <td>{{History.old_Value}}</td>\n                                                            <td>{{History.new_value}}</td>\n                                                            <td>{{History.trans_date}}</td>\n                                                            <td>{{History.name}}</td>\n                                                            </tr>\n                                                          </tbody>\n                                                        </table>\n                                                     </div>\n                                                   </div>\n                                                 </div>\n                                               </div>\n                                             </div>\n                                          </div>\n                                        </div>\n                                        </div>\n                                      </div>\n                                    </div>\n                                  </div>\n\n\n                                <!-- LG History-->\n\n                                <!--Amend/confiscate/release Information-->\n                                <div class=\"row\" *ngIf=\"isACRpending\">\n\n                                  <div class=\"col-sm-12\" *ngIf=\"ACRpendingtype =='amend'\">\n                                    <div class=\"kt-portlet\">\n                                      <div class=\"kt-portlet__head\">\n                                        <div class=\"kt-portlet__head-label\">\n                                          <h3 class=\"kt-portlet__head-title\">\n                                            Amend Information\n                                          </h3>\n                                        </div>\n                                      </div>\n                                      \n                                      <div class=\"kt-form kt-form--label-right\">\n                                        <div class=\"kt-portlet__body\">\n                                        <div class=\"container\">\n                                          <div class=\"row\">\n                                            <div class=\"col-md-6\">\n                                              <div class=\"form-group margin-bottom-10\">\n                                              <label for=\"lg-type\" class=\"col-form-label\">Request ID<em\n                                                style=\"font-style: normal;\"\n                                                class=\"text-danger-black\"></em></label>\n                                              <input class=\"form-control col-md-9 profile-txt1\" type=\"text\"\n                                                value=\"\" id=\"\" readonly formControlName=\"Amendmend_request_id\">\n                                              </div>\n                                            </div>\n                                          \n                                          <div class=\"col-md-6\">\n                                            <div class=\"form-group margin-bottom-10\">\n                                            <label for=\"lg-type\" class=\"col-form-label\">Amount<em\n                                              style=\"font-style: normal;\"\n                                              class=\"text-danger-black\"></em></label>\n                                            <input class=\"form-control col-md-9 profile-txt1\" type=\"text\"\n                                              value=\"\" id=\"\" readonly formControlName=\"amendAmount\">\n                                            </div>\n                                          </div>\n                                          <div class=\"col-md-6\">\n                                            <div class=\"form-group margin-bottom-10\">\n                                            <label for=\"lg-type\" class=\"col-form-label\">LG end date<em\n                                              style=\"font-style: normal;\"\n                                              class=\"text-danger-black\"></em></label>\n                                            <input class=\"form-control col-md-9 profile-txt1\" type=\"text\"\n                                              value=\"\" id=\"\" readonly formControlName=\"amendLGenddate\">\n                                            </div>\n                                          </div>\n\n                                          <div class=\"col-md-12\" *ngIf=\"!isEditTnC\">\n                                            <div class=\"form-group margin-bottom-10\">\n                                              <label for=\"terms-and-condition\" class=\"col-form-label\">Write-up</label>\n                                              <div  class=\"terms-wrap text-wrap-bordered\">\n                                                  <textarea rows=\"10\" cols=\"100\" formControlName=\"amendWriteup\" readonly [ngStyle]=\"styleObject()\">\n                                                  </textarea>\n                                              </div>\n                                              \n                                            </div>\n                                          </div>\n\n                                          </div>\n                                        </div>\n                                      </div>\n                                      </div>\n                                      \n                                    </div>\n                                  </div>\n\n                                  <div class=\"col-sm-12\" *ngIf=\"ACRpendingtype =='confiscate'\">\n                                    <div class=\"kt-portlet\">\n                                      <div class=\"kt-portlet__head\">\n                                        <div class=\"kt-portlet__head-label\">\n                                          <h3 class=\"kt-portlet__head-title\">\n                                            Confiscate Information\n                                          </h3>\n                                        </div>\n                                      </div>\n                                      \n                                      <div class=\"kt-form kt-form--label-right\">\n                                        <div class=\"kt-portlet__body\">\n                                        <div class=\"container\">\n                                          <div class=\"row\">\n                                            <div class=\"col-md-6\">\n                                              <div class=\"form-group margin-bottom-10\">\n                                              <label for=\"lg-type\" class=\"col-form-label\">Request ID<em\n                                                style=\"font-style: normal;\"\n                                                class=\"text-danger-black\"></em></label>\n                                              <input class=\"form-control col-md-9 profile-txt1\" type=\"text\"\n                                                value=\"\" id=\"\" readonly formControlName=\"confiscate_request_id\">\n                                              </div>\n                                            </div>\n                                          <div class=\"col-md-6\">\n                                            <div class=\"form-group margin-bottom-10\">\n                                            <label for=\"lg-type\" class=\"col-form-label\">Bank Name<em\n                                              style=\"font-style: normal;\"\n                                              class=\"text-danger-black\"></em></label>\n                                            <input class=\"form-control col-md-9 profile-txt1\" type=\"text\"\n                                              value=\"\" id=\"\" readonly formControlName=\"confiscatebankName\">\n                                            </div>\n                                           </div>\n\n                                           <div class=\"col-md-6\">\n                                            <div class=\"form-group margin-bottom-10\">\n                                            <label for=\"lg-type\" class=\"col-form-label\">IBAN<em\n                                              style=\"font-style: normal;\"\n                                              class=\"text-danger-black\"></em></label>\n                                            <input class=\"form-control col-md-9 profile-txt1\" type=\"text\"\n                                              value=\"\" id=\"\" readonly formControlName=\"confiscateIBAN\">\n                                            </div>\n                                           </div>\n\n                                          <div class=\"col-md-12\">\n                                            <div class=\"form-group margin-bottom-10\">\n                                              <label for=\"terms-and-condition\" class=\"col-form-label\">Reason</label>\n                                              <div  class=\"terms-wrap text-wrap-bordered\">\n                                                  <textarea rows=\"10\" cols=\"100\" formControlName=\"confiscateReason\" readonly [ngStyle]=\"styleObject()\">\n                                                  </textarea>\n                                              </div>\n                                            </div>\n                                          </div>\n\n                                          <div class=\"col-md-12\" style=\"text-align:left;\">\n                                            <div class=\"checkbox margin-top-10\">\n                                              <label class=\"container-checkbox par-blu-txt\">Partial confiscation?\n                                                <input type=\"checkbox\" [(ngModel)]=\"partialConfiscation\"\n                                                  formControlName=\"partialConfiscation\" >\n                                                <span class=\"checkmark\"></span>\n                                              </label>\n                                            </div>\n                                          </div>\n                                          <div class=\"col-12 col-md-6\">\n                                            <div class=\"form-group margin-bottom-10\">\n                                              <label for=\"confiscation-amount\" class=\"col-form-label\">Confiscation amount</label>\n                                              <input class=\"form-control\" type=\"text\" value=\"\" id=\"\" readonly formControlName=\"confiscateAmount\">\n                                            </div>\n                                          </div>\n                                          </div>\n                                        </div>\n                                      </div>\n                                      </div>\n                                    </div>\n                                  </div>\n\n\n                                  <div class=\"col-sm-12\" *ngIf=\"ACRpendingtype =='release'\">\n                                    <div class=\"kt-portlet\">\n                                      <div class=\"kt-portlet__head\">\n                                        <div class=\"kt-portlet__head-label\">\n                                          <h3 class=\"kt-portlet__head-title\">\n                                            Release Information\n                                          </h3>\n                                        </div>\n                                      </div>\n                                      \n                                      <div class=\"kt-form kt-form--label-right\">\n                                        <div class=\"kt-portlet__body\">\n                                        <div class=\"container\">\n                                          <div class=\"row\">\n                                            <div class=\"col-md-6\">\n                                              <div class=\"form-group margin-bottom-10\">\n                                              <label for=\"lg-type\" class=\"col-form-label\">Request ID<em\n                                                style=\"font-style: normal;\"\n                                                class=\"text-danger-black\"></em></label>\n                                              <input class=\"form-control col-md-9 profile-txt1\" type=\"text\"\n                                                value=\"\" id=\"\" readonly formControlName=\"release_request_id\">\n                                              </div>\n                                            </div>\n                                            <div class=\"col-md-12\">\n                                              <div class=\"form-group margin-bottom-10\">\n                                                <label for=\"terms-and-condition\" class=\"col-form-label\">Reason</label>\n                                                <div  class=\"terms-wrap text-wrap-bordered\">\n                                                    <textarea rows=\"10\" cols=\"100\" formControlName=\"releaseReason\" readonly [ngStyle]=\"styleObject()\">\n                                                    </textarea>\n                                                </div>\n                                              </div>\n                                            </div>\n                                            <div class=\"col-md-12\" style=\"text-align:left;\">\n                                              <div class=\"checkbox margin-top-10\">\n                                                <label class=\"container-checkbox par-blu-txt\">Partial release?\n                                                  <input type=\"checkbox\" [(ngModel)]=\"partialRelease\"\n                                                    formControlName=\"partialRelease\" >\n                                                  <span class=\"checkmark\"></span>\n                                                </label>\n                                              </div>\n                                            </div>\n                                            <div class=\"col-12 col-md-6\">\n                                              <div class=\"form-group margin-bottom-10\">\n                                                <label for=\"confiscation-amount\" class=\"col-form-label\">Release amount</label>\n                                                <input class=\"form-control\" type=\"text\" value=\"\" id=\"\" readonly formControlName=\"releaseAmount\">\n                                              </div>\n                                            </div>\n                                          </div>\n                                        </div>\n                                      </div>\n                                      </div>\n                                    </div>\n                                  </div>\n\n                                </div>\n\n\n                                <!--Amend/confiscate/release Information-->\n\n\n                                <!-- Internal Amend/confiscate/release-->\n                                <div class=\"col-sm-12\" *ngIf=\"internalPendingType =='amendment_review' || internalPendingType =='amendment_approve'\">\n                                  <div class=\"kt-portlet\">\n                                    <div class=\"kt-portlet__head\">\n                                      <div class=\"kt-portlet__head-label\">\n                                        <h3 class=\"kt-portlet__head-title\">\n                                          Amend Information\n                                        </h3>\n                                      </div>\n                                    </div>\n                                    \n                                    <div class=\"kt-form kt-form--label-right\">\n                                      <div class=\"kt-portlet__body\">\n                                      <div class=\"container\">\n                                        <div class=\"row\">\n                                        <div class=\"col-md-6\">\n                                          <div class=\"form-group margin-bottom-10\">\n                                          <label for=\"lg-type\" class=\"col-form-label\">Request ID<em\n                                            style=\"font-style: normal;\"\n                                            class=\"text-danger-black\"></em></label>\n                                          <input class=\"form-control col-md-9 profile-txt1\" type=\"text\"\n                                            value=\"\" id=\"\" readonly formControlName=\"Amendmend_request_id\">\n                                          </div>\n                                        </div>\n                                        <div class=\"col-md-6\">\n                                          <div class=\"form-group margin-bottom-10\">\n                                          <label for=\"lg-type\" class=\"col-form-label\">Amount<em\n                                            style=\"font-style: normal;\"\n                                            class=\"text-danger-black\"></em></label>\n                                          <input class=\"form-control col-md-9 profile-txt1\" type=\"text\"\n                                            value=\"\" id=\"\" readonly formControlName=\"amendAmount\">\n                                          </div>\n                                        </div>\n                                        <div class=\"col-md-6\">\n                                          <div class=\"form-group margin-bottom-10\">\n                                          <label for=\"lg-type\" class=\"col-form-label\">LG end date<em\n                                            style=\"font-style: normal;\"\n                                            class=\"text-danger-black\"></em></label>\n                                          <input class=\"form-control col-md-9 profile-txt1\" type=\"text\"\n                                            value=\"\" id=\"\" readonly formControlName=\"amendLGenddate\">\n                                          </div>\n                                        </div>\n\n                                        <div class=\"col-md-12\" *ngIf=\"!isEditTnC\">\n                                          <div class=\"form-group margin-bottom-10\">\n                                            <label for=\"terms-and-condition\" class=\"col-form-label\">Write-up</label>\n                                            <div  class=\"terms-wrap text-wrap-bordered\">\n                                                <textarea rows=\"10\" cols=\"100\" formControlName=\"amendWriteup\" readonly [ngStyle]=\"styleObject()\">\n                                                </textarea>\n                                            </div>\n                                            \n                                          </div>\n                                        </div>\n\n                                        </div>\n                                      </div>\n                                    </div>\n                                    </div>\n                                    \n                                  </div>\n                                </div>\n\n\n\n\n\n                                <div class=\"col-sm-12\" *ngIf=\"internalPendingType=='confiscate_review' || internalPendingType=='confiscate_approve'\">\n                                  <div class=\"kt-portlet\">\n                                    <div class=\"kt-portlet__head\">\n                                      <div class=\"kt-portlet__head-label\">\n                                        <h3 class=\"kt-portlet__head-title\">\n                                          Confiscate Information\n                                        </h3>\n                                      </div>\n                                    </div>\n                                    \n                                    <div class=\"kt-form kt-form--label-right\">\n                                      <div class=\"kt-portlet__body\">\n                                      <div class=\"container\">\n                                        <div class=\"row\">\n\n                                        <div class=\"col-md-6\">\n                                          <div class=\"form-group margin-bottom-10\">\n                                          <label for=\"lg-type\" class=\"col-form-label\">Request ID<em\n                                            style=\"font-style: normal;\"\n                                            class=\"text-danger-black\"></em></label>\n                                          <input class=\"form-control col-md-9 profile-txt1\" type=\"text\"\n                                            value=\"\" id=\"\" readonly formControlName=\"confiscate_request_id\">\n                                          </div>\n                                        </div>\n                                        \n                                        <div class=\"col-md-6\">\n                                          <div class=\"form-group margin-bottom-10\">\n                                          <label for=\"lg-type\" class=\"col-form-label\">Bank Name<em\n                                            style=\"font-style: normal;\"\n                                            class=\"text-danger-black\"></em></label>\n                                          <input class=\"form-control col-md-9 profile-txt1\" type=\"text\"\n                                            value=\"\" id=\"\" readonly formControlName=\"confiscatebankName\">\n                                          </div>\n                                         </div>\n\n                                         <div class=\"col-md-6\">\n                                          <div class=\"form-group margin-bottom-10\">\n                                          <label for=\"lg-type\" class=\"col-form-label\">IBAN<em\n                                            style=\"font-style: normal;\"\n                                            class=\"text-danger-black\"></em></label>\n                                          <input class=\"form-control col-md-9 profile-txt1\" type=\"text\"\n                                            value=\"\" id=\"\" readonly formControlName=\"confiscateIBAN\">\n                                          </div>\n                                         </div>\n\n                                        <div class=\"col-md-12\">\n                                          <div class=\"form-group margin-bottom-10\">\n                                            <label for=\"terms-and-condition\" class=\"col-form-label\">Reason</label>\n                                            <div  class=\"terms-wrap text-wrap-bordered\">\n                                                <textarea rows=\"10\" cols=\"100\" formControlName=\"confiscateReason\" readonly [ngStyle]=\"styleObject()\">\n                                                </textarea>\n                                            </div>\n                                            \n                                          </div>\n                                        </div>\n\n                                        <div class=\"col-md-12\" style=\"text-align:left;\">\n                                          <div class=\"checkbox margin-top-10\">\n                                            <label class=\"container-checkbox par-blu-txt\">Partial confiscation?\n                                              <input type=\"checkbox\" [(ngModel)]=\"partialConfiscation\"\n                                                formControlName=\"partialConfiscation\" >\n                                              <span class=\"checkmark\"></span>\n                                            </label>\n                                          </div>\n                                        </div>\n                                       \n\n                                        <div class=\"col-md-6\">\n                                          <div class=\"form-group margin-bottom-10\">\n                                          <label for=\"lg-type\" class=\"col-form-label\">Confiscation amount<em\n                                            style=\"font-style: normal;\"\n                                            class=\"text-danger-black\"></em></label>\n                                          <input class=\"form-control col-md-9 profile-txt1\" type=\"text\"\n                                            value=\"\" id=\"\" readonly formControlName=\"confiscateAmount\">\n                                          </div>\n                                         </div>\n\n\n\n                                        </div>\n                                      </div>\n                                    </div>\n                                    </div>\n                                    \n                                  </div>\n                                </div>\n\n\n\n\n\n\n                                <div class=\"col-sm-12\" *ngIf=\"internalPendingType=='release_review' || internalPendingType=='release_approve'\">\n                                  <div class=\"kt-portlet\">\n                                    <div class=\"kt-portlet__head\">\n                                      <div class=\"kt-portlet__head-label\">\n                                        <h3 class=\"kt-portlet__head-title\">\n                                          Release Information\n                                        </h3>\n                                      </div>\n                                    </div>\n                                    \n                                    <div class=\"kt-form kt-form--label-right\">\n                                      <div class=\"kt-portlet__body\">\n                                      <div class=\"container\">\n                                        <div class=\"row\">\n                                          <div class=\"col-md-6\">\n                                            <div class=\"form-group margin-bottom-10\">\n                                            <label for=\"lg-type\" class=\"col-form-label\">Request ID<em\n                                              style=\"font-style: normal;\"\n                                              class=\"text-danger-black\"></em></label>\n                                            <input class=\"form-control col-md-9 profile-txt1\" type=\"text\"\n                                              value=\"\" id=\"\" readonly formControlName=\"release_request_id\">\n                                            </div>\n                                          </div>\n                                          <div class=\"col-md-12\">\n                                            <div class=\"form-group margin-bottom-10\">\n                                              <label for=\"terms-and-condition\" class=\"col-form-label\">Reason</label>\n                                              <div  class=\"terms-wrap text-wrap-bordered\">\n                                                  <textarea rows=\"10\" cols=\"100\" formControlName=\"releaseReason\" readonly [ngStyle]=\"styleObject()\">\n                                                  </textarea>\n                                              </div>\n                                            </div>\n                                          </div>\n\n                                          <div class=\"col-md-12\" style=\"text-align:left;\">\n                                            <div class=\"checkbox margin-top-10\">\n                                              <label class=\"container-checkbox par-blu-txt\">Partial release?\n                                                <input type=\"checkbox\" [(ngModel)]=\"partialRelease\" formControlName=\"partialRelease\" >\n                                                <span class=\"checkmark\"></span>\n                                              </label>\n                                            </div>\n                                          </div>\n                              \n                                         \n                                          <div class=\"col-md-6\">\n                                            <div class=\"form-group margin-bottom-10\">\n                                            <label for=\"lg-type\" class=\"col-form-label\">Release amount<em\n                                              style=\"font-style: normal;\"\n                                              class=\"text-danger-black\"></em></label>\n                                            <input class=\"form-control col-md-9 profile-txt1\" type=\"text\"\n                                              value=\"\" id=\"\" readonly formControlName=\"releaseAmount\">\n                                            </div>\n                                           </div>\n\n\n\n                                        </div>\n                                      </div>\n                                    </div>\n                                    </div>\n                                  </div>\n                                </div>\n                                <!-- Internal Amend/confiscate/release-->\n                                <!-- Internal Approve/Reject Amend/confiscate/release-->\n                                <div *ngIf=\"isInternalPending\">\n\n                                  <div class=\"kt-portlet__foot\" *ngIf=\"internalPendingType=='issuance_review' || internalPendingType=='amendment_review' || internalPendingType=='confiscate_review' || internalPendingType=='release_review'\">\n                                    <div class=\"kt-form__actions\">\n                                      <div class=\"row\">\n                                        <div class=\"col-12\">\n                                          <div class=\"btn-wrap\">\n                                            <button type=\"button\" class=\"btn btn-gry btn-margin-2\"\n                                              (click)=\"cancelInternalApproval()\">{{'HOME.CANCEL' | translate}}</button>\n                                            <button type=\"button\" class=\"btn btn-red btn-margin-2\"\n                                              (click)=\"rejectInternalApproval()\">{{'HOME.Reject' | translate}}</button>\n                                            <button type=\"button\" class=\"btn btn-success btn-margin-2\"\n                                              (click)=\"acceptInternalApproval()\">Review</button>\n                                          </div>\n                                        </div>\n                                      </div>\n                                    </div>\n                                  </div>\n\n\n                                  <div class=\"kt-portlet__foot\" *ngIf=\"internalPendingType=='issuance_approve' || internalPendingType=='amendment_approve' || internalPendingType=='confiscate_approve' || internalPendingType=='release_approve'\">\n                                    <div class=\"kt-form__actions\">\n                                      <div class=\"row\">\n                                        <div class=\"col-12\">\n                                          <div class=\"btn-wrap\">\n                                            <button type=\"button\" class=\"btn btn-gry btn-margin-2\"\n                                              (click)=\"cancelInternalApproval()\">{{'HOME.CANCEL' | translate}}</button>\n                                            <button type=\"button\" class=\"btn btn-red btn-margin-2\"\n                                              (click)=\"rejectInternalApproval()\">{{'HOME.Reject' | translate}}</button>\n                                            <button type=\"button\" class=\"btn btn-success btn-margin-2\"\n                                              (click)=\"acceptInternalApproval()\">{{'HOME.Approve' | translate}}</button>\n                                          </div>\n                                        </div>\n                                      </div>\n                                    </div>\n                                  </div>\n\n\n                                </div>\n                                <!-- Internal Approve/Reject Amend/confiscate/release-->\n\n                                <!-- External Approve/Reject Amend/confiscate/release-->\n                                <div *ngIf=\"onBoardResolution == 'Y'\">\n                                  <div *ngIf=\"isACRpending\">\n                                    <div class=\"row\">\n                                      <div class=\"col-sm-12\">\n                                      <div class=\"kt-portlet__foot\" *ngIf=\"isAmendApprove\">\n                                        <div class=\"kt-form__actions\">\n                                          <div class=\"row\">\n                                            <div class=\"col-12\">\n                                              <div class=\"btn-wrap\">\n                                                <button type=\"button\" class=\"btn btn-gry btn-margin-2\"\n                                                      (click)=\"cancelACRApproval()\">{{'HOME.CANCEL' | translate}}</button>\n                                                <button type=\"button\" class=\"btn btn-red btn-margin-2\"\n                                                  (click)=\"rejectAmendApprovalData()\">{{'HOME.Reject' | translate}}</button>\n                                                <button type=\"button\" class=\"btn btn-success btn-margin-2\"\n                                                  (click)=\"acceptAmendApprovalData()\">{{'HOME.Approve' | translate}}</button>\n                                              </div>\n                                            </div>\n                                          </div>\n                                        </div>\n                                      </div>\n                                    </div>\n                                  </div>\n                                  </div>\n                                </div>\n\n                                <!-- External Approve/Reject Amend/confiscate/release-->\n\n\n                                <div *ngIf=\"isACREnableButtons\">\n                                  <div class=\"row\">\n                                    <div class=\"col-sm-12\">\n                                      <div class=\"kt-portlet__foot\" >\n                                      <div class=\"kt-form__actions\">\n                                      <div class=\"row\">\n                                      <div class=\"col-12\">\n                                      <div class=\"btn-wrap lg-details-wrap\">\n                                        <button *ngIf=\"aclAmendCreate && !isAmendmentUpdate\" type=\"button\" class=\"btn btn-success\" data-toggle=\"modal\" data-target=\"#myModal1\" (click) = \"amendClicked()\">Amend</button>\n                                        <button *ngIf=\"aclAmendCreate && isAmendmentUpdate\" type=\"button\" class=\"btn btn-success\" data-toggle=\"modal\" data-target=\"#myModal1\" (click) = \"amendClicked()\">Update Amend</button>\n                                        <button *ngIf=\"aclConfiscateCreate && !isConfiscateUpdate\" type=\"button\" class=\"btn btn-success\" data-toggle=\"modal\" data-target=\"#myModal\" (click) = \"confiscateClicked()\">Confiscate</button>\n                                        <button *ngIf=\"aclConfiscateCreate && isConfiscateUpdate\" type=\"button\" class=\"btn btn-success\" data-toggle=\"modal\" data-target=\"#myModal\" (click) = \"confiscateClicked()\">Update Confiscate</button>\n                                        <button *ngIf=\"aclReleaseCreate && !isReleaseUpdate\" type=\"button\" class=\"btn btn-success\"  data-toggle=\"modal\" data-target=\"#myModal2\" (click) = \"releaselicked()\">Release</button>\n                                        <button *ngIf=\"aclReleaseCreate && isReleaseUpdate\" type=\"button\" class=\"btn btn-success\"  data-toggle=\"modal\" data-target=\"#myModal2\" (click) = \"releaselicked()\">Update Release</button>\n                                      </div>\n\n                                      </div>\n                                      </div>\n                                      </div>\n                                      </div>\n                                    </div>\n                                  </div>\n                                </div>\n                              \n\n                                  </form>\n                                </div>\n                              </div>\n                            </div>\n\n                          </div>\n                        </div>\n                      </div>\n                    </section>\n                  </div>\n\n                </div>\n              </div>\n              <!--New Design Here-->\n            </div>\n          </div>\n          <!--===========================\n                    End Content\n                    ============================-->\n\n  <!--Modal-->\n  <div class=\"modal\" id=\"myModal\">\n    <div class=\"modal-dialog\">\n      <div class=\"modal-content\">\n        <!-- Modal body -->\n        <div class=\"modal-body text-center\">\n          <p class=\"margin-bottom-null\">LG successfully approved!</p>\n        </div>\n\n        <!-- Modal footer -->\n        <div class=\"modal-footer\">\n          <button type=\"button\" class=\"btn btn-success\" data-dismiss=\"modal\">Close</button>\n        </div>\n\n      </div>\n    </div>\n  </div>\n\n  <!--begin::Global Theme Bundle(used by all pages) -->\n  <script src=\"../../assets/js/plugins.bundle.js\" type=\"text/javascript\"></script>\n  <!--Content Editable-->\n  <script type=\"text/javascript\">\n    window.onload = function () {\n      var btn = document.getElementById('editBtn');\n      var btn1 = document.getElementById('editBtn1');\n      var div = document.getElementById('editable');\n      btn.onclick = function (e) {\n        div.contentEditable = true;\n        div.focus();\n        div.style.backgroundColor = '#ffffff';\n        div.style.border = '1px dotted black';\n        btn1.style.display = \"block\";\n      }\n      btn1.onclick = function (e) {\n        div.contentEditable = false;\n        div.style.backgroundColor = '#f2f2f2';\n        div.style.border = '';\n        btn1.style.display = \"none\";\n      }\n\n    }\n  </script>\n  <!--Content Editable-->\n\n\n  <!-- end::Body -->\n\n\n");

/***/ }),

/***/ "./node_modules/raw-loader/dist/cjs.js!./src/app/gov-lg-management/gov-lg-management.component.html":
/*!**********************************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/gov-lg-management/gov-lg-management.component.html ***!
  \**********************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (" \n \n          <!--===========================\n                        Start Content\n                        ============================-->\n                        <div class=\"pt-0 kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor kt-margin-top-50\">\n                          <div class=\"kt-container\">\n                        <!--New Design Here-->\n                        <div class=\"row\">\n                          <app-sidemenu></app-sidemenu>\n                          <!--<div class=\"col-12 col-sm-3 col-md-3 col-lg-3 left-panel-menu-wrap w-20 fixed-wrap\">\n                            \n                            <ul class=\"vertical-menu\">\n                              <li *ngIf=\"roleId == 2\"><a routerLink=\"/govDashboard\"><span class=\"db-icon\"></span>{{'HOME.Dashboard' | translate}}</a></li>\n                                <li *ngIf=\"roleId == 2\"><a routerLink=\"/govLgManagement\" class=\"active\"><span class=\"db-icon\"></span>{{'HOME.LG_Management' | translate}}</a></li>\n                                <li *ngIf=\"roleId == 2\"><a routerLink=\"/governmentpendingtasks\"><span class=\"db-icon\"></span>{{'HOME.Pending_Tasks' | translate}}</a></li>\n                            </ul>\n                          </div>-->\n                          <div class=\"col-12 col-sm-9 col-md-9 col-lg-9 padding-null scroll-wrap\">\n                            \n                            <div class=\"grey-bg\">\n                              <section class=\"design-process-section\" id=\"process-tab\">\n                                <div>\n                                  <div>\n                                    <div>\n                                      <div class=\"two-blocks-tab\">\n                                        <ul>\n                                          <li [ngClass]=\"{'active': isLgIssuedMeClicked}\"><a >{{'HOME.Letter_of_guarantee_issued_me' | translate}}</a></li>\n                                        </ul>\n                                      </div>\n                                      <!-- Tab panes -->\n                                      <div class=\"tab-content\">\n                                        <div role=\"tabpanel\" class=\"tab-pane active\" id=\"discover\">\n                                          <div class=\"design-process-content\">\n                                            <form>\n                                              <div class=\"row\" *ngIf=\"isOpenLgIssuedMeList\">\n\n                                                <div class=\"col-sm-12\">\n                                                  <div class=\"kt-portlet\">\n                                                    <div class=\"kt-portlet__head\">\n                                                      <div class=\"kt-portlet__head-label\">\n                                                        <h3 class=\"kt-portlet__head-title\">\n                                                          {{'HOME.Active_letters_guarantee' | translate}}\n                                                        </h3>\n                                                      </div>\n                                                    </div>\n                                                    <!--begin::Form-->\n                                                    <div class=\"kt-form kt-form--label-right\">\n                                                      <div class=\"kt-portlet__body\">\n                                                        <div class=\"container\">\n                                                          <div class=\"row\">\n                                                           <div class=\"col-md-12\">\n                                                              <div class=\"kt-portlet no-shadow\">\n                                                                <div class=\"new-blue-table1\">\n                                                                  <div class=\"table-responsive\">\n\n                                                                    <div *ngIf=\"this.translate.currentLang == 'en'\">\n                                                                      <div *ngIf=\"activeLgForMeLists.userObject?.length > 0; then activemethenBlock else activemeelseBlock\"> </div>\n                                                                      <ng-template #activemethenBlock>\n                                                                      <table datatable [dtOptions]=\"dtOptions\" class=\"table table-bordered table-striped table-hover\">\n                                                                          <thead>\n                                                                                <tr>\n                                                                                  <th class=\"table-col-7\">#</th>\n                                                                                  <th class=\"\"> {{'HOME.LG_Number' | translate}}</th>\n                                                                                  <th class=\"\">{{'HOME.LG_amount' | translate}}</th>\n                                                                                  <th class=\"\">{{'HOME.Beneficiary' | translate}}</th>\n                                                                                  <th class=\"\">{{'HOME.Bank' | translate}}</th>\n                                                                                  <th class=\"\">{{'HOME.LG_TYPE' | translate}}</th>\n                                                                                  <th class=\"\">{{'HOME.LG_Status' | translate}}</th>\n                                                                                  <th class=\"\">{{'HOME.Start_Date' | translate}}</th>\n                                                                                  <th class=\"\">{{'HOME.End_Date' | translate}}</th>\n                                                                                  <th class=\"\">{{'HOME.View_Details' | translate}}</th>\n                                                                                </tr>\n                                                                          </thead>\n                                                                          <tbody>\n                                                                          <tr *ngFor=\"let activeLgForMeList of activeLgForMeLists.userObject; let i = index \">\n                                                                              <td>{{i+1}}</td>\n                                                                                <td>{{activeLgForMeList.lg_no}}</td>\n                                                                                <td>{{activeLgForMeList.lG_amount}}</td>\n                                                                                <td>{{activeLgForMeList.beneficiary_name}}</td>\n                                                                                <td>{{activeLgForMeList.bank_name}}</td>\n                                                                                <td>{{activeLgForMeList.lg_type}}</td>\n                                                                                <td>{{activeLgForMeList.status}}</td>\n                                                                                <td>{{activeLgForMeList.start_date}}</td>\n                                                                                <td>{{activeLgForMeList.end_date}}</td>\n                                                                              <td><button type=\"button\" class=\"btn btn-success vw-details\" (click)=\"RowSelected(activeLgForMeList)\">{{'HOME.View' | translate}}</button>\n                                                                              </td>\n                                                                          </tr>\n                                                                          </tbody>\n                                                                        </table>\n                                                                      </ng-template>\n                                                                      <ng-template #activemeelseBlock>\n                                                                          <table datatable [dtOptions]=\"dtOptions\" class=\"table table-bordered table-striped table-hover\">\n                                                                              <thead>\n                                                                                <tr>\n                                                                                  <th class=\"table-col-7\">#</th>\n                                                                                  <th class=\"\"> {{'HOME.LG_Number' | translate}}</th>\n                                                                                  <th class=\"\">{{'HOME.LG_amount' | translate}}</th>\n                                                                                  <th class=\"\">{{'HOME.Beneficiary' | translate}}</th>\n                                                                                  <th class=\"\">{{'HOME.Bank' | translate}}</th>\n                                                                                  <th class=\"\">{{'HOME.LG_TYPE' | translate}}</th>\n                                                                                  <th class=\"\">{{'HOME.LG_Status' | translate}}</th>\n                                                                                  <th class=\"\">{{'HOME.Start_Date' | translate}}</th>\n                                                                                  <th class=\"\">{{'HOME.End_Date' | translate}}</th>\n                                                                                  <th class=\"\">{{'HOME.View_Details' | translate}}</th>\n                                                                                    </tr>\n                                                                              </thead>\n                                                                              <tbody>\n                                                                              <tr *ngFor=\"let activeLgForMeList of activeLgForMeLists.userObject; let i = index \">\n                                                                                  <td>{{i+1}}</td>\n                                                                                    <td>{{activeLgForMeList.lg_no}}</td>\n                                                                                    <td>{{activeLgForMeList.lG_amount}}</td>\n                                                                                    <td>{{activeLgForMeList.beneficiary_name}}</td>\n                                                                                    <td>{{activeLgForMeList.bank_name}}</td>\n                                                                                    <td>{{activeLgForMeList.lg_type}}</td>\n                                                                                    <td>{{activeLgForMeList.status}}</td>\n                                                                                    <td>{{activeLgForMeList.start_date}}</td>\n                                                                                    <td>{{activeLgForMeList.end_date}}</td>\n                                                                                  <td><button type=\"button\" class=\"btn btn-success vw-details\" (click)=\"RowSelected(activeLgForMeList)\">{{'HOME.View' | translate}}</button>\n                                                                                  </td>\n                                                                              </tr>\n                                                                              </tbody>\n                                                                            </table>\n                                                                          </ng-template>\n                                                                        </div>\n\n                                                                        <div *ngIf=\"this.translate.currentLang == 'ar'\">\n                                                                          <div *ngIf=\"activeLgForMeLists.userObject?.length > 0; then activemethenBlock else activemeelseBlock\"> </div>\n                                                                          <ng-template #activemethenBlock>\n                                                                          <table datatable [dtOptions]=\"dtOptionsAR\" class=\"table table-bordered table-striped table-hover\">\n                                                                              <thead>\n                                                                                    <tr>\n                                                                                      <th class=\"table-col-7\">#</th>\n                                                                                      <th class=\"\"> {{'HOME.LG_Number' | translate}}</th>\n                                                                                      <th class=\"\">{{'HOME.LG_amount' | translate}}</th>\n                                                                                      <th class=\"\">{{'HOME.Beneficiary' | translate}}</th>\n                                                                                      <th class=\"\">{{'HOME.Bank' | translate}}</th>\n                                                                                      <th class=\"\">{{'HOME.LG_TYPE' | translate}}</th>\n                                                                                      <th class=\"\">{{'HOME.LG_Status' | translate}}</th>\n                                                                                      <th class=\"\">{{'HOME.Start_Date' | translate}}</th>\n                                                                                      <th class=\"\">{{'HOME.End_Date' | translate}}</th>\n                                                                                      <th class=\"\">{{'HOME.View_Details' | translate}}</th>\n                                                                                    </tr>\n                                                                              </thead>\n                                                                              <tbody>\n                                                                              <tr *ngFor=\"let activeLgForMeList of activeLgForMeLists.userObject; let i = index \">\n                                                                                  <td>{{i+1}}</td>\n                                                                                    <td>{{activeLgForMeList.lg_no}}</td>\n                                                                                    <td>{{activeLgForMeList.lG_amount}}</td>\n                                                                                    <td>{{activeLgForMeList.beneficiary_name}}</td>\n                                                                                    <td>{{activeLgForMeList.bank_name}}</td>\n                                                                                    <td>{{activeLgForMeList.lg_type}}</td>\n                                                                                    <td>{{activeLgForMeList.status}}</td>\n                                                                                    <td>{{activeLgForMeList.start_date}}</td>\n                                                                                    <td>{{activeLgForMeList.end_date}}</td>\n                                                                                  <td><button type=\"button\" class=\"btn btn-success vw-details\" (click)=\"RowSelected(activeLgForMeList)\">{{'HOME.View' | translate}}</button>\n                                                                                  </td>\n                                                                              </tr>\n                                                                              </tbody>\n                                                                            </table>\n                                                                          </ng-template>\n                                                                          <ng-template #activemeelseBlock>\n                                                                              <table datatable [dtOptions]=\"dtOptionsAR\" class=\"table table-bordered table-striped table-hover\">\n                                                                                  <thead>\n                                                                                    <tr>\n                                                                                      <th class=\"table-col-7\">#</th>\n                                                                                      <th class=\"\"> {{'HOME.LG_Number' | translate}}</th>\n                                                                                      <th class=\"\">{{'HOME.LG_amount' | translate}}</th>\n                                                                                      <th class=\"\">{{'HOME.Beneficiary' | translate}}</th>\n                                                                                      <th class=\"\">{{'HOME.Bank' | translate}}</th>\n                                                                                      <th class=\"\">{{'HOME.LG_TYPE' | translate}}</th>\n                                                                                      <th class=\"\">{{'HOME.LG_Status' | translate}}</th>\n                                                                                      <th class=\"\">{{'HOME.Start_Date' | translate}}</th>\n                                                                                      <th class=\"\">{{'HOME.End_Date' | translate}}</th>\n                                                                                      <th class=\"\">{{'HOME.View_Details' | translate}}</th>\n                                                                                        </tr>\n                                                                                  </thead>\n                                                                                  <tbody>\n                                                                                  <tr *ngFor=\"let activeLgForMeList of activeLgForMeLists.userObject; let i = index \">\n                                                                                      <td>{{i+1}}</td>\n                                                                                        <td>{{activeLgForMeList.lg_no}}</td>\n                                                                                        <td>{{activeLgForMeList.lG_amount}}</td>\n                                                                                        <td>{{activeLgForMeList.beneficiary_name}}</td>\n                                                                                        <td>{{activeLgForMeList.bank_name}}</td>\n                                                                                        <td>{{activeLgForMeList.lg_type}}</td>\n                                                                                        <td>{{activeLgForMeList.status}}</td>\n                                                                                        <td>{{activeLgForMeList.start_date}}</td>\n                                                                                        <td>{{activeLgForMeList.end_date}}</td>\n                                                                                      <td><button type=\"button\" class=\"btn btn-success vw-details\" (click)=\"RowSelected(activeLgForMeList)\">{{'HOME.View' | translate}}</button>\n                                                                                      </td>\n                                                                                  </tr>\n                                                                                  </tbody>\n                                                                                </table>\n                                                                              </ng-template>\n                                                                            </div>\n                                                                  </div>\n                                                                </div>\n                                                              </div>\n                                                            </div>\n                                                          </div>\n                                                        </div>\n                                                      </div>\n                                                    </div>\n                                                  </div>\n                                                </div>\n\n                                                <div class=\"col-sm-12\">\n                                                  <div class=\"kt-portlet\">\n                                                    <div class=\"kt-portlet__head\">\n                                                      <div class=\"kt-portlet__head-label\">\n                                                        <h3 class=\"kt-portlet__head-title\">\n                                                          {{'HOME.Inactives_letter_guarantee' | translate}}\n                                                        </h3>\n                                                      </div>\n                                                    </div>\n                                                    <!--begin::Form-->\n                                                    <div class=\"kt-form kt-form--label-right\">\n                                                      <div class=\"kt-portlet__body\">\n                                                        <div class=\"container\">\n                                                          <div class=\"row\">\n                                                           <div class=\"col-md-12\">\n                                                              <div class=\"kt-portlet no-shadow\">\n                                                                <div class=\"new-blue-table1\">\n                                                                  <div class=\"table-responsive\">\n\n                                                                  <div *ngIf=\"this.translate.currentLang == 'en'\">\n                                                                  <div *ngIf=\"inactiveLgForMeLists.userObject?.length > 0; then inactivemethenBlock else inactivemeelseBlock\"> </div>\n                                                                  <ng-template #inactivemethenBlock>\n                                                                      <table datatable [dtOptions]=\"dtOptions\" class=\"table table-bordered table-striped table-hover\">\n                                                                          <thead>\n                                                                                <tr>\n                                                                                  <th class=\"table-col-7\">#</th>\n                                                                                  <th class=\"\"> {{'HOME.LG_Number' | translate}}</th>\n                                                                                  <th class=\"\">{{'HOME.LG_amount' | translate}}</th>\n                                                                                  <th class=\"\">{{'HOME.Beneficiary' | translate}}</th>\n                                                                                  <th class=\"\">{{'HOME.Bank' | translate}}</th>\n                                                                                  <th class=\"\">{{'HOME.LG_TYPE' | translate}}</th>\n                                                                                  <th class=\"\">{{'HOME.LG_Status' | translate}}</th>\n                                                                                  <th class=\"\">{{'HOME.Start_Date' | translate}}</th>\n                                                                                  <th class=\"\">{{'HOME.End_Date' | translate}}</th>\n                                                                                  <th class=\"\">{{'HOME.View_Details' | translate}}</th>\n                                                                                </tr>\n                                                                          </thead>\n                                                                          <tbody>\n                                                                          <tr *ngFor=\"let inactiveLgForMeList of inactiveLgForMeLists.userObject; let i = index \">\n                                                                              <td>{{i+1}}</td>\n                                                                                <td>{{inactiveLgForMeList.lg_no}}</td>\n                                                                                <td>{{inactiveLgForMeList.lG_amount}}</td>\n                                                                                <td>{{inactiveLgForMeList.beneficiary_name}}</td>\n                                                                                <td>{{inactiveLgForMeList.bank_name}}</td>\n                                                                                <td>{{inactiveLgForMeList.lg_type}}</td>\n                                                                                <td>{{inactiveLgForMeList.status}}</td>\n                                                                                <td>{{inactiveLgForMeList.start_date}}</td>\n                                                                                <td>{{inactiveLgForMeList.end_date}}</td>\n                                                                              <td><button type=\"button\" class=\"btn btn-success vw-details\" (click)=\"RowSelected(inactiveLgForMeList)\">{{'HOME.View' | translate}}</button>\n                                                                              </td>\n                                                                          </tr>\n                                                                          </tbody>\n                                                                        </table>\n                                                                      </ng-template>\n                                                                      <ng-template #inactivemeelseBlock>\n                                                                          <table datatable [dtOptions]=\"dtOptions\" class=\"table table-bordered table-striped table-hover\">\n                                                                              <thead>\n                                                                                    <tr>\n                                                                                      <th class=\"table-col-7\">#</th>\n                                                                                      <th class=\"\"> {{'HOME.LG_Number' | translate}}</th>\n                                                                                      <th class=\"\">{{'HOME.LG_amount' | translate}}</th>\n                                                                                      <th class=\"\">{{'HOME.Beneficiary' | translate}}</th>\n                                                                                      <th class=\"\">{{'HOME.Bank' | translate}}</th>\n                                                                                      <th class=\"\">{{'HOME.LG_TYPE' | translate}}</th>\n                                                                                      <th class=\"\">{{'HOME.LG_Status' | translate}}</th>\n                                                                                      <th class=\"\">{{'HOME.Start_Date' | translate}}</th>\n                                                                                      <th class=\"\">{{'HOME.End_Date' | translate}}</th>\n                                                                                      <th class=\"\">{{'HOME.View_Details' | translate}}</th>\n                                                                                    </tr>\n                                                                              </thead>\n                                                                              <tbody>\n                                                                              <tr *ngFor=\"let inactiveLgForMeList of inactiveLgForMeLists.userObject; let i = index \">\n                                                                                  <td>{{i+1}}</td>\n                                                                                    <td>{{inactiveLgForMeList.lg_no}}</td>\n                                                                                    <td>{{inactiveLgForMeList.lG_amount}}</td>\n                                                                                    <td>{{inactiveLgForMeList.beneficiary_name}}</td>\n                                                                                    <td>{{inactiveLgForMeList.bank_name}}</td>\n                                                                                    <td>{{inactiveLgForMeList.lg_type}}</td>\n                                                                                    <td>{{inactiveLgForMeList.status}}</td>\n                                                                                    <td>{{inactiveLgForMeList.start_date}}</td>\n                                                                                    <td>{{inactiveLgForMeList.end_date}}</td>\n                                                                                  <td><button type=\"button\" class=\"btn btn-success vw-details\" (click)=\"RowSelected(inactiveLgForMeList)\">{{'HOME.View' | translate}}</button>\n                                                                                  </td>\n                                                                              </tr>\n                                                                              </tbody>\n                                                                            </table>\n                                                                      </ng-template>\n                                                                    </div>\n\n                                                                    <div *ngIf=\"this.translate.currentLang == 'ar'\">\n                                                                      <div *ngIf=\"inactiveLgForMeLists.userObject?.length > 0; then inactivemethenBlock else inactivemeelseBlock\"> </div>\n                                                                      <ng-template #inactivemethenBlock>\n                                                                          <table datatable [dtOptions]=\"dtOptionsAR\" class=\"table table-bordered table-striped table-hover\">\n                                                                              <thead>\n                                                                                    <tr>\n                                                                                      <th class=\"table-col-7\">#</th>\n                                                                                      <th class=\"\"> {{'HOME.LG_Number' | translate}}</th>\n                                                                                      <th class=\"\">{{'HOME.LG_amount' | translate}}</th>\n                                                                                      <th class=\"\">{{'HOME.Beneficiary' | translate}}</th>\n                                                                                      <th class=\"\">{{'HOME.Bank' | translate}}</th>\n                                                                                      <th class=\"\">{{'HOME.LG_TYPE' | translate}}</th>\n                                                                                      <th class=\"\">{{'HOME.LG_Status' | translate}}</th>\n                                                                                      <th class=\"\">{{'HOME.Start_Date' | translate}}</th>\n                                                                                      <th class=\"\">{{'HOME.End_Date' | translate}}</th>\n                                                                                      <th class=\"\">{{'HOME.View_Details' | translate}}</th>\n                                                                                    </tr>\n                                                                              </thead>\n                                                                              <tbody>\n                                                                              <tr *ngFor=\"let inactiveLgForMeList of inactiveLgForMeLists.userObject; let i = index \">\n                                                                                  <td>{{i+1}}</td>\n                                                                                    <td>{{inactiveLgForMeList.lg_no}}</td>\n                                                                                    <td>{{inactiveLgForMeList.lG_amount}}</td>\n                                                                                    <td>{{inactiveLgForMeList.beneficiary_name}}</td>\n                                                                                    <td>{{inactiveLgForMeList.bank_name}}</td>\n                                                                                    <td>{{inactiveLgForMeList.lg_type}}</td>\n                                                                                    <td>{{inactiveLgForMeList.status}}</td>\n                                                                                    <td>{{inactiveLgForMeList.start_date}}</td>\n                                                                                    <td>{{inactiveLgForMeList.end_date}}</td>\n                                                                                  <td><button type=\"button\" class=\"btn btn-success vw-details\" (click)=\"RowSelected(inactiveLgForMeList)\">{{'HOME.View' | translate}}</button>\n                                                                                  </td>\n                                                                              </tr>\n                                                                              </tbody>\n                                                                            </table>\n                                                                          </ng-template>\n                                                                          <ng-template #inactivemeelseBlock>\n                                                                              <table datatable [dtOptions]=\"dtOptionsAR\" class=\"table table-bordered table-striped table-hover\">\n                                                                                  <thead>\n                                                                                        <tr>\n                                                                                          <th class=\"table-col-7\">#</th>\n                                                                                          <th class=\"\"> {{'HOME.LG_Number' | translate}}</th>\n                                                                                          <th class=\"\">{{'HOME.LG_amount' | translate}}</th>\n                                                                                          <th class=\"\">{{'HOME.Beneficiary' | translate}}</th>\n                                                                                          <th class=\"\">{{'HOME.Bank' | translate}}</th>\n                                                                                          <th class=\"\">{{'HOME.LG_TYPE' | translate}}</th>\n                                                                                          <th class=\"\">{{'HOME.LG_Status' | translate}}</th>\n                                                                                          <th class=\"\">{{'HOME.Start_Date' | translate}}</th>\n                                                                                          <th class=\"\">{{'HOME.End_Date' | translate}}</th>\n                                                                                          <th class=\"\">{{'HOME.View_Details' | translate}}</th>\n                                                                                        </tr>\n                                                                                  </thead>\n                                                                                  <tbody>\n                                                                                  <tr *ngFor=\"let inactiveLgForMeList of inactiveLgForMeLists.userObject; let i = index \">\n                                                                                      <td>{{i+1}}</td>\n                                                                                        <td>{{inactiveLgForMeList.lg_no}}</td>\n                                                                                        <td>{{inactiveLgForMeList.lG_amount}}</td>\n                                                                                        <td>{{inactiveLgForMeList.beneficiary_name}}</td>\n                                                                                        <td>{{inactiveLgForMeList.bank_name}}</td>\n                                                                                        <td>{{inactiveLgForMeList.lg_type}}</td>\n                                                                                        <td>{{inactiveLgForMeList.status}}</td>\n                                                                                        <td>{{inactiveLgForMeList.start_date}}</td>\n                                                                                        <td>{{inactiveLgForMeList.end_date}}</td>\n                                                                                      <td><button type=\"button\" class=\"btn btn-success vw-details\" (click)=\"RowSelected(inactiveLgForMeList)\">{{'HOME.View' | translate}}</button>\n                                                                                      </td>\n                                                                                  </tr>\n                                                                                  </tbody>\n                                                                                </table>\n                                                                          </ng-template>\n                                                                        </div>\n                                                                  </div>\n                                                                </div>\n                                                              </div>\n                                                            </div>\n                                                          </div>\n                                                        </div>\n                                                      </div>\n                                                    </div>\n                                                  </div>\n                                                </div>\n                                              </div>\n                                            </form>\n                                          </div>\n                                        </div>\n                                      </div>\n                                    </div>\n                                  </div>\n                                </div>\n                              </section>\n                            </div>\n                            \n                          </div>\n                        </div>\n                        <!--New Design Here-->\n                      </div>\n                    </div>\n                    <!--===========================\n                                  End Content\n                                  ============================-->\n                 \n            <!--begin::Global Theme Bundle(used by all pages) -->\n            <script src=\"../../assets/js/plugins.bundle.js\" type=\"text/javascript\"></script>\n            <!-- end::Body -->\n          \n          \n          ");

/***/ }),

/***/ "./node_modules/raw-loader/dist/cjs.js!./src/app/gov-pending-action/gov-pending-action.component.html":
/*!************************************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/gov-pending-action/gov-pending-action.component.html ***!
  \************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<p>gov-pending-action works!</p>\n");

/***/ }),

/***/ "./node_modules/raw-loader/dist/cjs.js!./src/app/govement-user-reset-password-modal/govement-user-reset-password-modal.component.html":
/*!********************************************************************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/govement-user-reset-password-modal/govement-user-reset-password-modal.component.html ***!
  \********************************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<!--ADD NEW USER -->\n<div>\n    <div class=\"login-modal\" id=\"myModal3\">\n      <div class=\"modal-dialog modal-dialog-centered modal-lg\">\n        <div class=\"modal-content\">\n  \n          <!-- Modal Header -->\n          <div class=\"modal-header\">\n            <h4 class=\"modal-title\">Reset Password  </h4>\n          </div>\n  \n          <form [formGroup]=\"submitUser\">\n            <!-- Modal body -->\n            <div class=\"modal-body\" >\n        \n              <div class=\"row\">\n                <div class=\"col-md-12\">\n                  <div class=\"form-group margin-bottom-10\">\n                    <label for=\"password\" class=\"col-form-label\">Password <em\n                        style=\"font-style: normal;\"\n                        class=\"text-danger-black\">*</em></label>\n                    <input class=\"form-control col-md-9\" type=\"Password\" value=\"\" id=\"\"\n                      formControlName=\"password\" style=\"max-width: 100%\">\n                    <div class=\"validation-errors text-danger\">\n                      <div *ngFor=\"let validation of validation_messages.password\">\n                        <div col-12 class=\"error-message\"\n                          *ngIf=\"submitUser.get('password').hasError(validation.type) && (submitUser.get('password').dirty || submitUser.get('password').touched)\">\n                          {{ validation.message }}\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                <div class=\"col-md-12\">\n                  <div class=\"form-group \">\n                    <label for=\"confirm-password\" class=\"col-form-label\">Confirm Password\n                       <em style=\"font-style: normal;\"\n                        class=\"text-danger-black\">*</em></label>\n                        <input class=\"form-control col-md-9\" type=\"password\" value=\"\" id=\"\"\n                        formControlName=\"confirmPassword\" (blur)=\"onBlurPasswordMatch($event.target.value)\" (keyup)=\"onBlurPasswordMatchkeyup($event.target.value)\" style=\"max-width: 100%\">\n                    <div class=\"validation-errors text-danger\">\n                      <div\n                        *ngFor=\"let validation of validation_messages.confirmPassword\">\n                        <div col-12 class=\"error-message\"\n                          *ngIf=\"submitUser.get('confirmPassword').hasError(validation.type) && (submitUser.get('confirmPassword').dirty || submitUser.get('confirmPassword').touched)\">\n                          {{ validation.message }}\n                        </div>\n                      </div>\n                      <div col-12 class=\"error-message\" *ngIf=\"isNotPasswordMatch\" style=\"text-align: center;padding: 10px; font-weight: 600;\" \n                          >\n                         Password Mismatch \n                        </div>\n                    </div>\n                  </div>\n                </div>\n    \n              </div>\n    \n            </div>\n            <div class=\"modal-footer\">\n                <div class=\"row\">\n                    <div class=\"col-12\">\n                        <div class=\"btn-wrap\">\n                            <button type=\"reset\" class=\"btn btn-gry btn-margin-2\" (click)=\"closeAddUserButton()\">Cancel</button>\n                            <button style=\"margin-left: 5px;\" type=\"button\" class=\"btn btn-success btn-margin-2\" (click)=\"addUserSubmit()\">Save</button>\n                        </div>\n      \n                    </div>\n                </div>\n            </div>\n          </form>\n  \n  \n        </div>\n      </div>\n    </div>\n  </div>\n\n <!--  <ng-multiselect-dropdown\n    [placeholder]=\"'custom placeholder'\"\n    [data]=\"dropdownList\"\n    formControlName=\"IBAN\"\n    [(ngModel)]=\"selectedItems\"\n    [settings]=\"dropdownSettings\"\n    (onSelect)=\"onItemSelect($event)\"\n    (onSelectAll)=\"onSelectAll($event)\"\n  >\n  </ng-multiselect-dropdown> -->\n\n  <!--ADD NEW USER -->");

/***/ }),

/***/ "./node_modules/raw-loader/dist/cjs.js!./src/app/goverment-add-new-user-modal/goverment-add-new-user-modal.component.html":
/*!********************************************************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/goverment-add-new-user-modal/goverment-add-new-user-modal.component.html ***!
  \********************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<!--ADD NEW USER -->\n<div>\n    <div class=\"login-modal\" id=\"myModal3\">\n      <div class=\"modal-dialog modal-dialog-centered modal-lg\">\n        <div class=\"modal-content\">\n  \n          <!-- Modal Header -->\n          <div class=\"modal-header\">\n            <h4 class=\"modal-title\">Add new user  </h4>\n          </div>\n  \n          <form [formGroup]=\"submitUser\">\n            <!-- Modal body -->\n            <div class=\"modal-body\" >\n        \n              <div class=\"row\">\n                  <div class=\"col-12 col-md-6\">\n                      <div class=\"form-group margin-bottom-10\">\n                          <label for=\"national-identification\" class=\"col-form-label\"> National Identification <em style=\"font-style: normal;\" class=\"text-danger-black\">*</em> </label>\n                          <input class=\"form-control\" type=\"text\" value=\"\" id=\"\" formControlName=\"NationalId\" (blur)=\"onBlurNationalIdentity($event.target.value)\" (keyup)=\"onBlurNationalIdentitykeyup($event.target.value)\"  maxlength=\"10\">\n                          <div class=\"validation-errors text-danger\">\n                              <div *ngFor=\"let validation of validation_messages.NationalId\">\n                                <div col-12 class=\"error-message\"\n                                  *ngIf=\"submitUser.get('NationalId').hasError(validation.type) && (submitUser.get('NationalId').dirty || submitUser.get('NationalId').touched)\">\n                                  {{ validation.message }}\n                                </div>\n                              </div>\n                              <div col-12 class=\"error-message\"\n                                  *ngIf=\"isNotValidNationalId && (submitUser.get('NationalId').dirty || submitUser.get('NationalId').touched)\">\n                                  {{ninresponseMessage}}\n                                </div>\n                          </div>\n                      </div>\n                  </div>\n    \n                  <div class=\"col-12 col-md-6\">\n                      <div class=\"form-group margin-bottom-10\">\n                          <label for=\"national-identification\" class=\"col-form-label\"> Date of birth <em style=\"font-style: normal;\" class=\"text-danger-black\">*</em> </label>\n                          <!--<input class=\"form-control\" type=\"text\" value=\"\" id=\"\" formControlName=\"dateOfBirth\">-->\n\n                          <div class=\"ui-g ui-fluid\">\n                              <div class=\"col-md-9 padding-null calendar-icon-wrap\" style=\"max-width: 100%;flex: 100%;\">\n                                <p-calendar\n                                placeholder=\"DD/MM/YYYY\"\n                                [readonlyInput]=\"true\"\n                                yearRange=\"1950:2050\"\n                                [monthNavigator]=\"true\"\n                                [yearNavigator]=\"true\"\n                                formControlName=\"dateOfBirth\"\n                                [showIcon]=\"true\"\n                                [(ngModel)]=\"dateOfBirth\"\n                                class=\"calendar-text\"\n                                [showIcon]=\"true\"\n                                [maxDate]=\"maxDate\"\n                                (onSelect)=\"getDOB(dateOfBirth)\"\n                                dateFormat=\"dd/mm/yy\"></p-calendar>\n                                <div class=\"validation-errors text-danger\">\n                                  <div *ngFor=\"let validation of validation_messages.dateOfBirth\">\n                                    <div col-12 class=\"error-message\"\n                                      *ngIf=\"submitUser.get('dateOfBirth').hasError(validation.type) && (submitUser.get('dateOfBirth').dirty || submitUser.get('dateOfBirth').touched)\">\n                                      {{ validation.message }}\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                      </div>\n                  </div>\n\n\n    \n                  <div class=\"col-12 col-md-6\">\n                      <div class=\"form-group margin-bottom-10\">\n                          <label for=\"national-identification\" class=\"col-form-label\"> First Name <em style=\"font-style: normal;\" class=\"text-danger-black\">*</em> </label>\n                          <input class=\"form-control profile-txt1\" type=\"text\" value=\"\" id=\"\" formControlName=\"FirstName\" readonly>\n                      </div>\n                  </div>\n    \n                  <div class=\"col-12 col-md-6\">\n                      <div class=\"form-group margin-bottom-10\">\n                          <label for=\"national-identification\" class=\"col-form-label\"> Last Name <em style=\"font-style: normal;\" class=\"text-danger-black\">*</em> </label>\n                          <input class=\"form-control profile-txt1\" type=\"text\" value=\"\" id=\"\" formControlName=\"LastName\" readonly>\n                      </div>\n                  </div>\n    \n                  <div class=\"col-12 col-md-6\">\n                      <div class=\"form-group margin-bottom-10\">\n                          <label for=\"national-identification\" class=\"col-form-label\"> Mobile Number <em style=\"font-style: normal;\" class=\"text-danger-black\">*</em> </label>\n                          <input class=\"form-control\" type=\"text\" value=\"\" id=\"\" formControlName=\"mobileNo\" maxlength=\"10\" (blur)=\"onBlurMobile($event.target.value)\">\n                          <div class=\"validation-errors text-danger\">\n                              <div *ngFor=\"let validation of validation_messages.mobileNo\">\n                                <div col-12 class=\"error-message\"\n                                  *ngIf=\"submitUser.get('mobileNo').hasError(validation.type) && (submitUser.get('mobileNo').dirty || submitUser.get('mobileNo').touched)\">\n                                  {{ validation.message }}\n                                </div>\n                              </div>\n                          </div>\n                      </div>\n                  </div>\n    \n                  <div class=\"col-12 col-md-6\">\n                      <div class=\"form-group margin-bottom-10\">\n                          <label for=\"national-identification\" class=\"col-form-label\"> Email <em style=\"font-style: normal;\" class=\"text-danger-black\">*</em> </label>\n                          <input class=\"form-control\" type=\"text\" value=\"\" id=\"\" formControlName=\"Email\">\n                          <div class=\"validation-errors text-danger\">\n                              <div *ngFor=\"let validation of validation_messages.Email\">\n                                <div col-12 class=\"error-message\"\n                                  *ngIf=\"submitUser.get('Email').hasError(validation.type) && (submitUser.get('Email').dirty || submitUser.get('Email').touched)\">\n                                  {{ validation.message }}\n                                </div>\n                              </div>\n                          </div>\n                      </div>\n                  </div>\n    \n                  <div class=\"col-12 col-md-6\">\n                      <div class=\"form-group margin-bottom-10\">\n                          <div class=\"margin-top-10 text-left\" style=\"margin-top: 14px;margin-bottom: 0px;\">\n                              <div class=\"checkbox\">\n                                  <label class=\"container-checkbox\" style=\"margin-bottom: 7px;\"> New user has onboard resolution?\n    \n                                      <input type=\"checkbox\" checked=\"checked\" formControlName=\"OnboardResolution\" (change)=\"onCaangeResolution($event)\">\n                                      <span class=\"checkmark\"></span>\n                                  </label>\n                              </div>\n                          </div>\n                          <div [ngClass]=\"{'pointer-none': submitUser.get('OnboardResolution')?.value == false || submitUser.get('OnboardResolution')?.value == ''}\">\n                              <div class=\"input-group mb-3 margin-bottom-10\">\n                                  <div class=\"custom-file\" >\n                                    <input #resolutionFile type=\"file\" class=\"custom-file-input\"\n                                      id=\"inputGroupFile05\" formControlName=\"lalFile\"\n                                      (change)=\"fileProgress($event, 'lal')\" />\n                                    <div *ngIf=\"isSelectedlalFile; else notShowlal\">\n                                      <label class=\"custom-file-label\"\n                                        for=\"inputGroupFile05\" *ngIf=\"submitUser.get('OnboardResolution')?.value == true\">{{lalFile.name | summary}}</label>\n                                      <label class=\"custom-file-label\"\n                                        for=\"inputGroupFile05\" *ngIf=\"submitUser.get('OnboardResolution')?.value == false || submitUser.get('OnboardResolution')?.value == ''\">Not Selected</label>\n                                    </div>\n                                    <ng-template #notShowlal>\n                                      <label class=\"custom-file-label\"\n                                        for=\"inputGroupFile05\">{{notSelected}}</label>\n                                    </ng-template>\n\n\n                                  </div>\n                                </div>\n                                <div class=\"validation-errors text-danger \" style=\"margin-top: 0px;\">\n                                  <!-- <div *ngFor=\"let validation of validation_messages.lalFile\">\n                                    <div col-12 class=\"error-message\"\n                                      *ngIf=\"submitUser.get('lalFile').hasError(validation.date_error) && (submitUser.get('lalFile').dirty || submitUser.get('lalFile').touched)\">\n                                      {{ validation.message }}\n                                    </div>\n                                  </div> -->\n                                  <div col-12 class=\"error-message\" *ngIf=\"submitUser.get('lalFile').errors?.date_error && submitUser.get('lalFile').touched\">\n                                    {{submitUser.get('lalFile').errors?.date_error}} \n                                  </div>\n                                </div>\n\n                          </div>\n                      </div>\n                  </div>\n    \n                  <div class=\"col-12 col-md-6\">\n                      <div class=\"form-group margin-bottom-10\">\n                          <div class=\"margin-top-10 text-left\">\n                              <div class=\"attach-label padding-null\">\n                                  <label for=\"cr\" class=\"col-form-label\"> National Identification Number <em style=\"font-style: normal;\" class=\"text-danger-black\">*</em></label>\n                              </div>\n                          </div>\n                          <div>\n                              \n                              <div class=\"input-group mb-3 margin-bottom-10\">\n                                  <div class=\"custom-file\">\n                                    <input type=\"file\" class=\"custom-file-input\"\n                                      id=\"inputGroupFile02\" formControlName=\"rniFile\"\n                                      (change)=\"fileProgress($event, 'rni')\" />\n                                    <div *ngIf=\"isSelectedrniFile; else notShow\">\n                                      <label class=\"custom-file-label\"\n                                        for=\"inputGroupFile05\">{{this.rniFile.name | summary}}</label>\n                                    </div>\n                                    <ng-template #notShow>\n                                      <label class=\"custom-file-label\"\n                                        for=\"inputGroupFile05\">{{notSelected}}</label>\n                                    </ng-template>\n                                  </div>\n                                </div>\n                                <!-- <div class=\"text-danger m-top-17\">This is a required field</div> -->\n                                <div class=\"validation-errors text-danger \"  style=\"margin-top: 0px;\">\n                                  <div *ngFor=\"let validation of validation_messages.rniFile\">\n                                    <div col-12 class=\"error-message\"\n                                      *ngIf=\"submitUser.get('rniFile').hasError(validation.type) && (submitUser.get('rniFile').dirty || submitUser.get('rniFile').touched)\">\n                                      {{ validation.message }}\n                                    </div>\n                                  </div>\n                                </div>\n                          </div>\n                      </div>\n                  </div>\n                  <div class=\"col-12 col-md-6\">\n                      <div class=\"form-group margin-bottom-10\">\n                          <div class=\"text-left margin-bottom-10\" style=\"margin-top:5px;\">\n                              <div class=\"attach-label padding-null\">\n                                  <label for=\"cr\" class=\"col-form-label\"> Authorization Letter <em style=\"font-style: normal;\" class=\"text-danger-black\">*</em></label>\n                              </div>\n                          </div>\n                          <div>\n                              <div class=\"input-group\">\n                                  <div class=\"custom-file\">\n                                    <input type=\"file\" class=\"custom-file-input\"\n                                      id=\"inputGroupFile04\" formControlName=\"laglFile\"\n                                      (change)=\"fileProgress($event, 'lagl')\" />\n                                    <!-- <label class=\"custom-file-label\" for=\"inputGroupFile04\">{{this.laglFile.name}}</label> -->\n                                    <div *ngIf=\"isSelectedlaglFile; else notShowlagl\">\n                                      <label class=\"custom-file-label\"\n                                        for=\"inputGroupFile05\">{{this.laglFile.name | summary}}</label>\n                                    </div>\n                                    <ng-template #notShowlagl>\n                                      <label class=\"custom-file-label\"\n                                        for=\"inputGroupFile05\">{{notSelected}}</label>\n                                    </ng-template>\n                                  </div>\n                                </div>\n                                <!-- <div class=\"text-danger m-top-17\">This is a required field</div> -->\n                                <div class=\"validation-errors text-danger\"  style=\"margin-top: 0px;\">\n                                  <div *ngFor=\"let validation of validation_messages.laglFile\">\n                                    <div col-12 class=\"error-message\"\n                                      *ngIf=\"submitUser.get('laglFile').hasError(validation.type) && (submitUser.get('laglFile').dirty || submitUser.get('laglFile').touched)\">\n                                      {{ validation.message }}\n                                    </div>\n                                  </div>\n                                </div>\n                          </div>\n                      </div>\n                  </div>\n    \n                  <div class=\"col-12 col-md-6\"></div>\n    \n                  <div class=\"col-12 col-md-6\">\n                      <div class=\"form-group margin-bottom-10\" style=\"margin-top:5px;\">\n                        <label for=\"bank\" class=\"col-form-label\">Select Bank <em style=\"font-style: normal;\"\n                            class=\"text-danger-black\">*</em></label>\n                         <!--<select class=\"form-control\" formControlName=\"bankName\">\n                          <option>Please select</option>\n                        </select> -->\n                        <select class=\"form-control \" formControlName=\"bankName\" required \n                         >\n                        <option>Select Bank </option>\n                        <option *ngFor=\"let listOfBankNames of bankNamesList\">\n                          {{listOfBankNames.tBankmaster.bankName}}\n                        </option>\n                      </select>\n                      <!-- <mat-from-field> \n                      <mat-form-field style=\"position: relative;\">\n                        <mat-select [formControl]=\"bankName\" multiple >\n                          <mat-option *ngFor=\"let listOfBankNames of bankNamesList\" [value]=\"topping\"> {{listOfBankNames.tBankmaster.bankName}}</mat-option>\n                          \n                        </mat-select>\n                      </mat-form-field> \n                      array: {{dropdownListBank | json}}-->\n                      <!-- <ng-multiselect-dropdown *ngIf=\"dropdownListBank && dropdownListBank.length > 0\"\n                        [placeholder]=\"'Please Select Bank'\"\n                        [data]=\"dropdownListBank\"\n                        formControlName=\"bankName\"\n                        [settings]=\"dropdownSettingsBank\"\n                        (onSelect)=\"onItemSelect($event)\"\n                        (onSelectAll)=\"onSelectAll($event)\"\n                        required\n                      >\n                      </ng-multiselect-dropdown> -->\n\n                      <!-- </mat-from-field> -->\n                        <div class=\"validation-errors text-danger\">\n                          <div *ngFor=\"let validation of validation_messages.bankName\">\n                            <div col-12 class=\"error-message\"\n                              *ngIf=\"submitUser.get('bankName').hasError(validation.type) && (submitUser.get('bankName').dirty || submitUser.get('bankName').touched)\">\n                              {{ validation.message }}\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                    <div class=\"col-12 col-md-6\">\n        \n                      <div class=\"form-group margin-bottom-10\" style=\"margin-top:5px;\">\n                        <label for=\"iban\" class=\"col-form-label\">Select IBAN <em style=\"font-style: normal;\"\n                            class=\"text-danger-black\">*</em></label>\n                         <!--<select class=\"form-control\" formControlName=\"IBAN\">\n                          <option>SA80000132165498745125</option>\n                        </select> -->\n                        <select class=\"form-control\" formControlName=\"IBAN\" required>\n                          <option>Select IBAN </option>\n                          <option *ngFor=\"let listOfBankNames of bankNamesList\">\n                            {{listOfBankNames.ibanNo}}\n                          </option>\n                        </select>\n                        <!-- <ng-multiselect-dropdown *ngIf=\"bankNamesList && bankNamesList.length > 0\"\n                          [placeholder]=\"'Please select  IBAN'\"\n                          [data]=\"bankNamesList\"\n                          formControlName=\"IBAN\"\n                          [settings]=\"dropdownSettings\"\n                          (onSelect)=\"onItemSelect($event)\"\n                          (onSelectAll)=\"onSelectAll($event)\"\n                          required\n                        >\n                        </ng-multiselect-dropdown> -->\n\n                        <div class=\"validation-errors text-danger\">\n                          <div *ngFor=\"let validation of validation_messages.IBAN\">\n                            <div col-12 class=\"error-message\"\n                              *ngIf=\"submitUser.get('IBAN').hasError(validation.type) && (submitUser.get('IBAN').dirty || submitUser.get('IBAN').touched)\">\n                              {{ validation.message }}\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n    \n              </div>\n    \n            </div>\n            <div class=\"modal-footer\">\n                <div class=\"row\">\n                    <div class=\"col-12\">\n                        <div class=\"btn-wrap\">\n                            <button type=\"reset\" class=\"btn btn-gry btn-margin-2\" (click)=\"closeAddUserButton()\">Cancel</button>\n                            <button [ngClass]=\"{'pointer-none':isSubmitLoading}\" style=\"margin-left: 5px;\" type=\"button\" class=\"btn btn-success btn-margin-2\" (click)=\"addUserSubmit()\">{{isSubmitLoading?'Submitting...':'Save'}}</button>\n                        </div>\n      \n                    </div>\n                </div>\n            </div>\n          </form>\n  \n  \n        </div>\n      </div>\n    </div>\n  </div>\n\n <!--  <ng-multiselect-dropdown\n    [placeholder]=\"'custom placeholder'\"\n    [data]=\"dropdownList\"\n    formControlName=\"IBAN\"\n    [(ngModel)]=\"selectedItems\"\n    [settings]=\"dropdownSettings\"\n    (onSelect)=\"onItemSelect($event)\"\n    (onSelectAll)=\"onSelectAll($event)\"\n  >\n  </ng-multiselect-dropdown> -->\n\n  <!--ADD NEW USER -->");

/***/ }),

/***/ "./node_modules/raw-loader/dist/cjs.js!./src/app/goverment-edit-user-details/goverment-edit-user-details.component.html":
/*!******************************************************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/goverment-edit-user-details/goverment-edit-user-details.component.html ***!
  \******************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("\n<!--===========================Start Content ============================-->\n<div class=\"pt-0 kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor kt-margin-top-50 kt-content-padding\">\n    <div class=\"kt-container\">\n        <!--Middle Content Here-->\n\n        <div class=\"row\">\n             <app-sidemenu></app-sidemenu>\n            <!-- <div class=\"col-12 col-sm-3 col-md-3 col-lg-3 left-panel-menu-wrap w-20 fixed-wrap\">\n\n            \n                <div class=\"col-12 col-sm-3 col-md-3 col-lg-3 left-panel-menu-wrap w-20 fixed-wrap\">\n                    <ul class=\"vertical-menu\">\n                      <li *ngIf=\"roleId == 1\"><a routerLink=\"/dashboard\"><span class=\"db-icon\"></span>{{'HOME.Dashboard' | translate}}</a></li>\n                      <li *ngIf=\"roleId == 1\"><a routerLink=\"/privateLgManagement\"><span class=\"lg-icon\"></span>{{'HOME.LG_Management' | translate}}</a>\n                      <li *ngIf=\"roleId == 1\"><a routerLink=\"/requestLgIssuance\"><span class=\"lg-icon\"></span>{{'HOME.LG_issuance' | translate}}</a></li>\n                      <li *ngIf=\"roleId == 1\"><a routerLink=\"/privatependingtasks\"><span class=\"lg-icon\"></span>{{'HOME.Pending_Tasks' | translate}}</a>\n                      <li *ngIf=\"roleId == 1\"><a routerLink=\"/privateaccountmanagement\" class=\"active\"><span class=\"ta-icon\"></span>Account Management</a></li>\n                    </ul>\n                </div>\n            </div> -->\n            <div class=\"col-12 col-sm-9 col-md-9 col-lg-9 padding-null scroll-wrap\">\n\n                <div class=\"grey-bg\">\n                    <section class=\"design-process-section\" id=\"process-tab\">\n                        <div>\n                            <div>\n                                <div>\n                                    <div class=\"text-left1\">\n                                        <h3 class=\"kt-login__title pt-3 m-0 mb-30\">User Details</h3>\n                                    </div>\n                                    <!-- Tab panes -->\n                                    <div class=\"tab-content\">\n                                        <div role=\"tabpanel\" class=\"tab-pane active\" id=\"discover\">\n                                            <div class=\"design-process-content\">\n\n                                                <div class=\"row\">\n                                                    <div class=\"col-sm-12\">\n\n                                                        <!--New Design-->\n                                                        <form [formGroup]=\"submitUser\" (submit)=\"editUserSubmit()\">\n                                                            <div class=\"kt-portlet\">\n                                                                <div class=\"kt-portlet__head\">\n                                                                    <div class=\"kt-portlet__head-label\">\n                                                                        <h3 class=\"kt-portlet__head-title\">User Detail</h3>\n                                                                    </div>\n                                                                </div>\n                                                                <div class=\"kt-form kt-form--label-right\">\n                                                                    <div class=\"kt-portlet__body\">\n                                                                        <div class=\"container\">\n\n                                                                            <div class=\"row\">\n                                                                                <div class=\"col-12 col-md-6\">\n                                                                                    <div class=\"form-group margin-bottom-10\">\n                                                                                        <label for=\"national-identification\" class=\"col-form-label\">National Identification <em style=\"font-style: normal;\" class=\"text-danger-black\">*</em> </label>\n                                                                                        <input class=\"form-control profile-txt1 col-md-9\" type=\"text\" formControlName=\"NationalId\" readonly>\n                                                                                    </div>\n                                                                                </div>\n                                                                                <div class=\"col-12 col-md-6\">\n\n                                                                                    <div class=\"form-group margin-bottom-10\">\n                                                                                        <label for=\"dob\" class=\"col-form-label\">Date of birth <em style=\"font-style: normal;\" class=\"text-danger-black\">*</em></label>\n                                                                                        <input class=\"form-control profile-txt1 col-md-9\" type=\"text\" formControlName=\"dateOfBirth\" readonly>\n                                                                                    </div>\n                                                                                </div>\n                                                                                <div class=\"col-12 col-md-6\">\n                                                                                    <div class=\"form-group margin-bottom-10\">\n                                                                                        <label for=\"first-name\" class=\"col-form-label\">First name <em style=\"font-style: normal;\" class=\"text-danger-black\">*</em></label>\n                                                                                        <input class=\"form-control profile-txt1 col-md-9\" type=\"text\" formControlName=\"FirstName\" readonly>\n                                                                                    </div>\n                                                                                </div>\n\n                                                                                <div class=\"col-12 col-md-6\">\n                                                                                    <div class=\"form-group margin-bottom-10\">\n                                                                                        <label for=\"last-name\" class=\"col-form-label\">Last name <em style=\"font-style: normal;\" class=\"text-danger-black\">*</em> </label>\n                                                                                        <input class=\"form-control profile-txt1 col-md-9\" type=\"text\" formControlName=\"LastName\" readonly>\n                                                                                    </div>\n                                                                                </div>\n\n                                                                                <div class=\"col-12 col-md-6\">\n                                                                                    <div class=\"form-group margin-bottom-10\">\n                                                                                        <label for=\"mob-no-registered-in-absher\" class=\"col-form-label\"> Mobile number registered in Absher <em style=\"font-style: normal;\" class=\"text-danger-black\">*</em> </label>\n                                                                                        <input class=\"form-control profile-txt1 col-md-9\" type=\"text\" formControlName=\"mobileNo\" readonly>\n                                                                                    </div>\n                                                                                </div>\n\n                                                                                <div class=\"col-12 col-md-6\">\n                                                                                    <div class=\"form-group margin-bottom-10\">\n                                                                                        <label for=\"email\" class=\"col-form-label\"> Email <em style=\"font-style: normal;\" class=\"text-danger-black\">*</em> </label>\n                                                                                        <input class=\"form-control col-md-9\" type=\"text\" formControlName=\"Email\" >\n                                                                                        <div class=\"validation-errors text-danger\">\n                                                                                          <div *ngFor=\"let validation of validation_messages.Email\">\n                                                                                            <div col-12 class=\"error-message\"\n                                                                                              *ngIf=\"submitUser.get('Email').hasError(validation.type) && (submitUser.get('Email').dirty || submitUser.get('Email').touched)\">\n                                                                                              {{ validation.message }}\n                                                                                            </div>\n                                                                                          </div>\n                                                                                      </div>\n                                                                                    </div>\n                                                                                </div>\n\n                                                                                <div class=\"col-12 col-md-6\">\n                                                                                    <div class=\"form-group margin-bottom-10\">\n                                                                                        <div class=\"btn-wrap\">\n                                                                                            <button (click)=\"openResetPasswordModal()\" type=\"button\" class=\"btn btn-success\">Reset Password</button>\n                                                                                        </div>\n                                                                                    </div>\n                                                                                </div>\n                                                                                <div class=\"col-12 col-md-6\">\n                                                                                    <div class=\"form-group margin-top-30\" style=\"margin-top: 10px;\">\n                                                                                        <div>\n                                                                                            <label class=\"container-radio-btn\">Activate\n                                                                                                <input type=\"radio\" checked=\"checked\" formControlName=\"activeDeactive\" value=\"Y\" >\n                                                                                                <span class=\"checkmark\"></span>\n                                                                                            </label>\n                                                                                            <label class=\"container-radio-btn\"> Deactivate\n                                                                                                <input type=\"radio\" formControlName=\"activeDeactive\" value=\"N\">\n                                                                                                <span class=\"checkmark\"></span>\n                                                                                            </label>\n                                                                                            <div class=\"validation-errors text-danger\">\n                                                                                              <div *ngFor=\"let validation of validation_messages.activeDeactive\">\n                                                                                                <div col-12 class=\"error-message\"\n                                                                                                  *ngIf=\"submitUser.get('activeDeactive').hasError(validation.type) && (submitUser.get('activeDeactive').dirty || submitUser.get('activeDeactive').touched)\">\n                                                                                                  {{ validation.message }}\n                                                                                                </div>\n                                                                                              </div>\n                                                                                          </div>\n                                                                                        </div>\n                                                                                    </div>\n                                                                                </div>\n                                                                            </div>\n                                                                        </div>\n\n                                                                    </div>\n                                                                </div>\n                                                            </div>\n                                                            <!--/-->\n                                                            <div class=\"kt-portlet\">\n                                                                <div class=\"kt-portlet__head\">\n                                                                    <div class=\"kt-portlet__head-label\">\n                                                                        <h3 class=\"kt-portlet__head-title\">User privileges management</h3>\n                                                                    </div>\n                                                                </div>\n                                                                <div class=\"kt-form kt-form--label-right\">\n                                                                    <div class=\"kt-portlet__body\">\n                                                                        <div class=\"container\">\n\n                                                                            <div class=\"row\">\n                                                                               <!--  <div class=\"col-md-12 text-center\">\n                                                                                    <p class=\"mid-txt\"> * Multi choices for DD list! * </p>\n                                                                                </div> -->\n                                                                            </div>\n                                                                            <div class=\"row\" formArrayName=\"contacts\">\n                                                                                <div class=\"col-12 col-md-12\" *ngFor=\"let item of submitUser.get('contacts').controls; let i = index; let first = first; let last = last;  let odd = odd\">\n                                                                                    <div class=\"row\"  [formGroupName]=\"i\">\n                                                                                        <div class=\"col-md-6\" >\n                                                                                            <div class=\"form-group margin-bottom-10\">\n                                                                                                <label for=\"select-bank\" class=\"col-form-label\">Select bank <em style=\"font-style: normal;\" class=\"text-danger-black\">*</em> </label>\n                                                                                                <select class=\"form-control form-control col-md-9 \" \n                                                                                                formControlName=\"bankName\"\n                                                                                                (change)=\"onSelectBank(item, $event.target.value, 'reset')\"\n                                                                                                \n                                                                                                >\n                                                                                                     <!-- (change)=\"onSelectBank(item, $event.target.value)\" -->\n                                                                                                     <!-- [value]=\"\" -->\n                                                                                                    <option [value]=\"\">Select Bank </option>\n                                                                                                    <option *ngFor=\"let listOfBankNames of bankNamesList\" [value]=\"listOfBankNames.bank_code\">\n                                                                                                      {{listOfBankNames.bank_name}}\n                                                                                                    </option>\n                                                                                                  </select>\n                                                                                                  <div class=\"validation-errors text-danger\">\n                                                                                                      <div *ngFor=\"let validation of validation_messages.bankName\">\n                                                                                                        <div col-12 class=\"error-message\"\n                                                                                                          *ngIf=\"item.get('bankName').hasError(validation.type) && (item.get('bankName').dirty || item.get('bankName').touched)\">\n                                                                                                          {{ validation.message }}\n                                                                                                        </div>\n                                                                                                      </div>\n                                                                                                  </div>\n                                                                                            </div>\n                                                                                        </div>\n\n                                                                                        <div class=\"col-md-6\">\n                                                                                            <div class=\"form-group margin-bottom-10\">\n                                                                                                <label for=\"select-bank\" class=\"col-form-label\" style=\"float: left;width: 100%;\">Select IBAN  <em style=\"font-style: normal;\" class=\"text-danger-black\">*</em> </label>\n                                                                                                <!-- <select class=\"form-control\" formControlName=\"IBAN\">\n                                                                                                  <option>Select IBAN </option>\n                                                                                                  <option *ngFor=\"let listOfBankNames of bankNamesList\">\n                                                                                                    {{listOfBankNames.ibanNo}}\n                                                                                                  </option>\n                                                                                                </select> -->\n\n                                                                                                <ng-multiselect-dropdown style=\"float: left;padding: 0px;\" class=\" col-md-9\" *ngIf=\"bankNamesList && bankNamesList.length > 0\"\n                                                                                                  [placeholder]=\"'Select IBAN'\"\n                                                                                                  [data]=\"item.bankNamesList\"\n                                                                                                  formControlName=\"iban\"\n                                                                                                  [settings]=\"dropdownSettings\"\n                                                                                                  (onSelect)=\"onItemSelect($event)\"\n                                                                                                  (onSelectAll)=\"onSelectAll($event)\"\n                                                                                                >\n                                                                                                </ng-multiselect-dropdown>\n\n                                                                                                <div class=\"validation-errors text-danger\">\n                                                                                                      <div *ngFor=\"let validation of validation_messages.iban\">\n                                                                                                        <div col-12 style=\"float: left;\" class=\"error-message\"\n                                                                                                          *ngIf=\"item.get('iban').hasError(validation.type) && (item.get('iban').dirty || item.get('iban').touched)\">\n                                                                                                          {{ validation.message }}\n                                                                                                        </div>\n                                                                                                      </div>\n                                                                                                  </div>\n\n                                                                                            </div>\n                                                                                            <div  style=\"margin-top: 0px;\">\n                                                                                                \n\n                                                                                                <!-- add -->\n                                                                                                <button class=\"addmore-btn btn\" (click)=\"addMore('contacts')\" *ngIf=\"first || last\">  \n                                                                                                     <i class=\"fa fa-plus\"></i>  \n                                                                                                </button>\n\n                                                                                                <!-- remove -->\n                                                                                                <button class=\"addmore-btn btn remove\" (click)=\"removeMoreItem('contacts', i)\" [hidden]=\"first\"> \n                                                                                                    <i class=\"fa fa-trash\"></i> \n                                                                                                </button>\n                                                                                                \n                                                                                            </div>\n                                                                                        </div>\n                                                                                        \n                                                                                    \n\n                                                                                    </div>\n                                                                                </div>\n                                                                            </div>\n                                                                            <div class=\"row\">\n\n                                                                                <!-- <div class=\"col-12 col-md-6\">\n                                                                                    <div class=\"form-group margin-bottom-10\">\n                                                                                        <label for=\"type-of-actions\" class=\"col-form-label\">Type of actions <em style=\"font-style: normal;\" class=\"text-danger-black\">*</em> </label>\n                                                                                        <select class=\"form-control col-md-9\">\n                                                                                            <option></option>\n                                                                                        </select>\n                                                                                    </div>\n                                                                                </div>\n\n                                                                                <div class=\"col-12 col-md-6\">\n                                                                                    <div class=\"form-group margin-bottom-10\">\n                                                                                        <label for=\"bond-price-limit\" class=\"col-form-label\">Bond price limit <em style=\"font-style: normal;\" class=\"text-danger-black\">*</em> </label>\n                                                                                        <input class=\"form-control profile-txt1 col-md-9\" type=\"text\" value=\"\" id=\"\" readonly=\"\">\n                                                                                    </div>\n                                                                                </div> -->\n\n                                                                                <div class=\"col-12 col-md-6\">\n                                                                                    <!-- <div class=\"row\">\n                                                                                        <div class=\"col-12 col-md-12 frm1\">\n                                                                                            <div class=\"form-group margin-bottom-10\">\n                                                                                                <label for=\"select-iban\" class=\"col-form-label\">Select IBAN <em style=\"font-style: normal;\" class=\"text-danger-black\">*</em> </label>\n                                                                                                <div class=\"select-iban-box col-md-9\">\n                                                                                                    <div class=\"form-group mmargin-bottom-10\">\n                                                                                                        <div class=\"checkbox\">\n                                                                                                            <label class=\"container-checkbox\"> SA940000121521492238372\n\n                                                                                                                <input type=\"checkbox\" checked=\"checked\">\n                                                                                                                <span class=\"checkmark\"></span>\n                                                                                                            </label>\n                                                                                                        </div>\n                                                                                                    </div>\n                                                                                                    <div class=\"form-group mmargin-bottom-10\">\n                                                                                                        <div class=\"checkbox\">\n                                                                                                            <label class=\"container-checkbox\"> SA940000514521492211111\n\n                                                                                                                <input type=\"checkbox\" checked=\"checked\">\n                                                                                                                <span class=\"checkmark\"></span>\n                                                                                                            </label>\n                                                                                                        </div>\n                                                                                                    </div>\n                                                                                                    <div class=\"form-group mmargin-bottom-10\">\n                                                                                                        <div class=\"checkbox\">\n                                                                                                            <label class=\"container-checkbox\"> SA940000514521492211111\n\n                                                                                                                <input type=\"checkbox\">\n                                                                                                                <span class=\"checkmark\"></span>\n                                                                                                            </label>\n                                                                                                        </div>\n                                                                                                    </div>\n                                                                                                </div>\n                                                                                                <label for=\"type-of-bonds\" class=\"col-form-label\">Type of bonds <em style=\"font-style: normal;\" class=\"text-danger-black\">*</em> </label>\n                                                                                                <select class=\"form-control col-md-9\">\n                                                                                                    <option>Bid bond, Performance bond </option>\n                                                                                                </select>\n                                                                                            </div>\n                                                                                        </div>\n                                                                                        <div class=\"col-12 col-md-12\">\n                                                                                            <div class=\"form-group margin-bottom-10 margin-top-20\">\n                                                                                                <div class=\"checkbox m-top-11\">\n                                                                                                    <label class=\"container-checkbox\"> Grant all privileges?\n\n                                                                                                        <input type=\"checkbox\" checked=\"checked\">\n                                                                                                        <span class=\"checkmark\"></span>\n                                                                                                    </label>\n                                                                                                </div>\n                                                                                            </div>\n                                                                                        </div>\n                                                                                    </div> -->\n                                                                                </div>\n\n                                                                            </div>\n\n                                                                            <!-- <div class=\"row\">\n                                                                                <div class=\"col-12 col-md-6\">\n                                                                                    <p class=\"assigned-txt-wrap\" style=\"margin-top: 30px;\">Assigned privileges </p>\n                                                                                </div>\n                                                                                <div class=\"col-md-12\">\n                                                                                    <div class=\"new-blue-table border-none\">\n                                                                                        <div class=\"table-responsive\">\n                                                                                            <table class=\"table table-bordered table-striped table-hover\">\n                                                                                                <thead>\n                                                                                                    <tr>\n                                                                                                        <th>#</th>\n                                                                                                        <th>Bank name</th>\n                                                                                                        <th>IBAN</th>\n                                                                                                        <th>Privileges</th>\n                                                                                                        <th>Status</th>\n                                                                                                        <th>Actions</th>\n                                                                                                    </tr>\n                                                                                                </thead>\n                                                                                                <tbody>\n                                                                                                    <tr>\n                                                                                                        <td>1</td>\n                                                                                                        <td>SABB</td>\n                                                                                                        <td>SA940000121521492238372</td>\n                                                                                                        <td>All</td>\n                                                                                                        <td>Active</td>\n                                                                                                        <td>\n                                                                                                            <div>\n                                                                                                                <label class=\"container-radio-btn\"> Deactivate\n                                                                                                                    <input type=\"radio\" name=\"radio\">\n                                                                                                                    <span class=\"checkmark\"></span>\n                                                                                                                </label>\n                                                                                                            </div>\n                                                                                                        </td>\n                                                                                                    </tr>\n                                                                                                    <tr>\n                                                                                                        <td>2</td>\n                                                                                                        <td>Alrajhi</td>\n                                                                                                        <td>SA950000313608010054279</td>\n                                                                                                        <td>Limited</td>\n                                                                                                        <td>Deactive</td>\n                                                                                                        <td>\n                                                                                                            <div>\n                                                                                                                <label class=\"container-radio-btn\"> Deactivate\n                                                                                                                    <input type=\"radio\" name=\"radio\">\n                                                                                                                    <span class=\"checkmark\"></span>\n                                                                                                                </label>\n                                                                                                            </div>\n                                                                                                        </td>\n                                                                                                    </tr>\n                                                                                                    <tr>\n                                                                                                        <td>3</td>\n                                                                                                        <td>ANB</td>\n                                                                                                        <td>SA840000521365214788881</td>\n                                                                                                        <td>All</td>\n                                                                                                        <td>Active</td>\n                                                                                                        <td>\n                                                                                                            <div>\n                                                                                                                <label class=\"container-radio-btn\"> Deactivate\n                                                                                                                    <input type=\"radio\" name=\"radio\">\n                                                                                                                    <span class=\"checkmark\"></span>\n                                                                                                                </label>\n                                                                                                            </div>\n                                                                                                        </td>\n                                                                                                    </tr>\n\n                                                                                                </tbody>\n                                                                                            </table>\n                                                                                        </div>\n                                                                                    </div>\n                                                                                </div>\n                                                                            </div> -->\n\n                                                                        </div>\n\n                                                                    </div>\n                                                                </div>\n                                                            </div>\n                                                            <!--/-->\n                                                            <!--New Design-->\n\n                                                            <div class=\"kt-portlet__foot\">\n                                                                <div class=\"kt-form__actions\">\n                                                                    <div class=\"row\">\n                                                                        <div class=\"col-12\">\n                                                                            <div class=\"btn-wrap\">\n                                                                                <button type=\"button\" (click)=\"goCancel()\" class=\"btn btn-gry\"> Cancel </button>\n                                                                                <button  type=\"submit\" class=\"btn btn-success\" style=\"margin-left: 5px;\"> Save </button>\n                                                                            </div>\n\n                                                                        </div>\n                                                                    </div>\n                                                                </div>\n                                                            </div>\n                                                        </form>\n                                                    </div>\n                                                </div>\n\n                                            </div>\n                                        </div>\n                                    </div>\n\n                                </div>\n                            </div>\n                        </div>\n                    </section>\n                </div>\n            </div>\n        </div>\n\n        <!--Middle Content Here-->\n    </div>\n</div>");

/***/ }),

/***/ "./node_modules/raw-loader/dist/cjs.js!./src/app/government-account-management/government-account-management.component.html":
/*!**********************************************************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/government-account-management/government-account-management.component.html ***!
  \**********************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<div class=\"pt-0 kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor kt-margin-top-50 kt-content-padding\">\n    <div class=\"kt-container\">\n        <!--Middle Content Here-->\n\n        <div class=\"row\">\n            <app-sidemenu></app-sidemenu>\n           <!-- <div class=\"col-12 col-sm-3 col-md-3 col-lg-3 left-panel-menu-wrap w-20 fixed-wrap\">\n                <div class=\"col-12 col-sm-3 col-md-3 col-lg-3 left-panel-menu-wrap w-20 fixed-wrap\">\n                    <ul class=\"vertical-menu\">\n                        <li *ngIf=\"roleId == 2\"><a routerLink=\"/govDashboard\"><span class=\"db-icon\"></span>{{'HOME.Dashboard' | translate}}</a></li>\n                        <li *ngIf=\"roleId == 2\"><a routerLink=\"/govLgManagement\"><span class=\"db-icon\"></span>{{'HOME.LG_Management' | translate}}</a></li>\n                        <li *ngIf=\"roleId == 2\"><a routerLink=\"/governmentpendingtasks\"><span class=\"db-icon\"></span>{{'HOME.Pending_Tasks' | translate}}</a></li>\n                        <li *ngIf=\"roleId == 2\"><a routerLink=\"/governmentaccountmanagement\" class=\"active\"><span class=\"db-icon\"></span>Account Management</a></li>\n                    </ul>\n                </div>\n            </div>-->\n            <div class=\"col-12 col-sm-9 col-md-9 col-lg-9 padding-null scroll-wrap\">\n\n                <div class=\"grey-bg\">\n                    <section class=\"design-process-section\" id=\"process-tab\">\n                        <div>\n                            <div>\n                                <div>\n                                    <div class=\"text-left1\">\n                                        <h3 class=\"kt-login__title pt-3 m-0 mb-30\">Accounts Management</h3>\n                                    </div>\n                                    <!-- Tab panes -->\n                                    <div class=\"tab-content\">\n                                        <div role=\"tabpanel\" class=\"tab-pane active\" id=\"discover\">\n                                            <div class=\"design-process-content\">\n                                                <form>\n                                                    <div class=\"row\">\n                                                        <div class=\"col-sm-12\">\n\n                                                            <div class=\"kt-portlet\">\n                                                                <div class=\"kt-portlet__head\">\n                                                                    <div class=\"kt-portlet__head-label\">\n                                                                        <h3 class=\"kt-portlet__head-title\">Active users</h3>\n                                                                    </div>\n                                                                </div>\n                                                                <div class=\"kt-form kt-form--label-right\">\n                                                                    <div class=\"kt-portlet__body\">\n                                                                        <div class=\"container\">\n                                                                            <div class=\"row\">\n                                                                                <div class=\"col-md-12\">\n                                                                                    <div class=\"credit-card-button-wrap\">\n                                                                                        <button type=\"button\" class=\"btn btn-success\" data-toggle=\"modal\" data-target=\"#myModal\" (click) = \"addnewuser()\">Add new user</button>\n                                                                                    </div>\n                                                                                    <div class=\"kt-portlet no-shadow\">\n                                                                                        <div class=\"new-blue-table1\">\n                                                                                            <div class=\"table-responsive\">\n                                                                                                <!-- <table datatable [dtOptions]=\"dtOptions\" class=\"table table-bordered table-striped table-hover\"> -->\n                                                                                                 <div >\n                                                                                                <div *ngIf=\"AciveUsers?.length > 0; then thenBlock else elseBlock\"> </div>\n                                                                                                 <ng-template #thenBlock>\n                                                                                                    <table datatable [dtOptions]=\"dtOptions\" class=\"table table-bordered table-striped table-hover\">\n                                                                                                        <thead>\n                                                                                                            <tr>\n                                                                                                                <th>#</th>\n                                                                                                                <th>Name</th>\n                                                                                                                <th>Mobile</th>\n                                                                                                                <th>Email</th>\n                                                                                                                <th>Status</th>\n                                                                                                                <th>Number of assigned banks</th>\n                                                                                                                <th>Actions</th>\n                                                                                                            </tr>\n                                                                                                        </thead>\n                                                                                                        <tbody>\n\n\n                                                                                                            <tr *ngFor=\"let AciveUser of AciveUsers; let i = index \">\n                                                                                                                <td>{{i+1}}</td>\n                                                                                                                <td>{{AciveUser.beneficiary_name}}</td>\n                                                                                                                <td>{{AciveUser.contact_info}}</td>\n                                                                                                                <td>{{AciveUser.email}}</td>\n                                                                                                                <td>{{AciveUser.status}}</td>\n                                                                                                                <td>{{AciveUser.noFoAssignedBank}}</td>\n                                                                                                                <td>\n                                                                                                                   <!-- <a href=\"javascript:void(0)\" class=\"blue-edit-btn\" routerLink=\"/editUserDetails/{{AciveUser.login_id}}/{{AciveUser.iban_no}}\" skipLocationChange=true>Edit</a> -->\n                                                                                                                   <a href=\"javascript:void(0)\" class=\"blue-edit-btn\" (click)=\"goLocationChange(AciveUser)\">Edit</a>\n                                                                                                                   <!-- <a href=\"javascript:void(0)\" class=\"blue-edit-btn\" (click)=\"goLocationChange(AciveUser)\">Edit</a> -->\n                                                                                                                   <!-- <a href=\"javascript:void(0)\" class=\"blue-edit-btn\" routerLink=\"/editUserDetails/{{AciveUser.login_id}}/Sts1200\" >Edit</a> -->\n                                                                                                                </td>\n                                                                                                            </tr>\n                                                                                                        </tbody>\n                                                                                                    </table>\n                                                                                                </ng-template>\n\n                                                                                                <ng-template #elseBlock>\n                                                                                                    <table datatable [dtOptions]=\"dtOptions\" class=\"table table-bordered table-striped table-hover\">\n                                                                                                        <thead>\n                                                                                                            <tr>\n                                                                                                                <th>#</th>\n                                                                                                                <th>Name</th>\n                                                                                                                <th>Mobile</th>\n                                                                                                                <th>Email</th>\n                                                                                                                <th>Status</th>\n                                                                                                                <th>Number of assigned banks</th>\n                                                                                                                <th>Actions</th>\n                                                                                                            </tr>\n                                                                                                        </thead>\n                                                                                                        <tbody>\n\n\n                                                                                                            <tr *ngFor=\"let AciveUser of AciveUsers; let i = index \">\n                                                                                                                <td>{{i+1}}</td>\n                                                                                                                <td>{{AciveUser.beneficiary_name}}</td>\n                                                                                                                <td>{{AciveUser.contact_info}}</td>\n                                                                                                                <td>{{AciveUser.email}}</td>\n                                                                                                                <td>{{AciveUser.status}}</td>\n                                                                                                                <td>{{AciveUser.noFoAssignedBank}}</td>\n                                                                                                                <td>\n                                                                                                                   <!-- <a href=\"javascript:void(0)\" class=\"blue-edit-btn\" routerLink=\"/editUserDetails/{{AciveUser.login_id}}/{{AciveUser.iban_no}}\" skipLocationChange=true>Edit</a> -->\n                                                                                                                   <a href=\"javascript:void(0)\" class=\"blue-edit-btn\" (click)=\"goLocationChange(AciveUser)\">Edit</a>\n                                                                                                                   <!-- <a href=\"javascript:void(0)\" class=\"blue-edit-btn\" (click)=\"goLocationChange(AciveUser)\">Edit</a> -->\n                                                                                                                   <!-- <a href=\"javascript:void(0)\" class=\"blue-edit-btn\" routerLink=\"/editUserDetails/{{AciveUser.login_id}}/Sts1200\" >Edit</a> -->\n                                                                                                                </td>\n                                                                                                            </tr>\n\n                                                                                                        </tbody>\n                                                                                                    </table>\n                                                                                                </ng-template>\n                                                                                            </div>\n                                                                                            </div>\n                                                                                        </div>\n\n                                                                                    </div>\n                                                                                </div>\n\n                                                                            </div>\n                                                                        </div>\n\n                                                                    </div>\n                                                                </div>\n                                                            </div>\n                                                            <!--/-->\n                                                            <div class=\"kt-portlet\">\n                                                                <div class=\"kt-portlet__head\">\n                                                                    <div class=\"kt-portlet__head-label\">\n                                                                        <h3 class=\"kt-portlet__head-title\">Active workflow</h3>\n                                                                    </div>\n                                                                </div>\n                                                                <div class=\"kt-form kt-form--label-right\">\n                                                                    <div class=\"kt-portlet__body\">\n                                                                        <div class=\"container\">\n                                                                            <div class=\"row\">\n                                                                                <div class=\"col-md-12\">\n                                                                                    <div class=\"credit-card-button-wrap\" *ngIf=\"onBoardResolution == 'Y'\">\n                                                                                        <a class=\"btn btn-success\" (click)=\"addnewworkflow()\">Add new workflow</a>\n                                                                                    </div>\n                                                                                    <div class=\"kt-portlet\">\n                                                                                        <div class=\"new-blue-table border-none\">\n                                                                                            <div class=\"table-responsive\">\n                                                                                                <table class=\"table table-bordered table-striped table-hover\">\n                                                                                                    <thead>\n                                                                                                        <tr>\n                                                                                                            <th>#</th>\n                                                                                                            <th>Name</th>\n                                                                                                            <th>Status</th>\n                                                                                                            <th>Actions</th>\n                                                                                                        </tr>\n                                                                                                    </thead>\n                                                                                                    <tbody>\n                                                                                                        <tr *ngFor=\"let Aciveworkflow of Aciveworkflows; let i = index \">\n                                                                                                            <td>{{i+1}}</td>\n                                                                                                            <td>{{Aciveworkflow.workflow_desc}}</td>\n                                                                                                            <td>{{Aciveworkflow.status}}</td>\n                                                                                                            <!--<td *ngIf=\"Aciveworkflow.status == 'A'\">Active</td>\n                                                                                                            <td *ngIf=\"Aciveworkflow.status == 'I'\">Inactive</td>-->\n                                                                                                            <td>\n                                                                                                                <a href=\"javascript:void(0)\" class=\"black-cog-btn\" (click)=\"workflowDetails(Aciveworkflow)\"><i class=\"fa fa-cog\" aria-hidden=\"true\"></i></a>\n                                                                                                            </td>\n                                                                                                        </tr>\n\n                                                                                                    </tbody>\n                                                                                                </table>\n                                                                                            </div>\n                                                                                        </div>\n\n                                                                                    </div>\n                                                                                </div>\n\n                                                                            </div>\n                                                                        </div>\n\n                                                                    </div>\n                                                                </div>\n                                                            </div>\n                                                            <!--/-->\n\n                                                            <div class=\"kt-footer__copyright mt-20\">\n                                                                2019&nbsp;©&nbsp;Wthaq\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                </form>\n\n                                            </div>\n                                        </div>\n                                    </div>\n\n                                </div>\n                            </div>\n                        </div>\n                    </section>\n                </div>\n            </div>\n        </div>\n\n        <!--Middle Content Here-->\n    </div>\n</div>");

/***/ }),

/***/ "./node_modules/raw-loader/dist/cjs.js!./src/app/government-amendment-list/government-amendment-list.component.html":
/*!**************************************************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/government-amendment-list/government-amendment-list.component.html ***!
  \**************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (" \n    <!--===========================\n    Start Content\n    ============================-->\n    <div class=\"pt-0 kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor kt-margin-top-50\">\n        <div class=\"kt-container\">\n        <!--New Design Here-->\n        <div class=\"row\">\n        <app-sidemenu></app-sidemenu>\n        <!--<div class=\"col-12 col-sm-3 col-md-3 col-lg-3 left-panel-menu-wrap w-20 fixed-wrap\">\n            \n            <ul class=\"vertical-menu\">\n            <li *ngIf=\"roleId == 2\"><a routerLink=\"/govDashboard\"><span class=\"db-icon\"></span>{{'HOME.Dashboard' | translate}}</a></li>\n                <li *ngIf=\"roleId == 2\"><a routerLink=\"/govLgManagement\" class=\"active\"><span class=\"db-icon\"></span>{{'HOME.LG_Management' | translate}}</a></li>\n                <li *ngIf=\"roleId == 2\"><a routerLink=\"/governmentpendingtasks\"><span class=\"db-icon\"></span>{{'HOME.Pending_Tasks' | translate}}</a></li>\n            </ul>\n        </div>-->\n        <div class=\"col-12 col-sm-9 col-md-9 col-lg-9 padding-null scroll-wrap\">\n            \n            <div class=\"grey-bg\">\n            <section class=\"design-process-section\" id=\"process-tab\">\n                <div>\n                <div>\n                    <div>\n                    <div class=\"two-blocks-tab\">\n                        <ul>\n                        <li [ngClass]=\"{'active': isLgIssuedMeClicked}\"><a >{{'HOME.Letter_of_guarantee_issued_me' | translate}}</a></li>\n                        </ul>\n                    </div>\n                    <!-- Tab panes -->\n                    <div class=\"tab-content\">\n                        <div role=\"tabpanel\" class=\"tab-pane active\" id=\"discover\">\n                        <div class=\"design-process-content\">\n                            <form>\n                            <div class=\"row\" *ngIf=\"isOpenLgIssuedMeList\">\n\n                                <div class=\"col-sm-12\">\n                                <div class=\"kt-portlet\">\n                                    <div class=\"kt-portlet__head\">\n                                    <div class=\"kt-portlet__head-label\">\n                                        <h3 class=\"kt-portlet__head-title\">\n                                        {{'HOME.Active_letters_guarantee' | translate}}\n                                        </h3>\n                                    </div>\n                                    </div>\n                                    <!--begin::Form-->\n                                    <div class=\"kt-form kt-form--label-right\">\n                                    <div class=\"kt-portlet__body\">\n                                        <div class=\"container\">\n                                        <div class=\"row\">\n                                            <div class=\"col-md-12\">\n                                            <div class=\"kt-portlet no-shadow\">\n                                                <div class=\"new-blue-table1\">\n                                                <div class=\"table-responsive\">\n\n                                                    <div *ngIf=\"this.translate.currentLang == 'en'\">\n                                                    <div *ngIf=\"activeLgForMeLists.userObject?.length > 0; then activemethenBlock else activemeelseBlock\"> </div>\n                                                    <ng-template #activemethenBlock>\n                                                    <table datatable [dtOptions]=\"dtOptions\" class=\"table table-bordered table-striped table-hover\">\n                                                        <thead>\n                                                                <tr>\n                                                                <th class=\"table-col-7\">#</th>\n                                                                <th class=\"\"> {{'HOME.LG_Number' | translate}}</th>\n                                                                <th class=\"\">{{'HOME.LG_amount' | translate}}</th>\n                                                                <th class=\"\">{{'HOME.Beneficiary' | translate}}</th>\n                                                                <th class=\"\">{{'HOME.Bank' | translate}}</th>\n                                                                <th class=\"\">{{'HOME.LG_TYPE' | translate}}</th>\n                                                                <th class=\"\">{{'HOME.LG_Status' | translate}}</th>\n                                                                <th class=\"\">{{'HOME.Start_Date' | translate}}</th>\n                                                                <th class=\"\">{{'HOME.End_Date' | translate}}</th>\n                                                                <th class=\"\">{{'HOME.View_Details' | translate}}</th>\n                                                                </tr>\n                                                        </thead>\n                                                        <tbody>\n                                                        <tr *ngFor=\"let activeLgForMeList of activeLgForMeLists.userObject; let i = index \">\n                                                            <td>{{i+1}}</td>\n                                                                <td>{{activeLgForMeList.lg_no}}</td>\n                                                                <td>{{activeLgForMeList.lG_amount}}</td>\n                                                                <td>{{activeLgForMeList.beneficiary_name}}</td>\n                                                                <td>{{activeLgForMeList.bank_name}}</td>\n                                                                <td>{{activeLgForMeList.lg_type}}</td>\n                                                                <td>{{activeLgForMeList.status}}</td>\n                                                                <td>{{activeLgForMeList.start_date}}</td>\n                                                                <td>{{activeLgForMeList.end_date}}</td>\n                                                            <td><button type=\"button\" class=\"btn btn-success vw-details\" (click)=\"RowSelected(activeLgForMeList)\">Amend</button>\n                                                            </td>\n                                                        </tr>\n                                                        </tbody>\n                                                        </table>\n                                                    </ng-template>\n                                                    <ng-template #activemeelseBlock>\n                                                        <table datatable [dtOptions]=\"dtOptions\" class=\"table table-bordered table-striped table-hover\">\n                                                            <thead>\n                                                                <tr>\n                                                                <th class=\"table-col-7\">#</th>\n                                                                <th class=\"\"> {{'HOME.LG_Number' | translate}}</th>\n                                                                <th class=\"\">{{'HOME.LG_amount' | translate}}</th>\n                                                                <th class=\"\">{{'HOME.Beneficiary' | translate}}</th>\n                                                                <th class=\"\">{{'HOME.Bank' | translate}}</th>\n                                                                <th class=\"\">{{'HOME.LG_TYPE' | translate}}</th>\n                                                                <th class=\"\">{{'HOME.LG_Status' | translate}}</th>\n                                                                <th class=\"\">{{'HOME.Start_Date' | translate}}</th>\n                                                                <th class=\"\">{{'HOME.End_Date' | translate}}</th>\n                                                                <th class=\"\">{{'HOME.View_Details' | translate}}</th>\n                                                                    </tr>\n                                                            </thead>\n                                                            <tbody>\n                                                            <tr *ngFor=\"let activeLgForMeList of activeLgForMeLists.userObject; let i = index \">\n                                                                <td>{{i+1}}</td>\n                                                                    <td>{{activeLgForMeList.lg_no}}</td>\n                                                                    <td>{{activeLgForMeList.lG_amount}}</td>\n                                                                    <td>{{activeLgForMeList.beneficiary_name}}</td>\n                                                                    <td>{{activeLgForMeList.bank_name}}</td>\n                                                                    <td>{{activeLgForMeList.lg_type}}</td>\n                                                                    <td>{{activeLgForMeList.status}}</td>\n                                                                    <td>{{activeLgForMeList.start_date}}</td>\n                                                                    <td>{{activeLgForMeList.end_date}}</td>\n                                                                <td><button type=\"button\" class=\"btn btn-success vw-details\" (click)=\"RowSelected(activeLgForMeList)\">Amend</button>\n                                                                </td>\n                                                            </tr>\n                                                            </tbody>\n                                                            </table>\n                                                        </ng-template>\n                                                        </div>\n\n                                                        <div *ngIf=\"this.translate.currentLang == 'ar'\">\n                                                        <div *ngIf=\"activeLgForMeLists.userObject?.length > 0; then activemethenBlock else activemeelseBlock\"> </div>\n                                                        <ng-template #activemethenBlock>\n                                                        <table datatable [dtOptions]=\"dtOptionsAR\" class=\"table table-bordered table-striped table-hover\">\n                                                            <thead>\n                                                                    <tr>\n                                                                    <th class=\"table-col-7\">#</th>\n                                                                    <th class=\"\"> {{'HOME.LG_Number' | translate}}</th>\n                                                                    <th class=\"\">{{'HOME.LG_amount' | translate}}</th>\n                                                                    <th class=\"\">{{'HOME.Beneficiary' | translate}}</th>\n                                                                    <th class=\"\">{{'HOME.Bank' | translate}}</th>\n                                                                    <th class=\"\">{{'HOME.LG_TYPE' | translate}}</th>\n                                                                    <th class=\"\">{{'HOME.LG_Status' | translate}}</th>\n                                                                    <th class=\"\">{{'HOME.Start_Date' | translate}}</th>\n                                                                    <th class=\"\">{{'HOME.End_Date' | translate}}</th>\n                                                                    <th class=\"\">{{'HOME.View_Details' | translate}}</th>\n                                                                    </tr>\n                                                            </thead>\n                                                            <tbody>\n                                                            <tr *ngFor=\"let activeLgForMeList of activeLgForMeLists.userObject; let i = index \">\n                                                                <td>{{i+1}}</td>\n                                                                    <td>{{activeLgForMeList.lg_no}}</td>\n                                                                    <td>{{activeLgForMeList.lG_amount}}</td>\n                                                                    <td>{{activeLgForMeList.beneficiary_name}}</td>\n                                                                    <td>{{activeLgForMeList.bank_name}}</td>\n                                                                    <td>{{activeLgForMeList.lg_type}}</td>\n                                                                    <td>{{activeLgForMeList.status}}</td>\n                                                                    <td>{{activeLgForMeList.start_date}}</td>\n                                                                    <td>{{activeLgForMeList.end_date}}</td>\n                                                                <td><button type=\"button\" class=\"btn btn-success vw-details\" (click)=\"RowSelected(activeLgForMeList)\">Amend</button>\n                                                                </td>\n                                                            </tr>\n                                                            </tbody>\n                                                            </table>\n                                                        </ng-template>\n                                                        <ng-template #activemeelseBlock>\n                                                            <table datatable [dtOptions]=\"dtOptionsAR\" class=\"table table-bordered table-striped table-hover\">\n                                                                <thead>\n                                                                    <tr>\n                                                                    <th class=\"table-col-7\">#</th>\n                                                                    <th class=\"\"> {{'HOME.LG_Number' | translate}}</th>\n                                                                    <th class=\"\">{{'HOME.LG_amount' | translate}}</th>\n                                                                    <th class=\"\">{{'HOME.Beneficiary' | translate}}</th>\n                                                                    <th class=\"\">{{'HOME.Bank' | translate}}</th>\n                                                                    <th class=\"\">{{'HOME.LG_TYPE' | translate}}</th>\n                                                                    <th class=\"\">{{'HOME.LG_Status' | translate}}</th>\n                                                                    <th class=\"\">{{'HOME.Start_Date' | translate}}</th>\n                                                                    <th class=\"\">{{'HOME.End_Date' | translate}}</th>\n                                                                    <th class=\"\">{{'HOME.View_Details' | translate}}</th>\n                                                                    </tr>\n                                                                </thead>\n                                                                <tbody>\n                                                                <tr *ngFor=\"let activeLgForMeList of activeLgForMeLists.userObject; let i = index \">\n                                                                    <td>{{i+1}}</td>\n                                                                        <td>{{activeLgForMeList.lg_no}}</td>\n                                                                        <td>{{activeLgForMeList.lG_amount}}</td>\n                                                                        <td>{{activeLgForMeList.beneficiary_name}}</td>\n                                                                        <td>{{activeLgForMeList.bank_name}}</td>\n                                                                        <td>{{activeLgForMeList.lg_type}}</td>\n                                                                        <td>{{activeLgForMeList.status}}</td>\n                                                                        <td>{{activeLgForMeList.start_date}}</td>\n                                                                        <td>{{activeLgForMeList.end_date}}</td>\n                                                                    <td><button type=\"button\" class=\"btn btn-success vw-details\" (click)=\"RowSelected(activeLgForMeList)\">Amend</button>\n                                                                    </td>\n                                                                </tr>\n                                                                </tbody>\n                                                                </table>\n                                                            </ng-template>\n                                                            </div>\n                                                </div>\n                                                </div>\n                                            </div>\n                                            </div>\n                                        </div>\n                                        </div>\n                                    </div>\n                                    </div>\n                                </div>\n                                </div>\n\n                            </div>\n                            </form>\n                        </div>\n                        </div>\n                    </div>\n                    </div>\n                </div>\n                </div>\n            </section>\n            </div>\n            \n        </div>\n        </div>\n        <!--New Design Here-->\n    </div>\n    </div>\n    <!--===========================\n                End Content\n                ============================-->\n\n<!--begin::Global Theme Bundle(used by all pages) -->\n<script src=\"../../assets/js/plugins.bundle.js\" type=\"text/javascript\"></script>\n<!-- end::Body -->\n            \n            \n            ");

/***/ }),

/***/ "./node_modules/raw-loader/dist/cjs.js!./src/app/government-confiscate-list/government-confiscate-list.component.html":
/*!****************************************************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/government-confiscate-list/government-confiscate-list.component.html ***!
  \****************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (" \n    <!--===========================\n    Start Content\n    ============================-->\n    <div class=\"pt-0 kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor kt-margin-top-50\">\n        <div class=\"kt-container\">\n        <!--New Design Here-->\n        <div class=\"row\">\n        <app-sidemenu></app-sidemenu>\n        <!--<div class=\"col-12 col-sm-3 col-md-3 col-lg-3 left-panel-menu-wrap w-20 fixed-wrap\">\n            \n            <ul class=\"vertical-menu\">\n            <li *ngIf=\"roleId == 2\"><a routerLink=\"/govDashboard\"><span class=\"db-icon\"></span>{{'HOME.Dashboard' | translate}}</a></li>\n                <li *ngIf=\"roleId == 2\"><a routerLink=\"/govLgManagement\" class=\"active\"><span class=\"db-icon\"></span>{{'HOME.LG_Management' | translate}}</a></li>\n                <li *ngIf=\"roleId == 2\"><a routerLink=\"/governmentpendingtasks\"><span class=\"db-icon\"></span>{{'HOME.Pending_Tasks' | translate}}</a></li>\n            </ul>\n        </div>-->\n        <div class=\"col-12 col-sm-9 col-md-9 col-lg-9 padding-null scroll-wrap\">\n            \n            <div class=\"grey-bg\">\n            <section class=\"design-process-section\" id=\"process-tab\">\n                <div>\n                <div>\n                    <div>\n                    <div class=\"two-blocks-tab\">\n                        <ul>\n                        <li [ngClass]=\"{'active': isLgIssuedMeClicked}\"><a >{{'HOME.Letter_of_guarantee_issued_me' | translate}}</a></li>\n                        </ul>\n                    </div>\n                    <!-- Tab panes -->\n                    <div class=\"tab-content\">\n                        <div role=\"tabpanel\" class=\"tab-pane active\" id=\"discover\">\n                        <div class=\"design-process-content\">\n                            <form>\n                            <div class=\"row\" *ngIf=\"isOpenLgIssuedMeList\">\n\n                                <div class=\"col-sm-12\">\n                                <div class=\"kt-portlet\">\n                                    <div class=\"kt-portlet__head\">\n                                    <div class=\"kt-portlet__head-label\">\n                                        <h3 class=\"kt-portlet__head-title\">\n                                        {{'HOME.Active_letters_guarantee' | translate}}\n                                        </h3>\n                                    </div>\n                                    </div>\n                                    <!--begin::Form-->\n                                    <div class=\"kt-form kt-form--label-right\">\n                                    <div class=\"kt-portlet__body\">\n                                        <div class=\"container\">\n                                        <div class=\"row\">\n                                            <div class=\"col-md-12\">\n                                            <div class=\"kt-portlet no-shadow\">\n                                                <div class=\"new-blue-table1\">\n                                                <div class=\"table-responsive\">\n\n                                                    <div *ngIf=\"this.translate.currentLang == 'en'\">\n                                                    <div *ngIf=\"activeLgForMeLists.userObject?.length > 0; then activemethenBlock else activemeelseBlock\"> </div>\n                                                    <ng-template #activemethenBlock>\n                                                    <table datatable [dtOptions]=\"dtOptions\" class=\"table table-bordered table-striped table-hover\">\n                                                        <thead>\n                                                                <tr>\n                                                                <th class=\"table-col-7\">#</th>\n                                                                <th class=\"\"> {{'HOME.LG_Number' | translate}}</th>\n                                                                <th class=\"\">{{'HOME.LG_amount' | translate}}</th>\n                                                                <th class=\"\">{{'HOME.Beneficiary' | translate}}</th>\n                                                                <th class=\"\">{{'HOME.Bank' | translate}}</th>\n                                                                <th class=\"\">{{'HOME.LG_TYPE' | translate}}</th>\n                                                                <th class=\"\">{{'HOME.LG_Status' | translate}}</th>\n                                                                <th class=\"\">{{'HOME.Start_Date' | translate}}</th>\n                                                                <th class=\"\">{{'HOME.End_Date' | translate}}</th>\n                                                                <th class=\"\">{{'HOME.View_Details' | translate}}</th>\n                                                                </tr>\n                                                        </thead>\n                                                        <tbody>\n                                                        <tr *ngFor=\"let activeLgForMeList of activeLgForMeLists.userObject; let i = index \">\n                                                            <td>{{i+1}}</td>\n                                                                <td>{{activeLgForMeList.lg_no}}</td>\n                                                                <td>{{activeLgForMeList.lG_amount}}</td>\n                                                                <td>{{activeLgForMeList.beneficiary_name}}</td>\n                                                                <td>{{activeLgForMeList.bank_name}}</td>\n                                                                <td>{{activeLgForMeList.lg_type}}</td>\n                                                                <td>{{activeLgForMeList.status}}</td>\n                                                                <td>{{activeLgForMeList.start_date}}</td>\n                                                                <td>{{activeLgForMeList.end_date}}</td>\n                                                            <td><button type=\"button\" class=\"btn btn-success vw-details\" (click)=\"RowSelected(activeLgForMeList)\">Confiscate</button>\n                                                            </td>\n                                                        </tr>\n                                                        </tbody>\n                                                        </table>\n                                                    </ng-template>\n                                                    <ng-template #activemeelseBlock>\n                                                        <table datatable [dtOptions]=\"dtOptions\" class=\"table table-bordered table-striped table-hover\">\n                                                            <thead>\n                                                                <tr>\n                                                                <th class=\"table-col-7\">#</th>\n                                                                <th class=\"\"> {{'HOME.LG_Number' | translate}}</th>\n                                                                <th class=\"\">{{'HOME.LG_amount' | translate}}</th>\n                                                                <th class=\"\">{{'HOME.Beneficiary' | translate}}</th>\n                                                                <th class=\"\">{{'HOME.Bank' | translate}}</th>\n                                                                <th class=\"\">{{'HOME.LG_TYPE' | translate}}</th>\n                                                                <th class=\"\">{{'HOME.LG_Status' | translate}}</th>\n                                                                <th class=\"\">{{'HOME.Start_Date' | translate}}</th>\n                                                                <th class=\"\">{{'HOME.End_Date' | translate}}</th>\n                                                                <th class=\"\">{{'HOME.View_Details' | translate}}</th>\n                                                                    </tr>\n                                                            </thead>\n                                                            <tbody>\n                                                            <tr *ngFor=\"let activeLgForMeList of activeLgForMeLists.userObject; let i = index \">\n                                                                <td>{{i+1}}</td>\n                                                                    <td>{{activeLgForMeList.lg_no}}</td>\n                                                                    <td>{{activeLgForMeList.lG_amount}}</td>\n                                                                    <td>{{activeLgForMeList.beneficiary_name}}</td>\n                                                                    <td>{{activeLgForMeList.bank_name}}</td>\n                                                                    <td>{{activeLgForMeList.lg_type}}</td>\n                                                                    <td>{{activeLgForMeList.status}}</td>\n                                                                    <td>{{activeLgForMeList.start_date}}</td>\n                                                                    <td>{{activeLgForMeList.end_date}}</td>\n                                                                <td><button type=\"button\" class=\"btn btn-success vw-details\" (click)=\"RowSelected(activeLgForMeList)\">Confiscate</button>\n                                                                </td>\n                                                            </tr>\n                                                            </tbody>\n                                                            </table>\n                                                        </ng-template>\n                                                        </div>\n\n                                                        <div *ngIf=\"this.translate.currentLang == 'ar'\">\n                                                        <div *ngIf=\"activeLgForMeLists.userObject?.length > 0; then activemethenBlock else activemeelseBlock\"> </div>\n                                                        <ng-template #activemethenBlock>\n                                                        <table datatable [dtOptions]=\"dtOptionsAR\" class=\"table table-bordered table-striped table-hover\">\n                                                            <thead>\n                                                                    <tr>\n                                                                    <th class=\"table-col-7\">#</th>\n                                                                    <th class=\"\"> {{'HOME.LG_Number' | translate}}</th>\n                                                                    <th class=\"\">{{'HOME.LG_amount' | translate}}</th>\n                                                                    <th class=\"\">{{'HOME.Beneficiary' | translate}}</th>\n                                                                    <th class=\"\">{{'HOME.Bank' | translate}}</th>\n                                                                    <th class=\"\">{{'HOME.LG_TYPE' | translate}}</th>\n                                                                    <th class=\"\">{{'HOME.LG_Status' | translate}}</th>\n                                                                    <th class=\"\">{{'HOME.Start_Date' | translate}}</th>\n                                                                    <th class=\"\">{{'HOME.End_Date' | translate}}</th>\n                                                                    <th class=\"\">{{'HOME.View_Details' | translate}}</th>\n                                                                    </tr>\n                                                            </thead>\n                                                            <tbody>\n                                                            <tr *ngFor=\"let activeLgForMeList of activeLgForMeLists.userObject; let i = index \">\n                                                                <td>{{i+1}}</td>\n                                                                    <td>{{activeLgForMeList.lg_no}}</td>\n                                                                    <td>{{activeLgForMeList.lG_amount}}</td>\n                                                                    <td>{{activeLgForMeList.beneficiary_name}}</td>\n                                                                    <td>{{activeLgForMeList.bank_name}}</td>\n                                                                    <td>{{activeLgForMeList.lg_type}}</td>\n                                                                    <td>{{activeLgForMeList.status}}</td>\n                                                                    <td>{{activeLgForMeList.start_date}}</td>\n                                                                    <td>{{activeLgForMeList.end_date}}</td>\n                                                                <td><button type=\"button\" class=\"btn btn-success vw-details\" (click)=\"RowSelected(activeLgForMeList)\">Confiscate</button>\n                                                                </td>\n                                                            </tr>\n                                                            </tbody>\n                                                            </table>\n                                                        </ng-template>\n                                                        <ng-template #activemeelseBlock>\n                                                            <table datatable [dtOptions]=\"dtOptionsAR\" class=\"table table-bordered table-striped table-hover\">\n                                                                <thead>\n                                                                    <tr>\n                                                                    <th class=\"table-col-7\">#</th>\n                                                                    <th class=\"\"> {{'HOME.LG_Number' | translate}}</th>\n                                                                    <th class=\"\">{{'HOME.LG_amount' | translate}}</th>\n                                                                    <th class=\"\">{{'HOME.Beneficiary' | translate}}</th>\n                                                                    <th class=\"\">{{'HOME.Bank' | translate}}</th>\n                                                                    <th class=\"\">{{'HOME.LG_TYPE' | translate}}</th>\n                                                                    <th class=\"\">{{'HOME.LG_Status' | translate}}</th>\n                                                                    <th class=\"\">{{'HOME.Start_Date' | translate}}</th>\n                                                                    <th class=\"\">{{'HOME.End_Date' | translate}}</th>\n                                                                    <th class=\"\">{{'HOME.View_Details' | translate}}</th>\n                                                                    </tr>\n                                                                </thead>\n                                                                <tbody>\n                                                                <tr *ngFor=\"let activeLgForMeList of activeLgForMeLists.userObject; let i = index \">\n                                                                    <td>{{i+1}}</td>\n                                                                        <td>{{activeLgForMeList.lg_no}}</td>\n                                                                        <td>{{activeLgForMeList.lG_amount}}</td>\n                                                                        <td>{{activeLgForMeList.beneficiary_name}}</td>\n                                                                        <td>{{activeLgForMeList.bank_name}}</td>\n                                                                        <td>{{activeLgForMeList.lg_type}}</td>\n                                                                        <td>{{activeLgForMeList.status}}</td>\n                                                                        <td>{{activeLgForMeList.start_date}}</td>\n                                                                        <td>{{activeLgForMeList.end_date}}</td>\n                                                                    <td><button type=\"button\" class=\"btn btn-success vw-details\" (click)=\"RowSelected(activeLgForMeList)\">Confiscate</button>\n                                                                    </td>\n                                                                </tr>\n                                                                </tbody>\n                                                                </table>\n                                                            </ng-template>\n                                                            </div>\n                                                </div>\n                                                </div>\n                                            </div>\n                                            </div>\n                                        </div>\n                                        </div>\n                                    </div>\n                                    </div>\n                                </div>\n                                </div>\n\n                            </div>\n                            </form>\n                        </div>\n                        </div>\n                    </div>\n                    </div>\n                </div>\n                </div>\n            </section>\n            </div>\n            \n        </div>\n        </div>\n        <!--New Design Here-->\n    </div>\n    </div>\n    <!--===========================\n                End Content\n                ============================-->\n\n<!--begin::Global Theme Bundle(used by all pages) -->\n<script src=\"../../assets/js/plugins.bundle.js\" type=\"text/javascript\"></script>\n<!-- end::Body -->\n            \n            \n            ");

/***/ }),

/***/ "./node_modules/raw-loader/dist/cjs.js!./src/app/government-entity-reg-view/government-entity-reg-view.component.html":
/*!****************************************************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/government-entity-reg-view/government-entity-reg-view.component.html ***!
  \****************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("\n          <!--===========================\n                        Start Content\n                        ============================-->\n                        <div class=\"pt-0 kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor kt-margin-top-50\">\n                          <div class=\"kt-container\">\n              <!--New Design Here-->\n              <div class=\"row\">\n                <div class=\"col-12 col-sm-3 col-md-3 col-lg-3 left-panel-menu-wrap w-20 fixed-wrap\">\n                 \n                  <ul class=\"vertical-menu\">\n                    <li *ngIf=\"roleId == 3\"><a routerLink=\"/adminDashboard\"><span class=\"db-icon\"></span>{{'HOME.Dashboard' | translate}}</a></li>\n                    <li *ngIf=\"roleId == 3\"><a routerLink=\"/pendingtasks\" class=\"active\"><span class=\"lg-icon\"></span>{{'HOME.Pending_Tasks' | translate}}</a></li>\n                  </ul>\n                </div>\n                <div class=\"col-12 col-sm-9 col-md-9 col-lg-9 padding-null scroll-wrap\">\n                  <!-- <div class=\"white-area\">\n                    <div class=\"user-area\">\n                      <span class=\"user-img-wrap\"><img src=\"../../assets/images/user.png\" alt=\"image\"\n                          class=\"user-img\"></span><span>Abdulla Ahmad</span>\n                    </div>\n                    <div class=\"clear\"></div>\n                  </div> -->\n                 \n                  <div class=\"grey-bg\">\n                    <section class=\"design-process-section\" id=\"process-tab\">\n                      <div>\n                        <div>\n                          <div>\n                            <!-- Tab panes -->\n                            <div class=\"tab-content\">\n                              <div role=\"tabpanel\" class=\"tab-pane active\" id=\"discover\">\n                                <div class=\"design-process-content\">\n                                  <div>\n                                    <!-- Tab panes -->\n                                    <div class=\"tab-content\">\n                                      <div role=\"tabpanel\" class=\"tab-pane active\" id=\"discover\">\n                                        <div class=\"design-process-content\">\n                                          <form [formGroup]=\"viewGovtEntityReg\">\n                                            <div class=\"row\">\n                                              <div class=\"col-sm-12\">\n                                                <!--starts entity information MCI-->\n                                                <div class=\"kt-portlet\">\n                                                  <div class=\"kt-portlet__head\">\n                                                    <div class=\"kt-portlet__head-label\">\n                                                      <h3 class=\"kt-portlet__head-title\">\n                                                        {{'HOME.Entity_information' | translate}}  \n                                                      </h3>\n                                                    </div>\n                                                  </div>\n                                                  <!--begin::Form-->\n                                                  <div class=\"kt-form kt-form--label-right\">\n                                                    <div class=\"kt-portlet__body\">\n                                                      <div class=\"container\">\n                                                        <div class=\"row\">\n                                                          <div class=\"col-md-12\">\n                                                            <div id=\"checkdivwrap\">\n                                                              <div class=\"row\">\n                                                                <div class=\"col-md-6\">\n                                                                  <div class=\"form-group margin-bottom-10\">\n                                                                    <label for=\"entity-name\"\n                                                                      class=\"col-form-label\">{{'HOME.Entity_name' | translate}} </label>\n                                                                    <input class=\"form-control col-md-9\" type=\"text\"\n                                                                      value=\"{{beneficiary_name}}\"  formControlName=\"beneficiary_name\" readonly>\n                                                                  </div>\n                                                                </div>\n                                                                <div class=\"col-md-6\">\n                                                                  <div class=\"form-group margin-bottom-10\">\n                                                                    <label for=\"entity-uid\"\n                                                                      class=\"col-form-label\">{{'HOME.Entity_UID' | translate}} </label>\n                                                                    <input class=\"form-control col-md-9\" type=\"text\"\n                                                                      value=\"{{UID}}\"  formControlName=\"UID\" readonly>\n                                                                  </div>\n                                                                </div>\n                                                              </div>\n                                                            </div>\n                                                          </div>\n                                                        </div>\n                                                      </div>\n                                                    </div>\n                                                  </div>\n                                                </div>\n                                                <!--/ends entity information MCI-->\n                                                <!--starts Personal information-->\n                                                <div class=\"kt-portlet\">\n                                                  <div class=\"kt-portlet__head\">\n                                                    <div class=\"kt-portlet__head-label\">\n                                                      <h3 class=\"kt-portlet__head-title\">\n                                                       {{'HOME.Personal_Information' | translate}}\n                                                      </h3>\n                                                    </div>\n                                                  </div>\n                                                  <div class=\"kt-form kt-form--label-right\">\n                                                    <div class=\"kt-portlet__body\">\n                                                      <div class=\"container\">\n                                                        <div class=\"row\">\n                                                          <div class=\"col-md-6\">\n                                                            <div class=\"form-group margin-bottom-10\">\n                                                              <label for=\"example-text-input\"\n                                                                class=\"col-form-label\">{{'HOME.Name' | translate}} </label>\n                                                                <input class=\"form-control col-md-9\" type=\"text\" value=\"{{rep_name}}\"  \n                                                                formControlName=\"rep_name\" readonly>\n                                                            </div>\n                                                          </div>\n                                                          <div class=\"col-md-6\">\n                                                            <div class=\"form-group margin-bottom-10\">\n                                                              <label for=\"example-text-input\" class=\"col-form-label\">\n                                                                {{'HOME.National_identification_Number' | translate}}</label>\n                                                              <input class=\"form-control col-md-9\" type=\"text\" value=\"{{entityNationalID}}\"\n                                                                 formControlName=\"entityNationalID\" readonly>\n                                                            </div>\n                                                          </div>\n                                                          <div class=\"col-md-6\">\n                                                            <div class=\"form-group margin-bottom-10\">\n                                                              <label for=\"mobile-number\" class=\"col-form-label\">{{'HOME.Mobile_number' | translate}}</label>\n                                                              <input class=\"form-control col-md-9\" type=\"text\" value=\"{{entityMobNo}}\"\n                                                                 formControlName=\"entityMobNo\" readonly>\n                                                            </div>\n                                                          </div>\n                                                          <div class=\"col-md-6\">\n                                                            <div class=\"form-group margin-bottom-10\">\n                                                              <label for=\"example-text-input\"\n                                                                class=\"col-form-label\">{{'HOME.Email' | translate}} </label>\n                                                              <input class=\"form-control col-md-9\" type=\"text\" value=\"{{entityEmail}}\"\n                                                                 formControlName=\"entityEmail\" readonly>\n                                                            </div>\n                                                          </div>\n                                                        </div>\n                                                      </div>\n                                                    </div>\n                                                  </div>\n                                                </div>\n                                                <!--/ends Personal information-->\n\n                                                <!--Page 2 starts here-->\n\n                                                <!--/personal information-->\n                                                <div class=\"kt-portlet\">\n                                                  <div class=\"kt-portlet__head\">\n                                                    <div class=\"kt-portlet__head-label\">\n                                                      <h3 class=\"kt-portlet__head-title\">\n                                                        {{'HOME.Address_Details' | translate}} \n                                                      </h3>\n                                                    </div>\n                                                  </div>\n                                                  <div class=\"kt-form kt-form--label-right\">\n                                                    <div class=\"kt-portlet__body\">\n                                                      <div class=\"container\">\n                                                        <div class=\"row\">\n                                                          <div class=\"col-md-6\">\n                                                            <div class=\"form-group margin-bottom-10\">\n                                                              <label for=\"address1\" class=\"col-form-label\">{{'HOME.Address_1' | translate}} </label>\n                                                              <input class=\"form-control col-md-9\" type=\"text\" value=\"{{address1}}\"\n                                                                 formControlName=\"address1\" readonly>\n                                                            </div>\n                                                          </div>\n                                                          <div class=\"col-md-6\">\n                                                            <div class=\"form-group margin-bottom-10\">\n                                                              <label for=\"address2\" class=\"col-form-label\">{{'HOME.Address_2' | translate}}  </label>\n                                                              <input class=\"form-control col-md-9\" type=\"text\" value=\"{{address2}}\"\n                                                                 formControlName=\"address2\" readonly>\n                                                            </div>\n                                                          </div>\n                                                          <div class=\"col-md-6\">\n                                                            <div class=\"form-group margin-bottom-10\">\n                                                              <label for=\"city\" class=\"col-form-label\">{{'HOME.City' | translate}}  </label>\n                                                              <input class=\"form-control col-md-9\" type=\"text\" value=\"{{city}}\"\n                                                                 formControlName=\"city\" readonly>\n                                                            </div>\n                                                          </div>\n                                                          <div class=\"col-md-6\">\n                                                            <div class=\"form-group margin-bottom-10\">\n                                                              <label for=\"country\" class=\"col-form-label\">{{'HOME.Country' | translate}}  </label>\n                                                              <input class=\"form-control col-md-9\" type=\"text\" value=\"{{country}}\"\n                                                                 formControlName=\"country\" readonly>\n                                                            </div>\n                                                          </div>\n                                                        </div>\n                                                      </div>\n                                                    </div>\n                                                  </div>\n                                                </div>\n                                                <!--/personal information-->\n                                                <!--/Attachments-->\n                                                <div class=\"kt-portlet\">\n                                                  <div class=\"kt-portlet__head\">\n                                                    <div class=\"kt-portlet__head-label\">\n                                                      <h3 class=\"kt-portlet__head-title\">\n                                                       {{'HOME.Attachments' | translate}} \n                                                      </h3>\n                                                    </div>\n                                                  </div>\n                                                  <!--begin::Form-->\n                                                  <div class=\"kt-form kt-form--label-right\">\n                                                    <div class=\"kt-portlet__body\">\n                                                      <div class=\"container\">\n                                                        <div class=\"form-group row margin-bottom-10\">\n                                                          <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-6\">\n                                                            <div class=\"form-group margin-bottom-10\">\n                                                              <div class=\"attach-label\">\n                                                                <label for=\"legal-agreement-letter\"\n                                                                  class=\"col-form-label\"> {{'HOME.Legal_agreement_letter' | translate}}  </label>\n                                                              </div>\n                                                              <div class=\"col-md-9\">\n                                                                <a href=\"{{laglFile}}\">{{leg_agree_doc_name}}</a>\n                                                              </div>\n                                                            </div>\n                                                          </div>\n                                                          <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-6\">\n                                                            <div class=\"form-group margin-bottom-10\">\n                                                              <div class=\"attach-label\">\n                                                                <label for=\"representative-national-id\"\n                                                                  class=\"col-form-label\">{{'HOME.Representative_National_ID' | translate}}  </label>\n                                                              </div>\n                                                              <div class=\"col-md-9\">\n                                                                <a href=\"{{rniFile}}\">{{national_id_doc_name}}</a>\n                                                              </div>\n                                                            </div>\n                                                          </div>\n                                                          <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-6\">\n                                                            <div class=\"form-group margin-bottom-10\">\n                                                              <div class=\"attach-label\">\n                                                                <label for=\"legal-authorization-letter\"\n                                                                  class=\"col-form-label\">{{'HOME.Legal_Authorization_Letter' | translate}}  </label>\n                                                              </div>\n                                                              <div class=\"col-md-9\">\n                                                                <a href=\"{{lalFile}}\">{{leg_auth_doc_name}}</a>\n                                                              </div>\n                                                            </div>\n                                                          </div>\n                                                        </div>\n                                                      </div>\n\n                                                    </div>\n                                                  </div>\n                                                </div>\n                                                <!--/Attachments-->\n                                                <!--Page 3 starts here-->\n                                                <!--/personal information-->\n                                                <div class=\"kt-portlet\">\n                                                  <div class=\"kt-portlet__head\">\n                                                    <div class=\"kt-portlet__head-label\">\n                                                      <h3 class=\"kt-portlet__head-title\">\n                                                        {{'HOME.Login_Info' | translate}}  \n                                                      </h3>\n                                                    </div>\n                                                  </div>\n                                                  <div class=\"kt-form kt-form--label-right\">\n                                                    <div class=\"kt-portlet__body\">\n                                                      <div class=\"container\">\n                                                        <div class=\"row\">\n                                                          <div class=\"col-md-6\">\n                                                            <div class=\"form-group margin-bottom-10\">\n                                                              <label for=\"user-id\" class=\"col-form-label\">{{'HOME.User_ID' | translate}}</label>\n                                                              <input class=\"form-control col-md-9\" type=\"text\" value=\"{{userId}}\"\n                                                                 formControlName=\"userId\"\n                                                                (blur)=\"onBlur($event.target.value)\" readonly>\n                                                            </div>\n                                                          </div>\n                                                        </div>\n                                                      </div>\n                                                    </div>\n                                                  </div>\n                                                </div>\n\n                                                <!--/personal information-->\n\n                                            <!--     <div class=\"kt-portlet__foot\">\n                                                  <div class=\"kt-form__actions\">\n                                                    <div class=\"row\">\n                                                      <div class=\"col-12\">\n                                                        \n                                                        <div class=\"btn-wrap\">\n                                                          <button type=\"reset\" class=\"btn btn-success btn-margin-2\"\n                                                            (click)=\"rejectForm()\">Reject</button>\n                                                         \n                                                          <button type=\"button\" class=\"btn btn-success btn-margin-2\"\n                                                            (click)=\"ApproveGovReg()\">Approve</button>\n                                                         \n                                                        </div>\n          \n                                                      </div>\n                                                    </div>\n                                                  </div>\n                                                </div> -->\n\n\n\n                                              </div>\n                                            </div>\n                                          </form>\n                                        </div>\n                                      </div>\n                                    </div>\n\n                                  </div>\n\n                                </div>\n                              </div>\n                            </div>\n\n                          </div>\n                        </div>\n                      </div>\n                    </section>\n                  </div>\n                 \n                </div>\n              </div>\n              <!--New Design Here-->\n            </div>\n          </div>\n          <!--===========================\n                        End Content\n                        ============================-->\n       \n  <!--begin::Global Theme Bundle(used by all pages) -->\n  <script src=\"../../assets/js/plugins.bundle.js\" type=\"text/javascript\"></script>\n  <!-- end::Body -->\n\n");

/***/ }),

/***/ "./node_modules/raw-loader/dist/cjs.js!./src/app/government-entity-reg1/government-entity-reg1.component.html":
/*!********************************************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/government-entity-reg1/government-entity-reg1.component.html ***!
  \********************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<!--===========================\n                Start Content\n                ============================-->\n<div class=\"pt-0 kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor kt-margin-top-50\">\n  <div class=\"kt-container\">\n    <!--New Design Here-->\n    <div class=\"row\">\n      <div class=\"col-12 col-sm-3 col-md-3 col-lg-3 left-panel-menu-wrap w-20 fixed-wrap\">\n\n        <ul class=\"vertical-menu\">\n          <!-- <li><a routerLink=\"govDashboard\"><span class=\"db-icon\"></span>Dashboard</a></li>\n                                    <li><a routerLink=\"pendingAction\"><span class=\"lg-icon\"></span>Pending Actions</a></li> -->\n          <!-- <li><a href=\"#\"><span class=\"lg-icon\"></span>LG issuance</a></li>\n                                  <li><a href=\"#\"><span class=\"ta-icon\"></span>Tabadul accounts</a></li>\n                                  <li><a href=\"govrnment-entity-registration-step1.html\" class=\"active\"><span\n                                        class=\"gr-icon\"></span>Government Registration </a></li>\n                                  <li><a href=\"registration-step1.html\"><span class=\"pr-icon\"></span>Private Registration</a></li> -->\n        </ul>\n      </div>\n      <div class=\"col-12 col-sm-9 col-md-9 col-lg-9 padding-null scroll-wrap\">\n\n        <div class=\"grey-bg\">\n          <section class=\"design-process-section\" id=\"process-tab\">\n            <div>\n              <div>\n                <div>\n                  <!-- Nav tabs -->\n                  <ul class=\"nav nav-tabs process-model more-icon-preocess reg-margin\" role=\"tablist\">\n                    <li role=\"presentation\" class=\"active\">\n                      <a routerLink=\"/governmentEntityReg\">1</a>\n                    </li>\n                    <li role=\"presentation\">\n                      <a routerLink=\"/governmentEntityReg2\">2</a>\n                    </li>\n                    <li role=\"presentation\">\n                      <a routerLink=\"/governmentEntityReg3\">3</a>\n                    </li>\n                  </ul>\n                  <div class=\"text-left1\">\n                    <h3 class=\"kt-login__title pt-3 m-0 mb-30\">{{'HOME.Government_entity_registration' | translate}}</h3>\n                  </div>\n                  <!-- Tab panes -->\n                  <div class=\"tab-content\">\n                    <div role=\"tabpanel\" class=\"tab-pane active\" id=\"discover\">\n                      <div class=\"design-process-content\">\n                        <form [formGroup]=\"submitGovReg1\">\n                          <div class=\"row\">\n                            <div class=\"col-sm-12\">\n                              <!--starts entity information MCI-->\n                              <div class=\"kt-portlet\">\n                                <div class=\"kt-portlet__head\">\n                                  <div class=\"kt-portlet__head-label\">\n                                    <h3 class=\"kt-portlet__head-title\">\n                                       {{'HOME.Entity_information' | translate}}\n                                    </h3>\n                                  </div>\n                                </div>\n                                <!--begin::Form-->\n                                <div class=\"kt-form kt-form--label-right\">\n                                  <div class=\"kt-portlet__body\">\n                                    <div class=\"container\">\n                                      <div class=\"row\">\n                                        <div class=\"col-md-6\">\n                                          <div class=\"form-group margin-bottom-10\">\n                                            <label for=\"select-entity\" class=\"col-form-label\">{{'HOME.SELECT_ENTITY' | translate}}\n                                              <em style=\"font-style: normal;\" class=\"text-danger-black\">*</em></label>\n                                            <div *ngIf=\"!theCheckbox;else other_select\">\n                                              <select class=\"form-control col-md-9\" formControlName=\"entity\"\n                                                [(ngModel)]=\"entity\" (change)=\"onClick(entity)\" >\n                                                <option>-- {{'HOME.SELECT_ENTITY' | translate}} --</option>\n                                                <option *ngFor=\"let entity of entityList\" [ngValue]=\"entity[1]\">{{entity[1]}}</option>\n                                              </select>\n                                            </div>\n                                            <ng-template #other_select>\n                                              <select class=\"form-control col-md-9\" formControlName=\"entity\"\n                                                [(ngModel)]=\"entity\" (change)=\"onClick($event.target.value)\" disabled>\n                                                <option>-- {{'HOME.SELECT_ENTITY' | translate}} --</option>\n                                                <option *ngFor=\"let entity of entityList\">{{entity[1]}}</option>\n                                              </select>\n                                            </ng-template>\n\n                                            <!-- <div class=\"text-danger\">This is a required field</div> -->\n                                            <div class=\"validation-errors text-danger\" [hidden]=\"theCheckbox===true\">\n                                              <div *ngFor=\"let validation of validation_messages.entity\">\n                                                <div col-12 class=\"error-message\"\n                                                  *ngIf=\"submitGovReg1.get('entity').hasError(validation.type) && (submitGovReg1.get('entity').dirty || submitGovReg1.get('entity').touched)\">\n                                                  {{ validation.message }}\n                                                </div>\n                                              </div>\n                                            </div>\n                                          </div>\n                                        </div>\n                                        <div class=\"col-md-6\">\n                                          <div class=\"form-group margin-bottom-10\">\n                                            <label for=\"uid\" class=\"col-form-label\">{{'HOME.Representative_National_ID' | translate}} <em style=\"font-style: normal;\"\n                                                class=\"text-danger-black\">*</em></label>\n                                            <input class=\"form-control col-md-9\" type=\"text\" value=\"\" id=\"\"\n                                              formControlName=\"entityNationalID\" readonly>\n                                            <div class=\"validation-errors text-danger\" [hidden]=\"theCheckbox===true\">\n                                              <div *ngFor=\"let validation of validation_messages.entityNationalID\">\n                                                <div col-12 class=\"error-message\"\n                                                  *ngIf=\"submitGovReg1.get('entityNationalID').hasError(validation.type) && (submitGovReg1.get('entityNationalID').dirty || submitGovReg1.get('entityNationalID').touched)\">\n                                                  {{ validation.message }}\n                                                </div>\n                                              </div>\n                                            </div>\n                                          </div>\n                                        </div>\n\n                                        <div class=\"col-md-6\">\n                                          <div *ngIf=\"!checkedGovEntity\">\n                                            <div class=\"form-group margin-bottom-10\">\n                                              <label for=\"address2\" class=\"col-form-label\">{{'HOME.Representative_date_of_birth' | translate}} <em style=\"font-style: normal;\"\n                                                  class=\"text-danger-black\">*</em></label>\n                                              <!-- <input class=\"form-control col-md-9\" type=\"text\" value=\"\" id=\"\"> -->\n                                              <div class=\"ui-g ui-fluid\">\n                                                <div class=\"col-md-9 padding-null calendar-icon-wrap\">\n                                                  <p-calendar\n                                                  placeholder=\"DD/MM/YYYY\"\n                                                  [readonlyInput]=\"true\"\n                                                    yearRange=\"1950:2050\"\n                                                    [monthNavigator]=\"true\"\n                                                    [yearNavigator]=\"true\"\n                                                    formControlName=\"representativeDateOfBirth\"\n                                                    [maxDate]=\"maxDate\"\n                                                    [showIcon]=\"true\"\n                                                    [(ngModel)]=\"dateOfBirth\"\n                                                    class=\"calendar-text\"\n                                                    [showIcon]=\"true\"\n                                                    dateFormat=\"dd/mm/yy\"\n                                                    [disabled]=\"checkedGovEntity\"\n                                                    (onSelect)=\"getDOB(dateOfBirth)\">\n                                                  </p-calendar>\n                                                  <div class=\"validation-errors text-danger\">\n                                                    <div\n                                                      *ngFor=\"let validation of validation_messages.representativeDateOfBirth\">\n                                                      <div col-12 class=\"error-message\"\n                                                        *ngIf=\"submitGovReg1.get('representativeDateOfBirth').hasError(validation.type) && (submitGovReg1.get('representativeDateOfBirth').dirty || submitGovReg1.get('representativeDateOfBirth').touched)\">\n                                                        {{ validation.message }}\n                                                      </div>\n                                                    </div>\n                                                  </div>\n                                                </div>\n                                              </div>\n                                            </div>\n                                          </div>\n\n\n                                          <div *ngIf=\"checkedGovEntity\">\n                                            <div class=\"form-group margin-bottom-10\">\n                                              <label for=\"address2\" class=\"col-form-label\">{{'HOME.Representative_date_of_birth' | translate}}</label>\n                                              <div class=\"ui-g ui-fluid\">\n                                                <div class=\"col-md-9 padding-null calendar-icon-wrap\">\n                                                  <p-calendar formControlName=\"disableRepresentativeDateOfBirth\"\n                                                    [disabled]=\"true\" [showIcon]=\"true\"></p-calendar>\n                                                </div>\n                                              </div>\n                                            </div>\n                                          </div>\n\n                                        </div>\n\n                                      \n                                       \n\n                                        <div class=\"col-md-12\" style=\"text-align:left;\">\n                                          <div class=\"checkbox margin-top-10\">\n                                            <label class=\"container-checkbox\"> {{'HOME.Register_new_government_entity' | translate}}\n                                              <input type=\"checkbox\" value=\"\" name=\"c1\" [(ngModel)]=\"checkedGovEntity\"\n                                                formControlName=\"checkedGovEntity\"\n                                                (change)=\"toggleVisibility(checkedGovEntity)\">\n                                              <span class=\"checkmark\">\n                                              </span>\n                                            </label>\n                                          </div>\n                                        </div>\n                                        <div class=\"col-md-12\" [hidden]=\"!isExpandDiv\">\n                                          <div id=\"checkdivwrap\">\n                                            <div class=\"row\">\n                                              <div class=\"col-md-6\">\n                                                <div class=\"form-group margin-bottom-10\">\n                                                  <label for=\"entity-name\" class=\"col-form-label\">{{'HOME.Government_entity_name' | translate}} <em style=\"font-style: normal;\"\n                                                      class=\"text-danger-black\">*</em></label>\n                                                  <input class=\"form-control col-md-9\" type=\"text\" value=\"\" id=\"\"\n                                                    formControlName=\"entityname\" (blur)=\"onBlur($event.target.value)\">\n                                                  <div class=\"validation-errors text-danger\">\n                                                    <div *ngFor=\"let validation of validation_messages.entityname\">\n                                                      <div col-12 class=\"error-message\"\n                                                        *ngIf=\"submitGovReg1.get('entityname').hasError(validation.type) && (submitGovReg1.get('entityname').dirty || submitGovReg1.get('entityname').touched)\">\n                                                        {{ validation.message }}\n                                                      </div>\n                                                    </div>\n                                                  </div>\n                                                  <!-- <div class=\"text-danger\">This is a required field</div> -->\n                                                </div>\n                                              </div>\n                                              <div class=\"col-md-6\">\n                                                <div class=\"form-group margin-bottom-10\">\n                                                  <label for=\"entity-uid\" class=\"col-form-label\">{{'HOME.Government_entity_UID' | translate}} <em style=\"font-style: normal;\"\n                                                      class=\"text-danger-black\">*</em></label>\n                                                  <input class=\"form-control col-md-9\" type=\"text\" value=\"\" id=\"\"\n                                                    formControlName=\"entityUID\" maxlength=\"10\">\n                                                  <!-- <div class=\"text-danger\">This is a required field</div> -->\n                                                  <div class=\"validation-errors text-danger\">\n                                                    <div *ngFor=\"let validation of validation_messages.entityUID\">\n                                                      <div col-12 class=\"error-message\"\n                                                        *ngIf=\"submitGovReg1.get('entityUID').hasError(validation.type) && (submitGovReg1.get('entityUID').dirty || submitGovReg1.get('entityUID').touched)\">\n                                                        {{ validation.message }}\n                                                      </div>\n                                                    </div>\n                                                  </div>\n                                                </div>\n                                              </div>\n                                            </div>\n                                          </div>\n                                        </div>\n\n                                      </div>\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                              <div>\n                                <p-messages [(value)]=\"msgs\"></p-messages>\n                              </div>\n\n                              <div class=\"kt-portlet__foot\">\n                                <div class=\"kt-form__actions\">\n                                  <div class=\"row\">\n                                    <div class=\"col-12\">\n                                      <div class=\"btn-wrap\">\n                                        <button class=\"btn btn-gry btn-margin-2\" type=\"reset\"\n                                          (click)=\"resetForm()\">{{'HOME.Cancel' | translate}}</button>\n                                        <button class=\"btn btn-success btn-margin-2\" type=\"button\"\n                                          (click)=\"submitGovRegData()\">{{'HOME.Continue' | translate}}</button>\n                                        <!-- <button class=\"btn btn-success btn-margin-2\" type=\"button\"\n                                                                  [disabled]=\"isDisableContinue\"\n                                                                  (click)=\"submitGovRegData()\">Continue</button> -->\n                                      </div>\n\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n\n                            </div>\n                          </div>\n                        </form>\n                      </div>\n                    </div>\n                  </div>\n\n                </div>\n              </div>\n            </div>\n          </section>\n        </div>\n\n      </div>\n    </div>\n    <!--New Design Here-->\n  </div>\n</div>\n<!--===========================\n                                End Content\n                                ============================-->\n\n<!--begin::Global Theme Bundle(used by all pages) -->\n<script src=\"../../assets/js/plugins.bundle.js\" type=\"text/javascript\"></script>\n<!--begin:: For check box click-->\n<script type=\"text/javascript\">\n  function showMe(box) {\n\n    var chboxs = document.getElementsByName(\"c1\");\n    var vis = \"none\";\n    for (var i = 0; i < chboxs.length; i++) {\n      if (chboxs[i].checked) {\n        vis = \"block\";\n        break;\n      }\n    }\n    document.getElementById(box).style.display = vis;\n\n  }\n</script>\n<!--end:: For check box click-->\n\n<!-- end::Body -->\n");

/***/ }),

/***/ "./node_modules/raw-loader/dist/cjs.js!./src/app/government-entity-reg2/government-entity-reg2.component.html":
/*!********************************************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/government-entity-reg2/government-entity-reg2.component.html ***!
  \********************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("\n\n        <!--===========================\n                Start Content\n                ============================-->\n                <div class=\"pt-0 kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor kt-margin-top-50\">\n                  <div class=\"kt-container\">\n            <!--New Design Here-->\n            <div class=\"row\">\n              <div class=\"col-12 col-sm-3 col-md-3 col-lg-3 left-panel-menu-wrap w-20 fixed-wrap\">\n\n                <ul class=\"vertical-menu\">\n                  <!-- <li><a routerLink=\"govDashboard\"><span class=\"db-icon\"></span>Dashboard</a></li>\n                  <li><a routerLink=\"pendingAction\"><span class=\"lg-icon\"></span>Pending Actions</a></li> -->\n                  <!-- <li><a href=\"#\"><span class=\"lg-icon\"></span>LG issuance</a></li>\n                  <li><a href=\"#\"><span class=\"ta-icon\"></span>Tabadul accounts</a></li>\n                  <li><a href=\"#\" class=\"active\"><span class=\"gr-icon\"></span>Government Registration </a></li>\n                  <li><a href=\"registration-step1.html\"><span class=\"pr-icon\"></span>Private Registration</a></li> -->\n                </ul>\n              </div>\n              <div class=\"col-12 col-sm-9 col-md-9 col-lg-9 padding-null scroll-wrap\">\n\n                <div class=\"grey-bg\">\n                  <section class=\"design-process-section\" id=\"process-tab\">\n                    <div>\n                      <div>\n                        <div>\n                          <!-- Nav tabs -->\n                          <ul class=\"nav nav-tabs process-model more-icon-preocess reg-margin\" role=\"tablist\">\n                            <li role=\"presentation\">\n                              <a routerLink=\"/governmentEntityReg\">1</a>\n                            </li>\n                            <li role=\"presentation\" class=\"active\">\n                              <a routerLink=\"/governmentEntityReg2\">2</a>\n                            </li>\n                            <li role=\"presentation\">\n                              <a routerLink=\"/governmentEntityReg3\">3</a>\n                            </li>\n                          </ul>\n                          <div class=\"text-left1\">\n                            <h3 class=\"kt-login__title pt-3 m-0 mb-30\">{{'HOME.Government_entity_registration' | translate}}</h3>\n                          </div>\n                          <!-- Tab panes -->\n                          <div class=\"tab-content\">\n                            <div role=\"tabpanel\" class=\"tab-pane active\" id=\"discover\">\n                              <div class=\"design-process-content\">\n                                <form [formGroup]=\"submitGov2\">\n                                  <div class=\"row\">\n                                    <div class=\"col-sm-12\">\n                                      <!--/Personal Information-->\n                                      <div class=\"kt-portlet\">\n                                        <div class=\"kt-portlet__head\">\n                                          <div class=\"kt-portlet__head-label\">\n                                            <h3 class=\"kt-portlet__head-title\">\n                                              {{'HOME.Personal_Information' | translate}}\n                                            </h3>\n                                          </div>\n                                        </div>\n                                        <div class=\"kt-form kt-form--label-right\">\n                                          <div class=\"kt-portlet__body\">\n                                            <div class=\"container\">\n                                              <div class=\"row\">\n                                                <div class=\"col-md-6\">\n                                                  <div class=\"form-group margin-bottom-10\">\n                                                    <label for=\"first-name\" class=\"col-form-label\">{{'HOME.First_name' | translate}}</label>\n                                                    <input class=\"form-control col-md-9 profile-txt1\" type=\"text\"\n                                                      formControlName=\"fname\" value=\"\" id=\"\" readonly>\n                                                  </div>\n                                                </div>\n                                                <div class=\"col-md-6\">\n                                                  <div class=\"form-group margin-bottom-10\">\n                                                    <label for=\"last-name\" class=\"col-form-label\">{{'HOME.Last_name' | translate}}</label>\n                                                    <input class=\"form-control col-md-9 profile-txt1\" type=\"text\"\n                                                      formControlName=\"lname\" value=\"\" id=\"\" readonly>\n                                                  </div>\n                                                </div>\n                                                <div class=\"col-md-6\">\n                                                  <div class=\"form-group margin-bottom-10\">\n                                                    <label for=\"national-id\" class=\"col-form-label\">{{'HOME.National_identification_number' | translate}} <em\n                                                        style=\"font-style: normal;\" class=\"text-danger-black\">*</em>\n                                                    </label>\n                                                    <input class=\"form-control col-md-9 profile-txt1\" type=\"text\"\n                                                      formControlName=\"nationalId\" value=\"\" id=\"\" readonly>\n                                                  </div>\n                                                </div>\n\n                                                <div class=\"col-md-6\">\n                                                  <div class=\"form-group margin-bottom-10\">\n                                                    <label for=\"dob\" class=\"col-form-label\">{{'HOME.Date_of_birth' | translate}} <em\n                                                        style=\"font-style: normal;\" class=\"text-danger-black\">*</em>\n                                                    </label>\n                                                    <input class=\"form-control col-md-9 profile-txt1\" type=\"text\"\n                                                      formControlName=\"dateofbirth\" value=\"\" id=\"\" readonly>\n                                                  </div>\n                                                </div>\n\n                                                <div class=\"col-md-6\">\n                                                  <div class=\"form-group margin-bottom-10\">\n                                                    <label for=\"email\" class=\"col-form-label\">{{'HOME.Email' | translate}} <em\n                                                        style=\"font-style: normal;\"\n                                                        class=\"text-danger-black\">*</em></label>\n                                                    <input class=\"form-control col-md-9\" type=\"text\" value=\"\" id=\"\"\n                                                      formControlName=\"email\">\n                                                    <div class=\"validation-errors text-danger\">\n                                                      <div *ngFor=\"let validation of validation_messages.email\">\n                                                        <div col-12 class=\"error-message\"\n                                                          *ngIf=\"submitGov2.get('email').hasError(validation.type) && (submitGov2.get('email').dirty || submitGov2.get('email').touched)\">\n                                                          {{ validation.message }}\n                                                        </div>\n                                                      </div>\n                                                    </div>\n                                                  </div>\n                                                </div>\n                                                <div class=\"col-md-6\">\n                                                  <div class=\"form-group margin-bottom-10\">\n                                                    <label for=\"mobile-number\" class=\"col-form-label\">{{'HOME.Mobile_number' | translate}}\n                                                   <em style=\"font-style: normal;\"\n                                                        class=\"text-danger-black\">*</em></label>\n                                                    <input class=\"form-control col-md-9 profile-txt1\" type=\"text\"\n                                                      formControlName=\"mobile\" value=\"\" id=\"\" readonly>\n                                                  </div>\n                                                </div>\n                                                <div class=\"col-md-6\">\n                                                  <div class=\"form-group margin-bottom-10\">\n                                                    <label for=\"password\" class=\"col-form-label\">{{'HOME.password' | translate}} <em\n                                                        style=\"font-style: normal;\"\n                                                        class=\"text-danger-black\">*</em></label>\n                                                    <input class=\"form-control col-md-9\" type=\"Password\" value=\"\" id=\"\"\n                                                      formControlName=\"password\">\n                                                    <div class=\"validation-errors text-danger\">\n                                                      <div *ngFor=\"let validation of validation_messages.password\">\n                                                        <div col-12 class=\"error-message\"\n                                                          *ngIf=\"submitGov2.get('password').hasError(validation.type) && (submitGov2.get('password').dirty || submitGov2.get('password').touched)\">\n                                                          {{ validation.message }}\n                                                        </div>\n                                                      </div>\n                                                    </div>\n                                                  </div>\n                                                </div>\n                                                <div class=\"col-md-6\">\n                                                  <div class=\"form-group margin-bottom-10\">\n                                                    <label for=\"confirm-password\" class=\"col-form-label\">{{'HOME.Confirm_password' | translate}}\n                                                       <em style=\"font-style: normal;\"\n                                                        class=\"text-danger-black\">*</em></label>\n                                                        <input class=\"form-control col-md-9\" type=\"password\" value=\"\" id=\"\"\n                                                        formControlName=\"confirmPassword\" (blur)=\"onBlur($event.target.value)\">\n                                                    <div class=\"validation-errors text-danger\">\n                                                      <div\n                                                        *ngFor=\"let validation of validation_messages.confirmPassword\">\n                                                        <div col-12 class=\"error-message\"\n                                                          *ngIf=\"submitGov2.get('confirmPassword').hasError(validation.type) && (submitGov2.get('confirmPassword').dirty || submitGov2.get('confirmPassword').touched)\">\n                                                          {{ validation.message }}\n                                                        </div>\n                                                      </div>\n                                                    </div>\n                                                  </div>\n                                                </div>\n\n                                              </div>\n                                            </div>\n\n                                          </div>\n                                        </div>\n                                      </div>\n\n                                      <!--/Personal Informatin-->\n                                      <!--/Attachments-->\n                                      <div class=\"kt-portlet\">\n                                        <div class=\"kt-portlet__head\">\n                                          <div class=\"kt-portlet__head-label\">\n                                            <h3 class=\"kt-portlet__head-title\">\n                                              {{'HOME.Attachments' | translate}}\n                                            </h3>\n                                          </div>\n                                        </div>\n                                        <!--begin::Form-->\n                                        <div class=\"kt-form kt-form--label-right\">\n                                          <div class=\"kt-portlet__body\">\n                                            <div class=\"container\">\n                                              <div class=\"form-group row margin-bottom-10\">\n                                                <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-6\">\n                                                  <div class=\"form-group margin-bottom-10\">\n                                                    <div class=\"attach-label\">\n                                                      <label for=\"legal-agreement-letter\" class=\"col-form-label\">{{'HOME.Legal_agreement_letter' | translate}}\n                                                         <em style=\"font-style: normal;\"\n                                                          class=\"text-danger-black\">*</em></label>\n                                                    </div>\n                                                    <div class=\"col-md-9\">\n                                                      <div class=\"input-group mb-3\">\n                                                        <div class=\"custom-file\">\n                                                          <input type=\"file\" class=\"custom-file-input\"\n                                                            id=\"inputGroupFile02\" formControlName=\"lalFile\"\n                                                            (change)=\"fileProgress($event, 'lal')\" />\n                                                          <!-- <label class=\"custom-file-label\"\n                                                            for=\"inputGroupFile02\"></label> -->\n                                                          <div *ngIf=\"isSelectedlalFile; else notShowlal\">\n                                                            <label class=\"custom-file-label\"\n                                                              for=\"inputGroupFile05\">{{this.lalFile.name | summary}}</label>\n                                                          </div>\n                                                          <ng-template #notShowlal>\n                                                            <label class=\"custom-file-label\"\n                                                              for=\"inputGroupFile05\">{{notSelected | summary}}</label>\n                                                          </ng-template>\n                                                        </div>\n                                                      </div>\n                                                      <!-- <div class=\"text-danger m-top-17\">This is a required field</div> -->\n                                                      <div class=\"validation-errors text-danger m-top-17\">\n                                                        <div *ngFor=\"let validation of validation_messages.lalFile\">\n                                                          <div col-12 class=\"error-message\"\n                                                            *ngIf=\"submitGov2.get('lalFile').hasError(validation.type) && (submitGov2.get('lalFile').dirty || submitGov2.get('lalFile').touched)\">\n                                                            {{ validation.message }}\n                                                          </div>\n                                                        </div>\n                                                      </div>\n                                                    </div>\n                                                  </div>\n                                                </div>\n                                                <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-6\">\n                                                  <div class=\"form-group margin-bottom-10\">\n                                                    <div class=\"attach-label\">\n                                                      <label for=\"representative-national-id\"\n                                                        class=\"col-form-label\">{{'HOME.Representative_National_ID' | translate}} <em\n                                                          style=\"font-style: normal;\"\n                                                          class=\"text-danger-black\">*</em></label>\n                                                    </div>\n                                                    <div class=\"col-md-9\">\n                                                      <div class=\"input-group mb-3\">\n                                                        <div class=\"custom-file\">\n                                                          <input type=\"file\" class=\"custom-file-input\"\n                                                            id=\"inputGroupFile03\" formControlName=\"rniFile\"\n                                                            (change)=\"fileProgress($event, 'rni')\" />\n                                                          <!-- <label class=\"custom-file-label\"\n                                                            for=\"inputGroupFile03\"></label> -->\n                                                          <div *ngIf=\"isSelectedrniFile; else notShowrni\">\n                                                            <label class=\"custom-file-label\"\n                                                              for=\"inputGroupFile05\">{{this.rniFile.name | summary}}</label>\n                                                          </div>\n                                                          <ng-template #notShowrni>\n                                                            <label class=\"custom-file-label\"\n                                                              for=\"inputGroupFile05\">{{notSelected | summary}}</label>\n                                                          </ng-template>\n                                                        </div>\n                                                      </div>\n                                                      <!-- <div class=\"text-danger m-top-17\">This is a required field</div> -->\n                                                      <div class=\"validation-errors text-danger m-top-17\">\n                                                        <div *ngFor=\"let validation of validation_messages.rniFile\">\n                                                          <div col-12 class=\"error-message\"\n                                                            *ngIf=\"submitGov2.get('rniFile').hasError(validation.type) && (submitGov2.get('rniFile').dirty || submitGov2.get('rniFile').touched)\">\n                                                            {{ validation.message }}\n                                                          </div>\n                                                        </div>\n                                                      </div>\n                                                    </div>\n                                                  </div>\n                                                </div>\n                                                <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-6\">\n                                                  <div class=\"form-group margin-bottom-10\">\n                                                    <div class=\"attach-label\">\n                                                      <label for=\"legal-authorization-letter\"\n                                                        class=\"col-form-label\">{{'HOME.Legal_Authorization_Letter' | translate}}\n                                                        <em style=\"font-style: normal;\"\n                                                          class=\"text-danger-black\">*</em></label>\n                                                    </div>\n                                                    <div class=\"col-md-9\">\n                                                      <div class=\"input-group mb-3\">\n                                                        <div class=\"custom-file\">\n                                                          <input type=\"file\" class=\"custom-file-input\"\n                                                            id=\"inputGroupFile04\" formControlName=\"laglFile\"\n                                                            (change)=\"fileProgress($event, 'lagl')\" />\n                                                          <!-- <label class=\"custom-file-label\"\n                                                            for=\"inputGroupFile04\"></label> -->\n                                                          <div *ngIf=\"isSelectedlaglFile; else notShowlagl\">\n                                                            <label class=\"custom-file-label\"\n                                                              for=\"inputGroupFile05\">{{this.laglFile.name | summary}}</label>\n                                                          </div>\n                                                          <ng-template #notShowlagl>\n                                                            <label class=\"custom-file-label\"\n                                                              for=\"inputGroupFile05\">{{notSelected | summary}}</label>\n                                                          </ng-template>\n                                                        </div>\n                                                      </div>\n                                                      <!-- <div class=\"text-danger m-top-17\">This is a required field</div> -->\n                                                      <div class=\"validation-errors text-danger m-top-17\">\n                                                        <div *ngFor=\"let validation of validation_messages.laglFile\">\n                                                          <div col-12 class=\"error-message\"\n                                                            *ngIf=\"submitGov2.get('laglFile').hasError(validation.type) && (submitGov2.get('laglFile').dirty || submitGov2.get('laglFile').touched)\">\n                                                            {{ validation.message }}\n                                                          </div>\n                                                        </div>\n                                                      </div>\n                                                    </div>\n                                                  </div>\n                                                </div>\n                                              </div>\n                                              <div class=\"form-group row margin-bottom-10\">\n                                                <div class=\"col-12\">\n                                                  <div class=\"text-danger text-center\">Attached documents should be\n                                                    (pdf/jpg/gif/png file format. &lt;500KB only)</div>\n                                                </div>\n                                              </div>\n                                            </div>\n\n                                          </div>\n                                        </div>\n                                      </div>\n                                      <!--/Attachments-->\n                                      <div class=\"kt-portlet\">\n                                        <div class=\"kt-portlet__head\">\n                                          <div class=\"kt-portlet__head-label\">\n                                            <h3 class=\"kt-portlet__head-title\">{{'HOME.Bank_detail' | translate}}</h3>\n                                          </div>\n                                        </div>\n                                        <!--begin::Form-->\n                                        <div class=\"kt-form kt-form--label-right\">\n                                          <div class=\"kt-portlet__body\">\n                                            <div class=\"row\">\n\n                                              <div class=\"col-md-6\">\n                                                <div class=\"form-group margin-bottom-10\">\n                                                  <label for=\"bank-name\" class=\"col-form-label\">{{'HOME.Select_Bank' | translate}} <em\n                                                    style=\"font-style: normal;\"\n                                                    class=\"text-danger-black\">*</em>\n                                                  </label>\n                                                  <select class=\"form-control col-md-9\" formControlName=\"bankName\">\n                                                      <option>{{'HOME.Select_Bank' | translate}} </option>\n                                                    <option *ngFor=\"let bank of bankList\" >{{bank.bankName}}</option>\n                                                  </select>\n                                                  <div class=\"validation-errors text-danger\">\n                                                    <div *ngFor=\"let validation of validation_messages.bankName\">\n                                                      <div col-12 class=\"error-message\"\n                                                        *ngIf=\"submitGov2.get('bankName').hasError(validation.type) && (submitGov2.get('bankName').dirty || submitGov2.get('bankName').touched)\">\n                                                        {{ validation.message }}\n\n                                                      </div>\n                                                    </div>\n                                                  </div>\n                                                </div>\n                                              </div>\n                                              <div class=\"col-md-6\">\n                                                <div class=\"form-group margin-bottom-10\">\n                                                  <label for=\"iban\" class=\"col-form-label\"> {{'HOME.IBAN' | translate}} <em\n                                                    style=\"font-style: normal;\"\n                                                    class=\"text-danger-black\">*</em></label>\n                                                  <input class=\"form-control col-md-9\" type=\"text\" value=\"\" id=\"\" formControlName=\"bi\">\n                                                  <div class=\"validation-errors text-danger\">\n                                                    <div *ngFor=\"let validation of validation_messages.bi\">\n                                                      <div col-12 class=\"error-message\"\n                                                        *ngIf=\"submitGov2.get('bi').hasError(validation.type) && (submitGov2.get('bi').dirty || submitGov2.get('bi').touched)\">\n                                                        {{ validation.message }}\n                                                      </div>\n                                                    </div>\n                                                  </div>\n                                                </div>\n                                              </div>\n                                            </div>\n                                          </div>\n\n                                        </div>\n                                      </div>\n                                      <!--Terms & condition-->\n                                      <div class=\"kt-portlet\">\n                                        <div class=\"kt-portlet__head\">\n                                          <div class=\"kt-portlet__head-label\">\n                                            <h3 class=\"kt-portlet__head-title\">\n                                              {{'HOME.TERMS_AND_CONDITIONS' | translate}}\n                                            </h3>\n                                          </div>\n                                        </div>\n                                        <!--begin::Form-->\n                                        <div class=\"kt-form kt-form--label-right\">\n                                          <div class=\"kt-portlet__body\">\n                                            <div class=\"container\">\n                                              <div class=\"row\">\n                                                <div class=\"col-md-12 text-left\">\n                                                  <div class=\"terms-wrap terms-scroller\">\n                                                    <p>Lorem Ipsum is simply dummy text of the printing and typesetting\n                                                      industry. Lorem Ipsum has been the industry's standard dummy text\n                                                      ever since the 1500s, when an unknown printer took a galley of\n                                                      type and scrambled it to make a type specimen book. It has\n                                                      survived not only five centuries, but also the leap into\n                                                      electronic typesetting, remaining essentially unchanged. It was\n                                                      popularised in the 1960s with the release of Letraset sheets\n                                                      containing Lorem Ipsum passages, and more recently with desktop\n                                                      publishing software like Aldus PageMaker including versions of\n                                                      Lorem Ipsum. Lorem Ipsum is simply dummy text of the printing and\n                                                      typesetting industry. Lorem Ipsum has been the industry's standard\n                                                      dummy text ever since the 1500s, when an unknown printer took a\n                                                      galley of type and scrambled it to make a type specimen book. It\n                                                      has survived not only five centuries, but also the leap into\n                                                      electronic typesetting, remaining essentially unchanged. It was\n                                                      popularised in the 1960s with the release of Letraset sheets\n                                                      containing Lorem Ipsum passages, and more recently with desktop\n                                                      publishing software like Aldus PageMaker including versions of\n                                                      Lorem Ipsum.\n                                                    </p>\n                                                  </div>\n                                                </div>\n                                                <div class=\"col-md-12 text-left\">\n                                                  <div class=\"checkbox\">\n                                                    <label class=\"container-checkbox\"> {{'HOME.ACCEPT_TERMS_COND' | translate}}\n                                                      <input type=\"checkbox\" [(ngModel)]=\"checkBox\"\n                                                      formControlName=\"checkBox\" (change)=\"toggleVisibility($event)\">\n                                                      <span class=\"checkmark\"></span>\n                                                    </label>\n                                                  </div>\n                                                </div>\n                                              </div>\n                                            </div>\n                                          </div>\n                                        </div>\n                                      </div>\n                                      <!--Terms & condition-->\n                                      <!--/three buttons-->\n                                      <div class=\"kt-portlet__foot\">\n                                        <div class=\"kt-form__actions\">\n                                          <div class=\"row\">\n                                            <div class=\"col-12\">\n                                              <div class=\"pop-block red-block-wrap\" *ngIf=\"isOpenValidationAlert\">\n                                                <div class=\"red-block\"><img src=\"../../assets/images/alert.png\"\n                                                    alt=\"alert-icon\" class=\"alert-icon\"></div>\n                                                <p> <b>Error Message</b> Validation failed</p>\n                                                <button class=\"dlete-btn-wrap\"><img\n                                                    src=\"../../assets/images/delete-button.png\" alt=\"image\"\n                                                    class=\"delete-btn\" (click)=\"closeAlert()\"></button>\n                                                <div class=\"clearfix\"></div>\n                                              </div>\n                                              <div class=\"btn-wrap\">\n                                                <button class=\"btn btn-success btn-margin-2\" \n                                                  (click)=\"resetForm()\">{{'HOME.Cancel' | translate}}</button>\n                                                <button class=\"btn btn-gry btn-margin-2\" type=\"button\"\n                                                  (click)=\"gotoPrevious()\">{{'HOME.Previous' | translate}}</button>\n                                                <button class=\"btn btn-success btn-margin-2\" type=\"button\"\n                                                  (click)=\"saveReg2()\" >{{'HOME.Continue' | translate}}</button>\n\n                                              </div>\n\n                                            </div>\n                                          </div>\n                                        </div>\n                                      </div>\n                                      <!--/three buttons-->\n                                    </div>\n                                  </div>\n                                </form>\n                              </div>\n                            </div>\n                          </div>\n\n                        </div>\n                      </div>\n                    </div>\n                  </section>\n                </div>\n\n              </div>\n            </div>\n            <!--New Design Here-->\n          </div>\n        </div>\n        <!--===========================\n                End Content\n                ============================-->\n\n  <!--begin::Global Theme Bundle(used by all pages) -->\n  <script src=\"../../assets/js/plugins.bundle.js\" type=\"text/javascript\"></script>\n  <!--start::Browse -->\n  <script>\n    $('#inputGroupFile02').on('change', function () {\n      //get the file name\n      var fileName = $(this).val();\n      //replace the \"Choose a file\" label\n      $(this).next('.custom-file-label').html(fileName);\n    })\n    $('#inputGroupFile03').on('change', function () {\n      //get the file name\n      var fileName = $(this).val();\n      //replace the \"Choose a file\" label\n      $(this).next('.custom-file-label').html(fileName);\n    })\n    $('#inputGroupFile04').on('change', function () {\n      //get the file name\n      var fileName = $(this).val();\n      //replace the \"Choose a file\" label\n      $(this).next('.custom-file-label').html(fileName);\n    })\n    $('#inputGroupFile05').on('change', function () {\n      //get the file name\n      var fileName = $(this).val();\n      //replace the \"Choose a file\" label\n      $(this).next('.custom-file-label').html(fileName);\n    })\n  </script>\n  <!--end::Browse -->\n\n  <!-- end::Body -->\n");

/***/ }),

/***/ "./node_modules/raw-loader/dist/cjs.js!./src/app/government-entity-reg3/government-entity-reg3.component.html":
/*!********************************************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/government-entity-reg3/government-entity-reg3.component.html ***!
  \********************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("\n\n        <!--===========================\n                Start Content\n                ============================-->\n                <div class=\"pt-0 kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor kt-margin-top-50\">\n                  <div class=\"kt-container\">\n            <!--New Design Here-->\n            <div class=\"row\">\n              <div class=\"col-12 col-sm-3 col-md-3 col-lg-3 left-panel-menu-wrap w-20 fixed-wrap\">\n\n                <ul class=\"vertical-menu\">\n                </ul>\n              </div>\n              <div class=\"col-12 col-sm-9 col-md-9 col-lg-9 padding-null scroll-wrap\">\n\n                <div class=\"grey-bg\">\n                  <section class=\"design-process-section\" id=\"process-tab\">\n                    <div>\n                      <div>\n                        <div>\n                          <!-- Nav tabs -->\n                          <ul class=\"nav nav-tabs process-model more-icon-preocess reg-margin\" role=\"tablist\">\n                            <li role=\"presentation\" >\n                              <a routerLink=\"/governmentEntityReg\">1</a>\n                            </li>\n                            <li role=\"presentation\" >\n                              <a routerLink=\"/governmentEntityReg2\">2</a>\n                            </li>\n                            <li role=\"presentation\" class=\"active\">\n                              <a routerLink=\"/governmentEntityReg3\">3</a>\n                            </li>\n                          </ul>\n                          <div class=\"text-left1\">\n                            <h3 class=\"kt-login__title pt-3 m-0 mb-30\">{{'HOME.Government_entity_registration'|translate}}Government entity registration</h3>\n                          </div>\n                          <!-- Tab panes -->\n                          <div class=\"tab-content\">\n                            <div role=\"tabpanel\" class=\"tab-pane active\" id=\"discover\">\n                              <div class=\"design-process-content\">\n                                <!-- <form [formGroup]=\"submitGov3\"> -->\n                                  <div class=\"row\">\n                                    <div class=\"col-sm-12\">\n                                      <!-- <div class=\"pop-block\" *ngIf=\"isShowAlertDiv\"> -->\n                                        <div class=\"pop-block\" >\n                                        <div class=\"blue-block\"><img src=\"../../assets/images/alert.png\" alt=\"alert-icon\"\n                                            class=\"alert-icon\"></div>\n                                        <!-- <div *ngIf=\"isShowAlertDiv\"> -->\n                                          <p>{{commonService.alertMsgforGovRegistrationFinal}}</p>\n                                        <!-- </div> -->\n                                        <!-- <p>You have new cas requst 1234 from <span class=\"blue-text\"><u>ABC\n                                              company</u></span> waiting your approval</p> -->\n                                        <div class=\"clearfix\"></div>\n                                      </div>\n                                    </div>\n                                    <div class=\"col-sm-12\">\n                                      <!--/bank information-->\n                                      <!-- <div class=\"kt-portlet\">\n                                        <div class=\"kt-portlet__head\">\n                                          <div class=\"kt-portlet__head-label\">\n                                            <h3 class=\"kt-portlet__head-title\">\n                                              Login Info\n                                            </h3>\n                                          </div>\n                                        </div>\n                                        <div class=\"kt-form kt-form--label-right\">\n                                          <div class=\"kt-portlet__body\">\n                                            <div class=\"container\">\n                                              <div class=\"row\">\n                                                <div class=\"col-md-6\">\n                                                  <div class=\"form-group margin-bottom-10\">\n                                                    <label for=\"user-id\" class=\"col-form-label\">User ID<em\n                                                        style=\"font-style: normal;\"\n                                                        class=\"text-danger-black\">*</em></label>\n                                                    <input class=\"form-control col-md-9\" type=\"text\" value=\"\" id=\"\" formControlName=\"userId\" (blur)=\"onBlur($event.target.value)\">\n\n                                                    <div class=\"validation-errors text-danger\">\n                                                      <div *ngFor=\"let validation of validation_messages.userId\">\n                                                        <div col-12 class=\"error-message\"\n                                                          *ngIf=\"submitGov3.get('userId').hasError(validation.type) && (submitGov3.get('userId').dirty || submitGov3.get('userId').touched)\">\n                                                          {{ validation.message }}\n                                                        </div>\n                                                      </div>\n                                                    </div>\n                                                  </div>\n                                                </div>\n                                              </div>\n                                            </div>\n                                          </div>\n                                        </div>\n                                      </div> -->\n\n\n\n                                      <!--/bank information-->\n                                      <!--/three buttons-->\n                                      <!-- <div class=\"kt-portlet__foot\">\n                                        <div class=\"kt-form__actions\">\n                                          <div class=\"row\">\n                                            <div class=\"col-12\">\n                                                <div class=\"pop-block red-block-wrap\" *ngIf=\"isOpenValidationAlert\">\n                                                    <div class=\"red-block\"><img src=\"../../assets/images/alert.png\"\n                                                        alt=\"alert-icon\" class=\"alert-icon\"></div>\n                                                    <p> <b>Error Message</b> Validation failed</p>\n                                                    <button class=\"dlete-btn-wrap\"><img\n                                                        src=\"../../assets/images/delete-button.png\" alt=\"image\"\n                                                        class=\"delete-btn\" (click)=\"closeAlert()\"></button>\n                                                    <div class=\"clearfix\"></div>\n                                                  </div>\n                                              <div class=\"btn-wrap\">\n                                                <button class=\"btn btn-gry btn-margin-2\" type=\"button\"\n                                                (click)=\"gotoPrevious()\">Previous</button>\n                                                <button class=\"btn btn-success btn-margin-2\" type=\"submit\" [disabled]=\"isDisabledSubmitButton\" (click)=\"saveReg3()\">Submit</button>\n\n                                              </div>\n\n                                            </div>\n                                          </div>\n                                        </div>\n                                      </div> -->\n                                      <!--/three buttons-->\n                                    </div>\n                                  </div>\n                                <!-- </form> -->\n                              </div>\n                            </div>\n                          </div>\n\n                        </div>\n                      </div>\n                    </div>\n                  </section>\n                </div>\n\n              </div>\n            </div>\n            <!--New Design Here-->\n          </div>\n        </div>\n        <!--===========================\n                End Content\n                ============================-->\n\n\n  <!--begin::Global Theme Bundle(used by all pages) -->\n  <script src=\"../../assets/js/plugins.bundle.js\" type=\"text/javascript\"></script>\n  <!--end::Page Vendors -->\n  <!--start::Browse -->\n  <script>\n    $('#inputGroupFile02').on('change', function () {\n      //get the file name\n      var fileName = $(this).val();\n      //replace the \"Choose a file\" label\n      $(this).next('.custom-file-label').html(fileName);\n    })\n    $('#inputGroupFile03').on('change', function () {\n      //get the file name\n      var fileName = $(this).val();\n      //replace the \"Choose a file\" label\n      $(this).next('.custom-file-label').html(fileName);\n    })\n    $('#inputGroupFile04').on('change', function () {\n      //get the file name\n      var fileName = $(this).val();\n      //replace the \"Choose a file\" label\n      $(this).next('.custom-file-label').html(fileName);\n    })\n    $('#inputGroupFile05').on('change', function () {\n      //get the file name\n      var fileName = $(this).val();\n      //replace the \"Choose a file\" label\n      $(this).next('.custom-file-label').html(fileName);\n    })\n  </script>\n  <!--end::Browse -->\n\n  <!-- end::Body -->\n");

/***/ }),

/***/ "./node_modules/raw-loader/dist/cjs.js!./src/app/government-pending-task/government-pending-task.component.html":
/*!**********************************************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/government-pending-task/government-pending-task.component.html ***!
  \**********************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("          <!--===========================\n                        Start Content\n                        ============================-->\n                        <div class=\"pt-0 kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor kt-margin-top-50\">\n                          <div class=\"kt-container\">\n                              <!--New Design Here-->\n                              <div class=\"row\">\n                                <app-sidemenu></app-sidemenu>\n                                <!--<div class=\"col-12 col-sm-3 col-md-3 col-lg-3 left-panel-menu-wrap w-20 fixed-wrap\">\n                                   \n                                  <ul class=\"vertical-menu\">\n                                      <li *ngIf=\"roleId == 2\"><a routerLink=\"/govDashboard\"><span class=\"db-icon\"></span>{{'HOME.Dashboard' | translate}}</a></li>\n                                      <li *ngIf=\"roleId == 2\"><a routerLink=\"/govLgManagement\"><span class=\"db-icon\"></span>{{'HOME.LG_Management' | translate}}</a></li>\n                                      <li *ngIf=\"roleId == 2\"><a routerLink=\"/governmentpendingtasks\" class=\"active\"><span class=\"db-icon\"></span>{{'HOME.Pending_Tasks' | translate}}</a></li>\n                                    </ul>\n                                </div>-->\n                                <div class=\"col-12 col-sm-9 col-md-9 col-lg-9 padding-null scroll-wrap\">\n                                  <!-- <div class=\"white-area\">\n                                    <div class=\"user-area\">\n                                      <span class=\"user-img-wrap\"><img src=\"../../assets/images/user.png\" alt=\"image\"\n                                          class=\"user-img\"></span><span>Abdulla Ahmad</span>\n                                    </div>\n                                    <div class=\"clear\"></div>\n                                  </div> -->\n                                  \n                                  <div class=\"grey-bg\">\n                                    <section class=\"design-process-section\" id=\"process-tab\">\n                                      <div>\n                                        <div>\n                                          <div>\n                                            <div class=\"two-blocks-tab\">\n                                              <ul>\n                                                <!--<li (click)=\"goToPendingReqTabPri()\" [ngClass]=\"{'active': isPendingClicked}\"><a>Pending task for LG issue</a></li>-->\n                                                <li (click)=\"goToLGAmendTab()\" [ngClass]=\"{'active': isLGAmendClicked}\"><a>Pending task for Amend/Confiscate/Release</a></li>\n                                                <li (click)=\"goToInternalPendingTab()\" [ngClass]=\"{'active': isInternalClicked}\"><a>Pending task for Internal Rewiew/Approve</a></li>\n                                              </ul>\n                                            </div>\n                                            <!-- Tab panes -->\n                                            <div class=\"tab-content\">\n                                              <div role=\"tabpanel\" class=\"tab-pane active\" id=\"discover\">\n                                                <div class=\"design-process-content\">\n                                                  <form>\n                \n                                                    <div class=\"row\" *ngIf=\"isOpenPendingList\">\n                                                      <div class=\"col-sm-12\">\n                                                        <div class=\"kt-portlet\">\n                                                          <div class=\"kt-portlet__head\">\n                                                            <div class=\"kt-portlet__head-label\">\n                                                              <h3 class=\"kt-portlet__head-title\">\n                                                                {{'HOME.Pending_Requests' | translate}} \n                                                              </h3>\n                                                            </div>\n                                                          </div>\n                                                          <!--begin::Form-->\n                \n                \n                                                          <div class=\"kt-form kt-form--label-right\">\n                                                            <div class=\"kt-portlet__body\">\n                                                              <div class=\"container\">\n                                                                <div class=\"row\">\n                                                                 <div class=\"col-md-12\">\n                                                                    <div class=\"kt-portlet no-shadow\">\n                                                                      <div class=\"new-blue-table1\">\n                                                                        <div class=\"table-responsive\">\n                                                                          <div *ngIf=\"this.translate.currentLang == 'en'\">\n                                                                          <div *ngIf=\"pendingList?.length > 0\">\n                                                                              <table datatable [dtOptions]=\"dtOptions\" class=\"table table-bordered table-striped table-hover\">\n                                                                                  <thead>\n                                                                                        <tr>\n                                                                                          <th class=\"table14\">#</th>\n                                                                                          <th class=\"table14\">{{'HOME.Request_date' | translate}}</th>\n                                                                                          <th class=\"table15\">{{'HOME.LG_amount' | translate}}</th>\n                                                                                          <th class=\"table16\">{{'HOME.LG_TYPE' | translate}}</th>\n                                                                                          <th class=\"table17\">{{'HOME.Beneficiary' | translate}}</th>\n                                                                                          <th class=\"table18\">{{'HOME.Project_name' | translate}}</th>\n                                                                                          <th class=\"table19\">{{'HOME.Bank' | translate}}</th>\n                                                                                          <th class=\"\">{{'HOME.View_Details' | translate}}</th>\n                                                                                        </tr>\n                                                                                  </thead>\n                                                                                  <tbody>\n                                                                                  <tr *ngFor=\"let plist of pendingList; let i = index \">\n                                                  <td>{{i+1}}</td>\n                                                  <td>{{plist.request_date}}</td>\n                                                  <td>{{plist.contract_value}}</td>\n                                                  <td>{{plist.lg_type}}</td>\n                                                  <td>{{plist.beneficiary_name}}</td>\n                                                  <td>{{plist.project_name}}</td>\n                                                  <td>{{plist.bank_name}}</td>\n                                                  <td>\n                                                    <button type=\"button\" class=\"btn btn-success vw-details\" (click)=\"RowSelected(plist, 'LG_issue')\">{{'HOME.View' | translate}}</button>\n                                                  </td>\n                                                                                  </tr>\n                                                                                  </tbody>\n                                                                              </table>\n                                                                          </div>\n                                                                        </div>\n                \n                                                                        <div *ngIf=\"this.translate.currentLang == 'ar'\">\n                                                                          <div *ngIf=\"pendingList?.length > 0\">\n                                                                              <table datatable [dtOptions]=\"dtOptionsAR\" class=\"table table-bordered table-striped table-hover\">\n                                                                                  <thead>\n                                                                                        <tr>\n                                                                                          <th class=\"table14\">#</th>\n                                                                                          <th class=\"table14\">{{'HOME.Request_date' | translate}}</th>\n                                                                                          <th class=\"table15\">{{'HOME.LG_amount' | translate}}</th>\n                                                                                          <th class=\"table16\">{{'HOME.LG_TYPE' | translate}}</th>\n                                                                                          <th class=\"table17\">{{'HOME.Beneficiary' | translate}}</th>\n                                                                                          <th class=\"table18\">{{'HOME.Project_name' | translate}}</th>\n                                                                                          <th class=\"table19\">{{'HOME.Bank' | translate}}</th>\n                                                                                          <th class=\"\">{{'HOME.View_Details' | translate}}</th>\n                                                                                        </tr>\n                                                                                  </thead>\n                                                                                  <tbody>\n                                                                                  <tr *ngFor=\"let plist of pendingList; let i = index \">\n                                                  <td>{{i+1}}</td>\n                                                  <td>{{plist.request_date}}</td>\n                                                  <td>{{plist.contract_value}}</td>\n                                                  <td>{{plist.lg_type}}</td>\n                                                  <td>{{plist.beneficiary_name}}</td>\n                                                  <td>{{plist.project_name}}</td>\n                                                  <td>{{plist.bank_name}}</td>\n                                                  <td>\n                                                    <button type=\"button\" class=\"btn btn-success vw-details\" (click)=\"RowSelected(plist, 'LG_issue')\">{{'HOME.View' | translate}}</button>\n                                                  </td>\n                                                                                  </tr>\n                                                                                  </tbody>\n                                                                              </table>\n                                                                          </div>\n                                                                        </div>\n                                                                        </div>\n                                                                      </div>\n                                                                    </div>\n                                                                  </div>\n                                                                </div>\n                                                              </div>\n                                                            </div>\n                                                          </div>\n                                                        </div>\n                                                      </div>\n                                                    </div>\n                \n                \n                \n                \n                \n                \n                \n                \n                                                    <div class=\"row\" *ngIf=\"isOpenLGAmendList\">\n                                                      <div class=\"col-sm-12\">\n                                                        <div class=\"kt-portlet\">\n                                                          <div class=\"kt-portlet__head\">\n                                                            <div class=\"kt-portlet__head-label\">\n                                                              <h3 class=\"kt-portlet__head-title\">\n                                                                {{'HOME.Pending_Requests' | translate}} \n                                                              </h3>\n                                                            </div>\n                                                          </div>\n                                                          <!--begin::Form-->\n                \n                \n                                                          <div class=\"kt-form kt-form--label-right\">\n                                                            <div class=\"kt-portlet__body\">\n                                                              <div class=\"container\">\n                                                                <div class=\"row\">\n                                                                 <div class=\"col-md-12\">\n                                                                    <div class=\"kt-portlet no-shadow\">\n                                                                      <div class=\"new-blue-table1\">\n                                                                        <div class=\"table-responsive\">\n                                                                          <div *ngIf=\"this.translate.currentLang == 'en'\">\n                                                                          <div *ngIf=\"amendList?.length > 0 || releaseList?.length > 0 || confiscateList?.length > 0\">\n                                                                              <table datatable [dtOptions]=\"dtOptions\" class=\"table table-bordered table-striped table-hover\">\n                                                                                  <thead>\n                                                                                        <tr>\n                                                                                          <th class=\"table14\">#</th>\n                                                                                          <th class=\"table14\">{{'HOME.Request_date' | translate}}</th>\n                                                                                          <th class=\"table15\">{{'HOME.LG_amount' | translate}}</th>\n                                                                                          <th class=\"table16\">{{'HOME.LG_TYPE' | translate}}</th>\n                                                                                          <th class=\"table17\">{{'HOME.Beneficiary' | translate}}</th>\n                                                                                          <th class=\"table18\">{{'HOME.Project_name' | translate}}</th>\n                                                                                          <th class=\"table19\">{{'HOME.Bank' | translate}}</th>\n                                                                                          <th class=\"\">{{'HOME.View_Details' | translate}}</th>\n                                                                                        </tr>\n                                                                                  </thead>\n                                                                                  <tbody>\n                                                                                  <tr *ngFor=\"let alist of amendList; let i = index \">\n                                                  <td>{{i+1}}</td>\n                                                  <td>{{alist.request_date}}</td>\n                                                  <td>{{alist.contract_value}}</td>\n                                                  <td>{{alist.lg_type}}</td>\n                                                  <td>{{alist.beneficiary_name}}</td>\n                                                  <td>{{alist.project_name}}</td>\n                                                  <td>{{alist.bank_name}}</td>\n                                                  <td>\n                                                    <button type=\"button\" class=\"btn btn-success vw-details\" (click)=\"ACRRowSelected(alist, 'amend')\">{{'HOME.View' | translate}}</button>\n                                                  </td>\n                                                   </tr>\n                                                                                  \n                                                  <tr *ngFor=\"let rlist of releaseList; let r = index \">\n                                                  <td>{{r+amendList?.length+1}}</td>\n                                                  <td>{{rlist.request_date}}</td>\n                                                  <td>{{rlist.contract_value}}</td>\n                                                  <td>{{rlist.lg_type}}</td>\n                                                  <td>{{rlist.beneficiary_name}}</td>\n                                                  <td>{{rlist.project_name}}</td>\n                                                  <td>{{rlist.bank_name}}</td>\n                                                  <td>\n                                                    <button type=\"button\" class=\"btn btn-success vw-details\" (click)=\"ACRRowSelected(rlist, 'release')\">{{'HOME.View' | translate}}</button>\n                                                  </td>\n                                                  </tr>\n                                                  \n                                                  <tr *ngFor=\"let clist of confiscateList; let c = index \">\n                                                  <td>{{c+amendList?.length+releaseList?.length+1}}</td>\n                                                  <td>{{clist.request_date}}</td>\n                                                  <td>{{clist.contract_value}}</td>\n                                                  <td>{{clist.lg_type}}</td>\n                                                  <td>{{clist.beneficiary_name}}</td>\n                                                  <td>{{clist.project_name}}</td>\n                                                  <td>{{clist.bank_name}}</td>\n                                                  <td>\n                                                    <button type=\"button\" class=\"btn btn-success vw-details\" (click)=\"ACRRowSelected(clist, 'confiscate')\">{{'HOME.View' | translate}}</button>\n                                                  </td>\n                                                  </tr>\n                                                                                  </tbody>\n                                                                              </table>\n                                                                          </div>\n                                                                        </div>\n                \n                                                                        <div *ngIf=\"this.translate.currentLang == 'ar'\">\n                                                                          <div *ngIf=\"amendList?.length > 0\">\n                                                                              <table datatable [dtOptions]=\"dtOptionsAR\" class=\"table table-bordered table-striped table-hover\">\n                                                                                  <thead>\n                                                                                        <tr>\n                                                                                          <th class=\"table14\">#</th>\n                                                                                          <th class=\"table14\">{{'HOME.Request_date' | translate}}</th>\n                                                                                          <th class=\"table15\">{{'HOME.LG_amount' | translate}}</th>\n                                                                                          <th class=\"table16\">{{'HOME.LG_TYPE' | translate}}</th>\n                                                                                          <th class=\"table17\">{{'HOME.Beneficiary' | translate}}</th>\n                                                                                          <th class=\"table18\">{{'HOME.Project_name' | translate}}</th>\n                                                                                          <th class=\"table19\">{{'HOME.Bank' | translate}}</th>\n                                                                                          <th class=\"\">{{'HOME.View_Details' | translate}}</th>\n                                                                                        </tr>\n                                                                                  </thead>\n                                                                                  <tbody>\n                                                                                    <tr *ngFor=\"let alist of amendList; let i = index \">\n                                                                                      <td>{{i+1}}</td>\n                                                                                      <td>{{alist.request_date}}</td>\n                                                                                      <td>{{alist.contract_value}}</td>\n                                                                                      <td>{{alist.lg_type}}</td>\n                                                                                      <td>{{alist.beneficiary_name}}</td>\n                                                                                      <td>{{alist.project_name}}</td>\n                                                                                      <td>{{alist.bank_name}}</td>\n                                                                                      <td>\n                                                                                        <button type=\"button\" class=\"btn btn-success vw-details\" (click)=\"ACRRowSelected(alist, 'amend')\">{{'HOME.View' | translate}}</button>\n                                                                                      </td>\n                                                                                       </tr>\n                                                                                                                      \n                                                                                      <tr *ngFor=\"let rlist of releaseList; let r = index \">\n                                                                                      <td>{{r+amendList?.length+1}}</td>\n                                                                                      <td>{{rlist.request_date}}</td>\n                                                                                      <td>{{rlist.contract_value}}</td>\n                                                                                      <td>{{rlist.lg_type}}</td>\n                                                                                      <td>{{rlist.beneficiary_name}}</td>\n                                                                                      <td>{{rlist.project_name}}</td>\n                                                                                      <td>{{rlist.bank_name}}</td>\n                                                                                      <td>\n                                                                                        <button type=\"button\" class=\"btn btn-success vw-details\" (click)=\"ACRRowSelected(rlist, 'release')\">{{'HOME.View' | translate}}</button>\n                                                                                      </td>\n                                                                                      </tr>\n                                                                                      \n                                                                                      <tr *ngFor=\"let clist of confiscateList; let c = index \">\n                                                                                      <td>{{c+amendList?.length+releaseList?.length+1}}</td>\n                                                                                      <td>{{clist.request_date}}</td>\n                                                                                      <td>{{clist.contract_value}}</td>\n                                                                                      <td>{{clist.lg_type}}</td>\n                                                                                      <td>{{clist.beneficiary_name}}</td>\n                                                                                      <td>{{clist.project_name}}</td>\n                                                                                      <td>{{clist.bank_name}}</td>\n                                                                                      <td>\n                                                                                        <button type=\"button\" class=\"btn btn-success vw-details\" (click)=\"ACRRowSelected(clist, 'confiscate')\">{{'HOME.View' | translate}}</button>\n                                                                                      </td>\n                                                                                      </tr>\n                                                                                  </tbody>\n                                                                              </table>\n                                                                          </div>\n                                                                        </div>\n                                                                        </div>\n                                                                      </div>\n                                                                    </div>\n                                                                  </div>\n                                                                </div>\n                                                              </div>\n                                                            </div>\n                                                          </div>\n                                                        </div>\n                                                      </div>\n                                                    </div>\n                \n                \n                \n                \n              \n              \n              \n              \n              \n              \n              <!-- Internal Pending list for LG/Amend/Confiscation/release -->\n              <div class=\"row\" *ngIf=\"isOpenInternalList\">\n              \n              \n                \n                \n<!-- Internal Pending list for Amendment Reject -->\n<div *ngIf=\"aclAmendCreate\">\n  <div class=\"col-sm-12\">\n    <div class=\"kt-portlet\">\n      <div class=\"kt-portlet__head\">\n        <div class=\"kt-portlet__head-label\">\n          <h3 class=\"kt-portlet__head-title\">\n            Pending Amendment Reject List\n          </h3>\n        </div>\n      </div>\n      \n        <!--begin::Form-->\n        <div class=\"kt-form kt-form--label-right\">\n        <div class=\"kt-portlet__body\">\n          <div class=\"container\">\n            <div class=\"row\">\n              <div class=\"col-md-12\">\n                <div class=\"kt-portlet no-shadow\">\n                  <div class=\"new-blue-table1\">\n\n\n\n                    <div class=\"table-responsive\">\n                      <div *ngIf=\"this.translate.currentLang == 'en'\">\n                        <div *ngIf=\"intAmendmentRejectList?.length > 0; then AmendmentRejectthenBlock else AmendmentRejectelseBlock\"> </div>\n                        <ng-template #AmendmentRejectthenBlock>\n                        <table datatable [dtOptions]=\"dtOptions\" class=\"table table-bordered table-striped table-hover\">\n                            <thead>\n                                <tr>\n                                    <th class=\"table14\">#</th>\n                                    <th class=\"table14\">{{'HOME.Request_date' | translate}}</th>\n                                    <th class=\"table15\">{{'HOME.LG_amount' | translate}}</th>\n                                    <th class=\"table16\">{{'HOME.LG_TYPE' | translate}}</th>\n                                    <th class=\"table17\">{{'HOME.Beneficiary' | translate}}</th>\n                                    <th class=\"table18\">{{'HOME.Project_name' | translate}}</th>\n                                    <th class=\"table19\">{{'HOME.Bank' | translate}}</th>\n                                    <th class=\"\">{{'HOME.View_Details' | translate}}</th>\n                                  </tr>\n                            </thead>\n                            <tbody>\n                              <tr *ngFor=\"let plist of intAmendmentRejectList; let i = index \">\n                                <td>{{i+1}}</td>\n                                <td>{{plist.request_date}}</td>\n                                <td>{{plist.contract_value}}</td>\n                                <td>{{plist.lg_type}}</td>\n                                <td>{{plist.beneficiary_name}}</td>\n                                <td>{{plist.project_name}}</td>\n                                <td>{{plist.bank_name}}</td>\n                                <td>\n                                  <button type=\"button\" class=\"btn btn-success vw-details\" (click)=\"internalRowSelected(plist, 'amendment_Reject')\">{{'HOME.View' | translate}}</button>\n                                </td>\n                              </tr>\n                            </tbody>\n                          </table>\n                        </ng-template>\n\n                        <ng-template #AmendmentRejectelseBlock>\n                            <table datatable [dtOptions]=\"dtOptions\" class=\"table table-bordered table-striped table-hover\">\n                                <thead>\n                                  <tr>\n                                    <th class=\"table14\">#</th>\n                                    <th class=\"table14\">{{'HOME.Request_date' | translate}}</th>\n                                    <th class=\"table15\">{{'HOME.LG_amount' | translate}}</th>\n                                    <th class=\"table16\">{{'HOME.LG_TYPE' | translate}}</th>\n                                    <th class=\"table17\">{{'HOME.Beneficiary' | translate}}</th>\n                                    <th class=\"table18\">{{'HOME.Project_name' | translate}}</th>\n                                    <th class=\"table19\">{{'HOME.Bank' | translate}}</th>\n                                    <th class=\"\">{{'HOME.View_Details' | translate}}</th>\n                                  </tr>\n                                </thead>\n                                <tbody>\n                                  <tr *ngFor=\"let plist of intAmendmentRejectList; let i = index \">\n                                    <td>{{i+1}}</td>\n                                    <td>{{plist.request_date}}</td>\n                                    <td>{{plist.contract_value}}</td>\n                                    <td>{{plist.lg_type}}</td>\n                                    <td>{{plist.beneficiary_name}}</td>\n                                    <td>{{plist.project_name}}</td>\n                                    <td>{{plist.bank_name}}</td>\n                                    <td>\n                                      <button type=\"button\" class=\"btn btn-success vw-details\" (click)=\"internalRowSelected(plist, 'amendment_Reject')\">{{'HOME.View' | translate}}</button>\n                                    </td>\n                                  </tr>\n                                </tbody>\n                              </table>\n                            </ng-template>\n                    </div>\n                    <!--This is for Arabic-->\n\n                    <div *ngIf=\"this.translate.currentLang == 'ar'\">\n                      <div *ngIf=\"intAmendmentRejectList?.length > 0; then AmendmentRejectthenBlock else AmendmentRejectelseBlock\"> </div>\n                      <ng-template #AmendmentRejectthenBlock>\n                      <table datatable [dtOptions]=\"dtOptionsAR\" class=\"table table-bordered table-striped table-hover\">\n                          <thead>\n                            <tr>\n                              <th class=\"table14\">#</th>\n                              <th class=\"table14\">{{'HOME.Request_date' | translate}}</th>\n                              <th class=\"table15\">{{'HOME.LG_amount' | translate}}</th>\n                              <th class=\"table16\">{{'HOME.LG_TYPE' | translate}}</th>\n                              <th class=\"table17\">{{'HOME.Beneficiary' | translate}}</th>\n                              <th class=\"table18\">{{'HOME.Project_name' | translate}}</th>\n                              <th class=\"table19\">{{'HOME.Bank' | translate}}</th>\n                              <th class=\"\">{{'HOME.View_Details' | translate}}</th>\n                            </tr>\n                          </thead>\n                          <tbody>\n                            <tr *ngFor=\"let plist of intAmendmentRejectList; let i = index \">\n                              <td>{{i+1}}</td>\n                              <td>{{plist.request_date}}</td>\n                              <td>{{plist.contract_value}}</td>\n                              <td>{{plist.lg_type}}</td>\n                              <td>{{plist.beneficiary_name}}</td>\n                              <td>{{plist.project_name}}</td>\n                              <td>{{plist.bank_name}}</td>\n                              <td>\n                                <button type=\"button\" class=\"btn btn-success vw-details\" (click)=\"internalRowSelected(plist, 'amendment_Reject')\">{{'HOME.View' | translate}}</button>\n                              </td>\n                            </tr>\n                          </tbody>\n                        </table>\n                      </ng-template>\n\n                      <ng-template #AmendmentRejectelseBlock>\n                          <table datatable [dtOptions]=\"dtOptionsAR\" class=\"table table-bordered table-striped table-hover\">\n                              <thead>\n                                <tr>\n                                  <th class=\"table14\">#</th>\n                                  <th class=\"table14\">{{'HOME.Request_date' | translate}}</th>\n                                  <th class=\"table15\">{{'HOME.LG_amount' | translate}}</th>\n                                  <th class=\"table16\">{{'HOME.LG_TYPE' | translate}}</th>\n                                  <th class=\"table17\">{{'HOME.Beneficiary' | translate}}</th>\n                                  <th class=\"table18\">{{'HOME.Project_name' | translate}}</th>\n                                  <th class=\"table19\">{{'HOME.Bank' | translate}}</th>\n                                  <th class=\"\">{{'HOME.View_Details' | translate}}</th>\n                                </tr>\n                              </thead>\n                              <tbody>\n                                <tr *ngFor=\"let plist of intAmendmentRejectList; let i = index \">\n                                  <td>{{i+1}}</td>\n                                  <td>{{plist.request_date}}</td>\n                                  <td>{{plist.contract_value}}</td>\n                                  <td>{{plist.lg_type}}</td>\n                                  <td>{{plist.beneficiary_name}}</td>\n                                  <td>{{plist.project_name}}</td>\n                                  <td>{{plist.bank_name}}</td>\n                                  <td>\n                                    <button type=\"button\" class=\"btn btn-success vw-details\" (click)=\"internalRowSelected(plist, 'amendment_Reject')\">{{'HOME.View' | translate}}</button>\n                                  </td>\n                                </tr>\n                              </tbody>\n                            </table>\n                          </ng-template>\n                  </div>\n                  <!--This is for Arabic-->\n                </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n<!-- Internal Pending list for Amendment Reject -->\n\n<!-- Internal Pending list for Amendment Create -->\n<div *ngIf=\"aclAmendCreate\">\n  <div class=\"col-sm-12\">\n    <div class=\"kt-portlet\">\n      <div class=\"kt-portlet__head\">\n        <div class=\"kt-portlet__head-label\">\n          <h3 class=\"kt-portlet__head-title\">\n            Pending Amendment Create List\n          </h3>\n        </div>\n      </div>\n      \n        <!--begin::Form-->\n        <div class=\"kt-form kt-form--label-right\">\n        <div class=\"kt-portlet__body\">\n          <div class=\"container\">\n            <div class=\"row\">\n              <div class=\"col-md-12\">\n                <div class=\"kt-portlet no-shadow\">\n                  <div class=\"new-blue-table1\">\n\n\n\n                    <div class=\"table-responsive\">\n                      <div *ngIf=\"this.translate.currentLang == 'en'\">\n                        <div *ngIf=\"intAmendmentCreateList?.length > 0; then AmendmentCreatethenBlock else AmendmentCreateelseBlock\"> </div>\n                        <ng-template #AmendmentCreatethenBlock>\n                        <table datatable [dtOptions]=\"dtOptions\" class=\"table table-bordered table-striped table-hover\">\n                            <thead>\n                                <tr>\n                                    <th class=\"table14\">#</th>\n                                    <th class=\"table14\">{{'HOME.Request_date' | translate}}</th>\n                                    <th class=\"table15\">{{'HOME.LG_amount' | translate}}</th>\n                                    <th class=\"table16\">{{'HOME.LG_TYPE' | translate}}</th>\n                                    <th class=\"table17\">{{'HOME.Beneficiary' | translate}}</th>\n                                    <th class=\"table18\">{{'HOME.Project_name' | translate}}</th>\n                                    <th class=\"table19\">{{'HOME.Bank' | translate}}</th>\n                                    <th class=\"\">{{'HOME.View_Details' | translate}}</th>\n                                  </tr>\n                            </thead>\n                            <tbody>\n                              <tr *ngFor=\"let plist of intAmendmentCreateList; let i = index \">\n                                <td>{{i+1}}</td>\n                                <td>{{plist.request_date}}</td>\n                                <td>{{plist.contract_value}}</td>\n                                <td>{{plist.lg_type}}</td>\n                                <td>{{plist.beneficiary_name}}</td>\n                                <td>{{plist.project_name}}</td>\n                                <td>{{plist.bank_name}}</td>\n                                <td>\n                                  <button type=\"button\" class=\"btn btn-success vw-details\" (click)=\"internalRowSelected(plist, 'amendment_create')\">{{'HOME.View' | translate}}</button>\n                                </td>\n                              </tr>\n                            </tbody>\n                          </table>\n                        </ng-template>\n\n                        <ng-template #AmendmentCreateelseBlock>\n                            <table datatable [dtOptions]=\"dtOptions\" class=\"table table-bordered table-striped table-hover\">\n                                <thead>\n                                  <tr>\n                                    <th class=\"table14\">#</th>\n                                    <th class=\"table14\">{{'HOME.Request_date' | translate}}</th>\n                                    <th class=\"table15\">{{'HOME.LG_amount' | translate}}</th>\n                                    <th class=\"table16\">{{'HOME.LG_TYPE' | translate}}</th>\n                                    <th class=\"table17\">{{'HOME.Beneficiary' | translate}}</th>\n                                    <th class=\"table18\">{{'HOME.Project_name' | translate}}</th>\n                                    <th class=\"table19\">{{'HOME.Bank' | translate}}</th>\n                                    <th class=\"\">{{'HOME.View_Details' | translate}}</th>\n                                  </tr>\n                                </thead>\n                                <tbody>\n                                  <tr *ngFor=\"let plist of intAmendmentCreateList; let i = index \">\n                                    <td>{{i+1}}</td>\n                                    <td>{{plist.request_date}}</td>\n                                    <td>{{plist.contract_value}}</td>\n                                    <td>{{plist.lg_type}}</td>\n                                    <td>{{plist.beneficiary_name}}</td>\n                                    <td>{{plist.project_name}}</td>\n                                    <td>{{plist.bank_name}}</td>\n                                    <td>\n                                      <button type=\"button\" class=\"btn btn-success vw-details\" (click)=\"internalRowSelected(plist, 'amendment_create')\">{{'HOME.View' | translate}}</button>\n                                    </td>\n                                  </tr>\n                                </tbody>\n                              </table>\n                            </ng-template>\n                    </div>\n                    <!--This is for Arabic-->\n\n                    <div *ngIf=\"this.translate.currentLang == 'ar'\">\n                      <div *ngIf=\"intAmendmentCreateList?.length > 0; then AmendmentCreatethenBlock else AmendmentCreateelseBlock\"> </div>\n                      <ng-template #AmendmentCreatethenBlock>\n                      <table datatable [dtOptions]=\"dtOptionsAR\" class=\"table table-bordered table-striped table-hover\">\n                          <thead>\n                            <tr>\n                              <th class=\"table14\">#</th>\n                              <th class=\"table14\">{{'HOME.Request_date' | translate}}</th>\n                              <th class=\"table15\">{{'HOME.LG_amount' | translate}}</th>\n                              <th class=\"table16\">{{'HOME.LG_TYPE' | translate}}</th>\n                              <th class=\"table17\">{{'HOME.Beneficiary' | translate}}</th>\n                              <th class=\"table18\">{{'HOME.Project_name' | translate}}</th>\n                              <th class=\"table19\">{{'HOME.Bank' | translate}}</th>\n                              <th class=\"\">{{'HOME.View_Details' | translate}}</th>\n                            </tr>\n                          </thead>\n                          <tbody>\n                            <tr *ngFor=\"let plist of intAmendmentCreateList; let i = index \">\n                              <td>{{i+1}}</td>\n                              <td>{{plist.request_date}}</td>\n                              <td>{{plist.contract_value}}</td>\n                              <td>{{plist.lg_type}}</td>\n                              <td>{{plist.beneficiary_name}}</td>\n                              <td>{{plist.project_name}}</td>\n                              <td>{{plist.bank_name}}</td>\n                              <td>\n                                <button type=\"button\" class=\"btn btn-success vw-details\" (click)=\"internalRowSelected(plist, 'amendment_create')\">{{'HOME.View' | translate}}</button>\n                              </td>\n                            </tr>\n                          </tbody>\n                        </table>\n                      </ng-template>\n\n                      <ng-template #AmendmentCreateelseBlock>\n                          <table datatable [dtOptions]=\"dtOptionsAR\" class=\"table table-bordered table-striped table-hover\">\n                              <thead>\n                                <tr>\n                                  <th class=\"table14\">#</th>\n                                  <th class=\"table14\">{{'HOME.Request_date' | translate}}</th>\n                                  <th class=\"table15\">{{'HOME.LG_amount' | translate}}</th>\n                                  <th class=\"table16\">{{'HOME.LG_TYPE' | translate}}</th>\n                                  <th class=\"table17\">{{'HOME.Beneficiary' | translate}}</th>\n                                  <th class=\"table18\">{{'HOME.Project_name' | translate}}</th>\n                                  <th class=\"table19\">{{'HOME.Bank' | translate}}</th>\n                                  <th class=\"\">{{'HOME.View_Details' | translate}}</th>\n                                </tr>\n                              </thead>\n                              <tbody>\n                                <tr *ngFor=\"let plist of intAmendmentCreateList; let i = index \">\n                                  <td>{{i+1}}</td>\n                                  <td>{{plist.request_date}}</td>\n                                  <td>{{plist.contract_value}}</td>\n                                  <td>{{plist.lg_type}}</td>\n                                  <td>{{plist.beneficiary_name}}</td>\n                                  <td>{{plist.project_name}}</td>\n                                  <td>{{plist.bank_name}}</td>\n                                  <td>\n                                    <button type=\"button\" class=\"btn btn-success vw-details\" (click)=\"internalRowSelected(plist, 'amendment_create')\">{{'HOME.View' | translate}}</button>\n                                  </td>\n                                </tr>\n                              </tbody>\n                            </table>\n                          </ng-template>\n                  </div>\n                  <!--This is for Arabic-->\n                </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n<!-- Internal Pending list for Amendment Create -->\n                \n<!-- Internal Pending list for Amendment Review -->\n<div *ngIf=\"aclAmendReview\">\n  <div class=\"col-sm-12\">\n    <div class=\"kt-portlet\">\n      <div class=\"kt-portlet__head\">\n        <div class=\"kt-portlet__head-label\">\n          <h3 class=\"kt-portlet__head-title\">\n            Pending Amendment Review List\n          </h3>\n        </div>\n      </div>\n      \n        <!--begin::Form-->\n        <div class=\"kt-form kt-form--label-right\">\n        <div class=\"kt-portlet__body\">\n          <div class=\"container\">\n            <div class=\"row\">\n              <div class=\"col-md-12\">\n                <div class=\"kt-portlet no-shadow\">\n                  <div class=\"new-blue-table1\">\n\n\n\n                    <div class=\"table-responsive\">\n                      <div *ngIf=\"this.translate.currentLang == 'en'\">\n                        <div *ngIf=\"intAmendmentReviewList?.length > 0; then AmendmentReviewthenBlock else AmendmentReviewelseBlock\"> </div>\n                        <ng-template #AmendmentReviewthenBlock>\n                        <table datatable [dtOptions]=\"dtOptions\" class=\"table table-bordered table-striped table-hover\">\n                            <thead>\n                                <tr>\n                                    <th class=\"table14\">#</th>\n                                    <th class=\"table14\">{{'HOME.Request_date' | translate}}</th>\n                                    <th class=\"table15\">{{'HOME.LG_amount' | translate}}</th>\n                                    <th class=\"table16\">{{'HOME.LG_TYPE' | translate}}</th>\n                                    <th class=\"table17\">{{'HOME.Beneficiary' | translate}}</th>\n                                    <th class=\"table18\">{{'HOME.Project_name' | translate}}</th>\n                                    <th class=\"table19\">{{'HOME.Bank' | translate}}</th>\n                                    <th class=\"\">{{'HOME.View_Details' | translate}}</th>\n                                  </tr>\n                            </thead>\n                            <tbody>\n                              <tr *ngFor=\"let plist of intAmendmentReviewList; let i = index \">\n                                <td>{{i+1}}</td>\n                                <td>{{plist.request_date}}</td>\n                                <td>{{plist.contract_value}}</td>\n                                <td>{{plist.lg_type}}</td>\n                                <td>{{plist.beneficiary_name}}</td>\n                                <td>{{plist.project_name}}</td>\n                                <td>{{plist.bank_name}}</td>\n                                <td>\n                                  <button type=\"button\" class=\"btn btn-success vw-details\" (click)=\"internalRowSelected(plist, 'amendment_review')\">{{'HOME.View' | translate}}</button>\n                                </td>\n                              </tr>\n                            </tbody>\n                          </table>\n                        </ng-template>\n\n                        <ng-template #AmendmentReviewelseBlock>\n                            <table datatable [dtOptions]=\"dtOptions\" class=\"table table-bordered table-striped table-hover\">\n                                <thead>\n                                  <tr>\n                                    <th class=\"table14\">#</th>\n                                    <th class=\"table14\">{{'HOME.Request_date' | translate}}</th>\n                                    <th class=\"table15\">{{'HOME.LG_amount' | translate}}</th>\n                                    <th class=\"table16\">{{'HOME.LG_TYPE' | translate}}</th>\n                                    <th class=\"table17\">{{'HOME.Beneficiary' | translate}}</th>\n                                    <th class=\"table18\">{{'HOME.Project_name' | translate}}</th>\n                                    <th class=\"table19\">{{'HOME.Bank' | translate}}</th>\n                                    <th class=\"\">{{'HOME.View_Details' | translate}}</th>\n                                  </tr>\n                                </thead>\n                                <tbody>\n                                  <tr *ngFor=\"let plist of intAmendmentReviewList; let i = index \">\n                                    <td>{{i+1}}</td>\n                                    <td>{{plist.request_date}}</td>\n                                    <td>{{plist.contract_value}}</td>\n                                    <td>{{plist.lg_type}}</td>\n                                    <td>{{plist.beneficiary_name}}</td>\n                                    <td>{{plist.project_name}}</td>\n                                    <td>{{plist.bank_name}}</td>\n                                    <td>\n                                      <button type=\"button\" class=\"btn btn-success vw-details\" (click)=\"internalRowSelected(plist, 'amendment_review')\">{{'HOME.View' | translate}}</button>\n                                    </td>\n                                  </tr>\n                                </tbody>\n                              </table>\n                            </ng-template>\n                    </div>\n                    <!--This is for Arabic-->\n\n                    <div *ngIf=\"this.translate.currentLang == 'ar'\">\n                      <div *ngIf=\"intAmendmentReviewList?.length > 0; then AmendmentReviewthenBlock else AmendmentReviewelseBlock\"> </div>\n                      <ng-template #AmendmentReviewthenBlock>\n                      <table datatable [dtOptions]=\"dtOptionsAR\" class=\"table table-bordered table-striped table-hover\">\n                          <thead>\n                            <tr>\n                              <th class=\"table14\">#</th>\n                              <th class=\"table14\">{{'HOME.Request_date' | translate}}</th>\n                              <th class=\"table15\">{{'HOME.LG_amount' | translate}}</th>\n                              <th class=\"table16\">{{'HOME.LG_TYPE' | translate}}</th>\n                              <th class=\"table17\">{{'HOME.Beneficiary' | translate}}</th>\n                              <th class=\"table18\">{{'HOME.Project_name' | translate}}</th>\n                              <th class=\"table19\">{{'HOME.Bank' | translate}}</th>\n                              <th class=\"\">{{'HOME.View_Details' | translate}}</th>\n                            </tr>\n                          </thead>\n                          <tbody>\n                            <tr *ngFor=\"let plist of intAmendmentReviewList; let i = index \">\n                              <td>{{i+1}}</td>\n                              <td>{{plist.request_date}}</td>\n                              <td>{{plist.contract_value}}</td>\n                              <td>{{plist.lg_type}}</td>\n                              <td>{{plist.beneficiary_name}}</td>\n                              <td>{{plist.project_name}}</td>\n                              <td>{{plist.bank_name}}</td>\n                              <td>\n                                <button type=\"button\" class=\"btn btn-success vw-details\" (click)=\"internalRowSelected(plist, 'amendment_review')\">{{'HOME.View' | translate}}</button>\n                              </td>\n                            </tr>\n                          </tbody>\n                        </table>\n                      </ng-template>\n\n                      <ng-template #AmendmentReviewelseBlock>\n                          <table datatable [dtOptions]=\"dtOptionsAR\" class=\"table table-bordered table-striped table-hover\">\n                              <thead>\n                                <tr>\n                                  <th class=\"table14\">#</th>\n                                  <th class=\"table14\">{{'HOME.Request_date' | translate}}</th>\n                                  <th class=\"table15\">{{'HOME.LG_amount' | translate}}</th>\n                                  <th class=\"table16\">{{'HOME.LG_TYPE' | translate}}</th>\n                                  <th class=\"table17\">{{'HOME.Beneficiary' | translate}}</th>\n                                  <th class=\"table18\">{{'HOME.Project_name' | translate}}</th>\n                                  <th class=\"table19\">{{'HOME.Bank' | translate}}</th>\n                                  <th class=\"\">{{'HOME.View_Details' | translate}}</th>\n                                </tr>\n                              </thead>\n                              <tbody>\n                                <tr *ngFor=\"let plist of intAmendmentReviewList; let i = index \">\n                                  <td>{{i+1}}</td>\n                                  <td>{{plist.request_date}}</td>\n                                  <td>{{plist.contract_value}}</td>\n                                  <td>{{plist.lg_type}}</td>\n                                  <td>{{plist.beneficiary_name}}</td>\n                                  <td>{{plist.project_name}}</td>\n                                  <td>{{plist.bank_name}}</td>\n                                  <td>\n                                    <button type=\"button\" class=\"btn btn-success vw-details\" (click)=\"internalRowSelected(plist, 'amendment_review')\">{{'HOME.View' | translate}}</button>\n                                  </td>\n                                </tr>\n                              </tbody>\n                            </table>\n                          </ng-template>\n                  </div>\n                  <!--This is for Arabic-->\n                </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n<!-- Internal Pending list for Amendment Review -->\n\n<!-- Internal Pending list for Amendment Approve -->\n<div *ngIf=\"aclAmendApprove\">\n  <div class=\"col-sm-12\">\n    <div class=\"kt-portlet\">\n      <div class=\"kt-portlet__head\">\n        <div class=\"kt-portlet__head-label\">\n          <h3 class=\"kt-portlet__head-title\">\n            Pending Amendment Approve List\n          </h3>\n        </div>\n      </div>\n      \n        <!--begin::Form-->\n        <div class=\"kt-form kt-form--label-right\">\n        <div class=\"kt-portlet__body\">\n          <div class=\"container\">\n            <div class=\"row\">\n              <div class=\"col-md-12\">\n                <div class=\"kt-portlet no-shadow\">\n                  <div class=\"new-blue-table1\">\n\n\n\n                    <div class=\"table-responsive\">\n                      <div *ngIf=\"this.translate.currentLang == 'en'\">\n                        <div *ngIf=\"intAmendmentApproveList?.length > 0; then AmendmentApprovethenBlock else AmendmentApproveelseBlock\"> </div>\n                        <ng-template #AmendmentApprovethenBlock>\n                        <table datatable [dtOptions]=\"dtOptions\" class=\"table table-bordered table-striped table-hover\">\n                            <thead>\n                                <tr>\n                                    <th class=\"table14\">#</th>\n                                    <th class=\"table14\">{{'HOME.Request_date' | translate}}</th>\n                                    <th class=\"table15\">{{'HOME.LG_amount' | translate}}</th>\n                                    <th class=\"table16\">{{'HOME.LG_TYPE' | translate}}</th>\n                                    <th class=\"table17\">{{'HOME.Beneficiary' | translate}}</th>\n                                    <th class=\"table18\">{{'HOME.Project_name' | translate}}</th>\n                                    <th class=\"table19\">{{'HOME.Bank' | translate}}</th>\n                                    <th class=\"\">{{'HOME.View_Details' | translate}}</th>\n                                  </tr>\n                            </thead>\n                            <tbody>\n                              <tr *ngFor=\"let plist of intAmendmentApproveList; let i = index \">\n                                <td>{{i+1}}</td>\n                                <td>{{plist.request_date}}</td>\n                                <td>{{plist.contract_value}}</td>\n                                <td>{{plist.lg_type}}</td>\n                                <td>{{plist.beneficiary_name}}</td>\n                                <td>{{plist.project_name}}</td>\n                                <td>{{plist.bank_name}}</td>\n                                <td>\n                                  <button type=\"button\" class=\"btn btn-success vw-details\" (click)=\"internalRowSelected(plist, 'amendment_approve')\">{{'HOME.View' | translate}}</button>\n                                </td>\n                              </tr>\n                            </tbody>\n                          </table>\n                        </ng-template>\n\n                        <ng-template #AmendmentApproveelseBlock>\n                            <table datatable [dtOptions]=\"dtOptions\" class=\"table table-bordered table-striped table-hover\">\n                                <thead>\n                                  <tr>\n                                    <th class=\"table14\">#</th>\n                                    <th class=\"table14\">{{'HOME.Request_date' | translate}}</th>\n                                    <th class=\"table15\">{{'HOME.LG_amount' | translate}}</th>\n                                    <th class=\"table16\">{{'HOME.LG_TYPE' | translate}}</th>\n                                    <th class=\"table17\">{{'HOME.Beneficiary' | translate}}</th>\n                                    <th class=\"table18\">{{'HOME.Project_name' | translate}}</th>\n                                    <th class=\"table19\">{{'HOME.Bank' | translate}}</th>\n                                    <th class=\"\">{{'HOME.View_Details' | translate}}</th>\n                                  </tr>\n                                </thead>\n                                <tbody>\n                                  <tr *ngFor=\"let plist of intAmendmentApproveList; let i = index \">\n                                    <td>{{i+1}}</td>\n                                    <td>{{plist.request_date}}</td>\n                                    <td>{{plist.contract_value}}</td>\n                                    <td>{{plist.lg_type}}</td>\n                                    <td>{{plist.beneficiary_name}}</td>\n                                    <td>{{plist.project_name}}</td>\n                                    <td>{{plist.bank_name}}</td>\n                                    <td>\n                                      <button type=\"button\" class=\"btn btn-success vw-details\" (click)=\"internalRowSelected(plist, 'amendment_approve')\">{{'HOME.View' | translate}}</button>\n                                    </td>\n                                  </tr>\n                                </tbody>\n                              </table>\n                            </ng-template>\n                    </div>\n                    <!--This is for Arabic-->\n\n                    <div *ngIf=\"this.translate.currentLang == 'ar'\">\n                      <div *ngIf=\"intAmendmentApproveList?.length > 0; then AmendmentApprovethenBlock else AmendmentApproveelseBlock\"> </div>\n                      <ng-template #AmendmentApprovethenBlock>\n                      <table datatable [dtOptions]=\"dtOptionsAR\" class=\"table table-bordered table-striped table-hover\">\n                          <thead>\n                            <tr>\n                              <th class=\"table14\">#</th>\n                              <th class=\"table14\">{{'HOME.Request_date' | translate}}</th>\n                              <th class=\"table15\">{{'HOME.LG_amount' | translate}}</th>\n                              <th class=\"table16\">{{'HOME.LG_TYPE' | translate}}</th>\n                              <th class=\"table17\">{{'HOME.Beneficiary' | translate}}</th>\n                              <th class=\"table18\">{{'HOME.Project_name' | translate}}</th>\n                              <th class=\"table19\">{{'HOME.Bank' | translate}}</th>\n                              <th class=\"\">{{'HOME.View_Details' | translate}}</th>\n                            </tr>\n                          </thead>\n                          <tbody>\n                            <tr *ngFor=\"let plist of intAmendmentApproveList; let i = index \">\n                              <td>{{i+1}}</td>\n                              <td>{{plist.request_date}}</td>\n                              <td>{{plist.contract_value}}</td>\n                              <td>{{plist.lg_type}}</td>\n                              <td>{{plist.beneficiary_name}}</td>\n                              <td>{{plist.project_name}}</td>\n                              <td>{{plist.bank_name}}</td>\n                              <td>\n                                <button type=\"button\" class=\"btn btn-success vw-details\" (click)=\"internalRowSelected(plist, 'amendment_approve')\">{{'HOME.View' | translate}}</button>\n                              </td>\n                            </tr>\n                          </tbody>\n                        </table>\n                      </ng-template>\n\n                      <ng-template #AmendmentApproveelseBlock>\n                          <table datatable [dtOptions]=\"dtOptionsAR\" class=\"table table-bordered table-striped table-hover\">\n                              <thead>\n                                <tr>\n                                  <th class=\"table14\">#</th>\n                                  <th class=\"table14\">{{'HOME.Request_date' | translate}}</th>\n                                  <th class=\"table15\">{{'HOME.LG_amount' | translate}}</th>\n                                  <th class=\"table16\">{{'HOME.LG_TYPE' | translate}}</th>\n                                  <th class=\"table17\">{{'HOME.Beneficiary' | translate}}</th>\n                                  <th class=\"table18\">{{'HOME.Project_name' | translate}}</th>\n                                  <th class=\"table19\">{{'HOME.Bank' | translate}}</th>\n                                  <th class=\"\">{{'HOME.View_Details' | translate}}</th>\n                                </tr>\n                              </thead>\n                              <tbody>\n                                <tr *ngFor=\"let plist of intAmendmentApproveList; let i = index \">\n                                  <td>{{i+1}}</td>\n                                  <td>{{plist.request_date}}</td>\n                                  <td>{{plist.contract_value}}</td>\n                                  <td>{{plist.lg_type}}</td>\n                                  <td>{{plist.beneficiary_name}}</td>\n                                  <td>{{plist.project_name}}</td>\n                                  <td>{{plist.bank_name}}</td>\n                                  <td>\n                                    <button type=\"button\" class=\"btn btn-success vw-details\" (click)=\"internalRowSelected(plist, 'amendment_approve')\">{{'HOME.View' | translate}}</button>\n                                  </td>\n                                </tr>\n                              </tbody>\n                            </table>\n                          </ng-template>\n                  </div>\n                  <!--This is for Arabic-->\n                </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n<!-- Internal Pending list for Amendment Approve -->\n\n\n<!-- Internal Pending list for Confiscate Reject -->\n<div *ngIf=\"aclConfiscateCreate\">\n  <div class=\"col-sm-12\">\n    <div class=\"kt-portlet\">\n      <div class=\"kt-portlet__head\">\n        <div class=\"kt-portlet__head-label\">\n          <h3 class=\"kt-portlet__head-title\">\n            Pending Confiscate Reject List\n          </h3>\n        </div>\n      </div>\n      \n        <!--begin::Form-->\n        <div class=\"kt-form kt-form--label-right\">\n        <div class=\"kt-portlet__body\">\n          <div class=\"container\">\n            <div class=\"row\">\n              <div class=\"col-md-12\">\n                <div class=\"kt-portlet no-shadow\">\n                  <div class=\"new-blue-table1\">\n\n\n\n                    <div class=\"table-responsive\">\n                      <div *ngIf=\"this.translate.currentLang == 'en'\">\n                        <div *ngIf=\"intConfiscateRejectList?.length > 0; then ConfiscateRejectthenBlock else ConfiscateRejectelseBlock\"> </div>\n                        <ng-template #ConfiscateRejectthenBlock>\n                        <table datatable [dtOptions]=\"dtOptions\" class=\"table table-bordered table-striped table-hover\">\n                            <thead>\n                                <tr>\n                                    <th class=\"table14\">#</th>\n                                    <th class=\"table14\">{{'HOME.Request_date' | translate}}</th>\n                                    <th class=\"table15\">{{'HOME.LG_amount' | translate}}</th>\n                                    <th class=\"table16\">{{'HOME.LG_TYPE' | translate}}</th>\n                                    <th class=\"table17\">{{'HOME.Beneficiary' | translate}}</th>\n                                    <th class=\"table18\">{{'HOME.Project_name' | translate}}</th>\n                                    <th class=\"table19\">{{'HOME.Bank' | translate}}</th>\n                                    <th class=\"\">{{'HOME.View_Details' | translate}}</th>\n                                  </tr>\n                            </thead>\n                            <tbody>\n                              <tr *ngFor=\"let plist of intConfiscateRejectList; let i = index \">\n                                <td>{{i+1}}</td>\n                                <td>{{plist.request_date}}</td>\n                                <td>{{plist.contract_value}}</td>\n                                <td>{{plist.lg_type}}</td>\n                                <td>{{plist.beneficiary_name}}</td>\n                                <td>{{plist.project_name}}</td>\n                                <td>{{plist.bank_name}}</td>\n                                <td>\n                                  <button type=\"button\" class=\"btn btn-success vw-details\" (click)=\"internalRowSelected(plist, 'confiscate_Reject')\">{{'HOME.View' | translate}}</button>\n                                </td>\n                              </tr>\n                            </tbody>\n                          </table>\n                        </ng-template>\n\n                        <ng-template #ConfiscateRejectelseBlock>\n                            <table datatable [dtOptions]=\"dtOptions\" class=\"table table-bordered table-striped table-hover\">\n                                <thead>\n                                  <tr>\n                                    <th class=\"table14\">#</th>\n                                    <th class=\"table14\">{{'HOME.Request_date' | translate}}</th>\n                                    <th class=\"table15\">{{'HOME.LG_amount' | translate}}</th>\n                                    <th class=\"table16\">{{'HOME.LG_TYPE' | translate}}</th>\n                                    <th class=\"table17\">{{'HOME.Beneficiary' | translate}}</th>\n                                    <th class=\"table18\">{{'HOME.Project_name' | translate}}</th>\n                                    <th class=\"table19\">{{'HOME.Bank' | translate}}</th>\n                                    <th class=\"\">{{'HOME.View_Details' | translate}}</th>\n                                  </tr>\n                                </thead>\n                                <tbody>\n                                  <tr *ngFor=\"let plist of intConfiscateRejectList; let i = index \">\n                                    <td>{{i+1}}</td>\n                                    <td>{{plist.request_date}}</td>\n                                    <td>{{plist.contract_value}}</td>\n                                    <td>{{plist.lg_type}}</td>\n                                    <td>{{plist.beneficiary_name}}</td>\n                                    <td>{{plist.project_name}}</td>\n                                    <td>{{plist.bank_name}}</td>\n                                    <td>\n                                      <button type=\"button\" class=\"btn btn-success vw-details\" (click)=\"internalRowSelected(plist, 'confiscate_Reject')\">{{'HOME.View' | translate}}</button>\n                                    </td>\n                                  </tr>\n                                </tbody>\n                              </table>\n                            </ng-template>\n                    </div>\n                    <!--This is for Arabic-->\n\n                    <div *ngIf=\"this.translate.currentLang == 'ar'\">\n                      <div *ngIf=\"intConfiscateRejectList?.length > 0; then ConfiscateRejectthenBlock else ConfiscateRejectelseBlock\"> </div>\n                      <ng-template #ConfiscateRejectthenBlock>\n                      <table datatable [dtOptions]=\"dtOptionsAR\" class=\"table table-bordered table-striped table-hover\">\n                          <thead>\n                            <tr>\n                              <th class=\"table14\">#</th>\n                              <th class=\"table14\">{{'HOME.Request_date' | translate}}</th>\n                              <th class=\"table15\">{{'HOME.LG_amount' | translate}}</th>\n                              <th class=\"table16\">{{'HOME.LG_TYPE' | translate}}</th>\n                              <th class=\"table17\">{{'HOME.Beneficiary' | translate}}</th>\n                              <th class=\"table18\">{{'HOME.Project_name' | translate}}</th>\n                              <th class=\"table19\">{{'HOME.Bank' | translate}}</th>\n                              <th class=\"\">{{'HOME.View_Details' | translate}}</th>\n                            </tr>\n                          </thead>\n                          <tbody>\n                            <tr *ngFor=\"let plist of intConfiscateRejectList; let i = index \">\n                              <td>{{i+1}}</td>\n                              <td>{{plist.request_date}}</td>\n                              <td>{{plist.contract_value}}</td>\n                              <td>{{plist.lg_type}}</td>\n                              <td>{{plist.beneficiary_name}}</td>\n                              <td>{{plist.project_name}}</td>\n                              <td>{{plist.bank_name}}</td>\n                              <td>\n                                <button type=\"button\" class=\"btn btn-success vw-details\" (click)=\"internalRowSelected(plist, 'confiscate_Reject')\">{{'HOME.View' | translate}}</button>\n                              </td>\n                            </tr>\n                          </tbody>\n                        </table>\n                      </ng-template>\n\n                      <ng-template #ConfiscateRejectelseBlock>\n                          <table datatable [dtOptions]=\"dtOptionsAR\" class=\"table table-bordered table-striped table-hover\">\n                              <thead>\n                                <tr>\n                                  <th class=\"table14\">#</th>\n                                  <th class=\"table14\">{{'HOME.Request_date' | translate}}</th>\n                                  <th class=\"table15\">{{'HOME.LG_amount' | translate}}</th>\n                                  <th class=\"table16\">{{'HOME.LG_TYPE' | translate}}</th>\n                                  <th class=\"table17\">{{'HOME.Beneficiary' | translate}}</th>\n                                  <th class=\"table18\">{{'HOME.Project_name' | translate}}</th>\n                                  <th class=\"table19\">{{'HOME.Bank' | translate}}</th>\n                                  <th class=\"\">{{'HOME.View_Details' | translate}}</th>\n                                </tr>\n                              </thead>\n                              <tbody>\n                                <tr *ngFor=\"let plist of intConfiscateRejectList; let i = index \">\n                                  <td>{{i+1}}</td>\n                                  <td>{{plist.request_date}}</td>\n                                  <td>{{plist.contract_value}}</td>\n                                  <td>{{plist.lg_type}}</td>\n                                  <td>{{plist.beneficiary_name}}</td>\n                                  <td>{{plist.project_name}}</td>\n                                  <td>{{plist.bank_name}}</td>\n                                  <td>\n                                    <button type=\"button\" class=\"btn btn-success vw-details\" (click)=\"internalRowSelected(plist, 'confiscate_Reject')\">{{'HOME.View' | translate}}</button>\n                                  </td>\n                                </tr>\n                              </tbody>\n                            </table>\n                          </ng-template>\n                  </div>\n                  <!--This is for Arabic-->\n                </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n<!-- Internal Pending list for Confiscate Reject -->\n<!-- Internal Pending list for Confiscate Create -->\n<div *ngIf=\"aclConfiscateCreate\">\n  <div class=\"col-sm-12\">\n    <div class=\"kt-portlet\">\n      <div class=\"kt-portlet__head\">\n        <div class=\"kt-portlet__head-label\">\n          <h3 class=\"kt-portlet__head-title\">\n            Pending Confiscate Create List\n          </h3>\n        </div>\n      </div>\n      \n        <!--begin::Form-->\n        <div class=\"kt-form kt-form--label-right\">\n        <div class=\"kt-portlet__body\">\n          <div class=\"container\">\n            <div class=\"row\">\n              <div class=\"col-md-12\">\n                <div class=\"kt-portlet no-shadow\">\n                  <div class=\"new-blue-table1\">\n\n\n\n                    <div class=\"table-responsive\">\n                      <div *ngIf=\"this.translate.currentLang == 'en'\">\n                        <div *ngIf=\"intConfiscateCreateList?.length > 0; then ConfiscateCreatethenBlock else ConfiscateCreateelseBlock\"> </div>\n                        <ng-template #ConfiscateCreatethenBlock>\n                        <table datatable [dtOptions]=\"dtOptions\" class=\"table table-bordered table-striped table-hover\">\n                            <thead>\n                                <tr>\n                                    <th class=\"table14\">#</th>\n                                    <th class=\"table14\">{{'HOME.Request_date' | translate}}</th>\n                                    <th class=\"table15\">{{'HOME.LG_amount' | translate}}</th>\n                                    <th class=\"table16\">{{'HOME.LG_TYPE' | translate}}</th>\n                                    <th class=\"table17\">{{'HOME.Beneficiary' | translate}}</th>\n                                    <th class=\"table18\">{{'HOME.Project_name' | translate}}</th>\n                                    <th class=\"table19\">{{'HOME.Bank' | translate}}</th>\n                                    <th class=\"\">{{'HOME.View_Details' | translate}}</th>\n                                  </tr>\n                            </thead>\n                            <tbody>\n                              <tr *ngFor=\"let plist of intConfiscateCreateList; let i = index \">\n                                <td>{{i+1}}</td>\n                                <td>{{plist.request_date}}</td>\n                                <td>{{plist.contract_value}}</td>\n                                <td>{{plist.lg_type}}</td>\n                                <td>{{plist.beneficiary_name}}</td>\n                                <td>{{plist.project_name}}</td>\n                                <td>{{plist.bank_name}}</td>\n                                <td>\n                                  <button type=\"button\" class=\"btn btn-success vw-details\" (click)=\"internalRowSelected(plist, 'confiscate_create')\">{{'HOME.View' | translate}}</button>\n                                </td>\n                              </tr>\n                            </tbody>\n                          </table>\n                        </ng-template>\n\n                        <ng-template #ConfiscateCreateelseBlock>\n                            <table datatable [dtOptions]=\"dtOptions\" class=\"table table-bordered table-striped table-hover\">\n                                <thead>\n                                  <tr>\n                                    <th class=\"table14\">#</th>\n                                    <th class=\"table14\">{{'HOME.Request_date' | translate}}</th>\n                                    <th class=\"table15\">{{'HOME.LG_amount' | translate}}</th>\n                                    <th class=\"table16\">{{'HOME.LG_TYPE' | translate}}</th>\n                                    <th class=\"table17\">{{'HOME.Beneficiary' | translate}}</th>\n                                    <th class=\"table18\">{{'HOME.Project_name' | translate}}</th>\n                                    <th class=\"table19\">{{'HOME.Bank' | translate}}</th>\n                                    <th class=\"\">{{'HOME.View_Details' | translate}}</th>\n                                  </tr>\n                                </thead>\n                                <tbody>\n                                  <tr *ngFor=\"let plist of intConfiscateCreateList; let i = index \">\n                                    <td>{{i+1}}</td>\n                                    <td>{{plist.request_date}}</td>\n                                    <td>{{plist.contract_value}}</td>\n                                    <td>{{plist.lg_type}}</td>\n                                    <td>{{plist.beneficiary_name}}</td>\n                                    <td>{{plist.project_name}}</td>\n                                    <td>{{plist.bank_name}}</td>\n                                    <td>\n                                      <button type=\"button\" class=\"btn btn-success vw-details\" (click)=\"internalRowSelected(plist, 'confiscate_create')\">{{'HOME.View' | translate}}</button>\n                                    </td>\n                                  </tr>\n                                </tbody>\n                              </table>\n                            </ng-template>\n                    </div>\n                    <!--This is for Arabic-->\n\n                    <div *ngIf=\"this.translate.currentLang == 'ar'\">\n                      <div *ngIf=\"intConfiscateCreateList?.length > 0; then ConfiscateCreatethenBlock else ConfiscateCreateelseBlock\"> </div>\n                      <ng-template #ConfiscateCreatethenBlock>\n                      <table datatable [dtOptions]=\"dtOptionsAR\" class=\"table table-bordered table-striped table-hover\">\n                          <thead>\n                            <tr>\n                              <th class=\"table14\">#</th>\n                              <th class=\"table14\">{{'HOME.Request_date' | translate}}</th>\n                              <th class=\"table15\">{{'HOME.LG_amount' | translate}}</th>\n                              <th class=\"table16\">{{'HOME.LG_TYPE' | translate}}</th>\n                              <th class=\"table17\">{{'HOME.Beneficiary' | translate}}</th>\n                              <th class=\"table18\">{{'HOME.Project_name' | translate}}</th>\n                              <th class=\"table19\">{{'HOME.Bank' | translate}}</th>\n                              <th class=\"\">{{'HOME.View_Details' | translate}}</th>\n                            </tr>\n                          </thead>\n                          <tbody>\n                            <tr *ngFor=\"let plist of intConfiscateCreateList; let i = index \">\n                              <td>{{i+1}}</td>\n                              <td>{{plist.request_date}}</td>\n                              <td>{{plist.contract_value}}</td>\n                              <td>{{plist.lg_type}}</td>\n                              <td>{{plist.beneficiary_name}}</td>\n                              <td>{{plist.project_name}}</td>\n                              <td>{{plist.bank_name}}</td>\n                              <td>\n                                <button type=\"button\" class=\"btn btn-success vw-details\" (click)=\"internalRowSelected(plist, 'confiscate_create')\">{{'HOME.View' | translate}}</button>\n                              </td>\n                            </tr>\n                          </tbody>\n                        </table>\n                      </ng-template>\n\n                      <ng-template #ConfiscateCreateelseBlock>\n                          <table datatable [dtOptions]=\"dtOptionsAR\" class=\"table table-bordered table-striped table-hover\">\n                              <thead>\n                                <tr>\n                                  <th class=\"table14\">#</th>\n                                  <th class=\"table14\">{{'HOME.Request_date' | translate}}</th>\n                                  <th class=\"table15\">{{'HOME.LG_amount' | translate}}</th>\n                                  <th class=\"table16\">{{'HOME.LG_TYPE' | translate}}</th>\n                                  <th class=\"table17\">{{'HOME.Beneficiary' | translate}}</th>\n                                  <th class=\"table18\">{{'HOME.Project_name' | translate}}</th>\n                                  <th class=\"table19\">{{'HOME.Bank' | translate}}</th>\n                                  <th class=\"\">{{'HOME.View_Details' | translate}}</th>\n                                </tr>\n                              </thead>\n                              <tbody>\n                                <tr *ngFor=\"let plist of intConfiscateCreateList; let i = index \">\n                                  <td>{{i+1}}</td>\n                                  <td>{{plist.request_date}}</td>\n                                  <td>{{plist.contract_value}}</td>\n                                  <td>{{plist.lg_type}}</td>\n                                  <td>{{plist.beneficiary_name}}</td>\n                                  <td>{{plist.project_name}}</td>\n                                  <td>{{plist.bank_name}}</td>\n                                  <td>\n                                    <button type=\"button\" class=\"btn btn-success vw-details\" (click)=\"internalRowSelected(plist, 'confiscate_create')\">{{'HOME.View' | translate}}</button>\n                                  </td>\n                                </tr>\n                              </tbody>\n                            </table>\n                          </ng-template>\n                  </div>\n                  <!--This is for Arabic-->\n                </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n<!-- Internal Pending list for Confiscate Create -->\n\n<!-- Internal Pending list for Confiscate Review -->\n<div *ngIf=\"aclConfiscateReview\">\n  <div class=\"col-sm-12\">\n    <div class=\"kt-portlet\">\n      <div class=\"kt-portlet__head\">\n        <div class=\"kt-portlet__head-label\">\n          <h3 class=\"kt-portlet__head-title\">\n            Pending Confiscate Review List\n          </h3>\n        </div>\n      </div>\n      \n        <!--begin::Form-->\n        <div class=\"kt-form kt-form--label-right\">\n        <div class=\"kt-portlet__body\">\n          <div class=\"container\">\n            <div class=\"row\">\n              <div class=\"col-md-12\">\n                <div class=\"kt-portlet no-shadow\">\n                  <div class=\"new-blue-table1\">\n\n\n\n                    <div class=\"table-responsive\">\n                      <div *ngIf=\"this.translate.currentLang == 'en'\">\n                        <div *ngIf=\"intConfiscateReviewList?.length > 0; then ConfiscateReviewthenBlock else ConfiscateReviewelseBlock\"> </div>\n                        <ng-template #ConfiscateReviewthenBlock>\n                        <table datatable [dtOptions]=\"dtOptions\" class=\"table table-bordered table-striped table-hover\">\n                            <thead>\n                                <tr>\n                                    <th class=\"table14\">#</th>\n                                    <th class=\"table14\">{{'HOME.Request_date' | translate}}</th>\n                                    <th class=\"table15\">{{'HOME.LG_amount' | translate}}</th>\n                                    <th class=\"table16\">{{'HOME.LG_TYPE' | translate}}</th>\n                                    <th class=\"table17\">{{'HOME.Beneficiary' | translate}}</th>\n                                    <th class=\"table18\">{{'HOME.Project_name' | translate}}</th>\n                                    <th class=\"table19\">{{'HOME.Bank' | translate}}</th>\n                                    <th class=\"\">{{'HOME.View_Details' | translate}}</th>\n                                  </tr>\n                            </thead>\n                            <tbody>\n                              <tr *ngFor=\"let plist of intConfiscateReviewList; let i = index \">\n                                <td>{{i+1}}</td>\n                                <td>{{plist.request_date}}</td>\n                                <td>{{plist.contract_value}}</td>\n                                <td>{{plist.lg_type}}</td>\n                                <td>{{plist.beneficiary_name}}</td>\n                                <td>{{plist.project_name}}</td>\n                                <td>{{plist.bank_name}}</td>\n                                <td>\n                                  <button type=\"button\" class=\"btn btn-success vw-details\" (click)=\"internalRowSelected(plist, 'confiscate_review')\">{{'HOME.View' | translate}}</button>\n                                </td>\n                              </tr>\n                            </tbody>\n                          </table>\n                        </ng-template>\n\n                        <ng-template #ConfiscateReviewelseBlock>\n                            <table datatable [dtOptions]=\"dtOptions\" class=\"table table-bordered table-striped table-hover\">\n                                <thead>\n                                  <tr>\n                                    <th class=\"table14\">#</th>\n                                    <th class=\"table14\">{{'HOME.Request_date' | translate}}</th>\n                                    <th class=\"table15\">{{'HOME.LG_amount' | translate}}</th>\n                                    <th class=\"table16\">{{'HOME.LG_TYPE' | translate}}</th>\n                                    <th class=\"table17\">{{'HOME.Beneficiary' | translate}}</th>\n                                    <th class=\"table18\">{{'HOME.Project_name' | translate}}</th>\n                                    <th class=\"table19\">{{'HOME.Bank' | translate}}</th>\n                                    <th class=\"\">{{'HOME.View_Details' | translate}}</th>\n                                  </tr>\n                                </thead>\n                                <tbody>\n                                  <tr *ngFor=\"let plist of intConfiscateReviewList; let i = index \">\n                                    <td>{{i+1}}</td>\n                                    <td>{{plist.request_date}}</td>\n                                    <td>{{plist.contract_value}}</td>\n                                    <td>{{plist.lg_type}}</td>\n                                    <td>{{plist.beneficiary_name}}</td>\n                                    <td>{{plist.project_name}}</td>\n                                    <td>{{plist.bank_name}}</td>\n                                    <td>\n                                      <button type=\"button\" class=\"btn btn-success vw-details\" (click)=\"internalRowSelected(plist, 'confiscate_review')\">{{'HOME.View' | translate}}</button>\n                                    </td>\n                                  </tr>\n                                </tbody>\n                              </table>\n                            </ng-template>\n                    </div>\n                    <!--This is for Arabic-->\n\n                    <div *ngIf=\"this.translate.currentLang == 'ar'\">\n                      <div *ngIf=\"intConfiscateReviewList?.length > 0; then ConfiscateReviewthenBlock else ConfiscateReviewelseBlock\"> </div>\n                      <ng-template #ConfiscateReviewthenBlock>\n                      <table datatable [dtOptions]=\"dtOptionsAR\" class=\"table table-bordered table-striped table-hover\">\n                          <thead>\n                            <tr>\n                              <th class=\"table14\">#</th>\n                              <th class=\"table14\">{{'HOME.Request_date' | translate}}</th>\n                              <th class=\"table15\">{{'HOME.LG_amount' | translate}}</th>\n                              <th class=\"table16\">{{'HOME.LG_TYPE' | translate}}</th>\n                              <th class=\"table17\">{{'HOME.Beneficiary' | translate}}</th>\n                              <th class=\"table18\">{{'HOME.Project_name' | translate}}</th>\n                              <th class=\"table19\">{{'HOME.Bank' | translate}}</th>\n                              <th class=\"\">{{'HOME.View_Details' | translate}}</th>\n                            </tr>\n                          </thead>\n                          <tbody>\n                            <tr *ngFor=\"let plist of intConfiscateReviewList; let i = index \">\n                              <td>{{i+1}}</td>\n                              <td>{{plist.request_date}}</td>\n                              <td>{{plist.contract_value}}</td>\n                              <td>{{plist.lg_type}}</td>\n                              <td>{{plist.beneficiary_name}}</td>\n                              <td>{{plist.project_name}}</td>\n                              <td>{{plist.bank_name}}</td>\n                              <td>\n                                <button type=\"button\" class=\"btn btn-success vw-details\" (click)=\"internalRowSelected(plist, 'confiscate_review')\">{{'HOME.View' | translate}}</button>\n                              </td>\n                            </tr>\n                          </tbody>\n                        </table>\n                      </ng-template>\n\n                      <ng-template #ConfiscateReviewelseBlock>\n                          <table datatable [dtOptions]=\"dtOptionsAR\" class=\"table table-bordered table-striped table-hover\">\n                              <thead>\n                                <tr>\n                                  <th class=\"table14\">#</th>\n                                  <th class=\"table14\">{{'HOME.Request_date' | translate}}</th>\n                                  <th class=\"table15\">{{'HOME.LG_amount' | translate}}</th>\n                                  <th class=\"table16\">{{'HOME.LG_TYPE' | translate}}</th>\n                                  <th class=\"table17\">{{'HOME.Beneficiary' | translate}}</th>\n                                  <th class=\"table18\">{{'HOME.Project_name' | translate}}</th>\n                                  <th class=\"table19\">{{'HOME.Bank' | translate}}</th>\n                                  <th class=\"\">{{'HOME.View_Details' | translate}}</th>\n                                </tr>\n                              </thead>\n                              <tbody>\n                                <tr *ngFor=\"let plist of intConfiscateReviewList; let i = index \">\n                                  <td>{{i+1}}</td>\n                                  <td>{{plist.request_date}}</td>\n                                  <td>{{plist.contract_value}}</td>\n                                  <td>{{plist.lg_type}}</td>\n                                  <td>{{plist.beneficiary_name}}</td>\n                                  <td>{{plist.project_name}}</td>\n                                  <td>{{plist.bank_name}}</td>\n                                  <td>\n                                    <button type=\"button\" class=\"btn btn-success vw-details\" (click)=\"internalRowSelected(plist, 'confiscate_review')\">{{'HOME.View' | translate}}</button>\n                                  </td>\n                                </tr>\n                              </tbody>\n                            </table>\n                          </ng-template>\n                  </div>\n                  <!--This is for Arabic-->\n                </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n<!-- Internal Pending list for Confiscate Review -->\n\n<!-- Internal Pending list for Confiscate Approve -->\n<div *ngIf=\"aclConfiscateApprove\">\n  <div class=\"col-sm-12\">\n    <div class=\"kt-portlet\">\n      <div class=\"kt-portlet__head\">\n        <div class=\"kt-portlet__head-label\">\n          <h3 class=\"kt-portlet__head-title\">\n            Pending Confiscate Approve List\n          </h3>\n        </div>\n      </div>\n      \n        <!--begin::Form-->\n        <div class=\"kt-form kt-form--label-right\">\n        <div class=\"kt-portlet__body\">\n          <div class=\"container\">\n            <div class=\"row\">\n              <div class=\"col-md-12\">\n                <div class=\"kt-portlet no-shadow\">\n                  <div class=\"new-blue-table1\">\n\n\n\n                    <div class=\"table-responsive\">\n                      <div *ngIf=\"this.translate.currentLang == 'en'\">\n                        <div *ngIf=\"intConfiscateApproveList?.length > 0; then ConfiscateApprovethenBlock else ConfiscateApproveelseBlock\"> </div>\n                        <ng-template #ConfiscateApprovethenBlock>\n                        <table datatable [dtOptions]=\"dtOptions\" class=\"table table-bordered table-striped table-hover\">\n                            <thead>\n                                <tr>\n                                    <th class=\"table14\">#</th>\n                                    <th class=\"table14\">{{'HOME.Request_date' | translate}}</th>\n                                    <th class=\"table15\">{{'HOME.LG_amount' | translate}}</th>\n                                    <th class=\"table16\">{{'HOME.LG_TYPE' | translate}}</th>\n                                    <th class=\"table17\">{{'HOME.Beneficiary' | translate}}</th>\n                                    <th class=\"table18\">{{'HOME.Project_name' | translate}}</th>\n                                    <th class=\"table19\">{{'HOME.Bank' | translate}}</th>\n                                    <th class=\"\">{{'HOME.View_Details' | translate}}</th>\n                                  </tr>\n                            </thead>\n                            <tbody>\n                              <tr *ngFor=\"let plist of intConfiscateApproveList; let i = index \">\n                                <td>{{i+1}}</td>\n                                <td>{{plist.request_date}}</td>\n                                <td>{{plist.contract_value}}</td>\n                                <td>{{plist.lg_type}}</td>\n                                <td>{{plist.beneficiary_name}}</td>\n                                <td>{{plist.project_name}}</td>\n                                <td>{{plist.bank_name}}</td>\n                                <td>\n                                  <button type=\"button\" class=\"btn btn-success vw-details\" (click)=\"internalRowSelected(plist, 'confiscate_approve')\">{{'HOME.View' | translate}}</button>\n                                </td>\n                              </tr>\n                            </tbody>\n                          </table>\n                        </ng-template>\n\n                        <ng-template #ConfiscateApproveelseBlock>\n                            <table datatable [dtOptions]=\"dtOptions\" class=\"table table-bordered table-striped table-hover\">\n                                <thead>\n                                  <tr>\n                                    <th class=\"table14\">#</th>\n                                    <th class=\"table14\">{{'HOME.Request_date' | translate}}</th>\n                                    <th class=\"table15\">{{'HOME.LG_amount' | translate}}</th>\n                                    <th class=\"table16\">{{'HOME.LG_TYPE' | translate}}</th>\n                                    <th class=\"table17\">{{'HOME.Beneficiary' | translate}}</th>\n                                    <th class=\"table18\">{{'HOME.Project_name' | translate}}</th>\n                                    <th class=\"table19\">{{'HOME.Bank' | translate}}</th>\n                                    <th class=\"\">{{'HOME.View_Details' | translate}}</th>\n                                  </tr>\n                                </thead>\n                                <tbody>\n                                  <tr *ngFor=\"let plist of intConfiscateApproveList; let i = index \">\n                                    <td>{{i+1}}</td>\n                                    <td>{{plist.request_date}}</td>\n                                    <td>{{plist.contract_value}}</td>\n                                    <td>{{plist.lg_type}}</td>\n                                    <td>{{plist.beneficiary_name}}</td>\n                                    <td>{{plist.project_name}}</td>\n                                    <td>{{plist.bank_name}}</td>\n                                    <td>\n                                      <button type=\"button\" class=\"btn btn-success vw-details\" (click)=\"internalRowSelected(plist, 'confiscate_approve')\">{{'HOME.View' | translate}}</button>\n                                    </td>\n                                  </tr>\n                                </tbody>\n                              </table>\n                            </ng-template>\n                    </div>\n                    <!--This is for Arabic-->\n\n                    <div *ngIf=\"this.translate.currentLang == 'ar'\">\n                      <div *ngIf=\"intConfiscateApproveList?.length > 0; then ConfiscateApprovethenBlock else ConfiscateApproveelseBlock\"> </div>\n                      <ng-template #ConfiscateApprovethenBlock>\n                      <table datatable [dtOptions]=\"dtOptionsAR\" class=\"table table-bordered table-striped table-hover\">\n                          <thead>\n                            <tr>\n                              <th class=\"table14\">#</th>\n                              <th class=\"table14\">{{'HOME.Request_date' | translate}}</th>\n                              <th class=\"table15\">{{'HOME.LG_amount' | translate}}</th>\n                              <th class=\"table16\">{{'HOME.LG_TYPE' | translate}}</th>\n                              <th class=\"table17\">{{'HOME.Beneficiary' | translate}}</th>\n                              <th class=\"table18\">{{'HOME.Project_name' | translate}}</th>\n                              <th class=\"table19\">{{'HOME.Bank' | translate}}</th>\n                              <th class=\"\">{{'HOME.View_Details' | translate}}</th>\n                            </tr>\n                          </thead>\n                          <tbody>\n                            <tr *ngFor=\"let plist of intConfiscateApproveList; let i = index \">\n                              <td>{{i+1}}</td>\n                              <td>{{plist.request_date}}</td>\n                              <td>{{plist.contract_value}}</td>\n                              <td>{{plist.lg_type}}</td>\n                              <td>{{plist.beneficiary_name}}</td>\n                              <td>{{plist.project_name}}</td>\n                              <td>{{plist.bank_name}}</td>\n                              <td>\n                                <button type=\"button\" class=\"btn btn-success vw-details\" (click)=\"internalRowSelected(plist, 'confiscate_approve')\">{{'HOME.View' | translate}}</button>\n                              </td>\n                            </tr>\n                          </tbody>\n                        </table>\n                      </ng-template>\n\n                      <ng-template #ConfiscateApproveelseBlock>\n                          <table datatable [dtOptions]=\"dtOptionsAR\" class=\"table table-bordered table-striped table-hover\">\n                              <thead>\n                                <tr>\n                                  <th class=\"table14\">#</th>\n                                  <th class=\"table14\">{{'HOME.Request_date' | translate}}</th>\n                                  <th class=\"table15\">{{'HOME.LG_amount' | translate}}</th>\n                                  <th class=\"table16\">{{'HOME.LG_TYPE' | translate}}</th>\n                                  <th class=\"table17\">{{'HOME.Beneficiary' | translate}}</th>\n                                  <th class=\"table18\">{{'HOME.Project_name' | translate}}</th>\n                                  <th class=\"table19\">{{'HOME.Bank' | translate}}</th>\n                                  <th class=\"\">{{'HOME.View_Details' | translate}}</th>\n                                </tr>\n                              </thead>\n                              <tbody>\n                                <tr *ngFor=\"let plist of intConfiscateApproveList; let i = index \">\n                                  <td>{{i+1}}</td>\n                                  <td>{{plist.request_date}}</td>\n                                  <td>{{plist.contract_value}}</td>\n                                  <td>{{plist.lg_type}}</td>\n                                  <td>{{plist.beneficiary_name}}</td>\n                                  <td>{{plist.project_name}}</td>\n                                  <td>{{plist.bank_name}}</td>\n                                  <td>\n                                    <button type=\"button\" class=\"btn btn-success vw-details\" (click)=\"internalRowSelected(plist, 'confiscate_approve')\">{{'HOME.View' | translate}}</button>\n                                  </td>\n                                </tr>\n                              </tbody>\n                            </table>\n                          </ng-template>\n                  </div>\n                  <!--This is for Arabic-->\n                </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n<!-- Internal Pending list for Confiscate Approve -->\n\n\n\n\n<!-- Internal Pending list for Release Reject -->\n<div *ngIf=\"aclReleaseCreate\">\n  <div class=\"col-sm-12\">\n    <div class=\"kt-portlet\">\n      <div class=\"kt-portlet__head\">\n        <div class=\"kt-portlet__head-label\">\n          <h3 class=\"kt-portlet__head-title\">\n            Pending Release Reject List\n          </h3>\n        </div>\n      </div>\n      \n        <!--begin::Form-->\n        <div class=\"kt-form kt-form--label-right\">\n        <div class=\"kt-portlet__body\">\n          <div class=\"container\">\n            <div class=\"row\">\n              <div class=\"col-md-12\">\n                <div class=\"kt-portlet no-shadow\">\n                  <div class=\"new-blue-table1\">\n\n\n\n                    <div class=\"table-responsive\">\n                      <div *ngIf=\"this.translate.currentLang == 'en'\">\n                        <div *ngIf=\"intReleaseRejectList?.length > 0; then ReleaseRejectthenBlock else ReleaseRejectelseBlock\"> </div>\n                        <ng-template #ReleaseRejectthenBlock>\n                        <table datatable [dtOptions]=\"dtOptions\" class=\"table table-bordered table-striped table-hover\">\n                            <thead>\n                                <tr>\n                                    <th class=\"table14\">#</th>\n                                    <th class=\"table14\">{{'HOME.Request_date' | translate}}</th>\n                                    <th class=\"table15\">{{'HOME.LG_amount' | translate}}</th>\n                                    <th class=\"table16\">{{'HOME.LG_TYPE' | translate}}</th>\n                                    <th class=\"table17\">{{'HOME.Beneficiary' | translate}}</th>\n                                    <th class=\"table18\">{{'HOME.Project_name' | translate}}</th>\n                                    <th class=\"table19\">{{'HOME.Bank' | translate}}</th>\n                                    <th class=\"\">{{'HOME.View_Details' | translate}}</th>\n                                  </tr>\n                            </thead>\n                            <tbody>\n                              <tr *ngFor=\"let plist of intReleaseRejectList; let i = index \">\n                                <td>{{i+1}}</td>\n                                <td>{{plist.request_date}}</td>\n                                <td>{{plist.contract_value}}</td>\n                                <td>{{plist.lg_type}}</td>\n                                <td>{{plist.beneficiary_name}}</td>\n                                <td>{{plist.project_name}}</td>\n                                <td>{{plist.bank_name}}</td>\n                                <td>\n                                  <button type=\"button\" class=\"btn btn-success vw-details\" (click)=\"internalRowSelected(plist, 'release_Reject')\">{{'HOME.View' | translate}}</button>\n                                </td>\n                              </tr>\n                            </tbody>\n                          </table>\n                        </ng-template>\n\n                        <ng-template #ReleaseRejectelseBlock>\n                            <table datatable [dtOptions]=\"dtOptions\" class=\"table table-bordered table-striped table-hover\">\n                                <thead>\n                                  <tr>\n                                    <th class=\"table14\">#</th>\n                                    <th class=\"table14\">{{'HOME.Request_date' | translate}}</th>\n                                    <th class=\"table15\">{{'HOME.LG_amount' | translate}}</th>\n                                    <th class=\"table16\">{{'HOME.LG_TYPE' | translate}}</th>\n                                    <th class=\"table17\">{{'HOME.Beneficiary' | translate}}</th>\n                                    <th class=\"table18\">{{'HOME.Project_name' | translate}}</th>\n                                    <th class=\"table19\">{{'HOME.Bank' | translate}}</th>\n                                    <th class=\"\">{{'HOME.View_Details' | translate}}</th>\n                                  </tr>\n                                </thead>\n                                <tbody>\n                                  <tr *ngFor=\"let plist of intReleaseRejectList; let i = index \">\n                                    <td>{{i+1}}</td>\n                                    <td>{{plist.request_date}}</td>\n                                    <td>{{plist.contract_value}}</td>\n                                    <td>{{plist.lg_type}}</td>\n                                    <td>{{plist.beneficiary_name}}</td>\n                                    <td>{{plist.project_name}}</td>\n                                    <td>{{plist.bank_name}}</td>\n                                    <td>\n                                      <button type=\"button\" class=\"btn btn-success vw-details\" (click)=\"internalRowSelected(plist, 'release_Reject')\">{{'HOME.View' | translate}}</button>\n                                    </td>\n                                  </tr>\n                                </tbody>\n                              </table>\n                            </ng-template>\n                    </div>\n                    <!--This is for Arabic-->\n\n                    <div *ngIf=\"this.translate.currentLang == 'ar'\">\n                      <div *ngIf=\"intReleaseRejectList?.length > 0; then ReleaseRejectthenBlock else ReleaseRejectelseBlock\"> </div>\n                      <ng-template #ReleaseRejectthenBlock>\n                      <table datatable [dtOptions]=\"dtOptionsAR\" class=\"table table-bordered table-striped table-hover\">\n                          <thead>\n                            <tr>\n                              <th class=\"table14\">#</th>\n                              <th class=\"table14\">{{'HOME.Request_date' | translate}}</th>\n                              <th class=\"table15\">{{'HOME.LG_amount' | translate}}</th>\n                              <th class=\"table16\">{{'HOME.LG_TYPE' | translate}}</th>\n                              <th class=\"table17\">{{'HOME.Beneficiary' | translate}}</th>\n                              <th class=\"table18\">{{'HOME.Project_name' | translate}}</th>\n                              <th class=\"table19\">{{'HOME.Bank' | translate}}</th>\n                              <th class=\"\">{{'HOME.View_Details' | translate}}</th>\n                            </tr>\n                          </thead>\n                          <tbody>\n                            <tr *ngFor=\"let plist of intReleaseRejectList; let i = index \">\n                              <td>{{i+1}}</td>\n                              <td>{{plist.request_date}}</td>\n                              <td>{{plist.contract_value}}</td>\n                              <td>{{plist.lg_type}}</td>\n                              <td>{{plist.beneficiary_name}}</td>\n                              <td>{{plist.project_name}}</td>\n                              <td>{{plist.bank_name}}</td>\n                              <td>\n                                <button type=\"button\" class=\"btn btn-success vw-details\" (click)=\"internalRowSelected(plist, 'release_Reject')\">{{'HOME.View' | translate}}</button>\n                              </td>\n                            </tr>\n                          </tbody>\n                        </table>\n                      </ng-template>\n\n                      <ng-template #ReleaseRejectelseBlock>\n                          <table datatable [dtOptions]=\"dtOptionsAR\" class=\"table table-bordered table-striped table-hover\">\n                              <thead>\n                                <tr>\n                                  <th class=\"table14\">#</th>\n                                  <th class=\"table14\">{{'HOME.Request_date' | translate}}</th>\n                                  <th class=\"table15\">{{'HOME.LG_amount' | translate}}</th>\n                                  <th class=\"table16\">{{'HOME.LG_TYPE' | translate}}</th>\n                                  <th class=\"table17\">{{'HOME.Beneficiary' | translate}}</th>\n                                  <th class=\"table18\">{{'HOME.Project_name' | translate}}</th>\n                                  <th class=\"table19\">{{'HOME.Bank' | translate}}</th>\n                                  <th class=\"\">{{'HOME.View_Details' | translate}}</th>\n                                </tr>\n                              </thead>\n                              <tbody>\n                                <tr *ngFor=\"let plist of intReleaseRejectList; let i = index \">\n                                  <td>{{i+1}}</td>\n                                  <td>{{plist.request_date}}</td>\n                                  <td>{{plist.contract_value}}</td>\n                                  <td>{{plist.lg_type}}</td>\n                                  <td>{{plist.beneficiary_name}}</td>\n                                  <td>{{plist.project_name}}</td>\n                                  <td>{{plist.bank_name}}</td>\n                                  <td>\n                                    <button type=\"button\" class=\"btn btn-success vw-details\" (click)=\"internalRowSelected(plist, 'release_Reject')\">{{'HOME.View' | translate}}</button>\n                                  </td>\n                                </tr>\n                              </tbody>\n                            </table>\n                          </ng-template>\n                  </div>\n                  <!--This is for Arabic-->\n                </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n<!-- Internal Pending list for Release Reject -->\n\n<!-- Internal Pending list for Release Create -->\n<div *ngIf=\"aclReleaseCreate\">\n  <div class=\"col-sm-12\">\n    <div class=\"kt-portlet\">\n      <div class=\"kt-portlet__head\">\n        <div class=\"kt-portlet__head-label\">\n          <h3 class=\"kt-portlet__head-title\">\n            Pending Release Create List\n          </h3>\n        </div>\n      </div>\n      \n        <!--begin::Form-->\n        <div class=\"kt-form kt-form--label-right\">\n        <div class=\"kt-portlet__body\">\n          <div class=\"container\">\n            <div class=\"row\">\n              <div class=\"col-md-12\">\n                <div class=\"kt-portlet no-shadow\">\n                  <div class=\"new-blue-table1\">\n\n\n\n                    <div class=\"table-responsive\">\n                      <div *ngIf=\"this.translate.currentLang == 'en'\">\n                        <div *ngIf=\"intReleaseCreateList?.length > 0; then ReleaseCreatethenBlock else ReleaseCreateelseBlock\"> </div>\n                        <ng-template #ReleaseCreatethenBlock>\n                        <table datatable [dtOptions]=\"dtOptions\" class=\"table table-bordered table-striped table-hover\">\n                            <thead>\n                                <tr>\n                                    <th class=\"table14\">#</th>\n                                    <th class=\"table14\">{{'HOME.Request_date' | translate}}</th>\n                                    <th class=\"table15\">{{'HOME.LG_amount' | translate}}</th>\n                                    <th class=\"table16\">{{'HOME.LG_TYPE' | translate}}</th>\n                                    <th class=\"table17\">{{'HOME.Beneficiary' | translate}}</th>\n                                    <th class=\"table18\">{{'HOME.Project_name' | translate}}</th>\n                                    <th class=\"table19\">{{'HOME.Bank' | translate}}</th>\n                                    <th class=\"\">{{'HOME.View_Details' | translate}}</th>\n                                  </tr>\n                            </thead>\n                            <tbody>\n                              <tr *ngFor=\"let plist of intReleaseCreateList; let i = index \">\n                                <td>{{i+1}}</td>\n                                <td>{{plist.request_date}}</td>\n                                <td>{{plist.contract_value}}</td>\n                                <td>{{plist.lg_type}}</td>\n                                <td>{{plist.beneficiary_name}}</td>\n                                <td>{{plist.project_name}}</td>\n                                <td>{{plist.bank_name}}</td>\n                                <td>\n                                  <button type=\"button\" class=\"btn btn-success vw-details\" (click)=\"internalRowSelected(plist, 'release_create')\">{{'HOME.View' | translate}}</button>\n                                </td>\n                              </tr>\n                            </tbody>\n                          </table>\n                        </ng-template>\n\n                        <ng-template #ReleaseCreateelseBlock>\n                            <table datatable [dtOptions]=\"dtOptions\" class=\"table table-bordered table-striped table-hover\">\n                                <thead>\n                                  <tr>\n                                    <th class=\"table14\">#</th>\n                                    <th class=\"table14\">{{'HOME.Request_date' | translate}}</th>\n                                    <th class=\"table15\">{{'HOME.LG_amount' | translate}}</th>\n                                    <th class=\"table16\">{{'HOME.LG_TYPE' | translate}}</th>\n                                    <th class=\"table17\">{{'HOME.Beneficiary' | translate}}</th>\n                                    <th class=\"table18\">{{'HOME.Project_name' | translate}}</th>\n                                    <th class=\"table19\">{{'HOME.Bank' | translate}}</th>\n                                    <th class=\"\">{{'HOME.View_Details' | translate}}</th>\n                                  </tr>\n                                </thead>\n                                <tbody>\n                                  <tr *ngFor=\"let plist of intReleaseCreateList; let i = index \">\n                                    <td>{{i+1}}</td>\n                                    <td>{{plist.request_date}}</td>\n                                    <td>{{plist.contract_value}}</td>\n                                    <td>{{plist.lg_type}}</td>\n                                    <td>{{plist.beneficiary_name}}</td>\n                                    <td>{{plist.project_name}}</td>\n                                    <td>{{plist.bank_name}}</td>\n                                    <td>\n                                      <button type=\"button\" class=\"btn btn-success vw-details\" (click)=\"internalRowSelected(plist, 'release_create')\">{{'HOME.View' | translate}}</button>\n                                    </td>\n                                  </tr>\n                                </tbody>\n                              </table>\n                            </ng-template>\n                    </div>\n                    <!--This is for Arabic-->\n\n                    <div *ngIf=\"this.translate.currentLang == 'ar'\">\n                      <div *ngIf=\"intReleaseCreateList?.length > 0; then ReleaseCreatethenBlock else ReleaseCreateelseBlock\"> </div>\n                      <ng-template #ReleaseCreatethenBlock>\n                      <table datatable [dtOptions]=\"dtOptionsAR\" class=\"table table-bordered table-striped table-hover\">\n                          <thead>\n                            <tr>\n                              <th class=\"table14\">#</th>\n                              <th class=\"table14\">{{'HOME.Request_date' | translate}}</th>\n                              <th class=\"table15\">{{'HOME.LG_amount' | translate}}</th>\n                              <th class=\"table16\">{{'HOME.LG_TYPE' | translate}}</th>\n                              <th class=\"table17\">{{'HOME.Beneficiary' | translate}}</th>\n                              <th class=\"table18\">{{'HOME.Project_name' | translate}}</th>\n                              <th class=\"table19\">{{'HOME.Bank' | translate}}</th>\n                              <th class=\"\">{{'HOME.View_Details' | translate}}</th>\n                            </tr>\n                          </thead>\n                          <tbody>\n                            <tr *ngFor=\"let plist of intReleaseCreateList; let i = index \">\n                              <td>{{i+1}}</td>\n                              <td>{{plist.request_date}}</td>\n                              <td>{{plist.contract_value}}</td>\n                              <td>{{plist.lg_type}}</td>\n                              <td>{{plist.beneficiary_name}}</td>\n                              <td>{{plist.project_name}}</td>\n                              <td>{{plist.bank_name}}</td>\n                              <td>\n                                <button type=\"button\" class=\"btn btn-success vw-details\" (click)=\"internalRowSelected(plist, 'release_create')\">{{'HOME.View' | translate}}</button>\n                              </td>\n                            </tr>\n                          </tbody>\n                        </table>\n                      </ng-template>\n\n                      <ng-template #ReleaseCreateelseBlock>\n                          <table datatable [dtOptions]=\"dtOptionsAR\" class=\"table table-bordered table-striped table-hover\">\n                              <thead>\n                                <tr>\n                                  <th class=\"table14\">#</th>\n                                  <th class=\"table14\">{{'HOME.Request_date' | translate}}</th>\n                                  <th class=\"table15\">{{'HOME.LG_amount' | translate}}</th>\n                                  <th class=\"table16\">{{'HOME.LG_TYPE' | translate}}</th>\n                                  <th class=\"table17\">{{'HOME.Beneficiary' | translate}}</th>\n                                  <th class=\"table18\">{{'HOME.Project_name' | translate}}</th>\n                                  <th class=\"table19\">{{'HOME.Bank' | translate}}</th>\n                                  <th class=\"\">{{'HOME.View_Details' | translate}}</th>\n                                </tr>\n                              </thead>\n                              <tbody>\n                                <tr *ngFor=\"let plist of intReleaseCreateList; let i = index \">\n                                  <td>{{i+1}}</td>\n                                  <td>{{plist.request_date}}</td>\n                                  <td>{{plist.contract_value}}</td>\n                                  <td>{{plist.lg_type}}</td>\n                                  <td>{{plist.beneficiary_name}}</td>\n                                  <td>{{plist.project_name}}</td>\n                                  <td>{{plist.bank_name}}</td>\n                                  <td>\n                                    <button type=\"button\" class=\"btn btn-success vw-details\" (click)=\"internalRowSelected(plist, 'release_create')\">{{'HOME.View' | translate}}</button>\n                                  </td>\n                                </tr>\n                              </tbody>\n                            </table>\n                          </ng-template>\n                  </div>\n                  <!--This is for Arabic-->\n                </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n<!-- Internal Pending list for Release Create -->\n<!-- Internal Pending list for Release Review -->\n<div *ngIf=\"aclReleaseReview\">\n  <div class=\"col-sm-12\">\n    <div class=\"kt-portlet\">\n      <div class=\"kt-portlet__head\">\n        <div class=\"kt-portlet__head-label\">\n          <h3 class=\"kt-portlet__head-title\">\n            Pending Release Review List\n          </h3>\n        </div>\n      </div>\n      \n        <!--begin::Form-->\n        <div class=\"kt-form kt-form--label-right\">\n        <div class=\"kt-portlet__body\">\n          <div class=\"container\">\n            <div class=\"row\">\n              <div class=\"col-md-12\">\n                <div class=\"kt-portlet no-shadow\">\n                  <div class=\"new-blue-table1\">\n\n\n\n                    <div class=\"table-responsive\">\n                      <div *ngIf=\"this.translate.currentLang == 'en'\">\n                        <div *ngIf=\"intReleaseReviewList?.length > 0; then ReleaseReviewthenBlock else ReleaseReviewelseBlock\"> </div>\n                        <ng-template #ReleaseReviewthenBlock>\n                        <table datatable [dtOptions]=\"dtOptions\" class=\"table table-bordered table-striped table-hover\">\n                            <thead>\n                                <tr>\n                                    <th class=\"table14\">#</th>\n                                    <th class=\"table14\">{{'HOME.Request_date' | translate}}</th>\n                                    <th class=\"table15\">{{'HOME.LG_amount' | translate}}</th>\n                                    <th class=\"table16\">{{'HOME.LG_TYPE' | translate}}</th>\n                                    <th class=\"table17\">{{'HOME.Beneficiary' | translate}}</th>\n                                    <th class=\"table18\">{{'HOME.Project_name' | translate}}</th>\n                                    <th class=\"table19\">{{'HOME.Bank' | translate}}</th>\n                                    <th class=\"\">{{'HOME.View_Details' | translate}}</th>\n                                  </tr>\n                            </thead>\n                            <tbody>\n                              <tr *ngFor=\"let plist of intReleaseReviewList; let i = index \">\n                                <td>{{i+1}}</td>\n                                <td>{{plist.request_date}}</td>\n                                <td>{{plist.contract_value}}</td>\n                                <td>{{plist.lg_type}}</td>\n                                <td>{{plist.beneficiary_name}}</td>\n                                <td>{{plist.project_name}}</td>\n                                <td>{{plist.bank_name}}</td>\n                                <td>\n                                  <button type=\"button\" class=\"btn btn-success vw-details\" (click)=\"internalRowSelected(plist, 'release_review')\">{{'HOME.View' | translate}}</button>\n                                </td>\n                              </tr>\n                            </tbody>\n                          </table>\n                        </ng-template>\n\n                        <ng-template #ReleaseReviewelseBlock>\n                            <table datatable [dtOptions]=\"dtOptions\" class=\"table table-bordered table-striped table-hover\">\n                                <thead>\n                                  <tr>\n                                    <th class=\"table14\">#</th>\n                                    <th class=\"table14\">{{'HOME.Request_date' | translate}}</th>\n                                    <th class=\"table15\">{{'HOME.LG_amount' | translate}}</th>\n                                    <th class=\"table16\">{{'HOME.LG_TYPE' | translate}}</th>\n                                    <th class=\"table17\">{{'HOME.Beneficiary' | translate}}</th>\n                                    <th class=\"table18\">{{'HOME.Project_name' | translate}}</th>\n                                    <th class=\"table19\">{{'HOME.Bank' | translate}}</th>\n                                    <th class=\"\">{{'HOME.View_Details' | translate}}</th>\n                                  </tr>\n                                </thead>\n                                <tbody>\n                                  <tr *ngFor=\"let plist of intReleaseReviewList; let i = index \">\n                                    <td>{{i+1}}</td>\n                                    <td>{{plist.request_date}}</td>\n                                    <td>{{plist.contract_value}}</td>\n                                    <td>{{plist.lg_type}}</td>\n                                    <td>{{plist.beneficiary_name}}</td>\n                                    <td>{{plist.project_name}}</td>\n                                    <td>{{plist.bank_name}}</td>\n                                    <td>\n                                      <button type=\"button\" class=\"btn btn-success vw-details\" (click)=\"internalRowSelected(plist, 'release_review')\">{{'HOME.View' | translate}}</button>\n                                    </td>\n                                  </tr>\n                                </tbody>\n                              </table>\n                            </ng-template>\n                    </div>\n                    <!--This is for Arabic-->\n\n                    <div *ngIf=\"this.translate.currentLang == 'ar'\">\n                      <div *ngIf=\"intReleaseReviewList?.length > 0; then ReleaseReviewthenBlock else ReleaseReviewelseBlock\"> </div>\n                      <ng-template #ReleaseReviewthenBlock>\n                      <table datatable [dtOptions]=\"dtOptionsAR\" class=\"table table-bordered table-striped table-hover\">\n                          <thead>\n                            <tr>\n                              <th class=\"table14\">#</th>\n                              <th class=\"table14\">{{'HOME.Request_date' | translate}}</th>\n                              <th class=\"table15\">{{'HOME.LG_amount' | translate}}</th>\n                              <th class=\"table16\">{{'HOME.LG_TYPE' | translate}}</th>\n                              <th class=\"table17\">{{'HOME.Beneficiary' | translate}}</th>\n                              <th class=\"table18\">{{'HOME.Project_name' | translate}}</th>\n                              <th class=\"table19\">{{'HOME.Bank' | translate}}</th>\n                              <th class=\"\">{{'HOME.View_Details' | translate}}</th>\n                            </tr>\n                          </thead>\n                          <tbody>\n                            <tr *ngFor=\"let plist of intReleaseReviewList; let i = index \">\n                              <td>{{i+1}}</td>\n                              <td>{{plist.request_date}}</td>\n                              <td>{{plist.contract_value}}</td>\n                              <td>{{plist.lg_type}}</td>\n                              <td>{{plist.beneficiary_name}}</td>\n                              <td>{{plist.project_name}}</td>\n                              <td>{{plist.bank_name}}</td>\n                              <td>\n                                <button type=\"button\" class=\"btn btn-success vw-details\" (click)=\"internalRowSelected(plist, 'release_review')\">{{'HOME.View' | translate}}</button>\n                              </td>\n                            </tr>\n                          </tbody>\n                        </table>\n                      </ng-template>\n\n                      <ng-template #ReleaseReviewelseBlock>\n                          <table datatable [dtOptions]=\"dtOptionsAR\" class=\"table table-bordered table-striped table-hover\">\n                              <thead>\n                                <tr>\n                                  <th class=\"table14\">#</th>\n                                  <th class=\"table14\">{{'HOME.Request_date' | translate}}</th>\n                                  <th class=\"table15\">{{'HOME.LG_amount' | translate}}</th>\n                                  <th class=\"table16\">{{'HOME.LG_TYPE' | translate}}</th>\n                                  <th class=\"table17\">{{'HOME.Beneficiary' | translate}}</th>\n                                  <th class=\"table18\">{{'HOME.Project_name' | translate}}</th>\n                                  <th class=\"table19\">{{'HOME.Bank' | translate}}</th>\n                                  <th class=\"\">{{'HOME.View_Details' | translate}}</th>\n                                </tr>\n                              </thead>\n                              <tbody>\n                                <tr *ngFor=\"let plist of intReleaseReviewList; let i = index \">\n                                  <td>{{i+1}}</td>\n                                  <td>{{plist.request_date}}</td>\n                                  <td>{{plist.contract_value}}</td>\n                                  <td>{{plist.lg_type}}</td>\n                                  <td>{{plist.beneficiary_name}}</td>\n                                  <td>{{plist.project_name}}</td>\n                                  <td>{{plist.bank_name}}</td>\n                                  <td>\n                                    <button type=\"button\" class=\"btn btn-success vw-details\" (click)=\"internalRowSelected(plist, 'release_review')\">{{'HOME.View' | translate}}</button>\n                                  </td>\n                                </tr>\n                              </tbody>\n                            </table>\n                          </ng-template>\n                  </div>\n                  <!--This is for Arabic-->\n                </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n<!-- Internal Pending list for Release Review -->\n\n<!-- Internal Pending list for Release Approve -->\n<div *ngIf=\"aclReleaseApprove\">\n  <div class=\"col-sm-12\">\n    <div class=\"kt-portlet\">\n      <div class=\"kt-portlet__head\">\n        <div class=\"kt-portlet__head-label\">\n          <h3 class=\"kt-portlet__head-title\">\n            Pending Release Approve List\n          </h3>\n        </div>\n      </div>\n      \n        <!--begin::Form-->\n        <div class=\"kt-form kt-form--label-right\">\n        <div class=\"kt-portlet__body\">\n          <div class=\"container\">\n            <div class=\"row\">\n              <div class=\"col-md-12\">\n                <div class=\"kt-portlet no-shadow\">\n                  <div class=\"new-blue-table1\">\n\n\n\n                    <div class=\"table-responsive\">\n                      <div *ngIf=\"this.translate.currentLang == 'en'\">\n                        <div *ngIf=\"intReleaseApproveList?.length > 0; then ReleaseApprovethenBlock else ReleaseApproveelseBlock\"> </div>\n                        <ng-template #ReleaseApprovethenBlock>\n                        <table datatable [dtOptions]=\"dtOptions\" class=\"table table-bordered table-striped table-hover\">\n                            <thead>\n                                <tr>\n                                    <th class=\"table14\">#</th>\n                                    <th class=\"table14\">{{'HOME.Request_date' | translate}}</th>\n                                    <th class=\"table15\">{{'HOME.LG_amount' | translate}}</th>\n                                    <th class=\"table16\">{{'HOME.LG_TYPE' | translate}}</th>\n                                    <th class=\"table17\">{{'HOME.Beneficiary' | translate}}</th>\n                                    <th class=\"table18\">{{'HOME.Project_name' | translate}}</th>\n                                    <th class=\"table19\">{{'HOME.Bank' | translate}}</th>\n                                    <th class=\"\">{{'HOME.View_Details' | translate}}</th>\n                                  </tr>\n                            </thead>\n                            <tbody>\n                              <tr *ngFor=\"let plist of intReleaseApproveList; let i = index \">\n                                <td>{{i+1}}</td>\n                                <td>{{plist.request_date}}</td>\n                                <td>{{plist.contract_value}}</td>\n                                <td>{{plist.lg_type}}</td>\n                                <td>{{plist.beneficiary_name}}</td>\n                                <td>{{plist.project_name}}</td>\n                                <td>{{plist.bank_name}}</td>\n                                <td>\n                                  <button type=\"button\" class=\"btn btn-success vw-details\" (click)=\"internalRowSelected(plist, 'release_approve')\">{{'HOME.View' | translate}}</button>\n                                </td>\n                              </tr>\n                            </tbody>\n                          </table>\n                        </ng-template>\n\n                        <ng-template #ReleaseApproveelseBlock>\n                            <table datatable [dtOptions]=\"dtOptions\" class=\"table table-bordered table-striped table-hover\">\n                                <thead>\n                                  <tr>\n                                    <th class=\"table14\">#</th>\n                                    <th class=\"table14\">{{'HOME.Request_date' | translate}}</th>\n                                    <th class=\"table15\">{{'HOME.LG_amount' | translate}}</th>\n                                    <th class=\"table16\">{{'HOME.LG_TYPE' | translate}}</th>\n                                    <th class=\"table17\">{{'HOME.Beneficiary' | translate}}</th>\n                                    <th class=\"table18\">{{'HOME.Project_name' | translate}}</th>\n                                    <th class=\"table19\">{{'HOME.Bank' | translate}}</th>\n                                    <th class=\"\">{{'HOME.View_Details' | translate}}</th>\n                                  </tr>\n                                </thead>\n                                <tbody>\n                                  <tr *ngFor=\"let plist of intReleaseApproveList; let i = index \">\n                                    <td>{{i+1}}</td>\n                                    <td>{{plist.request_date}}</td>\n                                    <td>{{plist.contract_value}}</td>\n                                    <td>{{plist.lg_type}}</td>\n                                    <td>{{plist.beneficiary_name}}</td>\n                                    <td>{{plist.project_name}}</td>\n                                    <td>{{plist.bank_name}}</td>\n                                    <td>\n                                      <button type=\"button\" class=\"btn btn-success vw-details\" (click)=\"internalRowSelected(plist, 'release_approve')\">{{'HOME.View' | translate}}</button>\n                                    </td>\n                                  </tr>\n                                </tbody>\n                              </table>\n                            </ng-template>\n                    </div>\n                    <!--This is for Arabic-->\n\n                    <div *ngIf=\"this.translate.currentLang == 'ar'\">\n                      <div *ngIf=\"intReleaseApproveList?.length > 0; then ReleaseApprovethenBlock else ReleaseApproveelseBlock\"> </div>\n                      <ng-template #ReleaseApprovethenBlock>\n                      <table datatable [dtOptions]=\"dtOptionsAR\" class=\"table table-bordered table-striped table-hover\">\n                          <thead>\n                            <tr>\n                              <th class=\"table14\">#</th>\n                              <th class=\"table14\">{{'HOME.Request_date' | translate}}</th>\n                              <th class=\"table15\">{{'HOME.LG_amount' | translate}}</th>\n                              <th class=\"table16\">{{'HOME.LG_TYPE' | translate}}</th>\n                              <th class=\"table17\">{{'HOME.Beneficiary' | translate}}</th>\n                              <th class=\"table18\">{{'HOME.Project_name' | translate}}</th>\n                              <th class=\"table19\">{{'HOME.Bank' | translate}}</th>\n                              <th class=\"\">{{'HOME.View_Details' | translate}}</th>\n                            </tr>\n                          </thead>\n                          <tbody>\n                            <tr *ngFor=\"let plist of intReleaseApproveList; let i = index \">\n                              <td>{{i+1}}</td>\n                              <td>{{plist.request_date}}</td>\n                              <td>{{plist.contract_value}}</td>\n                              <td>{{plist.lg_type}}</td>\n                              <td>{{plist.beneficiary_name}}</td>\n                              <td>{{plist.project_name}}</td>\n                              <td>{{plist.bank_name}}</td>\n                              <td>\n                                <button type=\"button\" class=\"btn btn-success vw-details\" (click)=\"internalRowSelected(plist, 'release_approve')\">{{'HOME.View' | translate}}</button>\n                              </td>\n                            </tr>\n                          </tbody>\n                        </table>\n                      </ng-template>\n\n                      <ng-template #ReleaseApproveelseBlock>\n                          <table datatable [dtOptions]=\"dtOptionsAR\" class=\"table table-bordered table-striped table-hover\">\n                              <thead>\n                                <tr>\n                                  <th class=\"table14\">#</th>\n                                  <th class=\"table14\">{{'HOME.Request_date' | translate}}</th>\n                                  <th class=\"table15\">{{'HOME.LG_amount' | translate}}</th>\n                                  <th class=\"table16\">{{'HOME.LG_TYPE' | translate}}</th>\n                                  <th class=\"table17\">{{'HOME.Beneficiary' | translate}}</th>\n                                  <th class=\"table18\">{{'HOME.Project_name' | translate}}</th>\n                                  <th class=\"table19\">{{'HOME.Bank' | translate}}</th>\n                                  <th class=\"\">{{'HOME.View_Details' | translate}}</th>\n                                </tr>\n                              </thead>\n                              <tbody>\n                                <tr *ngFor=\"let plist of intReleaseApproveList; let i = index \">\n                                  <td>{{i+1}}</td>\n                                  <td>{{plist.request_date}}</td>\n                                  <td>{{plist.contract_value}}</td>\n                                  <td>{{plist.lg_type}}</td>\n                                  <td>{{plist.beneficiary_name}}</td>\n                                  <td>{{plist.project_name}}</td>\n                                  <td>{{plist.bank_name}}</td>\n                                  <td>\n                                    <button type=\"button\" class=\"btn btn-success vw-details\" (click)=\"internalRowSelected(plist, 'release_approve')\">{{'HOME.View' | translate}}</button>\n                                  </td>\n                                </tr>\n                              </tbody>\n                            </table>\n                          </ng-template>\n                  </div>\n                  <!--This is for Arabic-->\n                </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n<!-- Internal Pending list for Release Approve -->\n                \n                \n                \n                \n                \n                \n                </div>\n                <!-- Internal Pending list for LG/Amend/Confiscation/release -->\n                \n              \n              \n              \n              \n              \n              \n              \n              \n              \n              \n              \n              \n                \n                \n                \n                \n                                                  </form>\n                \n                                                </div>\n                                              </div>\n                                            </div>\n                \n                                          </div>\n                                        </div>\n                                      </div>\n                                    </section>\n                                  </div>\n                                  \n                                </div>\n                              </div>\n                              <!--New Design Here-->\n                            </div>\n                          </div>\n                          <!--===========================\n                                        End Content\n                                        ============================-->\n                         \n                  <!--begin::Global Theme Bundle(used by all pages) -->\n                  <script src=\"../../assets/js/plugins.bundle.js\" type=\"text/javascript\"></script>\n                  <!-- end::Body -->\n                 ");

/***/ }),

/***/ "./node_modules/raw-loader/dist/cjs.js!./src/app/government-release-list/government-release-list.component.html":
/*!**********************************************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/government-release-list/government-release-list.component.html ***!
  \**********************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (" \n    <!--===========================\n    Start Content\n    ============================-->\n    <div class=\"pt-0 kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor kt-margin-top-50\">\n        <div class=\"kt-container\">\n        <!--New Design Here-->\n        <div class=\"row\">\n        <app-sidemenu></app-sidemenu>\n        <!--<div class=\"col-12 col-sm-3 col-md-3 col-lg-3 left-panel-menu-wrap w-20 fixed-wrap\">\n            \n            <ul class=\"vertical-menu\">\n            <li *ngIf=\"roleId == 2\"><a routerLink=\"/govDashboard\"><span class=\"db-icon\"></span>{{'HOME.Dashboard' | translate}}</a></li>\n                <li *ngIf=\"roleId == 2\"><a routerLink=\"/govLgManagement\" class=\"active\"><span class=\"db-icon\"></span>{{'HOME.LG_Management' | translate}}</a></li>\n                <li *ngIf=\"roleId == 2\"><a routerLink=\"/governmentpendingtasks\"><span class=\"db-icon\"></span>{{'HOME.Pending_Tasks' | translate}}</a></li>\n            </ul>\n        </div>-->\n        <div class=\"col-12 col-sm-9 col-md-9 col-lg-9 padding-null scroll-wrap\">\n            \n            <div class=\"grey-bg\">\n            <section class=\"design-process-section\" id=\"process-tab\">\n                <div>\n                <div>\n                    <div>\n                    <div class=\"two-blocks-tab\">\n                        <ul>\n                        <li [ngClass]=\"{'active': isLgIssuedMeClicked}\"><a >{{'HOME.Letter_of_guarantee_issued_me' | translate}}</a></li>\n                        </ul>\n                    </div>\n                    <!-- Tab panes -->\n                    <div class=\"tab-content\">\n                        <div role=\"tabpanel\" class=\"tab-pane active\" id=\"discover\">\n                        <div class=\"design-process-content\">\n                            <form>\n                            <div class=\"row\" *ngIf=\"isOpenLgIssuedMeList\">\n\n                                <div class=\"col-sm-12\">\n                                <div class=\"kt-portlet\">\n                                    <div class=\"kt-portlet__head\">\n                                    <div class=\"kt-portlet__head-label\">\n                                        <h3 class=\"kt-portlet__head-title\">\n                                        {{'HOME.Active_letters_guarantee' | translate}}\n                                        </h3>\n                                    </div>\n                                    </div>\n                                    <!--begin::Form-->\n                                    <div class=\"kt-form kt-form--label-right\">\n                                    <div class=\"kt-portlet__body\">\n                                        <div class=\"container\">\n                                        <div class=\"row\">\n                                            <div class=\"col-md-12\">\n                                            <div class=\"kt-portlet no-shadow\">\n                                                <div class=\"new-blue-table1\">\n                                                <div class=\"table-responsive\">\n\n                                                    <div *ngIf=\"this.translate.currentLang == 'en'\">\n                                                    <div *ngIf=\"activeLgForMeLists.userObject?.length > 0; then activemethenBlock else activemeelseBlock\"> </div>\n                                                    <ng-template #activemethenBlock>\n                                                    <table datatable [dtOptions]=\"dtOptions\" class=\"table table-bordered table-striped table-hover\">\n                                                        <thead>\n                                                                <tr>\n                                                                <th class=\"table-col-7\">#</th>\n                                                                <th class=\"\"> {{'HOME.LG_Number' | translate}}</th>\n                                                                <th class=\"\">{{'HOME.LG_amount' | translate}}</th>\n                                                                <th class=\"\">{{'HOME.Beneficiary' | translate}}</th>\n                                                                <th class=\"\">{{'HOME.Bank' | translate}}</th>\n                                                                <th class=\"\">{{'HOME.LG_TYPE' | translate}}</th>\n                                                                <th class=\"\">{{'HOME.LG_Status' | translate}}</th>\n                                                                <th class=\"\">{{'HOME.Start_Date' | translate}}</th>\n                                                                <th class=\"\">{{'HOME.End_Date' | translate}}</th>\n                                                                <th class=\"\">{{'HOME.View_Details' | translate}}</th>\n                                                                </tr>\n                                                        </thead>\n                                                        <tbody>\n                                                        <tr *ngFor=\"let activeLgForMeList of activeLgForMeLists.userObject; let i = index \">\n                                                            <td>{{i+1}}</td>\n                                                                <td>{{activeLgForMeList.lg_no}}</td>\n                                                                <td>{{activeLgForMeList.lG_amount}}</td>\n                                                                <td>{{activeLgForMeList.beneficiary_name}}</td>\n                                                                <td>{{activeLgForMeList.bank_name}}</td>\n                                                                <td>{{activeLgForMeList.lg_type}}</td>\n                                                                <td>{{activeLgForMeList.status}}</td>\n                                                                <td>{{activeLgForMeList.start_date}}</td>\n                                                                <td>{{activeLgForMeList.end_date}}</td>\n                                                            <td><button type=\"button\" class=\"btn btn-success vw-details\" (click)=\"RowSelected(activeLgForMeList)\">Release</button>\n                                                            </td>\n                                                        </tr>\n                                                        </tbody>\n                                                        </table>\n                                                    </ng-template>\n                                                    <ng-template #activemeelseBlock>\n                                                        <table datatable [dtOptions]=\"dtOptions\" class=\"table table-bordered table-striped table-hover\">\n                                                            <thead>\n                                                                <tr>\n                                                                <th class=\"table-col-7\">#</th>\n                                                                <th class=\"\"> {{'HOME.LG_Number' | translate}}</th>\n                                                                <th class=\"\">{{'HOME.LG_amount' | translate}}</th>\n                                                                <th class=\"\">{{'HOME.Beneficiary' | translate}}</th>\n                                                                <th class=\"\">{{'HOME.Bank' | translate}}</th>\n                                                                <th class=\"\">{{'HOME.LG_TYPE' | translate}}</th>\n                                                                <th class=\"\">{{'HOME.LG_Status' | translate}}</th>\n                                                                <th class=\"\">{{'HOME.Start_Date' | translate}}</th>\n                                                                <th class=\"\">{{'HOME.End_Date' | translate}}</th>\n                                                                <th class=\"\">{{'HOME.View_Details' | translate}}</th>\n                                                                    </tr>\n                                                            </thead>\n                                                            <tbody>\n                                                            <tr *ngFor=\"let activeLgForMeList of activeLgForMeLists.userObject; let i = index \">\n                                                                <td>{{i+1}}</td>\n                                                                    <td>{{activeLgForMeList.lg_no}}</td>\n                                                                    <td>{{activeLgForMeList.lG_amount}}</td>\n                                                                    <td>{{activeLgForMeList.beneficiary_name}}</td>\n                                                                    <td>{{activeLgForMeList.bank_name}}</td>\n                                                                    <td>{{activeLgForMeList.lg_type}}</td>\n                                                                    <td>{{activeLgForMeList.status}}</td>\n                                                                    <td>{{activeLgForMeList.start_date}}</td>\n                                                                    <td>{{activeLgForMeList.end_date}}</td>\n                                                                <td><button type=\"button\" class=\"btn btn-success vw-details\" (click)=\"RowSelected(activeLgForMeList)\">Release</button>\n                                                                </td>\n                                                            </tr>\n                                                            </tbody>\n                                                            </table>\n                                                        </ng-template>\n                                                        </div>\n\n                                                        <div *ngIf=\"this.translate.currentLang == 'ar'\">\n                                                        <div *ngIf=\"activeLgForMeLists.userObject?.length > 0; then activemethenBlock else activemeelseBlock\"> </div>\n                                                        <ng-template #activemethenBlock>\n                                                        <table datatable [dtOptions]=\"dtOptionsAR\" class=\"table table-bordered table-striped table-hover\">\n                                                            <thead>\n                                                                    <tr>\n                                                                    <th class=\"table-col-7\">#</th>\n                                                                    <th class=\"\"> {{'HOME.LG_Number' | translate}}</th>\n                                                                    <th class=\"\">{{'HOME.LG_amount' | translate}}</th>\n                                                                    <th class=\"\">{{'HOME.Beneficiary' | translate}}</th>\n                                                                    <th class=\"\">{{'HOME.Bank' | translate}}</th>\n                                                                    <th class=\"\">{{'HOME.LG_TYPE' | translate}}</th>\n                                                                    <th class=\"\">{{'HOME.LG_Status' | translate}}</th>\n                                                                    <th class=\"\">{{'HOME.Start_Date' | translate}}</th>\n                                                                    <th class=\"\">{{'HOME.End_Date' | translate}}</th>\n                                                                    <th class=\"\">{{'HOME.View_Details' | translate}}</th>\n                                                                    </tr>\n                                                            </thead>\n                                                            <tbody>\n                                                            <tr *ngFor=\"let activeLgForMeList of activeLgForMeLists.userObject; let i = index \">\n                                                                <td>{{i+1}}</td>\n                                                                    <td>{{activeLgForMeList.lg_no}}</td>\n                                                                    <td>{{activeLgForMeList.lG_amount}}</td>\n                                                                    <td>{{activeLgForMeList.beneficiary_name}}</td>\n                                                                    <td>{{activeLgForMeList.bank_name}}</td>\n                                                                    <td>{{activeLgForMeList.lg_type}}</td>\n                                                                    <td>{{activeLgForMeList.status}}</td>\n                                                                    <td>{{activeLgForMeList.start_date}}</td>\n                                                                    <td>{{activeLgForMeList.end_date}}</td>\n                                                                <td><button type=\"button\" class=\"btn btn-success vw-details\" (click)=\"RowSelected(activeLgForMeList)\">Release</button>\n                                                                </td>\n                                                            </tr>\n                                                            </tbody>\n                                                            </table>\n                                                        </ng-template>\n                                                        <ng-template #activemeelseBlock>\n                                                            <table datatable [dtOptions]=\"dtOptionsAR\" class=\"table table-bordered table-striped table-hover\">\n                                                                <thead>\n                                                                    <tr>\n                                                                    <th class=\"table-col-7\">#</th>\n                                                                    <th class=\"\"> {{'HOME.LG_Number' | translate}}</th>\n                                                                    <th class=\"\">{{'HOME.LG_amount' | translate}}</th>\n                                                                    <th class=\"\">{{'HOME.Beneficiary' | translate}}</th>\n                                                                    <th class=\"\">{{'HOME.Bank' | translate}}</th>\n                                                                    <th class=\"\">{{'HOME.LG_TYPE' | translate}}</th>\n                                                                    <th class=\"\">{{'HOME.LG_Status' | translate}}</th>\n                                                                    <th class=\"\">{{'HOME.Start_Date' | translate}}</th>\n                                                                    <th class=\"\">{{'HOME.End_Date' | translate}}</th>\n                                                                    <th class=\"\">{{'HOME.View_Details' | translate}}</th>\n                                                                    </tr>\n                                                                </thead>\n                                                                <tbody>\n                                                                <tr *ngFor=\"let activeLgForMeList of activeLgForMeLists.userObject; let i = index \">\n                                                                    <td>{{i+1}}</td>\n                                                                        <td>{{activeLgForMeList.lg_no}}</td>\n                                                                        <td>{{activeLgForMeList.lG_amount}}</td>\n                                                                        <td>{{activeLgForMeList.beneficiary_name}}</td>\n                                                                        <td>{{activeLgForMeList.bank_name}}</td>\n                                                                        <td>{{activeLgForMeList.lg_type}}</td>\n                                                                        <td>{{activeLgForMeList.status}}</td>\n                                                                        <td>{{activeLgForMeList.start_date}}</td>\n                                                                        <td>{{activeLgForMeList.end_date}}</td>\n                                                                    <td><button type=\"button\" class=\"btn btn-success vw-details\" (click)=\"RowSelected(activeLgForMeList)\">Release</button>\n                                                                    </td>\n                                                                </tr>\n                                                                </tbody>\n                                                                </table>\n                                                            </ng-template>\n                                                            </div>\n                                                </div>\n                                                </div>\n                                            </div>\n                                            </div>\n                                        </div>\n                                        </div>\n                                    </div>\n                                    </div>\n                                </div>\n                                </div>\n\n                            </div>\n                            </form>\n                        </div>\n                        </div>\n                    </div>\n                    </div>\n                </div>\n                </div>\n            </section>\n            </div>\n            \n        </div>\n        </div>\n        <!--New Design Here-->\n    </div>\n    </div>\n    <!--===========================\n                End Content\n                ============================-->\n\n<!--begin::Global Theme Bundle(used by all pages) -->\n<script src=\"../../assets/js/plugins.bundle.js\" type=\"text/javascript\"></script>\n<!-- end::Body -->\n            \n            \n            ");

/***/ }),

/***/ "./node_modules/raw-loader/dist/cjs.js!./src/app/government-workflow/government-workflow.component.html":
/*!**************************************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/government-workflow/government-workflow.component.html ***!
  \**************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<!--Content-->\n<!--===========================\n\t\t\tStart Content\n\t\t\t============================-->\n            <div class=\"pt-0 kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor kt-margin-top-50 kt-content-padding\">\n                <div class=\"kt-container\">\n                    <!--Middle Content Here-->\n            \n                    <div class=\"row\">\n                        <app-sidemenu></app-sidemenu>\n                        <!--<div class=\"col-12 col-sm-3 col-md-3 col-lg-3 left-panel-menu-wrap w-20 fixed-wrap\">\n                            <ul class=\"vertical-menu\">\n                                <li *ngIf=\"roleId == 2\"><a routerLink=\"/govDashboard\"><span class=\"db-icon\"></span>{{'HOME.Dashboard' | translate}}</a></li>\n                                <li *ngIf=\"roleId == 2\"><a routerLink=\"/govLgManagement\"><span class=\"db-icon\"></span>{{'HOME.LG_Management' | translate}}</a></li>\n                                <li *ngIf=\"roleId == 2\"><a routerLink=\"/governmentpendingtasks\"><span class=\"db-icon\"></span>{{'HOME.Pending_Tasks' | translate}}</a></li>\n                                <li *ngIf=\"roleId == 2\"><a routerLink=\"/governmentaccountmanagement\" class=\"active\"><span class=\"db-icon\"></span>Account Management</a></li>\n                            </ul>\n                        </div>-->\n            \n            \n                        <div class=\"col-12 col-sm-9 col-md-9 col-lg-9 padding-null scroll-wrap\">\n            \n                            <div class=\"grey-bg\">\n                                <section class=\"design-process-section\" id=\"process-tab\">\n                                    <div>\n                                        <div>\n                                            <div>\n                                                <div class=\"text-left1\">\n                                                    <h3 class=\"kt-login__title pt-3 m-0 mb-30\">LG workflow</h3>\n                                                </div>\n                                                <!-- Tab panes -->\n                                                <div class=\"tab-content\">\n                                                    <div role=\"tabpanel\" class=\"tab-pane active\" id=\"discover\">\n                                                        <div class=\"design-process-content\">\n                                                            <form>\n                                                                <div class=\"row\">\n            \n                                                                    <div class=\"col-sm-12\">\n            \n                                                                        <div class=\"kt-portlet\">\n                                                                            <div class=\"kt-portlet__head\">\n                                                                                <div class=\"kt-portlet__head-label\">\n                                                                                    <h3 class=\"kt-portlet__head-title\"></h3>\n                                                                                </div>\n                                                                            </div>\n                                                                            <div class=\"kt-form kt-form--label-right\">\n                                                                                <div class=\"kt-portlet__body\">\n                                                                                    <div class=\"container\">\n                    <form [formGroup]=\"workflowForm\">\n            \n                     \n                    <div class=\"row d-flex justify-content-between add-new-block-top-area\">\n                        \n                        <div class=\"col-md-4\">\n                            <div class=\"form-group\">\n                                <label for=\"Description\" class=\"col-form-label d-block\">Workflow Name</label>\n            \n                                <mat-form-field appearance=\"outline\">\n                                    <input matInput type=\"text\" formControlName=\"workflow_desc\">\n                                  </mat-form-field>\n                                <!--<input class=\"form-control\" type=\"text\" value=\"\" id=\"\" formControlName=\"workflow_desc\">-->\n                                <input class=\"form-control\" type=\"hidden\" value=\"\" id=\"\" formControlName=\"entity_id\">\n            \n                            </div>\n                        </div>\n                        <!--<div class=\"col-md-4\">\n                            <div class=\"form-group\">\n                                <label for=\"searchs\" class=\"col-form-label\">Search</label>\n                                <input class=\"form-control\" type=\"text\" value=\"\" id=\"\">\n                            </div> \n                        </div>-->\n                        <div class=\"col-md-12\">\n                            <div class=\"kt-portlet\">\n                                <div class=\"new-blue-table border-none active-workflow-table\">\n                                    <div class=\"table-responsive\">\n                                        <table class=\"table table-bordered table-hover workflow-table\">\n                                            <thead>\n                                                <tr>\n                                                    <th class=\"w-awtable-1\">#</th>\n                                                    <th class=\"w-awtable-15\">Name</th>\n                                                    <th class=\"w-awtable-14\">Bank</th>\n                                                    <th class=\"w-awtable-24\">IBAN</th>\n                                                    <th>Action</th>\n                                                    <th class=\"w-awtable-12\">Price limit</th>\n                                                    <th>Bond type</th>\n                                                    <th>Activity</th>\n                                                    <th class=\"w-awtable-10\">&nbsp;</th>\n                                                </tr>\n                                            </thead>\n                                            <tbody>\n                                                <ng-container formArrayName=\"steps\" *ngFor=\"let step of workflowForm.controls.steps.controls; let i=index;let last = last;\">\n            \n                                               \n                                                <tr [formGroupName]=\"i\">\n                                                    <td>{{i+1}}\n                                                        <input type=\"text\" formControlName=\"step\" [(ngModel)]=\"i\" hidden=true>\n                                                        \n                                                    </td>\n                                                    <td>\n                                                        <mat-form-field appearance=\"outline\">\n                                                            <mat-select formControlName=\"login_id\">\n                                                                <mat-option value=\"\">Please select</mat-option>\n                                                                <mat-option *ngFor=\"let supplier of supplierList\" value=\"{{supplier.loginId}}\">{{supplier.beneficiaryName}}</mat-option>\n                                                            </mat-select>\n                                                          </mat-form-field>\n                                                    </td>\n                                                    <td>\n                                                        <mat-form-field appearance=\"outline\">\n                                                            <mat-select formControlName=\"bank_code\" [(ngModel)]=\"bank_code\" (selectionChange)=\"onSelectBank(bank_code)\">\n                                                              <mat-option value=\"\">Please select</mat-option>\n                                                              <mat-option *ngFor=\"let listOfBankNames of bankIBANList\" value=\"{{listOfBankNames.bank_code}}\">{{listOfBankNames.bank_name}}</mat-option>\n                                                            </mat-select>\n                                                          </mat-form-field>\n                                                    </td>\n                                                    <td>\n                                                        <mat-form-field appearance=\"outline\">\n                                                            <mat-select formControlName=\"iban_no\" [(ngModel)]=\"iban_no\" multiple>\n                                                                <mat-option *ngFor=\"let IBAN of IBANList\" value=\"{{IBAN}}\">{{IBAN}}</mat-option>\n                                                            </mat-select>\n                                                          </mat-form-field>\n                                                    </td>\n                                                    <td>\n                                                        \n                                                         <!-- <mat-form-field>\n                                                            <mat-select formControlName=\"action_id\">\n                                                                <mat-option>Please select</mat-option>\n                                                                <mat-option *ngFor=\"let action of actionList\" value=\"{{action.action_id}}\">{{action.action_nm}}</mat-option>\n                                                            </mat-select>\n                                                          </mat-form-field>-->\n            \n                                                          <mat-form-field *ngIf=\"i == 0\" appearance=\"outline\">\n                                                            <mat-select formControlName=\"action_id\" panelClass=\"active-table-panel\">\n                                                                <ng-container *ngFor=\"let action of actionList\">\n                                                                <mat-option  value=\"{{action.action_id}}\" *ngIf=\"action.action_id == '1'\" (click)=\"onSelectAction(action.action_id,i,last)\" >{{action.action_nm}}</mat-option>\n                                                            </ng-container>\n                                                            </mat-select>\n                                                          </mat-form-field>\n            \n                                                          <mat-form-field *ngIf=\"i != 0\" appearance=\"outline\">\n                                                            <mat-select formControlName=\"action_id\" panelClass=\"active-table-panel\">\n                                                                <ng-container *ngFor=\"let action of actionList\">\n                                                                <mat-option  value=\"{{action.action_id}}\" *ngIf=\"action.action_id != '1'\" (click)=\"onSelectAction(action.action_id,i,last)\" >{{action.action_nm}}</mat-option>\n                                                            </ng-container>\n                                                            </mat-select>\n                                                          </mat-form-field>\n                                                    </td>\n                                                    \n                                                   \n                                                    <td>\n                                                        <mat-form-field appearance=\"outline\">\n                                                          <input matInput type=\"text\" formControlName=\"price_limit\" [(ngModel)]=\"price_limit\" >\n                                                        </mat-form-field>\n                                                      </td>\n                                                    <td>\n                                                        <mat-form-field appearance=\"outline\">\n                                                            <mat-select formControlName=\"lg_type_id\" [(ngModel)]=\"lg_type_id\" panelClass=\"active-table-panel\" multiple>\n                                                              <mat-option *ngFor=\"let lgType of lgTypeList\" value=\"{{lgType[0]}}\">{{lgType[1]}}</mat-option>\n                                                            </mat-select>\n                                                          </mat-form-field>\n                                                    </td>\n                                                    <td>\n                                                        <mat-form-field appearance=\"outline\">\n                                                            <mat-select formControlName=\"activity_id\" [(ngModel)]=\"activity_id\">\n                                                                <mat-option value=\"\">Please select</mat-option>\n\n                                                                <ng-container *ngFor=\"let activity of activityList\">\n                                                                    <mat-option  value=\"{{activity.activity_id}}\" *ngIf=\"activity.activity_id != '1'\" >{{activity.activity_nm}}</mat-option>\n                                                                </ng-container>\n                                                            </mat-select>\n                                                          </mat-form-field>\n                                                    </td>\n                                                    <td>\n                                                        <div class=\"plus-img-wrap\"><a href=\"javascript:void(0)\" (click)=\"addStep(i,last)\"><img src=\"../../assets/images/plus1.png\" alt=\"image\"></a></div>\n                                                    </td>\n                                                </tr>\n                                            </ng-container>\n                                            </tbody>\n                                        </table>\n                                        <!--<button mat-raised-button [disabled]=\"workflowForm.invalid\" type=\"submit\" (click)=\"saveworkflow()\" class=\"sub-margin\">Save</button>-->\n                                        <button mat-raised-button [disabled]=\"(workflowForm.invalid || isworkflowdisable || isnormaluser)\" type=\"submit\" (click)=\"saveworkflow()\" class=\"sub-margin\">Save</button>\n                                    </div>\n                                </div>\n            \n                            </div>\n                        </div>\n                    </div>\n                  \n                    </form>\n                    <p>Form Data:  {{workflowForm.value | json}}</p>\n                    <p>Is Valid: {{workflowForm.valid}}</p>\n                                                                                    </div>\n            \n                                                                                </div>\n                                                                            </div>\n                                                                        </div>\n                                                                        <!--/-->\n                                                                        <div class=\"kt-footer__copyright mt-20\">\n                                                                            2019&nbsp;©&nbsp;Wthaq\n                                                                        </div>\n                                                                    </div>\n                                                                </div>\n                                                            </form>\n            \n                                                        </div>\n                                                    </div>\n                                                </div>\n            \n                                            </div>\n                                        </div>\n                                    </div>\n                                </section>\n                            </div>\n                        </div>\n                    </div>\n            \n                    <!--Middle Content Here-->\n                </div>\n            </div>\n                        <!--===========================\n                                    End Content\n                                    ============================-->\n                        <!--/Content-->\n                        <script src=\"js/plugins.bundle.js\" type=\"text/javascript\"></script>\n                        <!-- end::Body -->\n                        ");

/***/ }),

/***/ "./node_modules/raw-loader/dist/cjs.js!./src/app/govpendingtasks/govpendingtasks.component.html":
/*!******************************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/govpendingtasks/govpendingtasks.component.html ***!
  \******************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (" \n \n          <!--===========================\n                        Start Content\n                        ============================-->\n                        <div class=\"pt-0 kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor kt-margin-top-50\">\n                          <div class=\"kt-container\">\n                        <!--New Design Here-->\n                        <div class=\"row\">\n                          <app-sidemenu></app-sidemenu>\n                          <!--<div class=\"col-12 col-sm-3 col-md-3 col-lg-3 left-panel-menu-wrap w-20 fixed-wrap\">\n                            \n                            <ul class=\"vertical-menu\">\n                              <li *ngIf=\"roleId == 3\"><a routerLink=\"/adminDashboard\"><span class=\"db-icon\"></span>{{'HOME.Dashboard' | translate}}</a></li>\n          \n                              <li *ngIf=\"roleId == 2\"><a routerLink=\"/govDashboard\"><span class=\"db-icon\"></span>{{'HOME.Dashboard' | translate}}</a></li>\n                              \n                              <li *ngIf=\"roleId == 1\"><a routerLink=\"/dashboard\"><span class=\"db-icon\"></span>{{'HOME.Dashboard' | translate}}</a></li>\n          \n                              <li *ngIf=\"roleId == 1\"><a routerLink=\"/requestLgIssuance\"><span class=\"lg-icon\"></span>{{'HOME.LG_issuance' | translate}}</a></li>\n                              <li *ngIf=\"roleId == 3\"><a routerLink=\"/pendingtasks\" class=\"active\"><span class=\"lg-icon\"></span>{{'HOME.Pending_Tasks' | translate}}</a></li>\n                              <li *ngIf=\"roleId == 1\"><a routerLink=\"/privatependingtasks\"><span class=\"lg-icon\"></span>{{'HOME.Pending_Tasks' | translate}}</a>\n                            </ul>\n                          </div>-->\n                          <div class=\"col-12 col-sm-9 col-md-9 col-lg-9 padding-null scroll-wrap\">\n                            <!-- <div class=\"white-area\">\n                              <div class=\"user-area\">\n                                <span class=\"user-img-wrap\"><img src=\"../../assets/images/user.png\" alt=\"image\"\n                                    class=\"user-img\"></span><span>Abdulla Ahmad</span>\n                              </div>\n                              <div class=\"clear\"></div>\n                            </div> -->\n                            \n                            <div class=\"grey-bg\">\n                              <section class=\"design-process-section\" id=\"process-tab\">\n                                <div>\n                                  <div>\n                                    <div>\n                                      <div class=\"tabadul-menu-list\">\n                                        <ul>\n                                          <li><button (click)=\"goToGovListTab()\"\n                                              [ngClass]=\"{'active': isGovClicked}\">{{'HOME.Physical_Verification_Government_Entity'|translate}}</button></li>\n                                          <!-- <li><a href=\"private-entity-lg-list.html\">LG List</a></li> -->\n                                          <li><button (click)=\"goToPrivateTab()\" [ngClass]=\"{'active': isPrivateClicked}\">{{'HOME.Physical_Verification_Private_Entity'|translate}}</button></li>\n          \n                                        </ul>\n                                      </div>\n                                      <!-- Tab panes -->\n                                      <div class=\"tab-content\">\n                                        <div role=\"tabpanel\" class=\"tab-pane active\" id=\"discover\">\n                                          <div class=\"design-process-content\">\n                                            <form>\n                                              <div class=\"row\" *ngIf=\"isOpenGovList\">\n                                                <div class=\"col-sm-12\">\n                                                  <div class=\"kt-portlet\">\n                                                    <div class=\"kt-portlet__head\">\n                                                      <div class=\"kt-portlet__head-label\">\n                                                        <h3 class=\"kt-portlet__head-title\">\n                                                          {{'HOME.Physical_Verification_Government_Entity'|translate}}\n                                                        </h3>\n                                                      </div>\n                                                    </div>\n                                                    \n                                                    <!--begin::Form-->\n                                                    <div class=\"kt-form kt-form--label-right\">\n                                                      <div class=\"kt-portlet__body\">\n                                                        <div class=\"container\">\n                                                          <div class=\"row\">\n                                                           <div class=\"col-md-12\">\n                                                              <div class=\"kt-portlet no-shadow\">\n                                                                <div class=\"new-blue-table1\">\n                                                                  <div class=\"table-responsive\">\n                                                                    <div *ngIf=\"this.translate.currentLang == 'en'\">\n                                                                      <div *ngIf=\"govLists.userObject?.length > 0; then thenBlockgov else elseBlockgov\"> </div>\n                                                                        <ng-template #thenBlockgov>\n                                                                      <table datatable [dtOptions]=\"dtOptions\" class=\"table table-bordered table-striped table-hover\">\n                                                                          <thead>\n                                                                                <tr>\n                                                                                  <th class=\"table-col-7\">#</th>\n                                                                                  <th class=\"\">{{'HOME.Entity_Name'|translate}}</th>\n                                                                                  <th class=\"\">{{'HOME.Name'|translate}}</th>\n                                                                                  <th class=\"\">{{'HOME.Address'|translate}}</th>\n                                                                                  <th class=\"\">{{'HOME.Mobile_number'|translate}}</th>\n                                                                                  <th class=\"\">{{'HOME.Email'|translate}}</th>\n                                                                                  <th class=\"\">UID</th>\n                                                                                  <th class=\"\">{{'HOME.National_identification_number'|translate}}</th>\n                                                                                  <th class=\"\">{{'HOME.View_Details'|translate}}</th>\n                                                                                </tr>\n                                                                          </thead>\n                                                                          <tbody>\n                                                                          <tr *ngFor=\"let govList of govLists.userObject; let i = index \" (click)=\"GovRowSelected(govList)\">\n                                                                              <td>{{i+1}}</td>\n                                                                              <td>{{govList.beneficiary_name}}</td>\n                                                                              <td>{{govList.rep_name}}</td>\n                                                                              <td>{{govList.address}}</td>\n                                                                              <td>{{govList.rep_mobile_no}}</td>\n                                                                              <td>{{govList.rep_email}}</td>\n                                                                              <td>{{govList.beneficiary_UID}}</td>\n                                                                              <td>{{govList.national_id}}</td>\n                                                                              <td>\n                                                                                <button type=\"button\" class=\"btn btn-success vw-details\" (click)=\"GovRowSelected(govList)\">{{'HOME.View' | translate}}</button>\n                                                                              </td>\n                                                                          </tr>\n                                                                          </tbody>\n                                                                        </table>\n                                                                      </ng-template>\n                                                                      <ng-template #elseBlockgov>\n                                                                        <table datatable [dtOptions]=\"dtOptions\" class=\"table table-bordered table-striped table-hover\">\n                                                                            <thead>\n                                                                                  <tr>\n                                                                                    <th class=\"table-col-7\">#</th>\n                                                                                    <th class=\"\">{{'HOME.Entity_Name'|translate}}</th>\n                                                                                    <th class=\"\">{{'HOME.Name'|translate}}</th>\n                                                                                    <th class=\"\">{{'HOME.Address'|translate}}</th>\n                                                                                    <th class=\"\">{{'HOME.Mobile_number'|translate}}</th>\n                                                                                    <th class=\"\">{{'HOME.Email'|translate}}</th>\n                                                                                    <th class=\"\">UID</th>\n                                                                                    <th class=\"\">{{'HOME.National_identification_number'|translate}}</th>\n                                                                                    <th class=\"\">{{'HOME.View_Details'|translate}}</th>\n                                                                                  </tr>\n                                                                                  \n                                                                            </thead>\n                                                                            <tbody>\n                                                                            <tr *ngFor=\"let govList of govLists.userObject; let i = index \" (click)=\"GovRowSelected(govList)\">\n                                                                                <td>{{i+1}}</td>\n                                                                                <td>{{govList.beneficiary_name}}</td>\n                                                                                <td>{{govList.rep_name}}</td>\n                                                                                <td>{{govList.address}}</td>\n                                                                                <td>{{govList.rep_mobile_no}}</td>\n                                                                                <td>{{govList.rep_email}}</td>\n                                                                                <td>{{govList.beneficiary_UID}}</td>\n                                                                                <td>{{govList.national_id}}</td>\n                                                                                <td>\n                                                                                  <button type=\"button\" class=\"btn btn-success vw-details\" (click)=\"GovRowSelected(govList)\">{{'HOME.View' | translate}}</button>\n                                                                                </td>\n                                                                            </tr>\n                                                                            </tbody>\n                                                                          </table>\n                                                                        </ng-template>\n                                                                      </div>\n                                                                      <div *ngIf=\"this.translate.currentLang == 'ar'\">\n                                                                        <div *ngIf=\"govLists.userObject?.length > 0; then thenBlockgov else elseBlockgov\"> </div>\n                                                                          <ng-template #thenBlockgov>\n                                                                        <table datatable [dtOptions]=\"dtOptionsAR\" class=\"table table-bordered table-striped table-hover\">\n                                                                            <thead>\n                                                                                  <tr>\n                                                                                    <th class=\"table-col-7\">#</th>\n                                                                                    <th class=\"\">{{'HOME.Entity_Name'|translate}}</th>\n                                                                                    <th class=\"\">{{'HOME.Name'|translate}}</th>\n                                                                                    <th class=\"\">{{'HOME.Address'|translate}}</th>\n                                                                                    <th class=\"\">{{'HOME.Mobile_number'|translate}}</th>\n                                                                                    <th class=\"\">{{'HOME.Email'|translate}}</th>\n                                                                                    <th class=\"\">UID</th>\n                                                                                    <th class=\"\">{{'HOME.National_identification_number'|translate}}</th>\n                                                                                    <th class=\"\">{{'HOME.View_Details'|translate}}</th>\n                                                                                  </tr>\n                                                                                  \n                                                                            </thead>\n                                                                            <tbody>\n                                                                            <tr *ngFor=\"let govList of govLists.userObject; let i = index \" (click)=\"GovRowSelected(govList)\">\n                                                                                <td>{{i+1}}</td>\n                                                                                <td>{{govList.beneficiary_name}}</td>\n                                                                                <td>{{govList.rep_name}}</td>\n                                                                                <td>{{govList.address}}</td>\n                                                                                <td>{{govList.rep_mobile_no}}</td>\n                                                                                <td>{{govList.rep_email}}</td>\n                                                                                <td>{{govList.beneficiary_UID}}</td>\n                                                                                <td>{{govList.national_id}}</td>\n                                                                                <td>\n                                                                                  <button type=\"button\" class=\"btn btn-success vw-details\" (click)=\"GovRowSelected(govList)\">{{'HOME.View' | translate}}</button>\n                                                                                </td>\n                                                                            </tr>\n                                                                            </tbody>\n                                                                          </table>\n                                                                        </ng-template>\n                                                                        <ng-template #elseBlockgov>\n                                                                          <table datatable [dtOptions]=\"dtOptionsAR\" class=\"table table-bordered table-striped table-hover\">\n                                                                              <thead>\n                                                                                    <tr>\n                                                                                      <th class=\"table-col-7\">#</th>\n                                                                                      <th class=\"\">{{'HOME.Entity_Name'|translate}}</th>\n                                                                                      <th class=\"\">{{'HOME.Name'|translate}}</th>\n                                                                                      <th class=\"\">{{'HOME.Address'|translate}}</th>\n                                                                                      <th class=\"\">{{'HOME.Mobile_number'|translate}}</th>\n                                                                                      <th class=\"\">{{'HOME.Email'|translate}}</th>\n                                                                                      <th class=\"\">UID</th>\n                                                                                      <th class=\"\">{{'HOME.National_identification_number'|translate}}</th>\n                                                                                      <th class=\"\">{{'HOME.View_Details'|translate}}</th>\n                                                                                    </tr>\n                                                                                    \n                                                                              </thead>\n                                                                              <tbody>\n                                                                              <tr *ngFor=\"let govList of govLists.userObject; let i = index \" (click)=\"GovRowSelected(govList)\">\n                                                                                  <td>{{i+1}}</td>\n                                                                                  <td>{{govList.beneficiary_name}}</td>\n                                                                                  <td>{{govList.rep_name}}</td>\n                                                                                  <td>{{govList.address}}</td>\n                                                                                  <td>{{govList.rep_mobile_no}}</td>\n                                                                                  <td>{{govList.rep_email}}</td>\n                                                                                  <td>{{govList.beneficiary_UID}}</td>\n                                                                                  <td>{{govList.national_id}}</td>\n                                                                                  <td>\n                                                                                    <button type=\"button\" class=\"btn btn-success vw-details\" (click)=\"GovRowSelected(govList)\">{{'HOME.View'|translate}}</button>\n                                                                                  </td>\n                                                                              </tr>\n                                                                              </tbody>\n                                                                            </table>\n                                                                          </ng-template>\n                                                                        </div>\n                                                                  </div>\n                                                                </div>\n                                                              </div>\n                                                            </div>\n                                                          </div>\n                                                        </div>\n                                                      </div>\n                                                    </div>\n                                                  </div>\n                                                </div>\n                                              </div>\n          \n                                              <div class=\"row\" *ngIf=\"isOpenPrivateList\">\n                                                <div class=\"col-sm-12\">\n                                                  <div class=\"kt-portlet\">\n                                                    <div class=\"kt-portlet__head\">\n                                                      <div class=\"kt-portlet__head-label\">\n                                                        <h3 class=\"kt-portlet__head-title\">\n                                                          {{'HOME.Physical_Verification_Private_Entity'|translate}} \n                                                        </h3>\n                                                      </div>\n                                                    </div>\n                                                    <!--begin::Form-->\n                                                    <div class=\"kt-form kt-form--label-right\">\n                                                      <div class=\"kt-portlet__body\">\n                                                        <div class=\"container\">\n                                                          <div class=\"row\">\n                                                           <div class=\"col-md-12\">\n                                                              <div class=\"kt-portlet no-shadow\">\n                                                                <div class=\"new-blue-table1\">\n                                                                  <div class=\"table-responsive\">\n                                                                    \n          \n                                                                    <div *ngIf=\"this.translate.currentLang == 'en'\">\n                                                                      <div *ngIf=\"privateLists.userObject?.length > 0; then thenBlockprivate else elseBlockprivate\"> </div>\n                                                                      <ng-template #thenBlockprivate>\n                                                                      <table datatable [dtOptions]=\"dtOptions\" class=\"table table-bordered table-striped table-hover\">\n                                                                          <thead>\n                                                                                <tr>\n                                                                                  <th class=\"table-col-7\">#</th>\n                                                                                  <th class=\"\">{{'HOME.Entity_Name'|translate}}</th>\n                                                                                  <th class=\"\">{{'HOME.Name'|translate}}</th>\n                                                                                  <th class=\"\">{{'HOME.Address'|translate}}</th>\n                                                                                  <th class=\"\">{{'HOME.Mobile_number'|translate}}</th>\n                                                                                  <th class=\"\">{{'HOME.Email'|translate}}</th>\n                                                                                  <th class=\"\">{{'HOME.CRN'|translate}}</th>\n                                                                                  <th class=\"\">{{'HOME.National_identification_number'|translate}}</th>\n                                                                                  <th class=\"\">{{'HOME.View_Details'|translate}}</th>\n                                                                                </tr>\n                                                                          </thead>\n                                                                          <tbody>\n                                                                          <tr *ngFor=\"let privateList of privateLists.userObject; let i = index \" (click)=\"PrivateRowSelected(privateList)\">\n                                                                              <td>{{i+1}}</td>\n                                                                              <td>{{privateList.entity_name}}</td>\n                                                                              <td>{{privateList.rep_name}}</td>\n                                                                              <td>{{privateList.address}}</td>\n                                                                              <td>{{privateList.rep_mobile_no}}</td>\n                                                                              <td>{{privateList.rep_email}}</td>\n                                                                              <td>{{privateList.cr_no}}</td>\n                                                                              <td>{{privateList.national_id}}</td>\n                                                                              <td><button type=\"button\" class=\"btn btn-success vw-details\" (click)=\"PrivateRowSelected(privateList)\">{{'HOME.View'|translate}}</button>\n                                                                              </td>\n                                                                          </tr>\n                                                                          </tbody>\n                                                                        </table>\n                                                                      </ng-template>\n                                                                      <ng-template #elseBlockprivate>\n                                                                        <table datatable [dtOptions]=\"dtOptions\" class=\"table table-bordered table-striped table-hover\">\n                                                                            <thead>\n                                                                                  <tr>\n                                                                                    <th class=\"table-col-7\">#</th>\n                                                                                    <th class=\"\">{{'HOME.Entity_Name'|translate}}</th>\n                                                                                    <th class=\"\">{{'HOME.Name'|translate}}</th>\n                                                                                    <th class=\"\">{{'HOME.Address'|translate}}</th>\n                                                                                    <th class=\"\">{{'HOME.Mobile_number'|translate}}</th>\n                                                                                    <th class=\"\">{{'HOME.Email'|translate}}</th>\n                                                                                    <th class=\"\">{{'HOME.CRN'|translate}}</th>\n                                                                                    <th class=\"\">{{'HOME.National_identification_number'|translate}}</th>\n                                                                                    <th class=\"\">{{'HOME.View_Details'|translate}}</th>\n                                                                                  </tr>\n                                                                            </thead>\n                                                                            <tbody>\n                                                                            <tr *ngFor=\"let privateList of privateLists.userObject; let i = index \" (click)=\"PrivateRowSelected(privateList)\">\n                                                                                <td>{{i+1}}</td>\n                                                                                <td>{{privateList.entity_name}}</td>\n                                                                                <td>{{privateList.rep_name}}</td>\n                                                                                <td>{{privateList.address}}</td>\n                                                                                <td>{{privateList.rep_mobile_no}}</td>\n                                                                                <td>{{privateList.rep_email}}</td>\n                                                                                <td>{{privateList.cr_no}}</td>\n                                                                                <td>{{privateList.national_id}}</td>\n                                                                                <td><button type=\"button\" class=\"btn btn-success vw-details\" (click)=\"PrivateRowSelected(privateList)\">{{'HOME.View'|translate}}</button>\n                                                                                </td>\n                                                                            </tr>\n                                                                            </tbody>\n                                                                          </table>\n                                                                        </ng-template>\n                                                                      </div>\n          \n                                                                      <div *ngIf=\"this.translate.currentLang == 'ar'\">\n                                                                        <div *ngIf=\"privateLists.userObject?.length > 0; then thenBlockprivate else elseBlockprivate\"> </div>\n                                                                        <ng-template #thenBlockprivate>\n                                                                        <table datatable [dtOptions]=\"dtOptionsAR\" class=\"table table-bordered table-striped table-hover\">\n                                                                            <thead>\n                                                                                  <tr>\n                                                                                    <th class=\"table-col-7\">#</th>\n                                                                                    <th class=\"\">{{'HOME.Entity_Name'|translate}}</th>\n                                                                                    <th class=\"\">{{'HOME.Name'|translate}}</th>\n                                                                                    <th class=\"\">{{'HOME.Address'|translate}}</th>\n                                                                                    <th class=\"\">{{'HOME.Mobile_number'|translate}}</th>\n                                                                                    <th class=\"\">{{'HOME.Email'|translate}}</th>\n                                                                                    <th class=\"\">{{'HOME.CRN'|translate}}</th>\n                                                                                    <th class=\"\">{{'HOME.National_identification_number'|translate}}</th>\n                                                                                    <th class=\"\">{{'HOME.View_Details'|translate}}</th>\n                                                                                  </tr>\n                                                                            </thead>\n                                                                            <tbody>\n                                                                            <tr *ngFor=\"let privateList of privateLists.userObject; let i = index \" (click)=\"PrivateRowSelected(privateList)\">\n                                                                                <td>{{i+1}}</td>\n                                                                                <td>{{privateList.entity_name}}</td>\n                                                                                <td>{{privateList.rep_name}}</td>\n                                                                                <td>{{privateList.address}}</td>\n                                                                                <td>{{privateList.rep_mobile_no}}</td>\n                                                                                <td>{{privateList.rep_email}}</td>\n                                                                                <td>{{privateList.cr_no}}</td>\n                                                                                <td>{{privateList.national_id}}</td>\n                                                                                <td><button type=\"button\" class=\"btn btn-success vw-details\" (click)=\"PrivateRowSelected(privateList)\">{{'HOME.View'|translate}}</button>\n                                                                                </td>\n                                                                            </tr>\n                                                                            </tbody>\n                                                                          </table>\n                                                                        </ng-template>\n                                                                        <ng-template #elseBlockprivate>\n                                                                          <table datatable [dtOptions]=\"dtOptionsAR\" class=\"table table-bordered table-striped table-hover\">\n                                                                              <thead>\n                                                                                    <tr>\n                                                                                      <th class=\"table-col-7\">#</th>\n                                                                                      <th class=\"\">{{'HOME.Entity_Name'|translate}}</th>\n                                                                                    <th class=\"\">{{'HOME.Name'|translate}}</th>\n                                                                                    <th class=\"\">{{'HOME.Address'|translate}}</th>\n                                                                                    <th class=\"\">{{'HOME.Mobile_number'|translate}}</th>\n                                                                                    <th class=\"\">{{'HOME.Email'|translate}}</th>\n                                                                                    <th class=\"\">{{'HOME.CRN'|translate}}</th>\n                                                                                    <th class=\"\">{{'HOME.National_identification_number'|translate}}</th>\n                                                                                    <th class=\"\">{{'HOME.View_Details'|translate}}</th>\n                                                                                    </tr>\n                                                                              </thead>\n                                                                              <tbody>\n                                                                              <tr *ngFor=\"let privateList of privateLists.userObject; let i = index \" (click)=\"PrivateRowSelected(privateList)\">\n                                                                                  <td>{{i+1}}</td>\n                                                                                  <td>{{privateList.entity_name}}</td>\n                                                                                  <td>{{privateList.rep_name}}</td>\n                                                                                  <td>{{privateList.address}}</td>\n                                                                                  <td>{{privateList.rep_mobile_no}}</td>\n                                                                                  <td>{{privateList.rep_email}}</td>\n                                                                                  <td>{{privateList.cr_no}}</td>\n                                                                                  <td>{{privateList.national_id}}</td>\n                                                                                  <td><button type=\"button\" class=\"btn btn-success vw-details\" (click)=\"PrivateRowSelected(privateList)\">{{'HOME.View'|translate}}</button>\n                                                                                  </td>\n                                                                              </tr>\n                                                                              </tbody>\n                                                                            </table>\n                                                                          </ng-template>\n                                                                        </div>\n          \n          \n                                                                      \n                                                                  </div>\n          \n                                                                </div>\n          \n                                                              </div>\n                                                            </div>\n          \n                                                          </div>\n                                                        </div>\n          \n                                                      </div>\n                                                    </div>\n                                                  </div>\n                                                </div>\n                                              </div>\n                                            </form>\n          \n                                          </div>\n                                        </div>\n                                      </div>\n          \n                                    </div>\n                                  </div>\n                                </div>\n                              </section>\n                            </div>\n                            \n                          </div>\n                        </div>\n                        <!--New Design Here-->\n                      </div>\n                    </div>\n                    <!--===========================\n                                  End Content\n                                  ============================-->\n                 \n            <!--begin::Global Theme Bundle(used by all pages) -->\n            <script src=\"../../assets/js/plugins.bundle.js\" type=\"text/javascript\"></script>\n            <!-- end::Body -->\n          \n          ");

/***/ }),

/***/ "./node_modules/raw-loader/dist/cjs.js!./src/app/header/header.component.html":
/*!************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/header/header.component.html ***!
  \************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<div *ngIf=\"route=='/dashboard' || route=='/privatependingtasks' || route=='/govDashboard' ||route=='/requestLgIssuance' || route=='/pendingtasks' ||\n            route=='/requestLgIssuanceApproval' || route=='/requestLgIssuanceGovApproval' || route=='/governmentEntityRegistrationView' || \n            route=='/requestLgIssuance' || route=='/privateLgManagement' || route=='/adminDashboard' || route=='/privateEntityReg' || route=='/privateEntityReg2' ||\n            route=='/privateEntityReg3' || route=='/privateEntityRegFinal' || route=='/governmentEntityReg' || route=='/governmentEntityReg2' \n            || route=='/governmentEntityReg3'|| route=='/govLgManagement' || route=='requestLgIssuancePayment'  || route=='/govLgDetails' || route=='/privateLgDetails' || \n            route=='/privateentityreginfo'|| route=='/privateaccountmanagement' || route=='/governmentpendingtasks' || routeParms=='editUserDetails' || route=='/addnewworkflow' || route=='/governmentaccountmanagement' || route=='/governmentworkflow' || route=='/privateAmendmentList' || route=='/privateConfiscateList' || route=='/privateReleaseList' || route=='/governmentAmendmentList' || route=='/governmentConfiscateList' || route=='/governmentReleaseList' || route=='/goveditUserDetails' \">\n    <!--header-->\n    <div class=\"kt-container fixed-top header-top-block\">\n        <div class=\"row\">\n            <div class=\"col-5 col-sm-3 col-md-3 header-pad-left\">\n                    <div class=\"logo-wrap\">\n                         <!-- <a routerLink=\"/home\"><img src=\"../../assets/images/logo.svg\" alt=\"logo\"></a> -->\n                         <a *ngIf=\"roleId == 1\" routerLink=\"/dashboard\" (click) = \"clearData()\"><img src=\"../../assets/images/logo.svg\" alt=\"logo\"></a>\n                         <a *ngIf=\"roleId == 2\" routerLink=\"/govDashboard\" (click) = \"clearData()\"><img src=\"../../assets/images/logo.svg\" alt=\"logo\"></a>\n                         <a *ngIf=\"roleId == 3\" routerLink=\"/adminDashboard\" (click) = \"clearData()\"><img src=\"../../assets/images/logo.svg\" alt=\"logo\"></a>\n                    </div>\n                </div>\n                <div class=\"col-7 col-sm-9 col-md-9\">\n                    <div class=\"white-area\">\n                      <div class=\"language-option\"><a href=\"javascript:void(0)\" (click)=\"changelang()\" (click)=\"English=!English\">{{English?'عربـي':'English'}}</a></div>\n                       <div *ngIf=\"hideElement\">\n                        <div class=\"top-dropdown\">\n                          <div class=\"user-area top-dropbtn\">\n                            <span class=\"user-img-wrap\"><img src=\"../../assets/images/user.png\" alt=\"image\"\n                                class=\"user-img\"></span><span>{{userName}}\n                            </span>\n                          </div>\n                          <div class=\"top-dropdown-content\">\n                            <a href=\"javascript:;\">\n                              <span class=\"user-img-wrap\"><img src=\"../../assets/images/settings.png\" alt=\"image\"\n                                  class=\"user-img\"></span><span>{{'HOME.Account' |translate}}\n                              </span>\n                            </a>\n                            <button type=\"button\"  (click)=\"logout()\" class=\"dashboard-top-btn\">\n                              <span class=\"user-img-wrap\"><img src=\"../../assets/images/logout.png\" alt=\"image\"\n                                  class=\"user-img\"/>\n                                </span><span>{{'HOME.Logout' |translate}}\n                              </span>\n                              \n                            </button>\n                          </div>\n                        </div>\n\n                       </div> \n                      \n                       <!--Notification-->\n                    <div class=\"top-dropdown\">\n                      <div class=\"user-area top-dropbtn border-both\">\n                          <span class=\"user-img-wrap\" (click)=\"getNotification()\"><img src=\"../../assets/images/bell.png\" alt=\"image\" class=\"bell-img\"><span *ngIf=\"notificationCount > 0\" class=\"notification-no\">{{notificationCount}}</span></span>\n                      </div>\n                      <div *ngIf=\"notificationpopup\" class=\"top-dropdown-content\" style=\"display: block;\">\n                          <ul class=\"notification-list notification-wrap\">\n                              <li *ngFor=\"let notification of notificationList; let i = index\">\n                                <span class=\"notification-user-img\">{{notification.name}}</span>\n                                <a href=\"javascript:;\" [ngClass]=\"{'notificationRead': notification.is_read_flag == 'Y', 'notificationUnRead': notification.is_read_flag == 'N'}\" class=\"notification-user-txt\">\n                                      <p>Request Id: {{notification.request_id}}</p>\n                                      <p>{{notification.notification}}</p>\n                                      <p><i class=\"fa fa-clock-o\" aria-hidden=\"true\"></i> {{notification.notification_date}}</p>\n                                  </a>\n                                  <span class=\"clear\"></span>\n                              </li>\n                              <!--<li>\n                                   <span class=\"notification-user-img\">AB</span>\n                                    <a href=\"javascript:;\" class=\"notification-user-txt\">\n                                        <p>Heading Goes Here</p>\n                                        <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</p>\n                                        <p><i class=\"fa fa-clock-o\" aria-hidden=\"true\"></i> 11 hrs ago</p>\n                                    </a>\n                                    <span class=\"clear\"></span>\n                                </li>-->\n                        </ul>\n                          <!--<a href=\"javascript:;\" class=\"view-all-notification-btn\">View all notification</a>-->\n                      </div>\n                  </div>\n                  <!--/Notification-->\n\n                        <div class=\"clear\"></div>\n                      </div>\n                </div>\n        </div>\n    </div>\n    <!--header-->\n\n\n</div>\n\n \n   \n\n        \n                        <div *ngIf=\"route=='/home' \">\n                            \n\n                             <!--Starts Header-->\n    <header class=\"home-bg-header\" >\n        <nav class=\"navbar navbar-default navbar-expand-md\">\n            <div class=\"container-fluid\">\n                <div class=\"navbar-header\">\n                    <a data-toggle=\"collapse\" data-target=\"#bs-example-navbar-collapse-1\" aria-expanded=\"false\" class=\"navbar-toggle \">\n                    </a>\n                    <a routerLink=\"/home\" class=\"navbar-brand\"><img src=\"../../assets/images/wethaq.png\" alt=\"\" class=\"img-header\"></a>\n                    <a class=\"navbar-brand navbar-brand2\"><img src=\"../../assets/images/2030.svg\" alt=\"\" class=\"img-header\"></a>\n                </div>\n                <div class=\" hide-me-desktop vertical_line\"></div> <a class=\"  hide-me-desktop font-bold\">عربـي </a>\n                <div id=\"bs-example-navbar-collapse-1\" class=\"collapse navbar-collapse\">\n                    <div class=\"header-menu-left\">\n                        <ul class=\"nav nav-tabs \">\n                          <li><a routerLink=\"/login\">{{'HOME.Sign_In' |translate}}</a></li>\n                          <li><a routerLink=\"/privateEntityReg\">{{'HOME.Sign_Up' |translate}}</a></li>\n                          <li><a routerLink=\"/help\">{{'HOME.Help' |translate}}</a></li>\n                            <li class=\" hide-me-mobile vertical_line\"></li>\n                            <li><a class=\"font_bold\" href=\"javascript:void(0)\" (click)=\"changelang()\" (click)=\"English=!English\">{{English?'عربـي':'English'}}</a></li>\n                        </ul>\n                    </div>\n                    <div class=\"clearfix\"></div>\n                </div>\n            </div>\n        </nav>\n    </header>\n    <!--/Ends Header-->\n                        </div>\n\n\n\n\n\n                        <div *ngIf=\"route=='/requestLgIssuancePayment' \">\n                            \n                          <div class=\"kt-container fixed-top header-top-block\">\n                            <div class=\"row\">\n                                <div class=\"col-5 col-sm-3 col-md-3 header-pad-left\">\n                                        <div class=\"logo-wrap\">\n                                             <a routerLink=\"/home\"><img src=\"../../assets/images/logo.svg\" alt=\"logo\"></a>\n                                        </div>\n                                    </div>\n                                    <div *ngIf=\"hideElement\" class=\"col-7 col-sm-9 col-md-9\">\n                                        <div class=\"white-area\">\n                                          <div class=\"language-option\">English</div>\n\n                                            <div class=\"top-dropdown\">\n                                              <div class=\"user-area top-dropbtn\">\n                                                <span class=\"user-img-wrap\"><img src=\"../../assets/images/user.png\" alt=\"image\"\n                                                    class=\"user-img\"></span><span>{{userName}}\n                                                </span>\n                                              </div>\n                                              <div class=\"top-dropdown-content\">\n                                                <a href=\"javascript:;\">\n                                                  <span class=\"user-img-wrap\"><img src=\"../../assets/images/settings.png\" alt=\"image\"\n                                                      class=\"user-img\"></span><span>Account\n                                                  </span>\n                                                </a>\n                                                <button type=\"button\"  (click)=\"logout()\" class=\"dashboard-top-btn\">\n                                                  <span class=\"user-img-wrap\"><img src=\"../../assets/images/logout.png\" alt=\"image\"\n                                                      class=\"user-img\"/>\n                                                    </span><span>Logout\n                                                  </span>\n                                                  \n                                                </button>\n                                              </div>\n                                            </div>\n                                            <div class=\"clear\"></div>\n                                          </div>\n                                    </div>\n                            </div>\n                        </div>\n                     </div>\n          \n\n\n\n          \n\n        ");

/***/ }),

/***/ "./node_modules/raw-loader/dist/cjs.js!./src/app/help/help.component.html":
/*!********************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/help/help.component.html ***!
  \********************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<!DOCTYPE html>\n\n<html lang=\"en\">\n<!-- begin::Head -->\n\n<head>\n    <meta charset=\"utf-8\" />\n\n    <title>WETHAQ | Help Page</title>\n    <meta name=\"description\" content=\"Updates and statistics\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\n    <!--begin::Global Theme Styles(used by all pages) -->\n    <link href=\"../../assets/css/style.bundle.css\" rel=\"stylesheet\" type=\"text/css\">\n    <!--end::Global Theme Styles -->\n    <!--begin::Layout Skins(used by all pages) -->\n    <link href=\"../../assets/css/custom-style.css\" rel=\"stylesheet\" type=\"text/css\">\n    <!--end::Layout Skins -->\n</head>\n<!-- end::Head -->\n\n<!-- begin::Body -->\n\n<body>\n    <!--Starts Header-->\n    <header class=\"home-bg-header\">\n        <nav class=\"navbar navbar-default navbar-expand-md\">\n            <div class=\"container-fluid\">\n                <div class=\"navbar-header\">\n                    <a data-toggle=\"collapse\" data-target=\"#bs-example-navbar-collapse-1\" aria-expanded=\"false\" class=\"navbar-toggle \" href=\"javascript:;\"></a>\n                    <a routerLink=\"/\" class=\"navbar-brand\"><img src=\"../../assets/images/wethaq.png\" alt=\"\" class=\"img-header\"></a>\n                    <a class=\"navbar-brand navbar-brand2\"><img src=\"../../assets/images/2030.svg\" alt=\"\" class=\"img-header\"></a>\n                </div>\n                <div class=\" hide-me-desktop vertical_line\"></div> <a class=\"  hide-me-desktop font-bold\">عربـي </a>\n                <div id=\"bs-example-navbar-collapse-1\" class=\"collapse navbar-collapse\">\n                    <div class=\"header-menu-left\">\n                        <ul class=\"nav nav-tabs \">\n                            <li><a routerLink=\"/login\">{{'HOME.Sign_In' |translate }}</a></li>\n                            <li><a routerLink=\"/privateEntityReg\">{{'HOME.Sign_Up' |translate }}</a></li>\n                            <li><a routerLink=\"/help\">{{'HOME.Help' |translate }}</a></li>\n                            <!-- <li><a href=\"#\">Sign In</a></li>\n                            <li><a href=\"#\">Sign Up</a></li>\n                            <li class=\"active\"><a href=\"help.html\">Help</a></li> -->\n                            <li class=\" hide-me-mobile vertical_line\"></li>\n                            <li><a class=\"font_bold\" href=\"#\">عربـي </a></li>\n                        </ul>\n                    </div>\n                </div>\n            </div>\n        </nav>\n    </header>\n    <!--/Ends Header-->\n    <!--Starts Content area-->\n    <div class=\"bg-help-wrap\">\n        <div class=\"text-center\">\n            <div class=\"container\">\n                <div class=\"wethaq-header\">\n                    <div class=\"wethaq-header-title\">Frequently Asked Questions</div>\n                </div>\n                <div class=\"col padding-null\">\n                    <div class=\"help-accordion\">\n                        <input type=\"checkbox\" id=\"title1\" />\n                        <label for=\"title1\"><i class=\"wethaq-icon\"><img src=\"../../assets/images/substract.png\" alt=\"image\" class=\"sbstract-icon\"></i> The main beneficiaries of the services are:</label>\n\n                        <div class=\"content\">\n                            <p>\n                                <span class=\"content-txt\"><i class=\"wethaq2-icon\"> - Governmental Sector</i></span>\n                                <span class=\"content-txt\"><i class=\"wethaq2-icon\"> - Private Sector</i></span>\n                                <span class=\"content-txt\"><i class=\"wethaq2-icon\"> - Banks working in the kingdom </i></span>\n\n                            </p>\n                        </div>\n\n                        <input type=\"checkbox\" id=\"title2\" />\n                        <label for=\"title2\"><i class=\"wethaq-icon\"><img src=\"../../assets/images/substract.png\" alt=\"image\" class=\"sbstract-icon\"></i> What is the Guarantee Verification Service?</label>\n\n                        <div class=\"content\">\n                            <p><span class=\"content-txt line-34\">The Guarantee Verification Service allows you to match the paper’s security information with the information maintained by the bank issuing the guarantee.  And because your information security is our top priority, the result of the comparison will be either identical or not identical; without providing any additional information about the guarantee.</span></p>\n                        </div>\n\n                        <input type=\"checkbox\" id=\"title3\" />\n                        <label for=\"title3\"><i class=\"wethaq-icon\"><img src=\"../../assets/images/substract.png\" alt=\"image\" class=\"sbstract-icon\"></i> What is required to complete the process?</label>\n\n                        <div class=\"content\">\n                            <p><span class=\"content-txt\">To benefit from this service, all you need is:</span>\n                                <span class=\"content-txt\"> - The bank's guarantee reference number</span>\n                                <span class=\"content-txt\"> - The date of issue and expiration of the guarantee as in the paper guarantee</span>\n                                <span class=\"content-txt\"> - The date of issue and expiration of the guarantee as in the paper guarantee</span>\n                                <span class=\"content-txt\"> - Issuing bank of the guarantee</span>\n                            </p>\n                        </div>\n\n                        <input type=\"checkbox\" id=\"title4\" />\n                        <label for=\"title4\"><i class=\"wethaq-icon\"><img src=\"../../assets/images/substract.png\" alt=\"image\" class=\"sbstract-icon\"></i> What are the services provided by WETHAQ Portal?</label>\n\n                        <div class=\"content\">\n                            <p><span class=\"content-txt\">1. Request for issuing the bank guarantee and the documentary credit</span>\n                                <span class=\"content-txt\">2. Extension and modification of the bank guarantee and the documentary credit</span>\n                                <span class=\"content-txt\">3. Confiscation of bank guarantee</span>\n                                <span class=\"content-txt\">4. Release of bank guarantee and partial release</span>\n                                <span class=\"content-txt\">5. Request to pay documentary credit</span>\n                            </p>\n                        </div>\n                        <input type=\"checkbox\" id=\"title5\" />\n                        <label for=\"title5\"><i class=\"wethaq-icon\"><img src=\"../../assets/images/substract.png\" alt=\"image\" class=\"sbstract-icon\"></i> Who is the developing company behind WETHAQ?</label>\n\n                        <div class=\"content\">\n                            <p><span class=\"content-txt line-34\">WETHAQ gate is developed by Tabadul, the Saudi Information Exchange Company, a leading national company for the development of trade and the import\\ export movement.</span>\n                            </p>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n    </div>\n\n    <!--/Ends Content area-->\n    <!--Starts partner area-->\n    <div class=\"partners-area\">\n        <p class=\"font-bold black-color\">Services Provided in Collaboration With</p>\n        <div class=\"div-icons\"><img src=\"../../assets/images/sana.png\" alt=\"SANA\"> <img src=\"../../assets/images/sabb.png\" alt=\"Bank sabb\"></div>\n    </div>\n    <!--/Ends partner area-->\n    <!--starts footer-->\n    <footer class=\"footer  d-flex\">\n        <div class=\"container\">\n            <div class=\"footer_float_right\">\n                <p class=\"footer-float-right footer-right-side\">All Rights Reserved </p> <img src=\"../../assets/images/tabadul-logo.svg\" alt=\"tabadul logo\" class=\"footer-float-right footer-right-side\"> <span class=\"footer-float-right footer-right-side\"> 2019 &copy; </span></div>\n            <div class=\"footer-float-left\"><a class=\"footer-float-left footer-left-side\" href=\"help.html\">Help</a></div>\n            <div class=\"clearfix\"></div>\n        </div>\n    </footer>\n    <!--/Ends footer-->\n    <!--begin::Global Theme Bundle(used by all pages) -->\n    <script src=\"../../assets/js/plugins.bundle.js\" type=\"text/javascript\"></script>\n\n    <!--end::Page Vendors -->\n</body>\n<!-- end::Body -->\n\n</html>\n");

/***/ }),

/***/ "./node_modules/raw-loader/dist/cjs.js!./src/app/landing/landing.component.html":
/*!**************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/landing/landing.component.html ***!
  \**************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("\n   \n    <div class=\"invisible-btn-wrap\">\n       <button class=\"invisible-btn\" routerLink=\"/governmentEntityReg\"></button>\n    </div>\n    <!--Starts middle area-->\n    <div class=\"home-bg\">\n        <div class=\"mid-btn-wrap\">\n            <div class=\"container\">\n                <div class=\"row\">\n                    <div class=\"col-md-12\">\n                        <button class=\" btn btn-primary button\">{{'HOME.Validate_The_Bond' | translate}}</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n    <!--/Ends middle area-->\n    <!--Starts partner area-->\n    <div class=\"partners-area\">\n        <p class=\"font-bold black-color\">{{'HOME.Services_Provided_Collaboration_With' | translate}}</p>\n        <div class=\"div-icons\"><img src=\"../../assets/images/sana.png\" alt=\"SANA\"> <img src=\"../../assets/images/sabb.png\" alt=\"Bank sabb\"></div>\n    </div>\n    <!--/Ends partner area-->\n    \n    <!--begin::Global Theme Bundle(used by all pages) -->\n    <script src=\"../../assets/js/plugins.bundle.js\" type=\"text/javascript\"></script>\n    <!--end::Page Vendors -->\n\n");

/***/ }),

/***/ "./node_modules/raw-loader/dist/cjs.js!./src/app/login-dialog-component/login-dialog-component.component.html":
/*!********************************************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/login-dialog-component/login-dialog-component.component.html ***!
  \********************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("\n\n\n<!-- <h2 mat-dialog-title>{{description}}</h2>\n\n<mat-dialog-content [formGroup]=\"form\">\n\n    <mat-form-field>\n        <input matInput\n                placeholder=\"Course Description\"\n               formControlName=\"description\">\n    </mat-form-field>\n\n\n</mat-dialog-content>\n\n<mat-dialog-actions>\n    <button class=\"mat-raised-button\"(click)=\"close()\">Close</button>\n    <button class=\"mat-raised-button mat-primary\"(click)=\"save()\">Save</button>\n</mat-dialog-actions>\n\n\n-->\n<div *ngIf=\"crnDetailsByNID?.length >0\" >\n\n<div class=\"login-modal\" id=\"myModal\">\n    <div class=\"modal-dialog modal-dialog-centered\">\n        <div class=\"modal-content\">\n\n            <!-- Modal Header -->\n            <div class=\"modal-header\">\n               <h4 class=\"modal-title\">{{'HOME.Choose_CR' | translate}}</h4>\n                  <button type=\"button\" class=\"close\"  (click)=\"warnlogout()\"><img src=\"../../assets/images/close.png\" alt=\"image\">\n\n                  </button>\n            </div>\n\n            <!-- Modal body -->\n            <div class=\"modal-body text-center\">\n                <div class=\"row\">\n                    <div class=\"col-md-12\">\n\n\n\n                            <div class=\"form-group margin-bottom-10\">\n                                <label for=\"user-id\" class=\"col-form-label full-width-label\">{{'HOME.Search_Commercial_Registration_Number' | translate}}</label>\n                                <div class=\"login-search-wrap margin-bottom-20\">\n                                    <div class=\"input-group search-wrap\">\n                                        <input type=\"text\" class=\"form-control\"  [(ngModel)]=\"searchText\" >\n                                        <!-- <span class=\"input-group-append bg-white border-left-0\">\n                                             <button class=\"input-group-text\" type=\"submit\">\n                                                <div class=\"srch-image-txt\">\n                                                   <img src=\"../../assets/images/magnifying-glass.png\" class=\"search-icon\" alt=\"search-icon\">{{'HOME.Search' | translate}}\n                                                </div>\n                                            </button>\n                                        </span> -->\n                                    </div>\n                                </div>\n\n                            </div>\n\n\n\n                        <div class=\"terms-scroller\">\n                            <div class=\"new-blue-table\">\n                                <div class=\"table-responsive\">\n                                    <table class=\"table table-bordered table-striped table-hover\">\n                                        <thead>\n                                            <tr>\n                                                <th>#</th>\n                                                <th>{{'HOME.Company_name' | translate}}</th>\n                                                <th>{{'HOME.CRN' | translate}}</th>\n                                                <th>{{'HOME.Authority' | translate}}</th>\n                                                <th>{{'HOME.Action' | translate}}</th>\n                                                \n\n                                            </tr>\n                                        </thead>\n                                        <tbody>\n\n                                            <tr *ngFor=\"let crnDetails of crnDetailsByNID | filter:searchText\">\n                                                <td>{{crnDetails[0]}}</td>\n                                                <td>{{crnDetails[1]}}</td>\n                                                <td>{{crnDetails[2]}}</td>\n                                                <td>{{crnDetails[3]}}</td>\n                                                <td><button  style=\"cursor:ponter\"    (click)=\"redirectByStatus(crnDetails[0],crnDetails[4],crnDetails[5])\" class=\"btn btn-success proced-btn\" >{{'HOME.Procecced' | translate}}</button></td>\n                                            </tr>\n\n\n                                        </tbody>\n                                    </table>\n                                </div>\n                            </div>\n\n\n                           <!-- <mat-dialog-actions>\n                                    <button class=\"mat-raised-button\"(click)=\"logout()\">Logout</button>\n                            </mat-dialog-actions>\n                        -->\n\n\n                        </div>\n\n\n\n   \n\n\n\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n</div>\n\n\n  <div *ngIf=\"crnDetailsByNIDpopup\" >\n        <label for=\"user-id\" class=\"col-form-label\">{{'HOME.CR_number_associated_with_you' |translate}}</label>\n        <button class=\"btn btn-primary button\" type=\"button\" (click)=\"logoutOnNoCRN()\">\n             {{'HOME.Logout' |translate}}\n          </button>\n        </div> ");

/***/ }),

/***/ "./node_modules/raw-loader/dist/cjs.js!./src/app/login/login.component.html":
/*!**********************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/login/login.component.html ***!
  \**********************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<!DOCTYPE html>\n\n<html lang=\"en\">\n<!-- begin::Head -->\n\n<head>\n  <meta charset=\"utf-8\" />\n\n  <title>WTHAQ | Login Page</title>\n  <meta name=\"description\" content=\"Updates and statistics\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\n <!--begin::Global Theme Styles(used by all pages) -->\n <link href=\"../../assets/css/style.bundle.css\" rel=\"stylesheet\" type=\"text/css\">\n <!--end::Global Theme Styles -->\n <!--begin::Layout Skins(used by all pages) -->\n <link href=\"../../assets/css/custom-style.css\" rel=\"stylesheet\" type=\"text/css\">\n <!--end::Layout Skins -->\n</head>\n<!-- end::Head -->\n\n<!-- begin::Body -->\n\n<body class=\"login-bg\" style=\"margin: 0;\">\n  <div class=\"container\">\n    <div class=\"row center-content\">\n      <div class=\"language-option-right\"><a href=\"javascript:void(0)\" (click)=\"changelang()\" (click)=\"English=!English\">{{English?'عربـي':'English'}}</a></div>\n\n      <div class=\"col-9 col-sm-9 col-md-6 col-lg-4 margin-top-7\">\n        <div class=\"login-wrap\">\n          <div class=\"kt-portlet mt-5\">\n            <form class=\"kt-form kt-form--label-right\" [formGroup]=\"submitLogin\">\n              <div class=\"kt-portlet__head\"><span class=\"login-title\">{{'HOME.login' | translate}}</span></div>\n              <div class=\"kt-portlet__body login-body-wrap\">\n                <div class=\"form-group row\">\n                  <div class=\"col-12\">\n                    <label for=\"user-id\" class=\"col-form-label\">{{'HOME.National_identification_Number' | translate}}</label>\n                    <input class=\"form-control\" type=\"text\" value=\"\" id=\"\" formControlName=\"userId\" maxlength=\"10\">\n                    <div class=\"validation-errors text-danger\">\n                        <div *ngFor=\"let validation of validation_messages.userId\">\n                          <div col-12 class=\"error-message\"\n                            *ngIf=\"submitLogin.get('userId').hasError(validation.type) && (submitLogin.get('userId').dirty || submitLogin.get('userId').touched)\">\n                            {{ validation.message }}\n                          </div>\n                        </div>\n                      </div>\n                  </div>\n                </div>\n                <div class=\"form-group row\">\n                  <div class=\"col-12\">\n                    <label for=\"password\" class=\"col-form-label\">{{'HOME.password' | translate}}</label>\n                    <div class=\"password-input-field\"  *ngIf=\"!togglePassView\">\n\n                      <input class=\"form-control\" type=\"password\" value=\"\" id=\"password-field\" formControlName=\"password\">\n\n                    </div>\n                    <div class=\"password-input-field\" *ngIf=\"togglePassView\">\n\n                        <input class=\"form-control\" type=\"text\" value=\"\" id=\"password-field\" formControlName=\"password\">\n\n                    </div>\n                    <div class=\"eye-image-wrap\">\n                      <img src=\"../../assets/images/view.png\" alt=\"image\" class=\"eye-image\" id=\"pass-status\"\n                      (click)=\"viewPassword()\">\n                    </div>\n                    <div class=\"validation-errors text-danger\">\n                        <div *ngFor=\"let validation of validation_messages.password\">\n                          <div col-12 class=\"error-message\"\n                            *ngIf=\"submitLogin.get('password').hasError(validation.type) && (submitLogin.get('password').dirty || submitLogin.get('password').touched)\">\n                            {{ validation.message }}\n                          </div>\n                        </div>\n                      </div>\n\n                  </div>\n                </div>\n                <div class=\"form-group row\">\n                  <div class=\"col-12\">\n                    <p class=\"margin-bottom-0\">{{'HOME.Dont_have_an_account' | translate}}</p><p><a routerLink=\"/privateEntityReg\" class=\"blue-text\" (click) = \"onClickPrivateEntityReg()\"> {{'HOME.Sign_Up_Private_Entity' | translate}}/</a><a routerLink=\"/governmentEntityReg\" class=\"blue-text\" (click) = \"onClickGovernmentEntityReg()\">{{'HOME.Government_Entity' |translate}}</a></p>\n                  </div>\n                </div>\n                <div class=\"kt-login__actions\">\n                  <div class=\"login-btn-wrap\">\n                    <button type=\"reset\" class=\"btn btn-gry pull-left\" (click)=\"resetForm()\">{{'HOME.cancel' | translate}}</button>\n\n                     <button type=\"submit\" class=\"btn btn-success pull-right\"\n                      (click)=\"onSubmit()\"><img src=\"../../assets/images/login.png\"\n                        alt=\"login-icon\" class=\"login-icon\">{{'HOME.login' | translate}}</button>\n\n\n\n\n                    <div class=\"clearfix\"></div>\n                  </div>\n                </div>\n                <div class=\"text-center pt-4\">\n                  <p><a routerLink=\"/forgotPassword\" class=\"blue-text pad-left-8\">{{'HOME.Forgot_password' | translate}}</a></p>\n                  \n                </div>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n <!--Modal-->\n\n<!--begin::Global Theme Bundle(used by all pages) -->\n<script src=\"js/plugins.bundle.js\" type=\"text/javascript\"></script>\n<!--end::Page Vendors -->\n<!--begin:;Show hide password-->\n<script>\n  function viewPassword() {\n      var passwordInput = document.getElementById('password-field');\n      var passStatus = document.getElementById('pass-status');\n\n      if (passwordInput.type == 'password') {\n          passwordInput.type = 'text';\n          passStatus.className = 'eye-image1';\n\n      } else {\n          passwordInput.type = 'password';\n          passStatus.className = 'eye-image';\n      }\n  }\n</script>\n<!--end:: Show hide password-->\n\n</body>\n<!-- end::Body -->\n\n</html>");

/***/ }),

/***/ "./node_modules/raw-loader/dist/cjs.js!./src/app/logout/logout.component.html":
/*!************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/logout/logout.component.html ***!
  \************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<p>logging you out! Please wait...</p>\n");

/***/ }),

/***/ "./node_modules/raw-loader/dist/cjs.js!./src/app/otp-dialog/otp-dialog.component.html":
/*!********************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/otp-dialog/otp-dialog.component.html ***!
  \********************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (" \n    \n    \n  \n\n \n  \n  \n\n<div class=\"login-modal\" id=\"myModal\">\n        <div class=\"modal-dialog modal-dialog-centered\">\n            <div class=\"modal-content\">\n\n                <!-- Modal Header -->\n                <div class=\"modal-header\">\n                    <h4 class=\"modal-title\">{{'HOME.OTP_Validation' |translate}}</h4>\n                </div>\n\n                <!-- Modal body -->\n                <div class=\"modal-body text-center\">\n                    <div class=\"row\">\n                        <div class=\"col-md-12\">\n                            <form  [formGroup]=\"submitOTPLogin\">\n                                <div class=\"form-group margin-bottom-20\">\n                                    <label for=\"otp\" class=\"col-form-label full-width-label\" >{{'HOME.Please_enter_OTP_sent' |translate}} {{userMobile}}</label>\n                                    <input class=\"form-control col-md-12\" type=\"text\" [(ngModel)]=\"typedOTP\"  id=\"\"  formControlName=\"userOTP\">\n                                </div>\n                                <div class=\"validation-errors text-danger\">\n                                    <div *ngFor=\"let validation of validation_messages.userOTP\">\n                                      <div col-12 class=\"error-message\"\n                                        *ngIf=\"submitOTPLogin.get('userOTP').hasError(validation.type) && (submitOTPLogin.get('userOTP').dirty || submitOTPLogin.get('userOTP').touched)\">\n                                        {{ validation.message }}\n                                      </div>\n                                    </div>\n                                  </div>\n                            </form>\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-12\">\n                            <div class=\"btn-wrap\">\n                                <button type=\"reset\" class=\"btn btn-gry btn-margin-5\"  (click)=\"onOTPLogout()\" >{{'HOME.Cancel' |translate}}</button>\n                                <button type=\"button\" class=\"btn btn-gry btn-margin-5\" (click)=\"onOTPResend()\" >{{'HOME.Resend_OTP' |translate}}</button>\n                                <button type=\"button\" class=\"btn btn-success btn-margin-5\" (click)=\"onOTPSubmit()\" >{{'HOME.submit' |translate}}</button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n");

/***/ }),

/***/ "./node_modules/raw-loader/dist/cjs.js!./src/app/private-account-management/private-account-management.component.html":
/*!****************************************************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/private-account-management/private-account-management.component.html ***!
  \****************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<div class=\"pt-0 kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor kt-margin-top-50 kt-content-padding\">\n    <div class=\"kt-container\">\n        <!--Middle Content Here-->\n\n        <div class=\"row\">\n            <app-sidemenu></app-sidemenu>\n            <!--<div class=\"col-12 col-sm-3 col-md-3 col-lg-3 left-panel-menu-wrap w-20 fixed-wrap\">\n                <div class=\"col-12 col-sm-3 col-md-3 col-lg-3 left-panel-menu-wrap w-20 fixed-wrap\">\n                    <ul class=\"vertical-menu\">\n                      <li *ngIf=\"roleId == 1\"><a routerLink=\"/dashboard\"><span class=\"db-icon\"></span>{{'HOME.Dashboard' | translate}}</a></li>\n                      <li *ngIf=\"roleId == 1\"><a routerLink=\"/privateLgManagement\"><span class=\"lg-icon\"></span>{{'HOME.LG_Management' | translate}}</a>\n                      <li *ngIf=\"roleId == 1\"><a routerLink=\"/requestLgIssuance\"><span class=\"lg-icon\"></span>{{'HOME.LG_issuance' | translate}}</a></li>\n                      <li *ngIf=\"roleId == 1\"><a routerLink=\"/privatependingtasks\"><span class=\"lg-icon\"></span>{{'HOME.Pending_Tasks' | translate}}</a>\n                      <li *ngIf=\"roleId == 1\"><a routerLink=\"/privateaccountmanagement\" class=\"active\"><span class=\"ta-icon\"></span>Account Management</a></li>\n                    </ul>\n                </div>\n            </div>-->\n            <div class=\"col-12 col-sm-9 col-md-9 col-lg-9 padding-null scroll-wrap\">\n\n                <div class=\"grey-bg\">\n                    <section class=\"design-process-section\" id=\"process-tab\">\n                        <div>\n                            <div>\n                                <div>\n                                    <div class=\"text-left1\">\n                                        <h3 class=\"kt-login__title pt-3 m-0 mb-30\">Accounts Management</h3>\n                                    </div>\n                                    <!-- Tab panes -->\n                                    <div class=\"tab-content\">\n                                        <div role=\"tabpanel\" class=\"tab-pane active\" id=\"discover\">\n                                            <div class=\"design-process-content\">\n                                                <form>\n                                                    <div class=\"row\">\n                                                        <div class=\"col-sm-12\">\n\n                                                            <div class=\"kt-portlet\">\n                                                                <div class=\"kt-portlet__head\">\n                                                                    <div class=\"kt-portlet__head-label\">\n                                                                        <h3 class=\"kt-portlet__head-title\">Active users</h3>\n                                                                    </div>\n                                                                </div>\n                                                                <div class=\"kt-form kt-form--label-right\">\n                                                                    <div class=\"kt-portlet__body\">\n                                                                        <div class=\"container\">\n                                                                            <div class=\"row\">\n                                                                                <div class=\"col-md-12\">\n                                                                                    <div class=\"credit-card-button-wrap\">\n                                                                                        <button type=\"button\" class=\"btn btn-success\" data-toggle=\"modal\" data-target=\"#myModal\" (click) = \"addnewuser()\">Add new user</button>\n                                                                                    </div>\n                                                                                    <div class=\"kt-portlet no-shadow\">\n                                                                                        <div class=\"new-blue-table1\">\n                                                                                            <div class=\"table-responsive\">\n                                                                                                <!-- <table datatable [dtOptions]=\"dtOptions\" class=\"table table-bordered table-striped table-hover\"> -->\n                                                                                                 <div >\n                                                                                                <div *ngIf=\"AciveUsers?.length > 0; then thenBlock else elseBlock\"> </div>\n                                                                                                 <ng-template #thenBlock>\n                                                                                                    <table datatable [dtOptions]=\"dtOptions\" class=\"table table-bordered table-striped table-hover\">\n                                                                                                        <thead>\n                                                                                                            <tr>\n                                                                                                                <th>#</th>\n                                                                                                                <th>Name</th>\n                                                                                                                <th>Mobile</th>\n                                                                                                                <th>Email</th>\n                                                                                                                <th>Status</th>\n                                                                                                                <th>Number of assigned banks</th>\n                                                                                                                <th>Actions</th>\n                                                                                                            </tr>\n                                                                                                        </thead>\n                                                                                                        <tbody>\n\n\n                                                                                                            <tr *ngFor=\"let AciveUser of AciveUsers; let i = index \">\n                                                                                                                <td>{{i+1}}</td>\n                                                                                                                <td>{{AciveUser.supplier_name}}</td>\n                                                                                                                <td>{{AciveUser.contact_info}}</td>\n                                                                                                                <td>{{AciveUser.email}}</td>\n                                                                                                                <td>{{AciveUser.status}}</td>\n                                                                                                                <td>{{AciveUser.noFoAssignedBank}}</td>\n                                                                                                                <td>\n                                                                                                                   <!-- <a href=\"javascript:void(0)\" class=\"blue-edit-btn\" routerLink=\"/editUserDetails/{{AciveUser.login_id}}/{{AciveUser.iban_no}}\" skipLocationChange=true>Edit</a> -->\n                                                                                                                   <a href=\"javascript:void(0)\" class=\"blue-edit-btn\" (click)=\"goLocationChange(AciveUser)\">Edit</a>\n                                                                                                                   <!-- <a href=\"javascript:void(0)\" class=\"blue-edit-btn\" (click)=\"goLocationChange(AciveUser)\">Edit</a> -->\n                                                                                                                   <!-- <a href=\"javascript:void(0)\" class=\"blue-edit-btn\" routerLink=\"/editUserDetails/{{AciveUser.login_id}}/Sts1200\" >Edit</a> -->\n                                                                                                                </td>\n                                                                                                            </tr>\n                                                                                                        </tbody>\n                                                                                                    </table>\n                                                                                                </ng-template>\n\n                                                                                                <ng-template #elseBlock>\n                                                                                                    <table datatable [dtOptions]=\"dtOptions\" class=\"table table-bordered table-striped table-hover\">\n                                                                                                        <thead>\n                                                                                                            <tr>\n                                                                                                                <th>#</th>\n                                                                                                                <th>Name</th>\n                                                                                                                <th>Mobile</th>\n                                                                                                                <th>Email</th>\n                                                                                                                <th>Status</th>\n                                                                                                                <th>Number of assigned banks</th>\n                                                                                                                <th>Actions</th>\n                                                                                                            </tr>\n                                                                                                        </thead>\n                                                                                                        <tbody>\n\n\n                                                                                                            <tr *ngFor=\"let AciveUser of AciveUsers; let i = index \">\n                                                                                                                <td>{{i+1}}</td>\n                                                                                                                <td>{{AciveUser.supplier_name}}</td>\n                                                                                                                <td>{{AciveUser.contact_info}}</td>\n                                                                                                                <td>{{AciveUser.email}}</td>\n                                                                                                                <td>{{AciveUser.status}}</td>\n                                                                                                                <td>{{AciveUser.noFoAssignedBank}}</td>\n                                                                                                                <td>\n                                                                                                                   <!-- <a href=\"javascript:void(0)\" class=\"blue-edit-btn\" routerLink=\"/editUserDetails/{{AciveUser.login_id}}/{{AciveUser.iban_no}}\" skipLocationChange=true>Edit</a> -->\n                                                                                                                   <a href=\"javascript:void(0)\" class=\"blue-edit-btn\" (click)=\"goLocationChange(AciveUser)\">Edit</a>\n                                                                                                                   <!-- <a href=\"javascript:void(0)\" class=\"blue-edit-btn\" (click)=\"goLocationChange(AciveUser)\">Edit</a> -->\n                                                                                                                   <!-- <a href=\"javascript:void(0)\" class=\"blue-edit-btn\" routerLink=\"/editUserDetails/{{AciveUser.login_id}}/Sts1200\" >Edit</a> -->\n                                                                                                                </td>\n                                                                                                            </tr>\n\n                                                                                                        </tbody>\n                                                                                                    </table>\n                                                                                                </ng-template>\n                                                                                            </div>\n                                                                                            </div>\n                                                                                        </div>\n\n                                                                                    </div>\n                                                                                </div>\n\n                                                                            </div>\n                                                                        </div>\n\n                                                                    </div>\n                                                                </div>\n                                                            </div>\n                                                            <!--/-->\n                                                            <div class=\"kt-portlet\">\n                                                                <div class=\"kt-portlet__head\">\n                                                                    <div class=\"kt-portlet__head-label\">\n                                                                        <h3 class=\"kt-portlet__head-title\">Active workflow</h3>\n                                                                    </div>\n                                                                </div>\n                                                                <div class=\"kt-form kt-form--label-right\">\n                                                                    <div class=\"kt-portlet__body\">\n                                                                        <div class=\"container\">\n                                                                            <div class=\"row\">\n                                                                                <div class=\"col-md-12\">\n                                                                                    <div class=\"credit-card-button-wrap\" *ngIf=\"onBoardResolution == 'Y'\">\n                                                                                        <a class=\"btn btn-success\" (click)=\"addnewworkflow()\">Add new workflow</a>\n                                                                                    </div>\n                                                                                    <div class=\"kt-portlet\">\n                                                                                        <div class=\"new-blue-table border-none\">\n                                                                                            <div class=\"table-responsive\">\n                                                                                                <table class=\"table table-bordered table-striped table-hover\">\n                                                                                                    <thead>\n                                                                                                        <tr>\n                                                                                                            <th>#</th>\n                                                                                                            <th>Name</th>\n                                                                                                            <th>Status</th>\n                                                                                                            <th>Actions</th>\n                                                                                                        </tr>\n                                                                                                    </thead>\n                                                                                                    <tbody>\n                                                                                                        <tr *ngFor=\"let Aciveworkflow of Aciveworkflows; let i = index \">\n                                                                                                            <td>{{i+1}}</td>\n                                                                                                            <td>{{Aciveworkflow.workflow_desc}}</td>\n                                                                                                            <td>{{Aciveworkflow.status}}</td>\n                                                                                                            <!--<td *ngIf=\"Aciveworkflow.status == 'A'\">Active</td>\n                                                                                                            <td *ngIf=\"Aciveworkflow.status == 'I'\">Inactive</td>-->\n                                                                                                            <td>\n                                                                                                                <a href=\"javascript:void(0)\" class=\"black-cog-btn\" (click)=\"workflowDetails(Aciveworkflow)\"><i class=\"fa fa-cog\" aria-hidden=\"true\"></i></a>\n                                                                                                            </td>\n                                                                                                        </tr>\n\n                                                                                                    </tbody>\n                                                                                                </table>\n                                                                                            </div>\n                                                                                        </div>\n\n                                                                                    </div>\n                                                                                </div>\n\n                                                                            </div>\n                                                                        </div>\n\n                                                                    </div>\n                                                                </div>\n                                                            </div>\n                                                            <!--/-->\n\n                                                            <div class=\"kt-footer__copyright mt-20\">\n                                                                2019&nbsp;©&nbsp;Wthaq\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                </form>\n\n                                            </div>\n                                        </div>\n                                    </div>\n\n                                </div>\n                            </div>\n                        </div>\n                    </section>\n                </div>\n            </div>\n        </div>\n\n        <!--Middle Content Here-->\n    </div>\n</div>\n\n<!-- Modal -->\n<div id=\"myModal\" class=\"modal fade\" role=\"dialog\">\n    <div class=\"modal-dialog\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header\">\n                <h4 class=\"modal-title\">Add new user</h4>\n            </div>\n            <div class=\"modal-body\">\n\n                <div class=\"row\">\n                    <div class=\"col-12 col-md-6\">\n                        <div class=\"form-group margin-bottom-10\">\n                            <label for=\"national-identification\" class=\"col-form-label\"> National Identification <em style=\"font-style: normal;\" class=\"text-danger-black\">*</em> </label>\n                            <input class=\"form-control\" type=\"text\" value=\"\" id=\"\">\n                        </div>\n                    </div>\n\n                    <div class=\"col-12 col-md-6\">\n                        <div class=\"form-group margin-bottom-10\">\n                            <label for=\"national-identification\" class=\"col-form-label\"> Date of birth <em style=\"font-style: normal;\" class=\"text-danger-black\">*</em> </label>\n                            <input class=\"form-control\" type=\"text\" value=\"\" id=\"\">\n                        </div>\n                    </div>\n\n                    <div class=\"col-12 col-md-6\">\n                        <div class=\"form-group margin-bottom-10\">\n                            <label for=\"national-identification\" class=\"col-form-label\"> First Name <em style=\"font-style: normal;\" class=\"text-danger-black\">*</em> </label>\n                            <input class=\"form-control profile-txt1\" type=\"text\" value=\"\" id=\"\">\n                        </div>\n                    </div>\n\n                    <div class=\"col-12 col-md-6\">\n                        <div class=\"form-group margin-bottom-10\">\n                            <label for=\"national-identification\" class=\"col-form-label\"> Last Name <em style=\"font-style: normal;\" class=\"text-danger-black\">*</em> </label>\n                            <input class=\"form-control profile-txt1\" type=\"text\" value=\"\" id=\"\">\n                        </div>\n                    </div>\n\n                    <div class=\"col-12 col-md-6\">\n                        <div class=\"form-group margin-bottom-10\">\n                            <label for=\"national-identification\" class=\"col-form-label\"> Mobile Number <em style=\"font-style: normal;\" class=\"text-danger-black\">*</em> </label>\n                            <input class=\"form-control\" type=\"text\" value=\"\" id=\"\">\n                        </div>\n                    </div>\n\n                    <div class=\"col-12 col-md-6\">\n                        <div class=\"form-group margin-bottom-10\">\n                            <label for=\"national-identification\" class=\"col-form-label\"> Email <em style=\"font-style: normal;\" class=\"text-danger-black\">*</em> </label>\n                            <input class=\"form-control\" type=\"text\" value=\"\" id=\"\">\n                        </div>\n                    </div>\n\n                    <div class=\"col-12 col-md-6\">\n                        <div class=\"form-group margin-bottom-10\">\n                            <div class=\"margin-top-10 text-left\">\n                                <div class=\"checkbox\">\n                                    <label class=\"container-checkbox\"> New user has onboard resolution?\n\n                                        <input type=\"checkbox\" checked=\"checked\">\n                                        <span class=\"checkmark\"></span>\n                                    </label>\n                                </div>\n                            </div>\n                            <div>\n                                <div class=\"input-group mb-3 pad-left-null\">\n                                    <div class=\"custom-file\">\n                                        <input type=\"file\" class=\"custom-file-input\" id=\"inputGroupFile04\">\n                                        <label class=\"custom-file-label\" for=\"inputGroupFile04\"></label>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div class=\"col-12 col-md-6\">\n                        <div class=\"form-group margin-bottom-10\">\n                            <div class=\"margin-top-10 text-left\">\n                                <div class=\"attach-label padding-null\">\n                                    <label for=\"cr\" class=\"col-form-label\"> National Identification Number <em style=\"font-style: normal;\" class=\"text-danger-black\">*</em></label>\n                                </div>\n                            </div>\n                            <div>\n                                <div class=\"input-group mb-3 pad-left-null\">\n                                    <div class=\"custom-file\">\n                                        <input type=\"file\" class=\"custom-file-input\" id=\"inputGroupFile04\">\n                                        <label class=\"custom-file-label\" for=\"inputGroupFile04\"></label>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"col-12 col-md-6\">\n                        <div class=\"form-group margin-bottom-10\">\n                            <div class=\"text-left\">\n                                <div class=\"attach-label padding-null\">\n                                    <label for=\"cr\" class=\"col-form-label\"> Authorization Letter <em style=\"font-style: normal;\" class=\"text-danger-black\">*</em></label>\n                                </div>\n                            </div>\n                            <div>\n                                <div class=\"input-group mb-3 pad-left-null\">\n                                    <div class=\"custom-file\">\n                                        <input type=\"file\" class=\"custom-file-input\" id=\"inputGroupFile04\">\n                                        <label class=\"custom-file-label\" for=\"inputGroupFile04\"></label>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div class=\"col-12 col-md-6\"></div>\n\n                    <div class=\"col-12 col-md-6\">\n                        <div class=\"form-group margin-bottom-10\">\n                            <label for=\"select-bank\" class=\"col-form-label\">Select bank <em style=\"font-style: normal;\" class=\"text-danger-black\">*</em> </label>\n                            <select class=\"form-control\">\n                                <option></option>\n                            </select>\n                        </div>\n                    </div>\n                    <div class=\"col-12 col-md-6\">\n\n                        <div class=\"form-group margin-bottom-10\">\n                            <label for=\"iban\" class=\"col-form-label\">IBAN <em style=\"font-style: normal;\" class=\"text-danger-black\">*</em></label>\n                            <input class=\"form-control\" type=\"text\" value=\"\" id=\"\">\n                        </div>\n                    </div>\n\n                </div>\n\n            </div>\n            <div class=\"modal-footer\">\n                <div class=\"row\">\n                    <div class=\"col-12\">\n                        <div class=\"btn-wrap\">\n                            <button type=\"reset\" class=\"btn btn-gry\">Cancel</button>\n                            <button type=\"button\" class=\"btn btn-success\">Save</button>\n                        </div>\n\n                    </div>\n                </div>\n            </div>\n\n        </div>\n    </div>\n</div>\n<!-- Modal -->");

/***/ }),

/***/ "./node_modules/raw-loader/dist/cjs.js!./src/app/private-amendment-list/private-amendment-list.component.html":
/*!********************************************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/private-amendment-list/private-amendment-list.component.html ***!
  \********************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (" \n \n          <!--===========================\n                        Start Content\n                        ============================-->\n                        <div class=\"pt-0 kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor kt-margin-top-50\">\n                            <div class=\"kt-container\">\n                          <!--New Design Here-->\n                          <div class=\"row\">\n                            <app-sidemenu></app-sidemenu>\n                            <!--<div class=\"col-12 col-sm-3 col-md-3 col-lg-3 left-panel-menu-wrap w-20 fixed-wrap\">\n                              \n                              <ul class=\"vertical-menu\">\n                                <li *ngIf=\"roleId == 3\"><a routerLink=\"/adminDashboard\"><span class=\"db-icon\"></span>{{'HOME.Dashboard' | translate}}</a></li>\n            \n                                <li *ngIf=\"roleId == 2\"><a routerLink=\"/govDashboard\"><span class=\"db-icon\"></span>{{'HOME.Dashboard' | translate}}</a></li>\n                                \n                                <li *ngIf=\"roleId == 1\"><a routerLink=\"/dashboard\"><span class=\"db-icon\"></span>{{'HOME.Dashboard' | translate}}</a></li>\n                                <li *ngIf=\"roleId == 1\"><a routerLink=\"/privateLgManagement\" class=\"active\"><span class=\"lg-icon\"></span>{{'HOME.LG_Management' | translate}}</a>\n                                <li *ngIf=\"roleId == 1\"><a routerLink=\"/requestLgIssuance\"><span class=\"lg-icon\"></span>{{'HOME.LG_issuance' | translate}}</a></li>\n                                <li *ngIf=\"roleId == 3\"><a routerLink=\"/pendingtasks\" ><span class=\"lg-icon\"></span>{{'HOME.Pending_Tasks' | translate}}</a></li>\n                                <li *ngIf=\"roleId == 1\"><a routerLink=\"/privatependingtasks\"><span class=\"lg-icon\"></span>{{'HOME.Pending_Tasks' | translate}}</a>\n                              </ul>\n                            </div>-->\n                            <div class=\"col-12 col-sm-9 col-md-9 col-lg-9 padding-null scroll-wrap\">\n                              <!-- <div class=\"white-area\">\n                                <div class=\"user-area\">\n                                  <span class=\"user-img-wrap\"><img src=\"../../assets/images/user.png\" alt=\"image\"\n                                      class=\"user-img\"></span><span>Abdulla Ahmad</span>\n                                </div>\n                                <div class=\"clear\"></div>\n                              </div> -->\n                              \n                              <div class=\"grey-bg\">\n                                <section class=\"design-process-section\" id=\"process-tab\">\n                                  <div>\n                                    <div>\n                                      <div>\n                                        <div class=\"two-blocks-tab\">\n                                          <ul>\n                                            <li [ngClass]=\"{'active': isMyIssuedLGClicked}\" (click)=\"goToMyIssuedLGTab()\"><a \n                                                >{{'HOME.My_issued_letter_guarantees' | translate}}</a></li>\n                                            <!-- <li><a href=\"private-entity-lg-list.html\">LG List</a></li> -->\n                                            <li [ngClass]=\"{'active': isLgIssuedMeClicked}\" (click)=\"goToLgIssuedMeTab()\"><a >{{'HOME.Letter_of_guarantee_issued_me' | translate}}</a></li>\n            \n                                          </ul>\n                                        </div>\n                                        <!-- Tab panes -->\n                                        <div class=\"tab-content\">\n                                          <div role=\"tabpanel\" class=\"tab-pane active\" id=\"discover\">\n                                            <div class=\"design-process-content\">\n                                              <form>\n                                                <div class=\"row\" *ngIf=\"isOpenMyIssuedLGList\">\n                                                 \n                                                    <div class=\"col-sm-12\">\n                                                    <div class=\"kt-portlet\">\n                                                      <div class=\"kt-portlet__head\">\n                                                        <div class=\"kt-portlet__head-label\">\n                                                          <h3 class=\"kt-portlet__head-title\">\n                                                            {{'HOME.Active_letters_guarantee' | translate}}\n                                                          </h3>\n                                                        </div>\n                                                      </div>\n                                                      \n                                                       <!--begin::Form-->\n                                                       <div class=\"kt-form kt-form--label-right\">\n                                                        <div class=\"kt-portlet__body\">\n                                                          <div class=\"container\">\n                                                            <div class=\"row\">\n                                                             <div class=\"col-md-12\">\n                                                                <div class=\"kt-portlet no-shadow\">\n                                                                  <div class=\"new-blue-table1\">\n\n\n\n                                                                    <div class=\"table-responsive\">\n                                                                      <div *ngIf=\"this.translate.currentLang == 'en'\">\n                                                                        <div *ngIf=\"myActiveLgLists.userObject?.length > 0; then myActivethenBlock else myActiveelseBlock\"> </div>\n                                                                        <ng-template #myActivethenBlock>\n                                                                        <table datatable [dtOptions]=\"dtOptions\" class=\"table table-bordered table-striped table-hover\">\n                                                                            <thead>\n                                                                                  <tr>\n                                                                                    <th class=\"table-col-7\">#</th>\n                                                                                    <th class=\"\"> {{'HOME.LG_Number' | translate}}</th>\n                                                                                    <th class=\"\">{{'HOME.LG_amount' | translate}}</th>\n                                                                                    <th class=\"\">{{'HOME.Beneficiary' | translate}}</th>\n                                                                                    <th class=\"\">{{'HOME.Bank' | translate}}</th>\n                                                                                    <th class=\"\">{{'HOME.LG_TYPE' | translate}}</th>\n                                                                                    <th class=\"\">{{'HOME.LG_Status' | translate}}</th>\n                                                                                    <th class=\"\">{{'HOME.Start_Date' | translate}}</th>\n                                                                                    <th class=\"\">{{'HOME.End_Date' | translate}}</th>\n                                                                                    <th class=\"\">{{'HOME.View_Details' | translate}}</th>\n                                                                                  </tr>\n                                                                            </thead>\n                                                                            <tbody>\n                                                                            <tr *ngFor=\"let myActiveLgList of myActiveLgLists.userObject; let i = index \">\n                                                                                <td>{{i+1}}</td>\n                                                                                <td>{{myActiveLgList.lg_no}}</td>\n                                                                                <td>{{myActiveLgList.lG_amount}}</td>\n                                                                                <td>{{myActiveLgList.beneficiary_name}}</td>\n                                                                                <td>{{myActiveLgList.bank_name}}</td>\n                                                                                <td>{{myActiveLgList.lg_type}}</td>\n                                                                                <td>{{myActiveLgList.status}}</td>\n                                                                                <td>{{myActiveLgList.start_date}}</td>\n                                                                                <td>{{myActiveLgList.end_date}}</td>\n                                                                                <td>\n                                                                                  <button type=\"button\" class=\"btn btn-success vw-details\" (click)=\"RowSelected(myActiveLgList)\">Amend</button>\n                                                                                </td>\n                                                                            </tr>\n                                                                            </tbody>\n                                                                          </table>\n                                                                        </ng-template>\n\n                                                                        <ng-template #myActiveelseBlock>\n                                                                            <table datatable [dtOptions]=\"dtOptions\" class=\"table table-bordered table-striped table-hover\">\n                                                                                <thead>\n                                                                                      <tr>\n                                                                                        <th class=\"table-col-7\">#</th>\n                                                                                        <th class=\"\"> {{'HOME.LG_Number' | translate}}</th>\n                                                                                        <th class=\"\">{{'HOME.LG_amount' | translate}}</th>\n                                                                                        <th class=\"\">{{'HOME.Beneficiary' | translate}}</th>\n                                                                                        <th class=\"\">{{'HOME.Bank' | translate}}</th>\n                                                                                        <th class=\"\">{{'HOME.LG_TYPE' | translate}}</th>\n                                                                                        <th class=\"\">{{'HOME.LG_Status' | translate}}</th>\n                                                                                        <th class=\"\">{{'HOME.Start_Date' | translate}}</th>\n                                                                                        <th class=\"\">{{'HOME.End_Date' | translate}}</th>\n                                                                                        <th class=\"\">{{'HOME.View_Details' | translate}}</th>\n                                                                                      </tr>\n                                                                                </thead>\n                                                                                <tbody>\n                                                                                <tr *ngFor=\"let myActiveLgList of myActiveLgLists.userObject; let i = index \">\n                                                                                    <td>{{i+1}}</td>\n                                                                                    <td>{{myActiveLgList.lg_no}}</td>\n                                                                                    <td>{{myActiveLgList.lG_amount}}</td>\n                                                                                    <td>{{myActiveLgList.beneficiary_name}}</td>\n                                                                                    <td>{{myActiveLgList.bank_name}}</td>\n                                                                                    <td>{{myActiveLgList.lg_type}}</td>\n                                                                                    <td>{{myActiveLgList.status}}</td>\n                                                                                    <td>{{myActiveLgList.start_date}}</td>\n                                                                                    <td>{{myActiveLgList.end_date}}</td>\n                                                                                    <td>\n                                                                                      <button type=\"button\" class=\"btn btn-success vw-details\" (click)=\"RowSelected(myActiveLgList)\">Amend</button>\n                                                                                    </td>\n                                                                                </tr>\n                                                                                </tbody>\n                                                                              </table>\n                                                                            </ng-template>\n                                                                    </div>\n                                                                    <!--This is for Arabic-->\n\n                                                                    <div *ngIf=\"this.translate.currentLang == 'ar'\">\n                                                                      <div *ngIf=\"myActiveLgLists.userObject?.length > 0; then myActivethenBlock else myActiveelseBlock\"> </div>\n                                                                      <ng-template #myActivethenBlock>\n                                                                      <table datatable [dtOptions]=\"dtOptionsAR\" class=\"table table-bordered table-striped table-hover\">\n                                                                          <thead>\n                                                                                <tr>\n                                                                                  <th class=\"table-col-7\">#</th>\n                                                                                  <th class=\"\"> {{'HOME.LG_Number' | translate}}</th>\n                                                                                  <th class=\"\">{{'HOME.LG_amount' | translate}}</th>\n                                                                                  <th class=\"\">{{'HOME.Beneficiary' | translate}}</th>\n                                                                                  <th class=\"\">{{'HOME.Bank' | translate}}</th>\n                                                                                  <th class=\"\">{{'HOME.LG_TYPE' | translate}}</th>\n                                                                                  <th class=\"\">{{'HOME.LG_Status' | translate}}</th>\n                                                                                  <th class=\"\">{{'HOME.Start_Date' | translate}}</th>\n                                                                                  <th class=\"\">{{'HOME.End_Date' | translate}}</th>\n                                                                                  <th class=\"\">{{'HOME.View_Details' | translate}}</th>\n                                                                                </tr>\n                                                                          </thead>\n                                                                          <tbody>\n                                                                          <tr *ngFor=\"let myActiveLgList of myActiveLgLists.userObject; let i = index \">\n                                                                              <td>{{i+1}}</td>\n                                                                              <td>{{myActiveLgList.lg_no}}</td>\n                                                                              <td>{{myActiveLgList.lG_amount}}</td>\n                                                                              <td>{{myActiveLgList.beneficiary_name}}</td>\n                                                                              <td>{{myActiveLgList.bank_name}}</td>\n                                                                              <td>{{myActiveLgList.lg_type}}</td>\n                                                                              <td>{{myActiveLgList.status}}</td>\n                                                                              <td>{{myActiveLgList.start_date}}</td>\n                                                                              <td>{{myActiveLgList.end_date}}</td>\n                                                                              <td>\n                                                                                <button type=\"button\" class=\"btn btn-success vw-details\" (click)=\"RowSelected(myActiveLgList)\">Amend</button>\n                                                                              </td>\n                                                                          </tr>\n                                                                          </tbody>\n                                                                        </table>\n                                                                      </ng-template>\n\n                                                                      <ng-template #myActiveelseBlock>\n                                                                          <table datatable [dtOptions]=\"dtOptionsAR\" class=\"table table-bordered table-striped table-hover\">\n                                                                              <thead>\n                                                                                    <tr>\n                                                                                      <th class=\"table-col-7\">#</th>\n                                                                                      <th class=\"\"> {{'HOME.LG_Number' | translate}}</th>\n                                                                                      <th class=\"\">{{'HOME.LG_amount' | translate}}</th>\n                                                                                      <th class=\"\">{{'HOME.Beneficiary' | translate}}</th>\n                                                                                      <th class=\"\">{{'HOME.Bank' | translate}}</th>\n                                                                                      <th class=\"\">{{'HOME.LG_TYPE' | translate}}</th>\n                                                                                      <th class=\"\">{{'HOME.LG_Status' | translate}}</th>\n                                                                                      <th class=\"\">{{'HOME.Start_Date' | translate}}</th>\n                                                                                      <th class=\"\">{{'HOME.End_Date' | translate}}</th>\n                                                                                      <th class=\"\">{{'HOME.View_Details' | translate}}</th>\n                                                                                    </tr>\n                                                                              </thead>\n                                                                              <tbody>\n                                                                              <tr *ngFor=\"let myActiveLgList of myActiveLgLists.userObject; let i = index \">\n                                                                                  <td>{{i+1}}</td>\n                                                                                  <td>{{myActiveLgList.lg_no}}</td>\n                                                                                  <td>{{myActiveLgList.lG_amount}}</td>\n                                                                                  <td>{{myActiveLgList.beneficiary_name}}</td>\n                                                                                  <td>{{myActiveLgList.bank_name}}</td>\n                                                                                  <td>{{myActiveLgList.lg_type}}</td>\n                                                                                  <td>{{myActiveLgList.status}}</td>\n                                                                                  <td>{{myActiveLgList.start_date}}</td>\n                                                                                  <td>{{myActiveLgList.end_date}}</td>\n                                                                                  <td>\n                                                                                    <button type=\"button\" class=\"btn btn-success vw-details\" (click)=\"RowSelected(myActiveLgList)\">Amend</button>\n                                                                                  </td>\n                                                                              </tr>\n                                                                              </tbody>\n                                                                            </table>\n                                                                          </ng-template>\n                                                                  </div>\n                                                                  <!--This is for Arabic-->\n                                                                </div>\n                                                                  </div>\n                                                                </div>\n                                                              </div>\n                                                            </div>\n                                                          </div>\n                                                        </div>\n                                                      </div>\n                                                    </div>\n                                                  </div>\n\n                                                  \n                                                </div>\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n                                                <div class=\"row\" *ngIf=\"isOpenLgIssuedMeList\">\n\n                                                  <div class=\"col-sm-12\">\n                                                    <div class=\"kt-portlet\">\n                                                      <div class=\"kt-portlet__head\">\n                                                        <div class=\"kt-portlet__head-label\">\n                                                          <h3 class=\"kt-portlet__head-title\">\n                                                            {{'HOME.Active_letters_guarantee' | translate}}\n                                                          </h3>\n                                                        </div>\n                                                      </div>\n                                                      <!--begin::Form-->\n                                                      <div class=\"kt-form kt-form--label-right\">\n                                                        <div class=\"kt-portlet__body\">\n                                                          <div class=\"container\">\n                                                            <div class=\"row\">\n                                                             <div class=\"col-md-12\">\n                                                                <div class=\"kt-portlet no-shadow\">\n                                                                  <div class=\"new-blue-table1\">\n                                                                    <div class=\"table-responsive\">\n                                                                      <div *ngIf=\"this.translate.currentLang == 'en'\">\n                                                                        <div *ngIf=\"activeLgForMeLists.userObject?.length > 0; then activemethenBlock else activemeelseBlock\"> </div>\n                                                                        <ng-template #activemethenBlock>\n                                                                        <table datatable [dtOptions]=\"dtOptions\" class=\"table table-bordered table-striped table-hover\">\n                                                                            <thead>\n                                                                                  <tr>\n                                                                                    <th class=\"table-col-7\">#</th>\n                                                                                    <th class=\"\"> {{'HOME.LG_Number' | translate}}</th>\n                                                                                    <th class=\"\">{{'HOME.LG_amount' | translate}}</th>\n                                                                                    <th class=\"\">{{'HOME.Beneficiary' | translate}}</th>\n                                                                                    <th class=\"\">{{'HOME.Bank' | translate}}</th>\n                                                                                    <th class=\"\">{{'HOME.LG_TYPE' | translate}}</th>\n                                                                                    <th class=\"\">{{'HOME.LG_Status' | translate}}</th>\n                                                                                    <th class=\"\">{{'HOME.Start_Date' | translate}}</th>\n                                                                                    <th class=\"\">{{'HOME.End_Date' | translate}}</th>\n                                                                                    <th class=\"\">{{'HOME.View_Details' | translate}}</th>\n                                                                                  </tr>\n                                                                            </thead>\n                                                                            <tbody>\n                                                                            <tr *ngFor=\"let activeLgForMeList of activeLgForMeLists.userObject; let i = index \">\n                                                                                <td>{{i+1}}</td>\n                                                                                  <td>{{activeLgForMeList.lg_no}}</td>\n                                                                                  <td>{{activeLgForMeList.lG_amount}}</td>\n                                                                                  <td>{{activeLgForMeList.beneficiary_name}}</td>\n                                                                                  <td>{{activeLgForMeList.bank_name}}</td>\n                                                                                  <td>{{activeLgForMeList.lg_type}}</td>\n                                                                                  <td>{{activeLgForMeList.status}}</td>\n                                                                                  <td>{{activeLgForMeList.start_date}}</td>\n                                                                                  <td>{{activeLgForMeList.end_date}}</td>\n                                                                                <td><button type=\"button\" class=\"btn btn-success vw-details\" (click)=\"RowSelected(activeLgForMeList)\">Amend</button>\n                                                                                </td>\n                                                                            </tr>\n                                                                            </tbody>\n                                                                          </table>\n                                                                        </ng-template>\n                                                                        <ng-template #activemeelseBlock>\n                                                                            <table datatable [dtOptions]=\"dtOptions\" class=\"table table-bordered table-striped table-hover\">\n                                                                                <thead>\n                                                                                      <tr>\n                                                                                        <th class=\"table-col-7\">#</th>\n                                                                                        <th class=\"\"> {{'HOME.LG_Number' | translate}}</th>\n                                                                                        <th class=\"\">{{'HOME.LG_amount' | translate}}</th>\n                                                                                        <th class=\"\">{{'HOME.Beneficiary' | translate}}</th>\n                                                                                        <th class=\"\">{{'HOME.Bank' | translate}}</th>\n                                                                                        <th class=\"\">{{'HOME.LG_TYPE' | translate}}</th>\n                                                                                        <th class=\"\">{{'HOME.LG_Status' | translate}}</th>\n                                                                                        <th class=\"\">{{'HOME.Start_Date' | translate}}</th>\n                                                                                        <th class=\"\">{{'HOME.End_Date' | translate}}</th>\n                                                                                        <th class=\"\">{{'HOME.View_Details' | translate}}</th>\n                                                                                      </tr>\n                                                                                </thead>\n                                                                                <tbody>\n                                                                                <tr *ngFor=\"let activeLgForMeList of activeLgForMeLists.userObject; let i = index \">\n                                                                                    <td>{{i+1}}</td>\n                                                                                      <td>{{activeLgForMeList.lg_no}}</td>\n                                                                                      <td>{{activeLgForMeList.lG_amount}}</td>\n                                                                                      <td>{{activeLgForMeList.beneficiary_name}}</td>\n                                                                                      <td>{{activeLgForMeList.bank_name}}</td>\n                                                                                      <td>{{activeLgForMeList.lg_type}}</td>\n                                                                                      <td>{{activeLgForMeList.status}}</td>\n                                                                                      <td>{{activeLgForMeList.start_date}}</td>\n                                                                                      <td>{{activeLgForMeList.end_date}}</td>\n                                                                                    <td><button type=\"button\" class=\"btn btn-success vw-details\" (click)=\"RowSelected(activeLgForMeList)\">Amend</button>\n                                                                                    </td>\n                                                                                </tr>\n                                                                                </tbody>\n                                                                              </table>\n                                                                            </ng-template>\n                                                                      </div>\n                                                                      <div *ngIf=\"this.translate.currentLang == 'ar'\">\n                                                                        <div *ngIf=\"activeLgForMeLists.userObject?.length > 0; then activemethenBlock else activemeelseBlock\"> </div>\n                                                                        <ng-template #activemethenBlock>\n                                                                        <table datatable [dtOptions]=\"dtOptionsAR\" class=\"table table-bordered table-striped table-hover\">\n                                                                            <thead>\n                                                                                  <tr>\n                                                                                    <th class=\"table-col-7\">#</th>\n                                                                                    <th class=\"\"> {{'HOME.LG_Number' | translate}}</th>\n                                                                                    <th class=\"\">{{'HOME.LG_amount' | translate}}</th>\n                                                                                    <th class=\"\">{{'HOME.Beneficiary' | translate}}</th>\n                                                                                    <th class=\"\">{{'HOME.Bank' | translate}}</th>\n                                                                                    <th class=\"\">{{'HOME.LG_TYPE' | translate}}</th>\n                                                                                    <th class=\"\">{{'HOME.LG_Status' | translate}}</th>\n                                                                                    <th class=\"\">{{'HOME.Start_Date' | translate}}</th>\n                                                                                    <th class=\"\">{{'HOME.End_Date' | translate}}</th>\n                                                                                    <th class=\"\">{{'HOME.View_Details' | translate}}</th>\n                                                                                  </tr>\n                                                                            </thead>\n                                                                            <tbody>\n                                                                            <tr *ngFor=\"let activeLgForMeList of activeLgForMeLists.userObject; let i = index \">\n                                                                                <td>{{i+1}}</td>\n                                                                                  <td>{{activeLgForMeList.lg_no}}</td>\n                                                                                  <td>{{activeLgForMeList.lG_amount}}</td>\n                                                                                  <td>{{activeLgForMeList.beneficiary_name}}</td>\n                                                                                  <td>{{activeLgForMeList.bank_name}}</td>\n                                                                                  <td>{{activeLgForMeList.lg_type}}</td>\n                                                                                  <td>{{activeLgForMeList.status}}</td>\n                                                                                  <td>{{activeLgForMeList.start_date}}</td>\n                                                                                  <td>{{activeLgForMeList.end_date}}</td>\n                                                                                <td><button type=\"button\" class=\"btn btn-success vw-details\" (click)=\"RowSelected(activeLgForMeList)\">Amend</button>\n                                                                                </td>\n                                                                            </tr>\n                                                                            </tbody>\n                                                                          </table>\n                                                                        </ng-template>\n                                                                        <ng-template #activemeelseBlock>\n                                                                            <table datatable [dtOptions]=\"dtOptionsAR\" class=\"table table-bordered table-striped table-hover\">\n                                                                                <thead>\n                                                                                      <tr>\n                                                                                        <th class=\"table-col-7\">#</th>\n                                                                                        <th class=\"\"> {{'HOME.LG_Number' | translate}}</th>\n                                                                                        <th class=\"\">{{'HOME.LG_amount' | translate}}</th>\n                                                                                        <th class=\"\">{{'HOME.Beneficiary' | translate}}</th>\n                                                                                        <th class=\"\">{{'HOME.Bank' | translate}}</th>\n                                                                                        <th class=\"\">{{'HOME.LG_TYPE' | translate}}</th>\n                                                                                        <th class=\"\">{{'HOME.LG_Status' | translate}}</th>\n                                                                                        <th class=\"\">{{'HOME.Start_Date' | translate}}</th>\n                                                                                        <th class=\"\">{{'HOME.End_Date' | translate}}</th>\n                                                                                        <th class=\"\">{{'HOME.View_Details' | translate}}</th>\n                                                                                      </tr>\n                                                                                </thead>\n                                                                                <tbody>\n                                                                                <tr *ngFor=\"let activeLgForMeList of activeLgForMeLists.userObject; let i = index \">\n                                                                                    <td>{{i+1}}</td>\n                                                                                      <td>{{activeLgForMeList.lg_no}}</td>\n                                                                                      <td>{{activeLgForMeList.lG_amount}}</td>\n                                                                                      <td>{{activeLgForMeList.beneficiary_name}}</td>\n                                                                                      <td>{{activeLgForMeList.bank_name}}</td>\n                                                                                      <td>{{activeLgForMeList.lg_type}}</td>\n                                                                                      <td>{{activeLgForMeList.status}}</td>\n                                                                                      <td>{{activeLgForMeList.start_date}}</td>\n                                                                                      <td>{{activeLgForMeList.end_date}}</td>\n                                                                                    <td><button type=\"button\" class=\"btn btn-success vw-details\" (click)=\"RowSelected(activeLgForMeList)\">Amend</button>\n                                                                                    </td>\n                                                                                </tr>\n                                                                                </tbody>\n                                                                              </table>\n                                                                            </ng-template>\n                                                                      </div>\n                                                                    </div>\n                                                                  </div>\n                                                                </div>\n                                                              </div>\n                                                            </div>\n                                                          </div>\n                                                        </div>\n                                                      </div>\n                                                    </div>\n                                                  </div>\n\n                                                </div>\n                                              </form>\n            \n                                            </div>\n                                          </div>\n                                        </div>\n            \n                                      </div>\n                                    </div>\n                                  </div>\n                                </section>\n                              </div>\n                              \n                            </div>\n                          </div>\n                          <!--New Design Here-->\n                        </div>\n                      </div>\n                      <!--===========================\n                                    End Content\n                                    ============================-->\n                   \n              <!--begin::Global Theme Bundle(used by all pages) -->\n              <script src=\"../../assets/js/plugins.bundle.js\" type=\"text/javascript\"></script>\n              <!-- end::Body -->\n            \n            \n            \n            \n            ");

/***/ }),

/***/ "./node_modules/raw-loader/dist/cjs.js!./src/app/private-confiscate-list/private-confiscate-list.component.html":
/*!**********************************************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/private-confiscate-list/private-confiscate-list.component.html ***!
  \**********************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (" \n \n          <!--===========================\n                        Start Content\n                        ============================-->\n                        <div class=\"pt-0 kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor kt-margin-top-50\">\n                            <div class=\"kt-container\">\n                          <!--New Design Here-->\n                          <div class=\"row\">\n                            <app-sidemenu></app-sidemenu>\n                            <!--<div class=\"col-12 col-sm-3 col-md-3 col-lg-3 left-panel-menu-wrap w-20 fixed-wrap\">\n                              \n                              <ul class=\"vertical-menu\">\n                                <li *ngIf=\"roleId == 3\"><a routerLink=\"/adminDashboard\"><span class=\"db-icon\"></span>{{'HOME.Dashboard' | translate}}</a></li>\n            \n                                <li *ngIf=\"roleId == 2\"><a routerLink=\"/govDashboard\"><span class=\"db-icon\"></span>{{'HOME.Dashboard' | translate}}</a></li>\n                                \n                                <li *ngIf=\"roleId == 1\"><a routerLink=\"/dashboard\"><span class=\"db-icon\"></span>{{'HOME.Dashboard' | translate}}</a></li>\n                                <li *ngIf=\"roleId == 1\"><a routerLink=\"/privateLgManagement\" class=\"active\"><span class=\"lg-icon\"></span>{{'HOME.LG_Management' | translate}}</a>\n                                <li *ngIf=\"roleId == 1\"><a routerLink=\"/requestLgIssuance\"><span class=\"lg-icon\"></span>{{'HOME.LG_issuance' | translate}}</a></li>\n                                <li *ngIf=\"roleId == 3\"><a routerLink=\"/pendingtasks\" ><span class=\"lg-icon\"></span>{{'HOME.Pending_Tasks' | translate}}</a></li>\n                                <li *ngIf=\"roleId == 1\"><a routerLink=\"/privatependingtasks\"><span class=\"lg-icon\"></span>{{'HOME.Pending_Tasks' | translate}}</a>\n                              </ul>\n                            </div>-->\n                            <div class=\"col-12 col-sm-9 col-md-9 col-lg-9 padding-null scroll-wrap\">\n                              <!-- <div class=\"white-area\">\n                                <div class=\"user-area\">\n                                  <span class=\"user-img-wrap\"><img src=\"../../assets/images/user.png\" alt=\"image\"\n                                      class=\"user-img\"></span><span>Abdulla Ahmad</span>\n                                </div>\n                                <div class=\"clear\"></div>\n                              </div> -->\n                              \n                              <div class=\"grey-bg\">\n                                <section class=\"design-process-section\" id=\"process-tab\">\n                                  <div>\n                                    <div>\n                                      <div>\n                                        <div class=\"two-blocks-tab\">\n                                          <ul>\n                                            <li [ngClass]=\"{'active': isMyIssuedLGClicked}\" (click)=\"goToMyIssuedLGTab()\"><a \n                                                >{{'HOME.Letter_of_guarantee_issued_me' | translate}}</a></li>\n                                            <!-- <li><a href=\"private-entity-lg-list.html\">LG List</a></li> -->\n                                            <!--<li [ngClass]=\"{'active': isLgIssuedMeClicked}\" (click)=\"goToLgIssuedMeTab()\"><a >{{'HOME.Letter_of_guarantee_issued_me' | translate}}</a></li>-->\n            \n                                          </ul>\n                                        </div>\n                                        <!-- Tab panes -->\n                                        <div class=\"tab-content\">\n                                          <div role=\"tabpanel\" class=\"tab-pane active\" id=\"discover\">\n                                            <div class=\"design-process-content\">\n                                              <form>\n                                                <div class=\"row\" *ngIf=\"isOpenMyIssuedLGList\">\n                                                 \n                                                    <div class=\"col-sm-12\">\n                                                    <div class=\"kt-portlet\">\n                                                      <div class=\"kt-portlet__head\">\n                                                        <div class=\"kt-portlet__head-label\">\n                                                          <h3 class=\"kt-portlet__head-title\">\n                                                            {{'HOME.Active_letters_guarantee' | translate}}\n                                                          </h3>\n                                                        </div>\n                                                      </div>\n                                                      \n                                                       <!--begin::Form-->\n                                                       <div class=\"kt-form kt-form--label-right\">\n                                                        <div class=\"kt-portlet__body\">\n                                                          <div class=\"container\">\n                                                            <div class=\"row\">\n                                                             <div class=\"col-md-12\">\n                                                                <div class=\"kt-portlet no-shadow\">\n                                                                  <div class=\"new-blue-table1\">\n\n\n\n                                                                    <div class=\"table-responsive\">\n                                                                      <div *ngIf=\"this.translate.currentLang == 'en'\">\n                                                                        <div *ngIf=\"myActiveLgLists.userObject?.length > 0; then myActivethenBlock else myActiveelseBlock\"> </div>\n                                                                        <ng-template #myActivethenBlock>\n                                                                        <table datatable [dtOptions]=\"dtOptions\" class=\"table table-bordered table-striped table-hover\">\n                                                                            <thead>\n                                                                                  <tr>\n                                                                                    <th class=\"table-col-7\">#</th>\n                                                                                    <th class=\"\"> {{'HOME.LG_Number' | translate}}</th>\n                                                                                    <th class=\"\">{{'HOME.LG_amount' | translate}}</th>\n                                                                                    <th class=\"\">{{'HOME.Beneficiary' | translate}}</th>\n                                                                                    <th class=\"\">{{'HOME.Bank' | translate}}</th>\n                                                                                    <th class=\"\">{{'HOME.LG_TYPE' | translate}}</th>\n                                                                                    <th class=\"\">{{'HOME.LG_Status' | translate}}</th>\n                                                                                    <th class=\"\">{{'HOME.Start_Date' | translate}}</th>\n                                                                                    <th class=\"\">{{'HOME.End_Date' | translate}}</th>\n                                                                                    <th class=\"\">{{'HOME.View_Details' | translate}}</th>\n                                                                                  </tr>\n                                                                            </thead>\n                                                                            <tbody>\n                                                                            <tr *ngFor=\"let myActiveLgList of myActiveLgLists.userObject; let i = index \">\n                                                                                <td>{{i+1}}</td>\n                                                                                <td>{{myActiveLgList.lg_no}}</td>\n                                                                                <td>{{myActiveLgList.lG_amount}}</td>\n                                                                                <td>{{myActiveLgList.beneficiary_name}}</td>\n                                                                                <td>{{myActiveLgList.bank_name}}</td>\n                                                                                <td>{{myActiveLgList.lg_type}}</td>\n                                                                                <td>{{myActiveLgList.status}}</td>\n                                                                                <td>{{myActiveLgList.start_date}}</td>\n                                                                                <td>{{myActiveLgList.end_date}}</td>\n                                                                                <td>\n                                                                                  <button type=\"button\" class=\"btn btn-success vw-details\" (click)=\"RowSelected(myActiveLgList)\">Confiscate</button>\n                                                                                </td>\n                                                                            </tr>\n                                                                            </tbody>\n                                                                          </table>\n                                                                        </ng-template>\n\n                                                                        <ng-template #myActiveelseBlock>\n                                                                            <table datatable [dtOptions]=\"dtOptions\" class=\"table table-bordered table-striped table-hover\">\n                                                                                <thead>\n                                                                                      <tr>\n                                                                                        <th class=\"table-col-7\">#</th>\n                                                                                        <th class=\"\"> {{'HOME.LG_Number' | translate}}</th>\n                                                                                        <th class=\"\">{{'HOME.LG_amount' | translate}}</th>\n                                                                                        <th class=\"\">{{'HOME.Beneficiary' | translate}}</th>\n                                                                                        <th class=\"\">{{'HOME.Bank' | translate}}</th>\n                                                                                        <th class=\"\">{{'HOME.LG_TYPE' | translate}}</th>\n                                                                                        <th class=\"\">{{'HOME.LG_Status' | translate}}</th>\n                                                                                        <th class=\"\">{{'HOME.Start_Date' | translate}}</th>\n                                                                                        <th class=\"\">{{'HOME.End_Date' | translate}}</th>\n                                                                                        <th class=\"\">{{'HOME.View_Details' | translate}}</th>\n                                                                                      </tr>\n                                                                                </thead>\n                                                                                <tbody>\n                                                                                <tr *ngFor=\"let myActiveLgList of myActiveLgLists.userObject; let i = index \">\n                                                                                    <td>{{i+1}}</td>\n                                                                                    <td>{{myActiveLgList.lg_no}}</td>\n                                                                                    <td>{{myActiveLgList.lG_amount}}</td>\n                                                                                    <td>{{myActiveLgList.beneficiary_name}}</td>\n                                                                                    <td>{{myActiveLgList.bank_name}}</td>\n                                                                                    <td>{{myActiveLgList.lg_type}}</td>\n                                                                                    <td>{{myActiveLgList.status}}</td>\n                                                                                    <td>{{myActiveLgList.start_date}}</td>\n                                                                                    <td>{{myActiveLgList.end_date}}</td>\n                                                                                    <td>\n                                                                                      <button type=\"button\" class=\"btn btn-success vw-details\" (click)=\"RowSelected(myActiveLgList)\">Confiscate</button>\n                                                                                    </td>\n                                                                                </tr>\n                                                                                </tbody>\n                                                                              </table>\n                                                                            </ng-template>\n                                                                    </div>\n                                                                    <!--This is for Arabic-->\n\n                                                                    <div *ngIf=\"this.translate.currentLang == 'ar'\">\n                                                                      <div *ngIf=\"myActiveLgLists.userObject?.length > 0; then myActivethenBlock else myActiveelseBlock\"> </div>\n                                                                      <ng-template #myActivethenBlock>\n                                                                      <table datatable [dtOptions]=\"dtOptionsAR\" class=\"table table-bordered table-striped table-hover\">\n                                                                          <thead>\n                                                                                <tr>\n                                                                                  <th class=\"table-col-7\">#</th>\n                                                                                  <th class=\"\"> {{'HOME.LG_Number' | translate}}</th>\n                                                                                  <th class=\"\">{{'HOME.LG_amount' | translate}}</th>\n                                                                                  <th class=\"\">{{'HOME.Beneficiary' | translate}}</th>\n                                                                                  <th class=\"\">{{'HOME.Bank' | translate}}</th>\n                                                                                  <th class=\"\">{{'HOME.LG_TYPE' | translate}}</th>\n                                                                                  <th class=\"\">{{'HOME.LG_Status' | translate}}</th>\n                                                                                  <th class=\"\">{{'HOME.Start_Date' | translate}}</th>\n                                                                                  <th class=\"\">{{'HOME.End_Date' | translate}}</th>\n                                                                                  <th class=\"\">{{'HOME.View_Details' | translate}}</th>\n                                                                                </tr>\n                                                                          </thead>\n                                                                          <tbody>\n                                                                          <tr *ngFor=\"let myActiveLgList of myActiveLgLists.userObject; let i = index \">\n                                                                              <td>{{i+1}}</td>\n                                                                              <td>{{myActiveLgList.lg_no}}</td>\n                                                                              <td>{{myActiveLgList.lG_amount}}</td>\n                                                                              <td>{{myActiveLgList.beneficiary_name}}</td>\n                                                                              <td>{{myActiveLgList.bank_name}}</td>\n                                                                              <td>{{myActiveLgList.lg_type}}</td>\n                                                                              <td>{{myActiveLgList.status}}</td>\n                                                                              <td>{{myActiveLgList.start_date}}</td>\n                                                                              <td>{{myActiveLgList.end_date}}</td>\n                                                                              <td>\n                                                                                <button type=\"button\" class=\"btn btn-success vw-details\" (click)=\"RowSelected(myActiveLgList)\">Confiscate</button>\n                                                                              </td>\n                                                                          </tr>\n                                                                          </tbody>\n                                                                        </table>\n                                                                      </ng-template>\n\n                                                                      <ng-template #myActiveelseBlock>\n                                                                          <table datatable [dtOptions]=\"dtOptionsAR\" class=\"table table-bordered table-striped table-hover\">\n                                                                              <thead>\n                                                                                    <tr>\n                                                                                      <th class=\"table-col-7\">#</th>\n                                                                                      <th class=\"\"> {{'HOME.LG_Number' | translate}}</th>\n                                                                                      <th class=\"\">{{'HOME.LG_amount' | translate}}</th>\n                                                                                      <th class=\"\">{{'HOME.Beneficiary' | translate}}</th>\n                                                                                      <th class=\"\">{{'HOME.Bank' | translate}}</th>\n                                                                                      <th class=\"\">{{'HOME.LG_TYPE' | translate}}</th>\n                                                                                      <th class=\"\">{{'HOME.LG_Status' | translate}}</th>\n                                                                                      <th class=\"\">{{'HOME.Start_Date' | translate}}</th>\n                                                                                      <th class=\"\">{{'HOME.End_Date' | translate}}</th>\n                                                                                      <th class=\"\">{{'HOME.View_Details' | translate}}</th>\n                                                                                    </tr>\n                                                                              </thead>\n                                                                              <tbody>\n                                                                              <tr *ngFor=\"let myActiveLgList of myActiveLgLists.userObject; let i = index \">\n                                                                                  <td>{{i+1}}</td>\n                                                                                  <td>{{myActiveLgList.lg_no}}</td>\n                                                                                  <td>{{myActiveLgList.lG_amount}}</td>\n                                                                                  <td>{{myActiveLgList.beneficiary_name}}</td>\n                                                                                  <td>{{myActiveLgList.bank_name}}</td>\n                                                                                  <td>{{myActiveLgList.lg_type}}</td>\n                                                                                  <td>{{myActiveLgList.status}}</td>\n                                                                                  <td>{{myActiveLgList.start_date}}</td>\n                                                                                  <td>{{myActiveLgList.end_date}}</td>\n                                                                                  <td>\n                                                                                    <button type=\"button\" class=\"btn btn-success vw-details\" (click)=\"RowSelected(myActiveLgList)\">Confiscate</button>\n                                                                                  </td>\n                                                                              </tr>\n                                                                              </tbody>\n                                                                            </table>\n                                                                          </ng-template>\n                                                                  </div>\n                                                                  <!--This is for Arabic-->\n                                                                </div>\n                                                                  </div>\n                                                                </div>\n                                                              </div>\n                                                            </div>\n                                                          </div>\n                                                        </div>\n                                                      </div>\n                                                    </div>\n                                                  </div>\n\n                                                  \n                                                </div>\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n                                                \n                                              </form>\n            \n                                            </div>\n                                          </div>\n                                        </div>\n            \n                                      </div>\n                                    </div>\n                                  </div>\n                                </section>\n                              </div>\n                              \n                            </div>\n                          </div>\n                          <!--New Design Here-->\n                        </div>\n                      </div>\n                      <!--===========================\n                                    End Content\n                                    ============================-->\n                   \n              <!--begin::Global Theme Bundle(used by all pages) -->\n              <script src=\"../../assets/js/plugins.bundle.js\" type=\"text/javascript\"></script>\n              <!-- end::Body -->\n            \n            \n            \n            \n            ");

/***/ }),

/***/ "./node_modules/raw-loader/dist/cjs.js!./src/app/private-entity-reg-final/private-entity-reg-final.component.html":
/*!************************************************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/private-entity-reg-final/private-entity-reg-final.component.html ***!
  \************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("\n\n        <!--===========================\n                Start Content\n                ============================-->\n                <div class=\"pt-0 kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor kt-margin-top-50\">\n                  <div class=\"kt-container\">\n            <!--New Design Here-->\n            <div class=\"row\">\n              <div class=\"col-12 col-sm-3 col-md-3 col-lg-3 left-panel-menu-wrap w-20 fixed-wrap\">\n                <ul class=\"vertical-menu\">\n                  <li><a routerLink=\"/dashboard\" class=\"active\"><span class=\"db-icon\"></span>{{'HOME.Dashboard' | translate}}</a></li>\n                  \n                </ul>\n              </div>\n              <div class=\"col-12 col-sm-9 col-md-9 col-lg-9 padding-null scroll-wrap\">\n\n                <div class=\"grey-bg\">\n                  <section class=\"design-process-section\" id=\"process-tab\">\n                    <div>\n                      <div>\n                        <div>\n                          <div class=\"text-left1\">\n                            <h3 class=\"kt-login__title pt-3 m-0 mb-30\">{{'HOME.Private_entity_registration' | translate}}</h3>\n                          </div>\n                          <!-- Tab panes -->\n                          <div class=\"tab-content\">\n                            <div role=\"tabpanel\" class=\"tab-pane active\" id=\"discover\">\n                              <div class=\"design-process-content\">\n                                <!-- <form [formGroup]=\"submitBankDtl\"> -->\n                                <div class=\"row\">\n                                  <div class=\"col-sm-12\">\n                                    <div class=\"pop-block\" *ngIf=\"isShowAlertDiv\">\n                                      <div class=\"blue-block\"><img src=\"../../assets/images/alert.png\" alt=\"alert-icon\"\n                                          class=\"alert-icon\"></div>\n                                      <!-- <div *ngIf=\"isShowAlertDiv\"> -->\n                                        <p>{{commonService.alertMsgforRegistrationFinal | translate}}</p>\n                                      <!-- </div> -->\n                                      <!-- <p>You have new cas requst 1234 from <span class=\"blue-text\"><u>ABC\n                                            company</u></span> waiting your approval</p> -->\n                                      <div class=\"clearfix\"></div>\n                                    </div>\n                                  </div>\n                                  <div class=\"col-sm-12\">\n                                    <!-- <div class=\"kt-portlet\">\n                                      <div class=\"kt-portlet__head\">\n                                        <div class=\"kt-portlet__head-label\">\n                                          <h3 class=\"kt-portlet__head-title\">Bank detail</h3>\n                                        </div>\n                                      </div>\n\n                                      <div class=\"kt-form kt-form--label-right\">\n                                        <div class=\"kt-portlet__body\">\n                                          <div class=\"row\">\n\n                                            <div class=\"col-md-6\">\n                                              <div class=\"form-group margin-bottom-10\">\n                                                <label for=\"bank-name\" class=\"col-form-label\">Select Bank <em\n                                                  style=\"font-style: normal;\"\n                                                  class=\"text-danger-black\">*</em>\n                                                </label>\n                                                <select class=\"form-control col-md-9\" formControlName=\"bankName\">\n                                                    <option>Select bank </option>\n                                                  <option *ngFor=\"let bank of bankList\" >{{bank.bankName}}</option>\n                                                </select>\n                                                <div class=\"validation-errors text-danger\">\n                                                  <div *ngFor=\"let validation of validation_messages.bankName\">\n                                                    <div col-12 class=\"error-message\"\n                                                      *ngIf=\"submitBankDtl.get('bankName').hasError(validation.type) && (submitBankDtl.get('bankName').dirty || submitBankDtl.get('bankName').touched)\">\n                                                      {{ validation.message }}\n                                                    </div>\n                                                  </div>\n                                                </div>\n                                              </div>\n                                            </div>\n                                            <div class=\"col-md-6\">\n                                              <div class=\"form-group margin-bottom-10\">\n                                                <label for=\"iban\" class=\"col-form-label\">IBAN </label>\n                                                <input class=\"form-control col-md-9\" type=\"text\" value=\"\" id=\"\" formControlName=\"bi\">\n                                                <div class=\"validation-errors text-danger\">\n                                                  <div *ngFor=\"let validation of validation_messages.bi\">\n                                                    <div col-12 class=\"error-message\"\n                                                      *ngIf=\"submitBankDtl.get('bi').hasError(validation.type) && (submitBankDtl.get('bi').dirty || submitBankDtl.get('bi').touched)\">\n                                                      {{ validation.message }}\n                                                    </div>\n                                                  </div>\n                                                </div>\n                                              </div>\n                                            </div>\n                                          </div>\n                                        </div>\n\n                                      </div>\n                                    </div> -->\n                                    <!-- <div class=\"kt-portlet__foot\">\n                                        <div class=\"kt-form__actions\">\n                                          <div class=\"row\">\n                                            <div class=\"col-12\">\n                                                <div class=\"pop-block red-block-wrap\" *ngIf=\"isOpenValidationAlert\">\n                                                    <div class=\"red-block\"><img src=\"../../assets/images/alert.png\"\n                                                        alt=\"alert-icon\" class=\"alert-icon\"></div>\n                                                    <p> <b>Error Message</b> Validation failed</p>\n                                                    <button class=\"dlete-btn-wrap\"><img\n                                                        src=\"../../assets/images/delete-button.png\" alt=\"image\"\n                                                        class=\"delete-btn\" (click)=\"closeAlert()\"></button>\n                                                    <div class=\"clearfix\"></div>\n                                                  </div>\n                                              <button type=\"reset\" class=\"btn btn-gry btn-margin-2\" (click)=\"resetForm()\">Cancel</button>\n                                              <button type=\"button\"\n                                                class=\"btn btn-success btn-margin-2\" [disabled]=\"isDisabledSubmitButton\" (click)=\"postBankDetails()\">Submit</button>\n                                            </div>\n                                          </div>\n                                        </div>\n                                      </div> -->\n                                  </div>\n                                </div>\n                              <!-- </form> -->\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </section>\n                </div>\n\n              </div>\n            </div>\n            <!--New Design Here-->\n          </div>\n        </div>\n        <!--===========================\n                End Content\n                ============================-->\n\n <!--begin::Global Theme Bundle(used by all pages) -->\n  <script src=\"../../assets/js/plugins.bundle.js\" type=\"text/javascript\"></script>\n  <!--end::Page Scripts -->\n\n  <!-- end::Body -->\n");

/***/ }),

/***/ "./node_modules/raw-loader/dist/cjs.js!./src/app/private-entity-reg-info/private-entity-reg-info.component.html":
/*!**********************************************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/private-entity-reg-info/private-entity-reg-info.component.html ***!
  \**********************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("\n\n  \n          <!--===========================\n                        Start Content\n                        ============================-->\n                        <div class=\"pt-0 kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor kt-margin-top-50\">\n                          <div class=\"kt-container\">\n              <!--New Design Here-->\n              <div class=\"row\">\n                <div class=\"col-12 col-sm-3 col-md-3 col-lg-3 left-panel-menu-wrap w-20 fixed-wrap\">\n                 \n                  <ul class=\"vertical-menu\">\n                    <li *ngIf=\"roleId == 3\"><a routerLink=\"/adminDashboard\"><span class=\"db-icon\"></span>{{'HOME.Dashboard' | translate}}</a></li>\n                    <li *ngIf=\"roleId == 3\"><a routerLink=\"/pendingtasks\" class=\"active\"><span class=\"lg-icon\"></span>{{'HOME.Pending_Tasks' | translate}}</a></li>\n                  </ul>\n                </div>\n                <div class=\"col-12 col-sm-9 col-md-9 col-lg-9 padding-null scroll-wrap\">\n                  <!-- <div class=\"white-area\">\n                    <div class=\"user-area\">\n                      <span class=\"user-img-wrap\"><img src=\"../../assets/images/user.png\" alt=\"image\"\n                          class=\"user-img\"></span><span>Abdulla Ahmad</span>\n                    </div>\n                    <div class=\"clear\"></div>\n                  </div> -->\n                 \n                  <div class=\"grey-bg\">\n                    <section class=\"design-process-section\" id=\"process-tab\">\n                      <div>\n                        <div>\n                          <div>\n                            \n                            <!-- Tab panes -->\n                            <div class=\"tab-content\">\n                                <div role=\"tabpanel\" class=\"tab-pane active\" id=\"discover\">\n                                  <div class=\"design-process-content\">\n                                    <form class=\"kt-form kt-form--label-right\" [formGroup]=\"privatereginfo\">\n                                      <div class=\"row\">\n                                        <div class=\"col-sm-12\">\n                                          <!--/Basic information -->\n                                          <div class=\"kt-portlet\">\n                                            <div class=\"kt-portlet__head\">\n                                                <div class=\"kt-portlet__head-label\">\n                                                    <h3 class=\"kt-portlet__head-title\">\n                                                        Basic information\n                                                    </h3>\n                                                </div>\n                                            </div>\n                                            <div class=\"kt-form kt-form--label-right\">\n                                                <div class=\"kt-portlet__body\">\n                                                    <div class=\"container\">\n                                                        <div class=\"row\">\n                                                            <div class=\"col-md-6\">\n                                                                <div class=\"form-group margin-bottom-10\">\n                                                                    <label for=\"crn\" class=\"col-form-label\">Commercial registration number <em style=\"font-style: normal;\" class=\"text-danger-black\">*</em></label>\n                                                                    <input class=\"form-control col-md-9 profile-txt1\" type=\"text\" value=\"\" id=\"\" formControlName=\"CommercialRegistrationNumber\" readonly>\n                                                                </div>\n\n                                                            </div>\n                                                            <div class=\"col-md-6\">\n                                                                <div class=\"form-group margin-bottom-10\">\n                                                                    <label for=\"national-id\" class=\"col-form-label\">National identification number <em style=\"font-style: normal;\" class=\"text-danger-black\">*</em></label>\n                                                                    <input class=\"form-control col-md-9 profile-txt1\" type=\"text\" value=\"\" id=\"\" formControlName=\"NationalIdentificationNumber\" readonly>\n                                                                </div>\n                                                            </div>\n\n                                                            <div class=\"col-md-6\">\n                                                                <div class=\"form-group margin-bottom-10\">\n                                                                    <label for=\"date-of-birth\" class=\"col-form-label\">Date of birth <em style=\"font-style: normal;\" class=\"text-danger-black\">*</em></label>\n                                                                    <input class=\"form-control col-md-9 profile-txt1\" type=\"text\" value=\"\" id=\"datepicker11\" formControlName=\"DateofBirth\" readonly>\n                                                                </div>\n                                                            </div>\n\n                                                        </div>\n                                                    </div>\n\n                                                </div>\n                                            </div>\n                                        </div>\n                                          <!--/Basic information -->\n                                          <!--/Entity information -->\n                                          <div class=\"kt-portlet\">\n                                            <div class=\"kt-portlet__head\">\n                                                <div class=\"kt-portlet__head-label\">\n                                                    <h3 class=\"kt-portlet__head-title\">\n                                                         Entity information - MCI\n                                                    </h3>\n                                                </div>\n                                            </div>\n                                            <div class=\"kt-form kt-form--label-right\">\n                                                <div class=\"kt-portlet__body\">\n                                                    <div class=\"container\">\n                                                        <div class=\"row\">\n                                                            <div class=\"col-md-6\">\n                                                                <div class=\"form-group margin-bottom-10\">\n                                                                    <label for=\"crn\" class=\"col-form-label\">CRN</label>\n                                                                    <input class=\"form-control col-md-9 profile-txt1\" type=\"text\" value=\"\" id=\"\" formControlName=\"crNumber\" readonly>\n                                                                </div>\n                                                            </div>\n                                                            <div class=\"col-md-6\">\n                                                                <div class=\"form-group margin-bottom-10\">\n                                                                    <label for=\"entity-name-in-arabic\" class=\"col-form-label\">Entity name in Arabic</label>\n                                                                    <input class=\"form-control col-md-9 profile-txt1\" type=\"text\" value=\"\" id=\"\" formControlName=\"entityName\" readonly>\n                                                                </div>\n                                                            </div>\n                                                            <div class=\"col-md-6\">\n                                                                <div class=\"form-group margin-bottom-10\">\n                                                                    <label for=\"cr-type\" class=\"col-form-label\">CR type</label>\n                                                                    <input class=\"form-control col-md-9 profile-txt1\" type=\"text\" value=\"\" id=\"\" formControlName=\"CRType\" readonly>\n                                                                </div>\n                                                            </div>\n                                                            <div class=\"col-md-6\">\n                                                                <div class=\"form-group margin-bottom-10\">\n                                                                    <label for=\"cr-status\" class=\"col-form-label\">CR status</label>\n                                                                    <input class=\"form-control col-md-9 profile-txt1\" type=\"text\" value=\"\" id=\"\" formControlName=\"CRStatus\" readonly>\n                                                                </div>\n                                                            </div>\n                                                            <div class=\"col-md-6\">\n                                                                <div class=\"form-group margin-bottom-10\">\n                                                                    <label for=\"cr-issue-date \" class=\"col-form-label\">CR issue date </label>\n                                                                    <input class=\"form-control col-md-9 profile-txt1\" type=\"text\" value=\"\" id=\"\" formControlName=\"CRIssueDate\" readonly>\n                                                                </div>\n                                                            </div>\n                                                            <div class=\"col-md-6\">\n                                                                <div class=\"form-group margin-bottom-10\">\n                                                                    <label for=\"cr-expiry-date\" class=\"col-form-label\">CR expiry date</label>\n                                                                    <input class=\"form-control col-md-9 profile-txt1\" type=\"text\" value=\"\" id=\"\" formControlName=\"CRExpiryDate\" readonly>\n                                                                </div>\n                                                            </div>\n                                                            <div class=\"col-md-6\">\n                                                                <div class=\"form-group margin-bottom-10\">\n                                                                    <label for=\"address\" class=\"col-form-label\">Address</label>\n                                                                    <input class=\"form-control col-md-9 profile-txt1\" type=\"text\" value=\"\" id=\"\" formControlName=\"Address\" readonly>\n                                                                </div>\n                                                            </div>\n                                                            <div class=\"col-md-6\">\n                                                                <div class=\"form-group margin-bottom-10\">\n                                                                    <label for=\"city\" class=\"col-form-label\">City</label>\n                                                                    <input class=\"form-control col-md-9 profile-txt1\" type=\"text\" value=\"\" id=\"\" formControlName=\"City\" readonly>\n                                                                </div>\n                                                            </div>\n\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                          <!--/Entity information-->\n                                          <!--/personal information-->\n                                          <div class=\"kt-portlet\">\n                                            <div class=\"kt-portlet__head\">\n                                                <div class=\"kt-portlet__head-label\">\n                                                    <h3 class=\"kt-portlet__head-title\">\n                                                        Personal Information\n                                                    </h3>\n                                                </div>\n                                            </div>\n                                            <!--begin::Form-->\n                                            <div class=\"kt-form kt-form--label-right\">\n                                                <div class=\"kt-portlet__body\">\n                                                    <div class=\"container\">\n                                                        <div class=\"row\">\n                                                            <div class=\"col-md-6\">\n                                                                <div class=\"form-group margin-bottom-10\">\n                                                                    <label for=\"first-name\" class=\"col-form-label\">First name</label>\n                                                                    <input class=\"form-control col-md-9 profile-txt1\" type=\"text\" value=\"\" id=\"\" formControlName=\"FirstName\" readonly>\n                                                                </div>\n                                                            </div>\n                                                            <div class=\"col-md-6\">\n                                                                <div class=\"form-group margin-bottom-10\">\n                                                                    <label for=\"last-name\" class=\"col-form-label\">Last name</label>\n                                                                    <input class=\"form-control col-md-9 profile-txt1\" type=\"text\" value=\"\" id=\"\" formControlName=\"LastName\" readonly>\n                                                                </div>\n                                                            </div>\n                                                            <div class=\"col-md-6\">\n                                                                <div class=\"form-group margin-bottom-10\">\n                                                                    <label for=\"nin\" class=\"col-form-label\">NIN or Iqama <em style=\"font-style: normal;\" class=\"text-danger-black\">*</em></label>\n                                                                    <input class=\"form-control col-md-9 profile-txt1\" type=\"text\" value=\"\" id=\"\" formControlName=\"NIN\" readonly>\n                                                                </div>\n                                                            </div>\n                                                            <div class=\"col-md-6\">\n                                                                <div class=\"form-group margin-bottom-10\">\n                                                                    <label for=\"dob\" class=\"col-form-label\">Date of birth <em style=\"font-style: normal;\" class=\"text-danger-black\">*</em></label>\n                                                                    <input class=\"form-control col-md-9 profile-txt1\" type=\"text\" value=\"\" id=\"\" formControlName=\"DOB\" readonly>\n                                                                </div>\n                                                            </div>\n                                                            <div class=\"col-md-6\">\n                                                                <div class=\"form-group margin-bottom-10\">\n                                                                    <label for=\"email\" class=\"col-form-label\">Email <em style=\"font-style: normal;\" class=\"text-danger-black\">*</em></label>\n                                                                    <input class=\"form-control col-md-9 profile-txt1\" type=\"email\" value=\"\" id=\"\" formControlName=\"emailAddress\" readonly>\n                                                                   \n                                                                </div>\n                                                            </div>\n                                                            <div class=\"col-md-6\">\n                                                                <div class=\"form-group margin-bottom-10\">\n                                                                    <label for=\"mobile-no\" class=\"col-form-label\">Mobile number<em style=\"font-style: normal;\" class=\"text-danger-black\">*</em></label>\n                                                                    <input class=\"form-control col-md-9 profile-txt1\" type=\"text\" value=\"\" id=\"\" formControlName=\"contactNo\" readonly>\n\n                                                                </div>\n                                                            </div>\n                                                            \n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                          <!--/personal information-->\n                                          <!--/Attachments-->\n                                          <div class=\"kt-portlet\">\n                                            <div class=\"kt-portlet__head\">\n                                              <div class=\"kt-portlet__head-label\">\n                                                <h3 class=\"kt-portlet__head-title\">\n                                                  Attachments\n                                                </h3>\n                                              </div>\n                                            </div>\n                                            <!--begin::Form-->\n                                            <div class=\"kt-form kt-form--label-right\">\n                                              <div class=\"kt-portlet__body\">\n                                                <div class=\"form-group row margin-bottom-10\">\n                                                  <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-6\">\n                                                    <div class=\"form-group margin-bottom-10\">\n                                                      <div class=\"attach-label\">\n                                                        <label for=\"repersestative-national-id\"\n                                                          class=\"col-form-label\">CR<em style=\"font-style: normal;\"\n                                                            class=\"text-danger-black\">*</em></label>\n                                                      </div>\n                                                      <div *ngIf=\"privatedata.userObject[0].comm_reg_doc_name != 'null'\">\n                                                      <a target=\"_blank\" href=\"{{hostUrl}}/download/{{privatedata.userObject[0].comm_reg_doc_name}}\" class=\"attachment-info\">{{privatedata.userObject[0].comm_reg_doc_name}}</a>\n                                                    </div>\n                                                    </div>\n    \n                                                  </div>\n                                                  <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-6\">\n                                                    <div class=\"form-group margin-bottom-10\">\n                                                      <div class=\"attach-label\">\n                                                        <label for=\"cr\" class=\"col-form-label\">Representative national ID <em\n                                                            style=\"font-style: normal;\"\n                                                            class=\"text-danger-black\">*</em></label>\n                                                      </div>\n                                                      \n\n                                                      <div *ngIf=\"privatedata.userObject[0].national_id_doc_name != 'null'\">\n                                                     \n                                                      <a target=\"_blank\" href=\"{{hostUrl}}/download/{{privatedata.userObject[0].national_id_doc_name}}\" class=\"attachment-info\">{{privatedata.userObject[0].national_id_doc_name}}</a>\n                                                    </div>\n                                                      \n                                                    </div>\n                                                  </div>\n                                                </div>\n    \n                                                <div class=\"form-group row margin-bottom-10\">\n                                                  <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-6\">\n                                                    <div class=\"form-group margin-bottom-10\">\n                                                      <div class=\"attach-label\">\n                                                        <label for=\"legal-authorization-letter\" class=\"col-form-label\">Legal\n                                                          Authorization Letter <em style=\"font-style: normal;\"\n                                                            class=\"text-danger-black\">*</em></label>\n                                                      </div>\n                                                      <div *ngIf=\"privatedata.userObject[0].leg_agree_doc_name != 'null'\">\n                                                      <a target=\"_blank\" href=\"{{hostUrl}}/download/{{privatedata.userObject[0].leg_agree_doc_name}}\" class=\"attachment-info\">{{privatedata.userObject[0].leg_agree_doc_name}}</a>\n                                                    </div>\n                                                    </div>\n                                                  </div>\n                                                  <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-6\">\n                                                    <div class=\"form-group margin-bottom-10\">\n                                                      <div class=\"attach-label\">\n                                                        <label for=\"legal-agreement-letter\" class=\"col-form-label\">Board resolution for LG authorization\n                                                          <em style=\"font-style: normal;\"\n                                                            class=\"text-danger-black\">*</em></label>\n\n                                                      </div>\n                                                      <div *ngIf=\"privatedata.userObject[0].auth_lettter_doc_name != 'null'\">\n                                                      <a target=\"_blank\" href=\"{{hostUrl}}/download/{{privatedata.userObject[0].auth_lettter_doc_name}}\" class=\"attachment-info\">{{privatedata.userObject[0].auth_lettter_doc_name}}</a>\n                                                    </div>\n                                                    </div>\n                                                  </div>\n                                                </div>\n    \n                                               \n    \n                                              </div>\n                                            </div>\n                                          </div>\n                                          <!--/Attachments-->\n                                          <!--/three buttons-->\n                                         <!--  <div class=\"kt-portlet__foot\">\n                                            <div class=\"kt-form__actions\">\n                                              <div class=\"row\">\n                                                <div class=\"col-12\">\n                                                  \n                                                  <div class=\"btn-wrap\">\n                                                    <button type=\"reset\" class=\"btn btn-success btn-margin-2\"\n                                                      (click)=\"rejectForm()\">Reject</button>\n                                                   \n                                                    <button type=\"button\" class=\"btn btn-success btn-margin-2\"\n                                                      (click)=\"ApprovePrivateReg()\">Approve</button>\n                                                    \n                                                  </div>\n    \n                                                </div>\n                                              </div>\n                                            </div>\n                                          </div> -->\n                                          <!--/three buttons-->\n                                        </div>\n                                      </div>\n                                    </form>\n                                  </div>\n                                </div>\n                              </div>\n\n                          </div>\n                        </div>\n                      </div>\n                    </section>\n                  </div>\n                 \n                </div>\n              </div>\n              <!--New Design Here-->\n            </div>\n          </div>\n          <!--===========================\n                        End Content\n                        ============================-->\n       \n  <!--begin::Global Theme Bundle(used by all pages) -->\n  <script src=\"../../assets/js/plugins.bundle.js\" type=\"text/javascript\"></script>\n  <!-- end::Body -->\n\n");

/***/ }),

/***/ "./node_modules/raw-loader/dist/cjs.js!./src/app/private-entity-reg1/private-entity-reg1.component.html":
/*!**************************************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/private-entity-reg1/private-entity-reg1.component.html ***!
  \**************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("\n\n        <!--===========================\n                Start Content\n                ============================-->\n\n                <div class=\"pt-0 kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor kt-margin-top-50\">\n                  <div class=\"kt-container\">\n          <!--New Design Here-->\n          <div class=\"row\">\n            <div class=\"col-12 col-sm-3 col-md-3 col-lg-3 left-panel-menu-wrap w-20 fixed-wrap\">\n\n              <ul class=\"vertical-menu\">\n                <!-- <li><a routerLink=\"requestLgIssuance\"><span class=\"lg-icon\"></span>LG issuance</a></li>\n                <li><a routerLink=\"dashboard\"><span class=\"db-icon\"></span>Dashboard</a></li> -->\n                <!-- <li><a href=\"#\"><span class=\"ta-icon\"></span>Tabadul accounts</a></li>\n                <li><a href=\"#\"><span class=\"gr-icon\"></span>Government Registration </a></li> -->\n                <!-- <li><a href=\"registration-step1.html\" class=\"active\"><span class=\"pr-icon\"></span>Private\n                    Registration</a></li> -->\n              </ul>\n            </div>\n            <div class=\"col-12 col-sm-9 col-md-9 col-lg-9 padding-null scroll-wrap\">\n\n              <div class=\"grey-bg\">\n                <section class=\"design-process-section\" id=\"process-tab\">\n                  <div>\n                    <div>\n                      <div>\n                        <!-- Nav tabs -->\n                        <ul class=\"nav nav-tabs process-model more-icon-preocess reg-margin\" role=\"tablist\">\n                          <li role=\"presentation\" class=\"active\">\n                            <a routerLink=\"/privateEntityReg\">1</a>\n                          </li>\n                          <li role=\"presentation\">\n                            <a routerLink=\"/privateEntityReg2\">2</a>\n                          </li>\n                          <li role=\"presentation\">\n                            <a routerLink=\"/privateEntityReg3\">3</a>\n                          </li>\n                        </ul>\n                        <div class=\"text-left1\">\n                          <h3 class=\"kt-login__title pt-3 m-0 mb-30\">{{'HOME.Private_entity_registration' | translate}} </h3>\n                        </div>\n                        <!-- Tab panes -->\n                        <div class=\"tab-content\">\n                          <div role=\"tabpanel\" class=\"tab-pane active\" id=\"discover\">\n                            <div class=\"design-process-content\">\n                              <div class=\"row\">\n                                <div class=\"col-sm-12\">\n                                  <div class=\"kt-portlet\">\n                                    <div class=\"kt-portlet__head\">\n                                      <div class=\"kt-portlet__head-label\">\n                                        <h3 class=\"kt-portlet__head-title\">\n                                          {{'HOME.Basic_information' | translate}} \n                                        </h3>\n                                      </div>\n                                    </div>\n                                    <!--begin::Form-->\n                                    <form class=\"kt-form kt-form--label-right\" [formGroup]=\"submitReg1\">\n                                      <div class=\"kt-portlet__body\">\n                                        <div class=\"container\">\n                                          <div class=\"row\">\n                                            <div class=\"col-md-6\">\n                                              <div class=\"form-group margin-bottom-10\">\n                                                <label for=\"crn\" class=\"col-form-label\">{{'HOME.Commercial_registration_number' | translate}}<em\n                                                    style=\"font-style: normal;\"\n                                                    class=\"text-danger-black\">*</em></label>\n                                                <input class=\"form-control col-md-9\" type=\"text\" value=\"\" id=\"\"\n                                                  formControlName=\"crn\" (blur)=\"onBlur($event.target.value)\" maxlength=\"15\">\n                                                <!-- <div class=\"text-danger\">This is a required field</div> -->\n                                                <div class=\"validation-errors text-danger\">\n                                                  <div *ngFor=\"let validation of validation_messages.crn\">\n                                                    <div col-12 class=\"error-message\"\n                                                      *ngIf=\"submitReg1.get('crn').hasError(validation.type) && (submitReg1.get('crn').dirty || submitReg1.get('crn').touched)\">\n                                                      {{ validation.message }}\n                                                    </div>\n                                                  </div>\n                                                </div>\n                                              </div>\n\n                                            </div>\n                                            <div class=\"col-md-6\">\n                                              <div class=\"form-group margin-bottom-10\">\n                                                <label for=\"national-id\" class=\"col-form-label\">{{'HOME.National_identification_number' | translate}} <em\n                                                    style=\"font-style: normal;\"\n                                                    class=\"text-danger-black\">*</em></label>\n                                                <input class=\"form-control col-md-9\" type=\"text\" value=\"\" id=\"\"\n                                                  formControlName=\"mno\" maxlength=\"10\">\n                                                <!-- <div class=\"text-danger\">This is a required field</div> -->\n                                                <div class=\"validation-errors text-danger\">\n                                                  <div *ngFor=\"let validation of validation_messages.mno\">\n                                                    <div col-12 class=\"error-message\"\n                                                      *ngIf=\"submitReg1.get('mno').hasError(validation.type) && (submitReg1.get('mno').dirty || submitReg1.get('mno').touched)\">\n                                                      {{ validation.message }}\n                                                    </div>\n                                                  </div>\n                                                </div>\n                                              </div>\n                                            </div>\n\n                                            <div class=\"col-md-6\">\n                                              <div class=\"form-group margin-bottom-10\">\n                                                <label for=\"address2\" class=\"col-form-label\">{{'HOME.Date_of_birth' | translate}}<em\n                                                    style=\"font-style: normal;\"\n                                                    class=\"text-danger-black\">*</em></label>\n                                                <!-- <input class=\"form-control col-md-9\" type=\"text\" value=\"\" id=\"\"> -->\n                                                <div class=\"ui-g ui-fluid\">\n                                                  <div class=\"col-md-9 padding-null calendar-icon-wrap\">\n                                                    <p-calendar\n                                                    placeholder=\"DD/MM/YYYY\"\n                                                    [readonlyInput]=\"true\"\n                                                    yearRange=\"1950:2050\"\n                                                    [monthNavigator]=\"true\"\n                                                    [yearNavigator]=\"true\"\n                                                    formControlName=\"dateOfBirth\"\n                                                    [showIcon]=\"true\"\n                                                    [(ngModel)]=\"dateOfBirth\"\n                                                    class=\"calendar-text\"\n                                                    [showIcon]=\"true\"\n                                                    [maxDate]=\"maxDate\"\n                                                    (onSelect)=\"getDOB(dateOfBirth)\"\n                                                    dateFormat=\"dd/mm/yy\"></p-calendar>\n                                                    <div class=\"validation-errors text-danger\">\n                                                      <div *ngFor=\"let validation of validation_messages.dateOfBirth\">\n                                                        <div col-12 class=\"error-message\"\n                                                          *ngIf=\"submitReg1.get('dateOfBirth').hasError(validation.type) && (submitReg1.get('dateOfBirth').dirty || submitReg1.get('dateOfBirth').touched)\">\n                                                          {{ validation.message }}\n                                                        </div>\n                                                      </div>\n                                                    </div>\n                                                  </div>\n                                                </div>\n                                              </div>\n                                            </div>\n\n                                          </div>\n                                        </div>\n\n                                      </div>\n                                    </form>\n                                  </div>\n                                  <div class=\"kt-portlet__foot\">\n                                    <div class=\"kt-form__actions\">\n                                      <div class=\"row\">\n                                        <div class=\"col-12\">\n                                            <div class=\"pop-block red-block-wrap\" *ngIf=\"isOpenValidationAlert\">\n                                                <div class=\"red-block\"><img src=\"../../assets/images/alert.png\"\n                                                    alt=\"alert-icon\" class=\"alert-icon\"></div>\n                                                <p> <b>Error Message</b> Validation failed</p>\n                                                <button class=\"dlete-btn-wrap\"><img\n                                                    src=\"../../assets/images/delete-button.png\" alt=\"image\"\n                                                    class=\"delete-btn\" (click)=\"closeAlert()\"></button>\n                                                <div class=\"clearfix\"></div>\n                                              </div>\n                                          <div class=\"btn-wrap\">\n                                            <button href=\"javascript:;\"\n                                              class=\"btn btn-gry btn-margin-2\" (click)=\"resetForm()\">{{'HOME.Cancel' | translate}}</button>\n                                            <button (click)=\"gotoReg2Page()\"\n                                              class=\"btn btn-success btn-margin-2\">{{'HOME.Continue' | translate}}</button>\n                                          </div>\n\n                                        </div>\n                                      </div>\n                                    </div>\n                                  </div>\n\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n\n                      </div>\n                    </div>\n                  </div>\n                </section>\n              </div>\n\n            </div>\n          </div>\n          <!--New Design Here-->\n        </div>\n      </div>\n      <!--===========================\n              End Content\n              ============================-->\n\n<!--begin::Global Theme Bundle(used by all pages) -->\n<script src=\"../../assets/js/plugins.bundle.js\" type=\"text/javascript\"></script>\n\n<!-- end::Body -->\n\n\n");

/***/ }),

/***/ "./node_modules/raw-loader/dist/cjs.js!./src/app/private-entity-reg2/private-entity-reg2.component.html":
/*!**************************************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/private-entity-reg2/private-entity-reg2.component.html ***!
  \**************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("\n  \n        <!--===========================\n                Start Content\n                ============================-->\n                <div class=\"pt-0 kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor kt-margin-top-50\">\n                  <div class=\"kt-container\">\n            <!--New Design Here-->\n            <div class=\"row\">\n              <div class=\"col-12 col-sm-3 col-md-3 col-lg-3 left-panel-menu-wrap w-20 fixed-wrap\">\n               \n                <ul class=\"vertical-menu\">\n                  <!-- <li><a routerLink=\"requestLgIssuance\"><span class=\"lg-icon\"></span>LG issuance</a></li>\n                    <li><a routerLink=\"dashboard\"><span class=\"db-icon\"></span>Dashboard</a></li> -->\n                  <!-- <li><a href=\"#\"><span class=\"ta-icon\"></span>Tabadul accounts</a></li>\n                  <li><a href=\"#\"><span class=\"gr-icon\"></span>Government Registration </a></li>\n                  <li><a href=\"registration-step1.html\" class=\"active\"><span class=\"pr-icon\"></span>Private\n                      Registration</a></li> -->\n                </ul>\n              </div>\n              <div class=\"col-12 col-sm-9 col-md-9 col-lg-9 padding-null scroll-wrap\">\n                \n                <div class=\"grey-bg\">\n                  <section class=\"design-process-section\" id=\"process-tab\">\n                    <div>\n                      <div>\n                        <div>\n                          <!-- Nav tabs -->\n                          <ul class=\"nav nav-tabs process-model more-icon-preocess reg-margin\" role=\"tablist\">\n                            <li role=\"presentation\">\n                              <a routerLink=\"/privateEntityReg\">1</a>\n                            </li>\n                            <li role=\"presentation\" class=\"active\">\n                              <a routerLink=\"/privateEntityReg2\">2</a>\n                            </li>\n                            <li role=\"presentation\">\n                              <a routerLink=\"/privateEntityReg3\">3</a>\n                            </li>\n                          </ul>\n                          <div class=\"text-left1\">\n                            <h3 class=\"kt-login__title pt-3 m-0 mb-30\">{{'HOME.Private_entity_registration' | translate}}</h3>\n                          </div>\n                          <!-- Tab panes -->\n                          <div class=\"tab-content\">\n                            <div role=\"tabpanel\" class=\"tab-pane active\" id=\"discover\">\n                              <div class=\"design-process-content\">\n                                <div class=\"row\">\n                                  <div class=\"col-sm-12\">\n                                    <div class=\"kt-portlet\">\n                                      <div class=\"kt-portlet__head\">\n                                        <div class=\"kt-portlet__head-label\">\n                                          <h3 class=\"kt-portlet__head-title\">\n                                            {{'HOME.Entity_information' | translate}} \n                                          </h3>\n                                        </div>\n                                      </div>\n                                      <!--begin::Form-->\n                                      <form class=\"kt-form kt-form--label-right\" [formGroup]=\"submitReg2\">\n                                        <div class=\"kt-portlet__body\">\n                                          <div class=\"container\">\n                                            <div class=\"row\">\n                                              <div class=\"col-md-6\">\n                                                <div class=\"form-group margin-bottom-10\">\n                                                  <label for=\"crn\" class=\"col-form-label\">{{'HOME.Commercial_registration_number' | translate}} </label>\n                                                  <input class=\"form-control col-md-9 profile-txt1\" type=\"text\" value=\"\"\n                                                    id=\"\" formControlName=\"crNumber\" readonly>\n                                                  <!-- <div class=\"text-danger\">This is a required field</div> -->\n                                                </div>\n                                              </div>\n                                              <div class=\"col-md-6\">\n                                                <div class=\"form-group margin-bottom-10\">\n                                                  <label for=\"entity-name\" class=\"col-form-label\">{{'HOME.Entity_name_Arabic' | translate}}</label>\n                                                  <input class=\"form-control col-md-9 profile-txt1\" type=\"text\" value=\"\"\n                                                    id=\"\" formControlName=\"entityName\" readonly>\n                                                  <!-- <div class=\"text-danger\">This is a required field</div> -->\n                                                </div>\n                                              </div>\n                                              <div class=\"col-md-6\">\n                                                <div class=\"form-group margin-bottom-10\">\n                                                  <label for=\"entity-name\" class=\"col-form-label\">{{'HOME.Commercial_registration_type' | translate}}</label>\n                                                  <input class=\"form-control col-md-9 profile-txt1\" type=\"text\" value=\"\"\n                                                    id=\"\" formControlName=\"cr_type\" readonly>\n                                                  <!-- <div class=\"text-danger\">This is a required field</div> -->\n                                                </div>\n                                              </div>\n                                              <div class=\"col-md-6\">\n                                                <div class=\"form-group margin-bottom-10\">\n                                                  <label for=\"entity-name\" class=\"col-form-label\">{{'HOME.Commercial_registration_status' | translate}}</label>\n                                                  <input class=\"form-control col-md-9 profile-txt1\" type=\"text\" value=\"\"\n                                                    id=\"\" formControlName=\"cr_status\" readonly>\n                                                  <!-- <div class=\"text-danger\">This is a required field</div> -->\n                                                </div>\n                                              </div>\n\n                                              <div class=\"col-md-6\">\n                                                <div class=\"form-group margin-bottom-10\">\n                                                  <label for=\"mobile-number\" class=\"col-form-label\">{{'HOME.Commercial_registration_issue_date' | translate}}\n                                                  </label>\n                                                  <input class=\"form-control col-md-9 profile-txt1\" type=\"text\" value=\"\"\n                                                    id=\"\" formControlName=\"cr_issue_dt\" readonly>\n                                                  <!-- <div class=\"text-danger\">This is a required field</div> -->\n                                                </div>\n                                              </div>\n                                              <div class=\"col-md-6\">\n                                                <div class=\"form-group margin-bottom-10\">\n                                                  <label for=\"email\" class=\"col-form-label\">{{'HOME.Commercial_registration_expiry_date' | translate}} </label>\n                                                  <input class=\"form-control col-md-9 profile-txt1\" type=\"email\"\n                                                    value=\"\" id=\"\" formControlName=\"cr_expiry_dt\" readonly>\n                                                  <!-- <div class=\"text-danger\">This is a required field</div> -->\n                                                </div>\n                                              </div>\n                                              <div class=\"col-md-6\">\n                                                <div class=\"form-group margin-bottom-10\">\n                                                  <label for=\"address1\" class=\"col-form-label\">{{'HOME.Address' | translate}} </label>\n                                                  <input class=\"form-control col-md-9 profile-txt1\" type=\"text\" value=\"\"\n                                                    id=\"\" formControlName=\"address\" readonly>\n                                                  <!-- <div class=\"text-danger\">This is a required field</div> -->\n                                                </div>\n                                              </div>\n                                              <div class=\"col-md-6\">\n                                                <div class=\"form-group margin-bottom-10\">\n                                                  <label for=\"address2\" class=\"col-form-label\">{{'HOME.City' | translate}}  </label>\n                                                  <input class=\"form-control col-md-9 profile-txt1\" type=\"text\" value=\"\"\n                                                    id=\"\" formControlName=\"city\" readonly>\n                                                  <!-- <div class=\"text-danger\">This is a required field</div> -->\n                                                </div>\n                                              </div>\n                                            </div>\n                                          </div>\n                                        </div>\n                                      </form>\n                                    </div>\n                                    <div class=\"kt-portlet__foot\">\n                                      <div class=\"kt-form__actions\">\n                                        <div class=\"row\">\n                                          <div class=\"col-12\">\n                                            <div class=\"btn-wrap\">\n                                              <!-- <button type=\"reset\" class=\"btn btn-success btn-margin-2\"\n                                                (click)=\"resetForm()\">{{'HOME.Cancel' | translate}}</button> -->\n                                              <button type=\"button\" (click)=\"gotoPrevious()\"\n                                                class=\"btn btn-gry btn-margin-2\">{{'HOME.Previous' | translate}} </button>\n                                              <button type=\"button\" (click)=\"saveReg2()\"\n                                                class=\"btn btn-success btn-margin-2\">{{'HOME.Continue' | translate}}</button>\n                                            </div>\n                                          </div>\n                                        </div>\n                                      </div>\n                                    </div>\n\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n\n                        </div>\n                      </div>\n                    </div>\n                  </section>\n                </div>\n                \n              </div>\n            </div>\n            <!--New Design Here-->\n          </div>\n        </div>\n        <!--===========================\n                End Content\n                ============================-->\n      \n  <!--begin::Global Theme Bundle(used by all pages) -->\n  <script src=\"../../assets/js/plugins.bundle.js\" type=\"text/javascript\"></script>\n  <!-- end::Body -->\n\n");

/***/ }),

/***/ "./node_modules/raw-loader/dist/cjs.js!./src/app/private-entity-reg3/private-entity-reg3.component.html":
/*!**************************************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/private-entity-reg3/private-entity-reg3.component.html ***!
  \**************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("\n\n\n        <!--===========================\n                Start Content\n                ============================-->\n                <div class=\"pt-0 kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor kt-margin-top-50\">\n                  <div class=\"kt-container\">\n            <!--New Design Here-->\n            <div class=\"row\">\n              <div class=\"col-12 col-sm-3 col-md-3 col-lg-3 left-panel-menu-wrap w-20 fixed-wrap\">\n\n                <ul class=\"vertical-menu\">\n                  <!-- <li><a routerLink=\"requestLgIssuance\"><span class=\"lg-icon\"></span>LG issuance</a></li>\n                    <li><a routerLink=\"dashboard\"><span class=\"db-icon\"></span>Dashboard</a></li> -->\n                  <!-- <li><a href=\"#\"><span class=\"lg-icon\"></span>LG issuance</a></li>\n                  <li><a href=\"#\"><span class=\"ta-icon\"></span>Tabadul accounts</a></li>\n                  <li><a href=\"#\"><span class=\"gr-icon\"></span>Government Registration </a></li>\n                  <li><a href=\"registration-step1.html\" class=\"active\"><span class=\"pr-icon\"></span>Private\n                      Registration</a></li> -->\n                </ul>\n              </div>\n              <div class=\"col-12 col-sm-9 col-md-9 col-lg-9 padding-null scroll-wrap\">\n\n                <div class=\"grey-bg\">\n                  <section class=\"design-process-section\" id=\"process-tab\">\n                    <div>\n                      <div>\n                        <div>\n                          <!-- Nav tabs -->\n                          <ul class=\"nav nav-tabs process-model more-icon-preocess reg-margin\" role=\"tablist\">\n                            <li role=\"presentation\">\n                              <a routerLink=\"/privateEntityReg\">1</a>\n                            </li>\n                            <li role=\"presentation\">\n                              <a routerLink=\"/privateEntityReg2\">2</a>\n                            </li>\n                            <li role=\"presentation\" class=\"active\">\n                              <a routerLink=\"/privateEntityReg3\">3</a>\n                            </li>\n                          </ul>\n                          <div class=\"text-left1\">\n                            <h3 class=\"kt-login__title pt-3 m-0 mb-30\">{{'HOME.Private_entity_registration' | translate}}</h3>\n                          </div>\n                          <!-- Tab panes -->\n                          <div class=\"tab-content\">\n                            <div role=\"tabpanel\" class=\"tab-pane active\" id=\"discover\">\n                              <div class=\"design-process-content\">\n                                <form class=\"kt-form kt-form--label-right\" [formGroup]=\"submitReg3\">\n                                  <div class=\"row\">\n                                    <div class=\"col-sm-12\">\n                                      <!--/personal information-->\n                                      <div class=\"kt-portlet\">\n                                        <div class=\"kt-portlet__head\">\n                                          <div class=\"kt-portlet__head-label\">\n                                            <h3 class=\"kt-portlet__head-title\">\n                                              {{'HOME.Personal_Information' | translate}}\n                                            </h3>\n                                          </div>\n                                        </div>\n                                        <!--begin::Form-->\n                                        <div class=\"kt-form kt-form--label-right\">\n                                          <div class=\"kt-portlet__body\">\n                                            <div class=\"container\">\n                                              <div class=\"row\">\n                                                <div class=\"col-md-6\">\n                                                  <div class=\"form-group margin-bottom-10\">\n                                                    <label for=\"name\" class=\"col-form-label\">{{'HOME.First_name' | translate}}<em\n                                                        style=\"font-style: normal;\"\n                                                        class=\"text-danger-black\">*</em></label>\n                                                    <input class=\"form-control col-md-9 profile-txt1\" type=\"text\" value=\"\" id=\"\"\n                                                      formControlName=\"name\" readonly>\n                                                    <!-- <div class=\"text-danger\">This is a required field</div> -->\n                                                    <!-- <div class=\"validation-errors text-danger\">\n                                                      <div *ngFor=\"let validation of validation_messages.name\">\n                                                        <div col-12 class=\"error-message\"\n                                                          *ngIf=\"submitReg3.get('name').hasError(validation.type) && (submitReg3.get('name').dirty || submitReg3.get('name').touched)\">\n                                                          {{ validation.message }}\n                                                        </div>\n                                                      </div>\n                                                    </div> -->\n                                                  </div>\n                                                </div>\n                                                <div class=\"col-md-6\">\n                                                  <div class=\"form-group margin-bottom-10\">\n                                                    <label for=\"user-name\" class=\"col-form-label\">{{'HOME.Last_name' | translate}} <em\n                                                        style=\"font-style: normal;\"\n                                                        class=\"text-danger-black\">*</em></label>\n                                                    <input class=\"form-control col-md-9 profile-txt1\" type=\"text\" value=\"\" id=\"\"\n                                                      formControlName=\"userName\" readonly>\n                                                    <!-- <div class=\"text-danger\">This is a required field</div> -->\n                                                    <!-- <div class=\"validation-errors text-danger\">\n                                                      <div *ngFor=\"let validation of validation_messages.userName\">\n                                                        <div col-12 class=\"error-message\"\n                                                          *ngIf=\"submitReg3.get('userName').hasError(validation.type) && (submitReg3.get('userName').dirty || submitReg3.get('userName').touched)\">\n                                                          {{ validation.message }}\n                                                        </div>\n                                                      </div>\n                                                    </div> -->\n                                                  </div>\n                                                </div>\n                                                <div class=\"col-md-6\">\n                                                  <div class=\"form-group margin-bottom-10\">\n                                                    <label for=\"user-name\" class=\"col-form-label\">{{'HOME.National_identification_number' | translate}} <em\n                                                        style=\"font-style: normal;\"\n                                                        class=\"text-danger-black\">*</em></label>\n                                                    <input class=\"form-control col-md-9 profile-txt1\" type=\"text\" value=\"\" id=\"\"\n                                                      formControlName=\"nin\" readonly>\n                                                    <!-- <div class=\"text-danger\">This is a required field</div> -->\n                                                    <!-- <div class=\"validation-errors text-danger\">\n                                                      <div *ngFor=\"let validation of validation_messages.userName\">\n                                                        <div col-12 class=\"error-message\"\n                                                          *ngIf=\"submitReg3.get('userName').hasError(validation.type) && (submitReg3.get('userName').dirty || submitReg3.get('userName').touched)\">\n                                                          {{ validation.message }}\n                                                        </div>\n                                                      </div>\n                                                    </div> -->\n                                                  </div>\n                                                </div>\n\n                                                <div class=\"col-md-6\">\n                                                  <div class=\"form-group margin-bottom-10\">\n                                                    <label for=\"user-name\" class=\"col-form-label\">{{'HOME.Date_of_birth' | translate}} <em\n                                                        style=\"font-style: normal;\"\n                                                        class=\"text-danger-black\">*</em></label>\n                                                    <input class=\"form-control col-md-9 profile-txt1\" type=\"text\" value=\"\" id=\"\"\n                                                      formControlName=\"dob\" readonly>\n                                                    <!-- <div class=\"text-danger\">This is a required field</div> -->\n                                                    <!-- <div class=\"validation-errors text-danger\">\n                                                      <div *ngFor=\"let validation of validation_messages.userName\">\n                                                        <div col-12 class=\"error-message\"\n                                                          *ngIf=\"submitReg3.get('userName').hasError(validation.type) && (submitReg3.get('userName').dirty || submitReg3.get('userName').touched)\">\n                                                          {{ validation.message }}\n                                                        </div>\n                                                      </div>\n                                                    </div> -->\n                                                  </div>\n                                                </div>\n\n\n\n                                                <div class=\"col-md-6\">\n                                                  <div class=\"form-group margin-bottom-10\">\n                                                    <label for=\"email\" class=\"col-form-label\">{{'HOME.Email' | translate}} <em\n                                                        style=\"font-style: normal;\"\n                                                        class=\"text-danger-black\">*</em></label>\n                                                    <input class=\"form-control col-md-9\" type=\"email\" value=\"\" id=\"\"\n                                                      formControlName=\"email\">\n                                                    <!-- <div class=\"text-danger\">This is a required field</div> -->\n                                                    <div class=\"validation-errors text-danger\">\n                                                      <div *ngFor=\"let validation of validation_messages.email\">\n                                                        <div col-12 class=\"error-message\"\n                                                          *ngIf=\"submitReg3.get('email').hasError(validation.type) && (submitReg3.get('email').dirty || submitReg3.get('email').touched)\">\n                                                          {{ validation.message }}\n                                                        </div>\n                                                      </div>\n                                                    </div>\n                                                  </div>\n                                                </div>\n                                                <div class=\"col-md-6\">\n                                                  <div class=\"form-group margin-bottom-10\">\n                                                    <label for=\"user-id\" class=\"col-form-label\">{{'HOME.Mobile_number' | translate}} <em style=\"font-style: normal;\"\n                                                        class=\"text-danger-black\">*</em></label>\n                                                    <input class=\"form-control col-md-9\" type=\"text\" value=\"\" id=\"\"\n                                                      formControlName=\"mobileNo\" maxlength=\"11\" (blur)=\"onBlurMobile($event.target.value)\">\n                                                    <div class=\"validation-errors text-danger\">\n                                                      <div *ngFor=\"let validation of validation_messages.mobileNo\">\n                                                        <div col-12 class=\"error-message\"\n                                                          *ngIf=\"submitReg3.get('mobileNo').hasError(validation.type) && (submitReg3.get('mobileNo').dirty || submitReg3.get('mobileNo').touched)\">\n                                                          {{ validation.message }}\n                                                        </div>\n                                                      </div>\n                                                    </div>\n                                                  </div>\n                                                </div>\n                                                <div class=\"col-md-6\">\n                                                  <div class=\"form-group margin-bottom-10\">\n                                                    <label for=\"national-id\" class=\"col-form-label\">{{'HOME.password' | translate}}\n                                                      <em style=\"font-style: normal;\"\n                                                        class=\"text-danger-black\">*</em></label>\n                                                    <input class=\"form-control col-md-9\" type=\"password\" value=\"\" id=\"\"\n                                                      formControlName=\"password\">\n                                                    <!-- <div class=\"text-danger\">This is a required field</div> -->\n                                                    <div class=\"validation-errors text-danger\">\n                                                      <div *ngFor=\"let validation of validation_messages.password\">\n                                                        <div col-12 class=\"error-message\"\n                                                          *ngIf=\"submitReg3.get('password').hasError(validation.type) && (submitReg3.get('password').dirty || submitReg3.get('password').touched)\">\n                                                          {{ validation.message }}\n                                                        </div>\n                                                      </div>\n                                                    </div>\n                                                  </div>\n                                                </div>\n                                                <div class=\"col-md-6\">\n                                                  <div class=\"form-group margin-bottom-10\">\n                                                    <label for=\"mobile-number\" class=\"col-form-label\">{{'HOME.Confirm_password' | translate}}\n                                                      <em style=\"font-style: normal;\"\n                                                        class=\"text-danger-black\">*</em></label>\n                                                    <input class=\"form-control col-md-9\" type=\"password\" value=\"\" id=\"\"\n                                                      formControlName=\"confirmPassword\" (blur)=\"onBlur($event.target.value)\">\n                                                    <!-- <div class=\"text-danger\">This is a required field</div> -->\n                                                    <div class=\"validation-errors text-danger\">\n                                                      <div *ngFor=\"let validation of validation_messages.confirmPassword\">\n                                                        <div col-12 class=\"error-message\"\n                                                          *ngIf=\"submitReg3.get('confirmPassword').hasError(validation.type) && (submitReg3.get('confirmPassword').dirty || submitReg3.get('confirmPassword').touched)\">\n                                                          {{ validation.message }}\n                                                        </div>\n                                                      </div>\n                                                    </div>\n                                                  </div>\n                                                </div>\n\n                                              </div>\n                                            </div>\n                                          </div>\n                                        </div>\n                                      </div>\n                                      <!--/personal information-->\n                                      <!--/Attachments-->\n                                      <div class=\"kt-portlet\">\n                                        <div class=\"kt-portlet__head\">\n                                          <div class=\"kt-portlet__head-label\">\n                                            <h3 class=\"kt-portlet__head-title\">\n                                              {{'HOME.Attachments' | translate}} \n                                            </h3>\n                                          </div>\n                                        </div>\n                                        <!--begin::Form-->\n                                        <div class=\"kt-form kt-form--label-right\">\n                                          <div class=\"kt-portlet__body\">\n                                            <div class=\"form-group row margin-bottom-10\">\n                                              <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-6\">\n                                                <div class=\"form-group margin-bottom-10\">\n                                                  <div class=\"attach-label\">\n                                                    <label for=\"cr\" class=\"col-form-label\">{{'HOME.CR' | translate}}  <em\n                                                        style=\"font-style: normal;\"\n                                                        class=\"text-danger-black\">*</em></label>\n                                                  </div>\n                                                  <div class=\"col-md-9\">\n                                                    <div class=\"input-group mb-3\">\n                                                      <div class=\"custom-file\">\n                                                        <input type=\"file\" class=\"custom-file-input\"\n                                                          id=\"inputGroupFile03\" formControlName=\"crFile\"\n                                                          (change)=\"fileProgress($event, 'cr')\" />\n                                                        <!-- <label class=\"custom-file-label\" for=\"inputGroupFile03\">{{this.crFile.name}}</label> -->\n                                                        <div *ngIf=\"isSelectedcrFile; else notShowcr\">\n                                                          <label class=\"custom-file-label\"\n                                                            for=\"inputGroupFile05\">{{this.crFile.name | summary}}</label>\n                                                        </div>\n                                                        <ng-template #notShowcr>\n                                                          <label class=\"custom-file-label\"\n                                                            for=\"inputGroupFile05\">{{notSelected}}</label>\n                                                        </ng-template>\n                                                      </div>\n                                                    </div>\n                                                    <!-- <div class=\"text-danger m-top-17\">This is a required field</div> -->\n                                                    <div class=\"validation-errors text-danger m-top-17\">\n                                                      <div *ngFor=\"let validation of validation_messages.crFile\">\n                                                        <div col-12 class=\"error-message\"\n                                                          *ngIf=\"submitReg3.get('crFile').hasError(validation.type) && (submitReg3.get('crFile').dirty || submitReg3.get('crFile').touched)\">\n                                                          {{ validation.message }}\n                                                        </div>\n                                                      </div>\n                                                    </div>\n                                                  </div>\n                                                </div>\n                                              </div>\n                                              <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-6\">\n                                                <div class=\"form-group margin-bottom-10\">\n                                                  <div class=\"attach-label\">\n                                                    <label for=\"repersestative-national-id\"\n                                                      class=\"col-form-label\">{{'HOME.Representative_National_ID' | translate}} <em style=\"font-style: normal;\"\n                                                        class=\"text-danger-black\">*</em></label>\n                                                  </div>\n                                                  <div class=\"col-md-9\">\n                                                    <div class=\"input-group mb-3\">\n                                                      <div class=\"custom-file\">\n                                                        <input type=\"file\" class=\"custom-file-input\"\n                                                          id=\"inputGroupFile02\" formControlName=\"rniFile\"\n                                                          (change)=\"fileProgress($event, 'rni')\" />\n                                                        <div *ngIf=\"isSelectedrniFile; else notShow\">\n                                                          <label class=\"custom-file-label\"\n                                                            for=\"inputGroupFile05\">{{this.rniFile.name | summary}}</label>\n                                                        </div>\n                                                        <ng-template #notShow>\n                                                          <label class=\"custom-file-label\"\n                                                            for=\"inputGroupFile05\">{{notSelected}}</label>\n                                                        </ng-template>\n                                                      </div>\n                                                    </div>\n                                                    <!-- <div class=\"text-danger m-top-17\">This is a required field</div> -->\n                                                    <div class=\"validation-errors text-danger m-top-17\">\n                                                      <div *ngFor=\"let validation of validation_messages.rniFile\">\n                                                        <div col-12 class=\"error-message\"\n                                                          *ngIf=\"submitReg3.get('rniFile').hasError(validation.type) && (submitReg3.get('rniFile').dirty || submitReg3.get('rniFile').touched)\">\n                                                          {{ validation.message }}\n                                                        </div>\n                                                      </div>\n                                                    </div>\n                                                  </div>\n                                                </div>\n\n                                              </div>\n\n                                            </div>\n\n                                            <div class=\"form-group row margin-bottom-10\">\n                                              <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-6\">\n                                                <div class=\"form-group margin-bottom-10\">\n                                                  <div class=\"attach-label\">\n                                                    <label for=\"legal-authorization-letter\" class=\"col-form-label\">{{'HOME.Legal_Authorization_Letter' | translate}} <em style=\"font-style: normal;\"\n                                                        class=\"text-danger-black\">*</em></label>\n                                                  </div>\n                                                  <div class=\"col-md-9\">\n                                                    <div class=\"input-group mb-3\">\n                                                      <div class=\"custom-file\">\n                                                        <input type=\"file\" class=\"custom-file-input\"\n                                                          id=\"inputGroupFile04\" formControlName=\"laglFile\"\n                                                          (change)=\"fileProgress($event, 'lagl')\" />\n                                                        <!-- <label class=\"custom-file-label\" for=\"inputGroupFile04\">{{this.laglFile.name}}</label> -->\n                                                        <div *ngIf=\"isSelectedlaglFile; else notShowlagl\">\n                                                          <label class=\"custom-file-label\"\n                                                            for=\"inputGroupFile05\">{{this.laglFile.name | summary}}</label>\n                                                        </div>\n                                                        <ng-template #notShowlagl>\n                                                          <label class=\"custom-file-label\"\n                                                            for=\"inputGroupFile05\">{{notSelected}}</label>\n                                                        </ng-template>\n                                                      </div>\n                                                    </div>\n                                                    <!-- <div class=\"text-danger m-top-17\">This is a required field</div> -->\n                                                    <div class=\"validation-errors text-danger m-top-17\">\n                                                      <div *ngFor=\"let validation of validation_messages.laglFile\">\n                                                        <div col-12 class=\"error-message\"\n                                                          *ngIf=\"submitReg3.get('laglFile').hasError(validation.type) && (submitReg3.get('laglFile').dirty || submitReg3.get('laglFile').touched)\">\n                                                          {{ validation.message }}\n                                                        </div>\n                                                      </div>\n                                                    </div>\n                                                  </div>\n                                                </div>\n                                              </div>\n                                              <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-6\">\n                                                <div class=\"form-group margin-bottom-10\">\n                                                  <div class=\"attach-label\">\n                                                    <label for=\"legal-agreement-letter\" class=\"col-form-label\">\n                                                      {{'HOME.resolution_for_LG_authorization' | translate}} \n\n                                                      <em style=\"font-style: normal;\"\n                                                        class=\"text-danger-black\">*</em></label>\n                                                  </div>\n                                                  <div class=\"col-md-9\">\n                                                    <div class=\"input-group mb-3\">\n                                                      <div class=\"custom-file\">\n                                                        <input type=\"file\" class=\"custom-file-input\"\n                                                          id=\"inputGroupFile05\" formControlName=\"lalFile\"\n                                                          (change)=\"fileProgress($event, 'lal')\" />\n                                                        <!-- <label class=\"custom-file-label\" for=\"inputGroupFile05\">{{this.lalFile.name}}</label> -->\n                                                        <div *ngIf=\"isSelectedlalFile; else notShowlal\">\n                                                          <label class=\"custom-file-label\"\n                                                            for=\"inputGroupFile05\">{{this.lalFile.name | summary}}</label>\n                                                        </div>\n                                                        <ng-template #notShowlal>\n                                                          <label class=\"custom-file-label\"\n                                                            for=\"inputGroupFile05\">{{notSelected}}</label>\n                                                        </ng-template>\n\n\n                                                      </div>\n                                                    </div>\n                                                    <!-- <div class=\"text-danger m-top-17\">This is a required field</div> -->\n                                                    <div class=\"validation-errors text-danger m-top-17\">\n                                                      <div *ngFor=\"let validation of validation_messages.lalFile\">\n                                                        <div col-12 class=\"error-message\"\n                                                          *ngIf=\"submitReg3.get('lalFile').hasError(validation.type) && (submitReg3.get('lalFile').dirty || submitReg3.get('lalFile').touched)\">\n                                                          {{ validation.message }}\n                                                        </div>\n                                                      </div>\n                                                    </div>\n                                                  </div>\n                                                </div>\n                                              </div>\n                                            </div>\n\n                                            <div class=\"form-group row margin-bottom-10\">\n                                              <div class=\"col-12\">\n                                                <div class=\"text-danger text-center\">Attached documents should be\n                                                  (pdf/jpg/gif/png file format. &lt;500KB only)</div>\n                                              </div>\n                                            </div>\n\n                                          </div>\n                                        </div>\n                                      </div>\n                                      <!--/Attachments-->\n                                      <div class=\"kt-portlet\">\n                                        <div class=\"kt-portlet__head\">\n                                          <div class=\"kt-portlet__head-label\">\n                                            <h3 class=\"kt-portlet__head-title\">{{'HOME.Bank_detail' | translate}} </h3>\n                                          </div>\n                                        </div>\n                                        <!--begin::Form-->\n                                        <div class=\"kt-form kt-form--label-right\">\n                                          <div class=\"kt-portlet__body\">\n                                            <div class=\"row\">\n\n                                              <div class=\"col-md-6\">\n                                                <div class=\"form-group margin-bottom-10\">\n                                                  <label for=\"bank-name\" class=\"col-form-label\">{{'HOME.Select_Bank' | translate}}  <em\n                                                    style=\"font-style: normal;\"\n                                                    class=\"text-danger-black\">*</em>\n                                                  </label>\n                                                  <select class=\"form-control col-md-9\" formControlName=\"bankName\">\n                                                      <option>{{'HOME.Select_Bank' | translate}} </option>\n                                                    <option *ngFor=\"let bank of bankList\" >{{bank.bankName}}</option>\n                                                  </select>\n                                                  <div class=\"validation-errors text-danger\">\n                                                    <div *ngFor=\"let validation of validation_messages.bankName\">\n                                                      <div col-12 class=\"error-message\"\n                                                        *ngIf=\"submitReg3.get('bankName').hasError(validation.type) && (submitReg3.get('bankName').dirty || submitReg3.get('bankName').touched)\">\n                                                        {{ validation.message }}\n                                                      </div>\n                                                    </div>\n                                                  </div>\n                                                </div>\n                                              </div>\n                                              <div class=\"col-md-6\">\n                                                <div class=\"form-group margin-bottom-10\">\n                                                  <label for=\"iban\" class=\"col-form-label\">{{'HOME.IBAN' | translate}} <em style=\"font-style: normal;\"\n                                                    class=\"text-danger-black\">*</em> </label>\n                                                  <input class=\"form-control col-md-9\" type=\"text\" value=\"\" id=\"\" formControlName=\"bi\">\n                                                  <div class=\"validation-errors text-danger\">\n                                                    <div *ngFor=\"let validation of validation_messages.bi\">\n                                                      <div col-12 class=\"error-message\"\n                                                        *ngIf=\"submitReg3.get('bi').hasError(validation.type) && (submitReg3.get('bi').dirty || submitReg3.get('bi').touched)\">\n                                                        {{ validation.message }}\n                                                      </div>\n                                                    </div>\n                                                  </div>\n                                                </div>\n                                              </div>\n                                            </div>\n                                          </div>\n\n                                        </div>\n                                      </div>\n                                      <!--Terms & condition-->\n                                      <div class=\"kt-portlet\">\n                                        <div class=\"kt-portlet__head\">\n                                          <div class=\"kt-portlet__head-label\">\n                                            <h3 class=\"kt-portlet__head-title\">\n                                              {{'HOME.TERMS_AND_CONDITIONS' | translate}}\n                                            </h3>\n                                          </div>\n                                        </div>\n                                        <!--begin::Form-->\n                                        <div class=\"kt-form kt-form--label-right\">\n                                          <div class=\"kt-portlet__body\">\n                                            <div class=\"container\">\n                                              <div class=\"row\">\n                                                <div class=\"col-md-12 text-left\">\n                                                  <div class=\"terms-wrap terms-scroller\">\n                                                    <p>Lorem Ipsum is simply dummy text of the printing and typesetting\n                                                      industry. Lorem Ipsum has been the industry's standard dummy text\n                                                      ever since the 1500s, when an unknown printer took a galley of\n                                                      type and scrambled it to make a type specimen book. It has\n                                                      survived not only five centuries, but also the leap into\n                                                      electronic typesetting, remaining essentially unchanged. It was\n                                                      popularised in the 1960s with the release of Letraset sheets\n                                                      containing Lorem Ipsum passages, and more recently with desktop\n                                                      publishing software like Aldus PageMaker including versions of\n                                                      Lorem Ipsum. Lorem Ipsum is simply dummy text of the printing and\n                                                      typesetting industry. Lorem Ipsum has been the industry's standard\n                                                      dummy text ever since the 1500s, when an unknown printer took a\n                                                      galley of type and scrambled it to make a type specimen book. It\n                                                      has survived not only five centuries, but also the leap into\n                                                      electronic typesetting, remaining essentially unchanged. It was\n                                                      popularised in the 1960s with the release of Letraset sheets\n                                                      containing Lorem Ipsum passages, and more recently with desktop\n                                                      publishing software like Aldus PageMaker including versions of\n                                                      Lorem Ipsum.\n                                                    </p>\n                                                  </div>\n                                                </div>\n                                                <div class=\"col-md-12 text-left\">\n                                                  <div class=\"checkbox\">\n                                                    <label class=\"container-checkbox\">{{'HOME.ACCEPT_TERMS_COND' | translate}}\n                                                      <input type=\"checkbox\" [(ngModel)]=\"checkBox\"\n                                                      formControlName=\"checkBox\" (change)=\"toggleVisibility($event)\" required>\n                                                      <span class=\"checkmark\"></span>\n                                                    </label>\n                                                  </div>\n                                                </div>\n                                              </div>\n                                            </div>\n                                          </div>\n                                        </div>\n                                      </div>\n                                      <!--/Terms & condition-->\n                                      <!--/three buttons-->\n                                      <div class=\"kt-portlet__foot\">\n                                        <div class=\"kt-form__actions\">\n                                          <div class=\"row\">\n                                            <div class=\"col-12\">\n                                              <div class=\"pop-block red-block-wrap\" *ngIf=\"isOpenValidationAlert\">\n                                                <div class=\"red-block\"><img src=\"../../assets/images/alert.png\"\n                                                    alt=\"alert-icon\" class=\"alert-icon\"></div>\n                                                <p> <b>Error Message</b> Validation failed</p>\n                                                <button class=\"dlete-btn-wrap\"><img\n                                                    src=\"../../assets/images/delete-button.png\" alt=\"image\"\n                                                    class=\"delete-btn\" (click)=\"closeAlert()\"></button>\n                                                <div class=\"clearfix\"></div>\n                                              </div>\n                                              <div class=\"btn-wrap\">\n                                                <button  class=\"btn btn-gry btn-margin-2\"\n                                                  (click)=\"resetForm()\">{{'HOME.CANCEL' | translate}}</button>\n                                                <button type=\"button\" (click)=\"gotoPrevious()\"\n                                                  class=\"btn btn-green pad-10-btn btn-margin-2\">{{'HOME.Previous' | translate}}</button>\n                                                <button type=\"button\" class=\"btn btn-success btn-margin-2\"\n                                                  (click)=\"saveReg3()\">{{'HOME.Continue' | translate}}</button>\n                                                <!-- <a href=\"registration-step1.html\" class=\"btn btn-gry\">Previous</a>\n                                              <a href=\"javascript:;\" class=\"btn btn-success\" data-toggle=\"modal\"\n                                                data-target=\"#myModal\">Continue</a> -->\n                                              </div>\n\n                                            </div>\n                                          </div>\n                                        </div>\n                                      </div>\n                                      <!--/three buttons-->\n                                    </div>\n                                  </div>\n                                </form>\n                              </div>\n                            </div>\n                          </div>\n\n                        </div>\n                      </div>\n                    </div>\n                  </section>\n                </div>\n\n              </div>\n            </div>\n            <!--New Design Here-->\n          </div>\n        </div>\n        <!--===========================\n                End Content\n                ============================-->\n\n  <!--Modal-->\n  <div class=\"modal\" id=\"myModal\" *ngIf=\"isOpenModal\">\n    <div class=\"modal-dialog\">\n      <div class=\"modal-content\">\n\n        <!-- Modal Header -->\n        <div class=\"modal-header\">\n          <h4 class=\"modal-title\">Form submitted successfully</h4>\n        </div>\n\n        <!-- Modal body -->\n        <div class=\"modal-body text-center\">\n          <p class=\"margin-bottom-null\">Your form is submitted successfully.You will get a mail after some time.</p>\n        </div>\n\n        <!-- Modal footer -->\n        <div class=\"modal-footer\">\n          <button type=\"button\" class=\"btn btn-success\" (click)=\"closeModal()\">Close</button>\n        </div>\n\n      </div>\n    </div>\n  </div>\n  <!-- begin::Scrolltop -->\n  <div id=\"kt_scrolltop\" class=\"kt-scrolltop\">\n    <i class=\"fa fa-arrow-up\"></i>\n  </div>\n  <!-- end::Scrolltop -->\n\n  <!--begin::Global Theme Bundle(used by all pages) -->\n  <script src=\"../../assets/js/plugins.bundle.js\" type=\"text/javascript\"></script>\n  <!--end::Page Vendors -->\n  <!--start::Browse -->\n  <script>\n    $('#inputGroupFile02').on('change', function () {\n      //get the file name\n      var fileName = $(this).val();\n      //replace the \"Choose a file\" label\n      $(this).next('.custom-file-label').html(fileName);\n    })\n    $('#inputGroupFile03').on('change', function () {\n      //get the file name\n      var fileName = $(this).val();\n      //replace the \"Choose a file\" label\n      $(this).next('.custom-file-label').html(fileName);\n    })\n    $('#inputGroupFile04').on('change', function () {\n      //get the file name\n      var fileName = $(this).val();\n      //replace the \"Choose a file\" label\n      $(this).next('.custom-file-label').html(fileName);\n    })\n    $('#inputGroupFile05').on('change', function () {\n      //get the file name\n      var fileName = $(this).val();\n      //replace the \"Choose a file\" label\n      $(this).next('.custom-file-label').html(fileName);\n    })\n  </script>\n  <!--end::Browse -->\n\n  <!-- end::Body -->\n\n\n");

/***/ }),

/***/ "./node_modules/raw-loader/dist/cjs.js!./src/app/private-lg-details/private-lg-details.component.html":
/*!************************************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/private-lg-details/private-lg-details.component.html ***!
  \************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("\n\n          <!--===========================\n                    Start Content\n                    ============================-->\n                    <div class=\"pt-0 kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor kt-margin-top-50\">\n                        <div class=\"kt-container\">\n                <!--New Design Here-->\n                <div class=\"row\">\n                  <app-sidemenu></app-sidemenu>\n                  <!--<div class=\"col-12 col-sm-3 col-md-3 col-lg-3 left-panel-menu-wrap w-20 fixed-wrap\">\n\n                    <ul class=\"vertical-menu\">\n                      <li *ngIf=\"roleId == 1\"><a routerLink=\"/dashboard\"><span class=\"db-icon\"></span>{{'HOME.Dashboard' | translate}}</a></li>\n                      <li *ngIf=\"roleId == 1\"><a routerLink=\"/privateLgManagement\" class=\"active\"><span class=\"lg-icon\"></span>{{'HOME.LG_Management' | translate}}</a>\n                      <li *ngIf=\"roleId == 1\"><a routerLink=\"/requestLgIssuance\"><span class=\"lg-icon\"></span>{{'HOME.LG_issuance' | translate}}</a></li>\n                      <li *ngIf=\"roleId == 3\"><a routerLink=\"/pendingtasks\"><span class=\"lg-icon\"></span>{{'HOME.Pending_Tasks' | translate}}</a></li>\n                      <li *ngIf=\"roleId == 1\"><a routerLink=\"/privatependingtasks\"><span class=\"lg-icon\"></span>{{'HOME.Pending_Tasks' | translate}}</a>\n                    </ul>\n                  </div>-->\n                  <div class=\"col-12 col-sm-9 col-md-9 col-lg-9 padding-null scroll-wrap\">\n\n                    <div class=\"grey-bg\">\n                      <section class=\"design-process-section\" id=\"process-tab\">\n                        <div>\n                          <div>\n                            <div>\n                              <div class=\"text-left1\">\n                                <h3 class=\"kt-login__title pt-3 m-0 mb-30\">{{'HOME.Letter_guarantee_details' | translate}}</h3>\n                              </div>\n\n                              <!-- Tab panes -->\n                              <div class=\"tab-content\">\n                                <div role=\"tabpanel\" class=\"tab-pane active\" id=\"discover\">\n                                  <div class=\"design-process-content\">\n                                    <form [formGroup]=\"submitLGIssuanceApproval\">\n                                      <div class=\"row\">\n                                        <div *ngIf=\"isalertMsgforAmendmentStatus\" class=\"col-sm-12\">\n                                          <div class=\"pop-block\">\n                                            <div class=\"blue-block\"><img src=\"../../assets/images/alert.png\"\n                                                alt=\"alert-icon\" class=\"alert-icon\"></div>\n                                            <p>{{alertMsgforAmendmentStatus}}</p>\n                                            <div class=\"clearfix\"></div>\n                                          </div>\n                                        </div>\n                                        <div class=\"col-sm-12\">\n                                          <div class=\"kt-portlet\">\n                                            <div class=\"kt-portlet__head\">\n                                              <div class=\"kt-portlet__head-label\">\n                                                <h3 class=\"kt-portlet__head-title\">\n                                                  {{'HOME.LG_DETAILS' | translate}}\n                                                </h3>\n                                              </div>\n                                            </div>\n\n                                            <div class=\"kt-form kt-form--label-right\">\n                                              <div class=\"kt-portlet__body\">\n                                                <div class=\"container\">\n                                                  <div class=\"row\">\n\n                                                    <div class=\"col-md-6\">\n                                                      <div class=\"form-group margin-bottom-10\">\n                                                        <label for=\"lg-type\" class=\"col-form-label\">{{'HOME.Request_ID' | translate}} <em\n                                                            style=\"font-style: normal;\"\n                                                            class=\"text-danger-black\">*</em></label>\n                                                        <input class=\"form-control col-md-9 profile-txt1\" type=\"text\"\n                                                          value=\"\" id=\"\" readonly formControlName=\"requestId\">\n                                                      </div>\n                                                    </div>\n                                                    <div class=\"col-md-6\">\n                                                      <div class=\"form-group margin-bottom-10\">\n                                                        <label for=\"lg-type\" class=\"col-form-label\"> {{'HOME.LG_Number' | translate}}<em\n                                                            style=\"font-style: normal;\"\n                                                            class=\"text-danger-black\">*</em></label>\n                                                        <input class=\"form-control col-md-9 profile-txt1\" type=\"text\"\n                                                          value=\"\" id=\"\" readonly formControlName=\"LGNumber\">\n                                                      </div>\n                                                    </div>\n                                                    <div class=\"col-md-6\">\n                                                      <div class=\"form-group margin-bottom-10\">\n                                                        <label for=\"lg-type\" class=\"col-form-label\">{{'HOME.LG_TYPE' | translate}} <em\n                                                            style=\"font-style: normal;\"\n                                                            class=\"text-danger-black\">*</em></label>\n                                                        <input class=\"form-control col-md-9 profile-txt1\" type=\"text\"\n                                                          value=\"\" id=\"\" readonly formControlName=\"LGType\">\n                                                      </div>\n                                                    </div>\n                                                    <div class=\"col-md-6\">\n                                                      <div class=\"form-group margin-bottom-10\">\n                                                        <label for=\"lg-type\" class=\"col-form-label\">{{'HOME.WRITE_UP' | translate}} <em\n                                                            style=\"font-style: normal;\"\n                                                            class=\"text-danger-black\">*</em></label>\n                                                        <input class=\"form-control col-md-9 profile-txt1\" type=\"text\"\n                                                          value=\"\" id=\"\" readonly formControlName=\"writeUpType\">\n                                                      </div>\n                                                    </div>\n                                                    <div class=\"col-md-6\">\n                                                      <div class=\"form-group margin-bottom-10\">\n                                                        <label for=\"lg-type\" class=\"col-form-label\">{{'HOME.AMOUNT' | translate}} <em\n                                                            style=\"font-style: normal;\"\n                                                            class=\"text-danger-black\">*</em></label>\n                                                        <input class=\"form-control col-md-9 profile-txt1\" type=\"text\"\n                                                          value=\"\" id=\"\" readonly formControlName=\"Amount\">\n                                                      </div>\n                                                    </div>\n                                                    <div class=\"col-md-6\">\n                                                      <div class=\"form-group margin-bottom-10\">\n                                                        <label for=\"lg-type\" class=\"col-form-label\">{{'HOME.AMOUNT_WORDS' | translate}}<em\n                                                            style=\"font-style: normal;\"\n                                                            class=\"text-danger-black\">*</em></label>\n                                                        <input class=\"form-control col-md-9 profile-txt1\" type=\"text\"\n                                                          value=\"\" id=\"\" readonly formControlName=\"amountInText\">\n                                                      </div>\n                                                    </div>\n\n                                                    <div class=\"col-md-6\">\n                                                      <div class=\"form-group margin-bottom-10\">\n                                                        <label for=\"lg-start-date\" class=\"col-form-label\">{{'HOME.LG_START_DATE' | translate}}\n                                                          <em style=\"font-style: normal;\"\n                                                            class=\"text-danger-black\">*</em></label>\n\n                                                        <!-- <p-calendar [style]=\"{'width':'75%'}\" [inputStyle]=\"{'width':'100%'}\" formControlName=\"LGStartDate\"></p-calendar> -->\n                                                        <input class=\"form-control col-md-9 profile-txt1\" type=\"text\"\n                                                          value=\"\" id=\"\" readonly formControlName=\"LGStartDate\">\n\n                                                      </div>\n                                                    </div>\n\n                                                    <div class=\" col-md-6\">\n                                                      <div class=\" form-group margin-bottom-10\">\n                                                        <label for=\"lg-end-date\" class=\"col-form-label\">{{'HOME.LG_END_DATE' | translate}} <em\n                                                            style=\"font-style: normal;\"\n                                                            class=\"text-danger-black\">*</em></label>\n\n                                                        <!-- <p-calendar [style]=\"{'width':'75%'}\" [inputStyle]=\"{'width':'100%'}\" formControlName=\"LGEndDate\"></p-calendar> -->\n                                                        <input class=\"form-control col-md-9 profile-txt1\" type=\"text\"\n                                                          value=\"\" id=\"\" readonly formControlName=\"LGEndDate\">\n                                                      </div>\n                                                    </div>\n\n                                                    <div class=\"col-md-6\">\n                                                      <div class=\"form-group margin-bottom-10\">\n                                                        <label for=\"amount\" class=\"col-form-label\">{{'HOME.Issue_Date' | translate}} <em\n                                                            style=\"font-style: normal;\"\n                                                            class=\"text-danger-black\">*</em></label>\n                                                        <input class=\"form-control col-md-9 profile-txt1\" type=\"text\"\n                                                          value=\"\" id=\"\" readonly formControlName=\"LGIssueDate\">\n                                                      </div>\n                                                    </div>\n\n                                                    <div class=\"col-md-6\">\n                                                      <div class=\"form-group margin-bottom-10\">\n                                                        <label for=\"currency\" class=\"col-form-label\">{{'HOME.CURRENCY' | translate}} <em\n                                                            style=\"font-style: normal;\"\n                                                            class=\"text-danger-black\">*</em></label>\n                                                        <input class=\"form-control col-md-9 profile-txt1\" type=\"text\"\n                                                          value=\"\" id=\"\" readonly formControlName=\"currency\">\n                                                      </div>\n                                                    </div>\n\n                                                    <!--<div class=\"col-md-6\">\n                                                      <div class=\"form-group margin-bottom-10\">\n                                                        <label for=\"amount\" class=\"col-form-label\">{{'HOME.ZAKAT_START_DATE' | translate}}\n                                                        </label>\n                                                        <input class=\"form-control col-md-9 profile-txt1\" type=\"text\"\n                                                          value=\"\" id=\"\" readonly formControlName=\"zakatStartDate\">\n                                                      </div>\n                                                    </div>\n\n                                                    <div class=\"col-md-6\">\n                                                      <div class=\"form-group margin-bottom-10\">\n                                                        <label for=\"amount\" class=\"col-form-label\">{{'HOME.ZAKAT_END_DATE' | translate}}\n                                                        </label>\n                                                        <input class=\"form-control col-md-9 profile-txt1\" type=\"text\"\n                                                          value=\"\" id=\"\" readonly formControlName=\"zakatEndDate\">\n                                                      </div>\n                                                    </div>!-->\n                                                    <div class=\"col-md-6\" *ngIf=\"LGType === 'Zakat Guarantee Bond'\">\n                                                      <div class=\"form-group margin-bottom-10\">\n                                                        <label for=\"amount\" class=\"col-form-label\">{{'HOME.ZAKAT_START_DATE' | translate}}\n                                                        </label>\n                                                        <input class=\"form-control col-md-9 profile-txt1\" type=\"text\"\n                                                          value=\"\" id=\"\" readonly formControlName=\"zakatEndDate\">\n                                                      </div>\n                                                    </div>\n\n\n                                                    <div class=\"col-md-6\" *ngIf=\"LGType === 'Zakat Guarantee Bond'\">\n                                                      <div class=\"form-group margin-bottom-10\">\n                                                        <label for=\"amount\" class=\"col-form-label\">{{'HOME.ZAKAT_END_DATE' | translate}}\n                                                        </label>\n                                                        <input class=\"form-control col-md-9 profile-txt1\" type=\"text\"\n                                                          value=\"\" id=\"\" readonly formControlName=\"zakatEndDate\">\n                                                      </div>\n                                                    </div>\n\n                                                    \n\n                                                    <div class=\"col-md-6\">\n                                                      <div class=\"form-group margin-bottom-10\">\n                                                        <label for=\"amount\" class=\"col-form-label\">{{'HOME.PROJECT_NAME' | translate}} </label>\n                                                        <input class=\"form-control col-md-9 profile-txt1\" type=\"text\"\n                                                          value=\"\" id=\"\" readonly formControlName=\"projectName\">\n                                                      </div>\n                                                    </div>\n\n                                                    <div class=\"col-md-6\">\n                                                      <div class=\"form-group margin-bottom-10\">\n                                                        <label for=\"amount\" class=\"col-form-label\">{{'HOME.PROJECT_NUMBER' | translate}} </label>\n                                                        <input class=\"form-control col-md-9 profile-txt1\" type=\"text\"\n                                                          value=\"\" id=\"\" readonly formControlName=\"projectId\">\n                                                      </div>\n                                                    </div>\n\n                                                    <div class=\"col-md-6\">\n                                                      <div class=\"form-group margin-bottom-10\">\n                                                        <label for=\"amount\" class=\"col-form-label\">{{'HOME.PURPOSE_OF_BOND' | translate}}  <em\n                                                            style=\"font-style: normal;\"\n                                                            class=\"text-danger-black\">*</em></label>\n                                                        <input class=\"form-control col-md-9 profile-txt1\" type=\"text\"\n                                                          value=\"\" id=\"\" readonly formControlName=\"purposeOfBond\">\n                                                      </div>\n                                                    </div>\n\n                                                    <div class=\"col-md-6\" *ngIf=\"LGType === 'Custom Guarantee Bond'\">\n                                                      <div class=\"form-group margin-bottom-10\">\n                                                        <label for=\"amount\" class=\"col-form-label\">{{'HOME.BAYAN_NUMBER' | translate}} </label>\n                                                        <input class=\"form-control col-md-9 profile-txt1\" type=\"text\"\n                                                          value=\"\" id=\"\" readonly formControlName=\"byanNo\">\n                                                      </div>\n                                                    </div>\n                                                    <div class=\"col-md-12\" style=\"text-align: left;\">\n                                                      <div class=\"checkbox chk-margin-top\">\n                                                        <label class=\"container-checkbox\"> {{'HOME.ACCOUNT_OF_CONTRACT_PROCESSED' | translate}}\n                                                          <input type=\"checkbox\" [(ngModel)]=\"ac_of_contract\"\n                                                            formControlName=\"ac_of_contract\" disabled=true >\n                                                          <span class=\"checkmark\"></span>\n                                                        </label>\n                                                      </div>\n                                                    </div>\n\n                                                    <div class=\"col-md-12\" *ngIf=\"isEditTnC\">\n                                                      <div class=\"form-group margin-bottom-10\">\n                                                        <label for=\"terms-and-condition\" class=\"col-form-label\">{{'HOME.TERMS_AND_CONDITIONS' | translate}}<em\n                                                          style=\"font-style: normal;\"\n                                                          class=\"text-danger-black\">*</em></label>\n                                                        <div class=\"terms-wrap\" id=\"editable\">\n                                                          <!-- <textarea rows=\"10\" cols=\"100\"\n                                                            formControlName=\"TermsAndCondContent\" [readonly]=\"!isEditTnC\"\n                                                            [ngStyle]=\"{'background-color':isEditTnC === true ? '#fff' : '#efefef'}\">\n                                                            </textarea> -->\n                                                          <textarea rows=\"10\" cols=\"100\"\n                                                            formControlName=\"TermsAndCondContent\"\n                                                            [(ngModel)]=\"TermsAndCondContent\" [readonly]=\"!isEditTnC\"\n                                                            [ngStyle]=\"styleObject()\">\n                                                            </textarea>\n\n                                                          <div *ngIf=\"isEditTnC\">\n                                                            <button type=\"button\" class=\"btn btn-success margin-top-10\"\n                                                              id=\"editBtn1\" (click)=\"updateTnC()\">{{'HOME.UPDATE' | translate}}</button>\n                                                          </div>\n\n                                                        </div>\n                                                      </div>\n                                                    </div>\n\n                                                    <div class=\"col-md-12\" *ngIf=\"!isEditTnC\">\n                                                      <div class=\"form-group margin-bottom-10\">\n                                                        <label for=\"terms-and-condition\" class=\"col-form-label\">{{'HOME.TERMS_AND_CONDITIONS' | translate}} <em\n                                                          style=\"font-style: normal;\"\n                                                          class=\"text-danger-black\">*</em></label>\n                                                        <div  class=\"terms-wrap \">\n                                                            <textarea rows=\"10\" cols=\"100\" formControlName=\"TermsAndCondContent\" readonly [ngStyle]=\"styleObject()\">\n                                                            </textarea>\n                                                        </div>\n\n                                                        <div class=\"checkbox margin-top-10\">\n                                                          <label class=\"container-checkbox\"> {{'HOME.TERMS_AND_CONDITIONS' | translate}}\n                                                            <input type=\"checkbox\" [(ngModel)]=\"agree_tag\"\n                                                              formControlName=\"agree_tag\" disabled=true >\n                                                            <span class=\"checkmark\"></span>\n                                                          </label>\n                                                        </div>\n\n\n\n                                                      </div>\n                                                    </div>\n\n                                                  </div>\n\n                                                </div>\n                                              </div>\n\n                                            </div>\n                                          </div>\n\n                                          <div class=\"kt-portlet__foot\" *ngIf=\"isEnableButtons\">\n                                            <div class=\"kt-form__actions\">\n                                              <div class=\"row\">\n                                                <div class=\"col-12\">\n                                                  <div class=\"btn-wrap\">\n                                                    <button type=\"button\" class=\"btn btn-red btn-margin-2\"\n                                                      (click)=\"rejectLGIssuanceApprovalData()\">{{'HOME.Reject' | translate}}</button>\n                                                    <button type=\"button\" class=\"btn btn-success btn-margin-2\"\n                                                      (click)=\"acceptLGIssuanceApprovalData()\">{{'HOME.Accept' | translate}}</button>\n                                                  </div>\n\n                                                </div>\n                                              </div>\n                                            </div>\n                                          </div>\n                                          <div class=\"kt-portlet__foot\" *ngIf=\"isEnableGovButtons\">\n                                            <div class=\"kt-form__actions\">\n                                              <div class=\"row\">\n                                                <div class=\"col-12\">\n                                                  <div class=\"btn-wrap\">\n                                                    <button type=\"button\" class=\"btn btn-gry btn-margin-2\"\n                                                      (click)=\"resetData()\">{{'HOME.Cancel' | translate}}</button>\n                                                    <button type=\"button\" class=\"btn btn-success btn-margin-2\"\n                                                      [disabled]=\"isDisablesendBackButton\"\n                                                      (click)=\"sendBackLGIssuanceApprovalData()\">{{'HOME.Send_back' | translate}}</button>\n                                                    <button type=\"button\" class=\"btn btn-gry btn-margin-2\"\n                                                      (click)=\"editLGIssuanceApprovalData()\">{{'HOME.Edit' | translate}}</button>\n                                                    <button type=\"button\" class=\"btn btn-success btn-margin-2\"\n                                                      [disabled]=\"isDisabledApprovedButton\"\n                                                      (click)=\"submitLGIssuanceApprovalData()\">{{'HOME.Approve' | translate}}</button>\n                                                  </div>\n\n                                                </div>\n                                              </div>\n                                            </div>\n                                          </div>\n                                          <div class=\"kt-portlet__foot\" *ngIf=\"nsAcceptButton\">\n                                            <div class=\"kt-form__actions\">\n                                              <div class=\"row\">\n                                                <div class=\"col-12\">\n                                                  <div class=\"btn-wrap\">\n                                                    <button type=\"button\" class=\"btn btn-gry btn-margin-2\"\n                                                      (click)=\"resetData()\">{{'HOME.Cancel' | translate}}</button>\n                                                    <!-- <button type=\"button\" class=\"btn btn-success btn-margin-2\"\n                                                      [disabled]=\"isDisablesendBackButton\"\n                                                      (click)=\"sendBackLGIssuanceApprovalData()\">Send Back</button>\n                                                    <button type=\"button\" class=\"btn btn-gry btn-margin-2\"\n                                                      (click)=\"editLGIssuanceApprovalData()\">Edit</button> -->\n                                                    <button type=\"button\" class=\"btn btn-success btn-margin-2\"\n                                                      [disabled]=\"isDisabledApprovedButton\"\n                                                      (click)=\"submitLGIssuanceApprovalData()\">{{'HOME.Approve' | translate}}</button>\n                                                  </div>\n\n                                                </div>\n                                              </div>\n                                            </div>\n                                          </div>\n                                          \n                                      </div>\n                                      <!--/Lg Details-->\n                                    </div>\n\n\n\n                                  <!--Applicant Information-->\n\n                                    <div class=\"row\">\n                                      <div class=\"col-sm-12\">\n                                        <div class=\"kt-portlet\">\n                                          <div class=\"kt-portlet__head\">\n                                            <div class=\"kt-portlet__head-label\">\n                                              <h3 class=\"kt-portlet__head-title\">\n                                              {{'HOME.Applicant_Information' | translate}}\n                                              </h3>\n                                            </div>\n                                          </div>\n                                          \n                                          <div class=\"kt-form kt-form--label-right\">\n                                            <div class=\"kt-portlet__body\">\n                                            <div class=\"container\">\n\n                                              <div class=\"row\">\n                                                <div class=\"col-md-6\">\n                                                  <div class=\"form-group margin-bottom-10\">\n                                                  <label for=\"lg-type\" class=\"col-form-label\"> {{'HOME.CRN' | translate}}<em\n                                                    style=\"font-style: normal;\"\n                                                    class=\"text-danger-black\"></em></label>\n                                                  <input class=\"form-control col-md-9 profile-txt1\" type=\"text\"\n                                                    value=\"{{Applicant_CRN}}\" id=\"\" readonly formControlName=\"Applicant_CRN\">\n                                                  </div>\n                                                </div>\n                                                <div class=\"col-md-6\">\n                                                  <div class=\"form-group margin-bottom-10\">\n                                                  <label for=\"lg-type\" class=\"col-form-label\">{{'HOME.Entity_name_Arabic' | translate}} <em\n                                                    style=\"font-style: normal;\"\n                                                    class=\"text-danger-black\"></em></label>\n                                                  <input class=\"form-control col-md-9 profile-txt1\" type=\"text\"\n                                                    value=\"{{Applicant_Entity_name_Arabic}}\" id=\"\" readonly formControlName=\"Applicant_Entity_name_Arabic\">\n                                                  </div>\n                                                </div>\n                                               </div>\n                                               <div class=\"row\">\n                                                <div class=\"col-md-6\">\n                                                  <div class=\"form-group margin-bottom-10\">\n                                                  <label for=\"lg-type\" class=\"col-form-label\"> {{'HOME.Selected_Bank' | translate}}<em\n                                                    style=\"font-style: normal;\"\n                                                    class=\"text-danger-black\"></em></label>\n                                                  <input class=\"form-control col-md-9 profile-txt1\" type=\"text\"\n                                                    value=\"{{Applicant_Selected_Bank}}\" id=\"\" readonly formControlName=\"Applicant_Selected_Bank\">\n                                                  </div>\n                                                </div>\n                                                <div class=\"col-md-6\">\n                                                  <div class=\"form-group margin-bottom-10\">\n                                                  <label for=\"lg-type\" class=\"col-form-label\">{{'HOME.Selected_IBAN' | translate}} <em\n                                                    style=\"font-style: normal;\"\n                                                    class=\"text-danger-black\"></em></label>\n                                                  <input class=\"form-control col-md-9 profile-txt1\" type=\"text\"\n                                                    value=\"{{Applicant_Selected_IBAN}}\" id=\"\" readonly formControlName=\"Applicant_Selected_IBAN\">\n                                                  </div>\n                                                </div>\n                                               </div>\n                                               <div class=\"row\">\n                                                <div class=\"col-md-6\">\n                                                  <div class=\"form-group margin-bottom-10\">\n                                                  <label for=\"lg-type\" class=\"col-form-label\"> {{'HOME.CR_type' | translate}}<em\n                                                    style=\"font-style: normal;\"\n                                                    class=\"text-danger-black\"></em></label>\n                                                  <input class=\"form-control col-md-9 profile-txt1\" type=\"text\"\n                                                    value=\"{{Applicant_CR_type}}\" id=\"\" readonly formControlName=\"Applicant_CR_type\">\n                                                  </div>\n                                                </div>\n                                                <div class=\"col-md-6\">\n                                                  <div class=\"form-group margin-bottom-10\">\n                                                  <label for=\"lg-type\" class=\"col-form-label\">{{'HOME.CR_status' | translate}} <em\n                                                    style=\"font-style: normal;\"\n                                                    class=\"text-danger-black\"></em></label>\n                                                  <input class=\"form-control col-md-9 profile-txt1\" type=\"text\"\n                                                    value=\"{{Applicant_CR_status}}\" id=\"\" readonly formControlName=\"Applicant_CR_status\">\n                                                  </div>\n                                                </div>\n                                               </div>\n                                               <div class=\"row\">\n                                                <div class=\"col-md-6\">\n                                                  <div class=\"form-group margin-bottom-10\">\n                                                  <label for=\"lg-type\" class=\"col-form-label\"> {{'HOME.CR_Issue_Date' | translate}}<em\n                                                    style=\"font-style: normal;\"\n                                                    class=\"text-danger-black\"></em></label>\n                                                  <input class=\"form-control col-md-9 profile-txt1\" type=\"text\"\n                                                    value=\"{{Applicant_CR_Issue_Date}}\" id=\"\" readonly formControlName=\"Applicant_CR_Issue_Date\">\n                                                  </div>\n                                                </div>\n                                                <div class=\"col-md-6\">\n                                                  <div class=\"form-group margin-bottom-10\">\n                                                  <label for=\"lg-type\" class=\"col-form-label\">{{'HOME.CR_expiry_Date' | translate}} <em\n                                                    style=\"font-style: normal;\"\n                                                    class=\"text-danger-black\"></em></label>\n                                                  <input class=\"form-control col-md-9 profile-txt1\" type=\"text\"\n                                                    value=\"{{Applicant_CR_expiry_Date}}\" id=\"\" readonly formControlName=\"Applicant_CR_expiry_Date\">\n                                                  </div>\n                                                </div>\n                                               </div>\n                                               <div class=\"row\">\n                                                <div class=\"col-md-6\">\n                                                  <div class=\"form-group margin-bottom-10\">\n                                                  <label for=\"lg-type\" class=\"col-form-label\"> {{'HOME.Address' | translate}}<em\n                                                    style=\"font-style: normal;\"\n                                                    class=\"text-danger-black\"></em></label>\n                                                  <input class=\"form-control col-md-9 profile-txt1\" type=\"text\"\n                                                    value=\"{{Applicant_Address}}\" id=\"\" readonly formControlName=\"Applicant_Address\">\n                                                  </div>\n                                                </div>\n                                                <div class=\"col-md-6\">\n                                                  <div class=\"form-group margin-bottom-10\">\n                                                  <label for=\"lg-type\" class=\"col-form-label\">{{'HOME.City' | translate}} <em\n                                                    style=\"font-style: normal;\"\n                                                    class=\"text-danger-black\"></em></label>\n                                                  <input class=\"form-control col-md-9 profile-txt1\" type=\"text\"\n                                                    value=\"{{Applicant_City}}\" id=\"\" readonly formControlName=\"Applicant_City\">\n                                                  </div>\n                                                </div>\n                                               </div>\n                                            </div>\n                                          </div>\n                                          </div>\n                                          \n                                        </div>\n                                      </div>\n                                    </div>\n                                    <!--Applicant Information-->\n\n\n\n                                  <!--Beneficiary Information-->\n                                    <div class=\"row\">\n                                      <div class=\"col-sm-12\">\n                                        <div class=\"kt-portlet\">\n                                          <div class=\"kt-portlet__head\">\n                                            <div class=\"kt-portlet__head-label\">\n                                              <h3 class=\"kt-portlet__head-title\">\n                                              {{'HOME.Beneficiary_Information' | translate}}\n                                              </h3>\n                                            </div>\n                                          </div>\n                                          \n                                          <div class=\"kt-form kt-form--label-right\">\n                                            <div class=\"kt-portlet__body\">\n                                            <div class=\"container\">\n                                              <div class=\"row\">\n                                              <div class=\"col-md-6\">\n                                                <div class=\"form-group margin-bottom-10\">\n                                                <label for=\"lg-type\" class=\"col-form-label\"> {{'HOME.Name' | translate}}<em\n                                                  style=\"font-style: normal;\"\n                                                  class=\"text-danger-black\"></em></label>\n                                                <input class=\"form-control col-md-9 profile-txt1\" type=\"text\"\n                                                  value=\"\" id=\"\" readonly formControlName=\"Beneficiary_Name\">\n                                                </div>\n                                              </div>\n                                              <div class=\"col-md-6\">\n                                                <div class=\"form-group margin-bottom-10\">\n                                                <label for=\"lg-type\" class=\"col-form-label\">{{'HOME.UID_or_CRN' | translate}} <em\n                                                  style=\"font-style: normal;\"\n                                                  class=\"text-danger-black\"></em></label>\n                                                <input class=\"form-control col-md-9 profile-txt1\" type=\"text\"\n                                                  value=\"\" id=\"\" readonly formControlName=\"Beneficiary_UID_or_CRN\">\n                                                </div>\n                                              </div>\n                                               </div>\n                                            </div>\n                                          </div>\n                                          </div>\n                                          \n                                        </div>\n                                      </div>\n                                    </div>\n\n\n                                  <!--Beneficiary Information-->\n\n                                  <!--Represantitive Information-->\n                                  <!--<div class=\"row\">\n                                    <div class=\"col-sm-12\">\n                                      <div class=\"kt-portlet\">\n                                        <div class=\"kt-portlet__head\">\n                                          <div class=\"kt-portlet__head-label\">\n                                            <h3 class=\"kt-portlet__head-title\">\n                                            {{'HOME.Represantitive_Information' | translate}}\n                                            </h3>\n                                          </div>\n                                        </div>\n                                        \n                                        <div class=\"kt-form kt-form--label-right\">\n                                          <div class=\"kt-portlet__body\">\n                                          <div class=\"container\">\n                                            <div class=\"row\">\n                                              <div class=\"col-md-6\">\n                                                <div class=\"form-group margin-bottom-10\">\n                                                <label for=\"lg-type\" class=\"col-form-label\"> {{'HOME.Name' | translate}}<em\n                                                  style=\"font-style: normal;\"\n                                                  class=\"text-danger-black\"></em></label>\n                                                <input class=\"form-control col-md-9 profile-txt1\" type=\"text\"\n                                                  value=\"\" id=\"\" readonly formControlName=\"Represantitive_Name\">\n                                                </div>\n                                              </div>\n                                              <div class=\"col-md-6\">\n                                                <div class=\"form-group margin-bottom-10\">\n                                                <label for=\"lg-type\" class=\"col-form-label\">{{'HOME.Mobile_number' | translate}} <em\n                                                  style=\"font-style: normal;\"\n                                                  class=\"text-danger-black\"></em></label>\n                                                <input class=\"form-control col-md-9 profile-txt1\" type=\"text\"\n                                                  value=\"\" id=\"\" readonly formControlName=\"Represantitive_Mobile_number\">\n                                                </div>\n                                              </div>\n                                             </div>\n                                             <div class=\"row\">\n                                              <div class=\"col-md-6\">\n                                                <div class=\"form-group margin-bottom-10\">\n                                                <label for=\"lg-type\" class=\"col-form-label\"> {{'HOME.Email' | translate}}<em\n                                                  style=\"font-style: normal;\"\n                                                  class=\"text-danger-black\"></em></label>\n                                                <input class=\"form-control col-md-9 profile-txt1\" type=\"text\"\n                                                  value=\"\" id=\"\" readonly formControlName=\"Represantitive_Email\">\n                                                </div>\n                                              </div>\n                                              <div class=\"col-md-6\">\n                                                <div class=\"form-group margin-bottom-10\">\n                                                <label for=\"lg-type\" class=\"col-form-label\">{{'HOME.Address' | translate}} <em\n                                                  style=\"font-style: normal;\"\n                                                  class=\"text-danger-black\"></em></label>\n                                                <input class=\"form-control col-md-9 profile-txt1\" type=\"text\"\n                                                  value=\"\" id=\"\" readonly formControlName=\"Represantitive_Address\">\n                                                </div>\n                                              </div>\n                                             </div>\n                                          </div>\n                                        </div>\n                                        </div>\n                                        \n                                      </div>\n                                    </div>\n                                  </div>-->\n\n\n                                <!--Represantitive Information-->\n                  \n                                <!--LG History-->\n                                  <div class=\"row\">\n                                    <div class=\"col-sm-12\">\n                                      <div class=\"kt-portlet\">\n                                        <div class=\"kt-portlet__head\">\n                                          <div class=\"kt-portlet__head-label\">\n                                            <h3 class=\"kt-portlet__head-title\">LG History</h3>\n                                          </div>\n                                        </div>\n                                        <div class=\"kt-form kt-form--label-right\">\n                                          <div class=\"kt-portlet__body\">\n                                          <div class=\"container\">\n                                            <div class=\"row\">\n                                              <div class=\"col-md-12\">\n                                                 <div class=\"kt-portlet no-shadow\">\n                                                   <div class=\"new-blue-table no-border\">\n                                                     <div class=\"table-responsive\">\n                                                        <table class=\"table table-bordered table-striped table-hover\">\n                                                          <thead>\n                                                            <tr>\n                                                              <th class=\"table-col-7\">#</th>\n                                                              <th class=\"\"> {{'HOME.LG_Number' | translate}}</th>\n                                                              <th class=\"\">Transaction ID</th>\n                                                              <th class=\"\">Changes</th>\n                                                              <th class=\"\">Old Value</th>\n                                                              <th class=\"\">New Value</th>\n                                                              <th class=\"\">Transaction date</th>\n                                                              <th class=\"\">Name</th>\n                                                            </tr>\n                                                          </thead>\n                                                          <tbody>\n                                                          <tr *ngFor=\"let History of LG_History; let i = index \">\n                                                            <td>{{i+1}}</td>\n                                                            <td>{{History.lg_no}}</td>\n                                                            <td>{{History.trans_id}}</td>\n                                                            <td>{{History.status}}</td>\n                                                            <td>{{History.old_Value}}</td>\n                                                            <td>{{History.new_value}}</td>\n                                                            <td>{{History.trans_date}}</td>\n                                                            <td>{{History.name}}</td>\n                                                            \n                                                          </tr>\n                                                          </tbody>\n                                                        </table>\n                                                     </div>\n                                                   </div>\n                                                 </div>\n                                               </div>\n                                             </div>\n                                          </div>\n                                        </div>\n                                        </div>\n                                      </div>\n                                    </div>\n                                  </div>\n\n\n                                <!-- LG History-->\n                  \n                  <div class=\"row\" *ngIf=\"isACREnableButtons\">\n                    <div class=\"col-sm-12\">\n                      <div class=\"kt-portlet__foot\" >\n                        <div class=\"kt-form__actions\">\n                          <div class=\"row\">\n                            <div class=\"col-12\">\n                              <div class=\"btn-wrap lg-details-wrap\">\n                                  <button *ngIf=\"aclAmendCreate && !isAmendmentUpdate\" type=\"button\" class=\"btn btn-success\" data-toggle=\"modal\" data-target=\"#myModal1\" (click) = \"amendClicked()\">Amend</button>\n                                  <button *ngIf=\"aclAmendCreate && isAmendmentUpdate\" type=\"button\" class=\"btn btn-success\" data-toggle=\"modal\" data-target=\"#myModal1\" (click) = \"amendClicked()\">Update Amend</button>\n                               \n                                  <button *ngIf=\"(isLGBeneficiary && aclConfiscateCreate && !isConfiscateUpdate)\" type=\"button\" class=\"btn btn-success\" data-toggle=\"modal\" data-target=\"#myModal\" (click) = \"confiscateClicked()\">Confiscate</button>\n                                  <button *ngIf=\"(isLGBeneficiary && aclConfiscateCreate && isConfiscateUpdate)\" type=\"button\" class=\"btn btn-success\" data-toggle=\"modal\" data-target=\"#myModal\" (click) = \"confiscateClicked()\">Update Confiscate</button>\n                                 <!-- <button *ngIf=\"aclConfiscateCreate\" type=\"button\" class=\"btn btn-success\" data-toggle=\"modal\" data-target=\"#myModal\" (click) = \"confiscateClicked()\">Confiscate</button>-->\n\n                              \n                                <button *ngIf=\"(isLGBeneficiary && aclReleaseCreate && !isReleaseUpdate)\" type=\"button\" class=\"btn btn-success\"  data-toggle=\"modal\" data-target=\"#myModal2\" (click) = \"releaselicked()\">Release</button>\n                                <button *ngIf=\"(isLGBeneficiary && aclReleaseCreate && isReleaseUpdate)\" type=\"button\" class=\"btn btn-success\"  data-toggle=\"modal\" data-target=\"#myModal2\" (click) = \"releaselicked()\">Update Release</button>\n                                <!--<button *ngIf=\"aclReleaseCreate\" type=\"button\" class=\"btn btn-success\"  data-toggle=\"modal\" data-target=\"#myModal2\" (click) = \"releaselicked()\">Release</button>-->\n                              \n                              </div>\n\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n\n                                    </form>\n                                  </div>\n                                </div>\n                              </div>\n\n                            </div>\n                          </div>\n                        </div>\n                      </section>\n                    </div>\n\n                  </div>\n                </div>\n                <!--New Design Here-->\n              </div>\n            </div>\n            <!--===========================\n                      End Content\n                      ============================-->\n\n    <!--Modal-->\n    <div class=\"modal\" id=\"myModal\">\n      <div class=\"modal-dialog\">\n        <div class=\"modal-content\">\n          <!-- Modal body -->\n          <div class=\"modal-body text-center\">\n            <p class=\"margin-bottom-null\">{{'HOME.LG_successfully_approved' | translate}}</p>\n          </div>\n\n          <!-- Modal footer -->\n          <div class=\"modal-footer\">\n            <button type=\"button\" class=\"btn btn-success\" data-dismiss=\"modal\">{{'HOME.Close' | translate}}</button>\n          </div>\n\n        </div>\n      </div>\n    </div>\n\n    <!--begin::Global Theme Bundle(used by all pages) -->\n    <script src=\"../../assets/js/plugins.bundle.js\" type=\"text/javascript\"></script>\n    <!--Content Editable-->\n    <script type=\"text/javascript\">\n      window.onload = function () {\n        var btn = document.getElementById('editBtn');\n        var btn1 = document.getElementById('editBtn1');\n        var div = document.getElementById('editable');\n        btn.onclick = function (e) {\n          div.contentEditable = true;\n          div.focus();\n          div.style.backgroundColor = '#ffffff';\n          div.style.border = '1px dotted black';\n          btn1.style.display = \"block\";\n        }\n        btn1.onclick = function (e) {\n          div.contentEditable = false;\n          div.style.backgroundColor = '#f2f2f2';\n          div.style.border = '';\n          btn1.style.display = \"none\";\n        }\n\n      }\n    </script>\n    <!--Content Editable-->\n\n\n    <!-- end::Body -->\n\n\n");

/***/ }),

/***/ "./node_modules/raw-loader/dist/cjs.js!./src/app/private-lg-management/private-lg-management.component.html":
/*!******************************************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/private-lg-management/private-lg-management.component.html ***!
  \******************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (" \n \n          <!--===========================\n                        Start Content\n                        ============================-->\n                        <div class=\"pt-0 kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor kt-margin-top-50\">\n                            <div class=\"kt-container\">\n                          <!--New Design Here-->\n                          <div class=\"row\">\n                            <app-sidemenu></app-sidemenu>\n                            <!--<div class=\"col-12 col-sm-3 col-md-3 col-lg-3 left-panel-menu-wrap w-20 fixed-wrap\">\n                              \n                              <ul class=\"vertical-menu\">\n                                <li *ngIf=\"roleId == 3\"><a routerLink=\"/adminDashboard\"><span class=\"db-icon\"></span>{{'HOME.Dashboard' | translate}}</a></li>\n            \n                                <li *ngIf=\"roleId == 2\"><a routerLink=\"/govDashboard\"><span class=\"db-icon\"></span>{{'HOME.Dashboard' | translate}}</a></li>\n                                \n                                <li *ngIf=\"roleId == 1\"><a routerLink=\"/dashboard\"><span class=\"db-icon\"></span>{{'HOME.Dashboard' | translate}}</a></li>\n                                <li *ngIf=\"roleId == 1\"><a routerLink=\"/privateLgManagement\" class=\"active\"><span class=\"lg-icon\"></span>{{'HOME.LG_Management' | translate}}</a>\n                                <li *ngIf=\"roleId == 1\"><a routerLink=\"/requestLgIssuance\"><span class=\"lg-icon\"></span>{{'HOME.LG_issuance' | translate}}</a></li>\n                                <li *ngIf=\"roleId == 3\"><a routerLink=\"/pendingtasks\" ><span class=\"lg-icon\"></span>{{'HOME.Pending_Tasks' | translate}}</a></li>\n                                <li *ngIf=\"roleId == 1\"><a routerLink=\"/privatependingtasks\"><span class=\"lg-icon\"></span>{{'HOME.Pending_Tasks' | translate}}</a>\n                              </ul>\n                            </div>-->\n                            <div class=\"col-12 col-sm-9 col-md-9 col-lg-9 padding-null scroll-wrap\">\n                              <!-- <div class=\"white-area\">\n                                <div class=\"user-area\">\n                                  <span class=\"user-img-wrap\"><img src=\"../../assets/images/user.png\" alt=\"image\"\n                                      class=\"user-img\"></span><span>Abdulla Ahmad</span>\n                                </div>\n                                <div class=\"clear\"></div>\n                              </div> -->\n                              \n                              <div class=\"grey-bg\">\n                                <section class=\"design-process-section\" id=\"process-tab\">\n                                  <div>\n                                    <div>\n                                      <div>\n                                        <div class=\"two-blocks-tab\">\n                                          <ul>\n                                            <li [ngClass]=\"{'active': isMyIssuedLGClicked}\" (click)=\"goToMyIssuedLGTab()\"><a \n                                                >{{'HOME.My_issued_letter_guarantees' | translate}}</a></li>\n                                            <!-- <li><a href=\"private-entity-lg-list.html\">LG List</a></li> -->\n                                            <li [ngClass]=\"{'active': isLgIssuedMeClicked}\" (click)=\"goToLgIssuedMeTab()\"><a >{{'HOME.Letter_of_guarantee_issued_me' | translate}}</a></li>\n            \n                                          </ul>\n                                        </div>\n                                        <!-- Tab panes -->\n                                        <div class=\"tab-content\">\n                                          <div role=\"tabpanel\" class=\"tab-pane active\" id=\"discover\">\n                                            <div class=\"design-process-content\">\n                                              <form>\n                                                <div class=\"row\" *ngIf=\"isOpenMyIssuedLGList\">\n                                                 \n                                                    <div class=\"col-sm-12\">\n                                                    <div class=\"kt-portlet\">\n                                                      <div class=\"kt-portlet__head\">\n                                                        <div class=\"kt-portlet__head-label\">\n                                                          <h3 class=\"kt-portlet__head-title\">\n                                                            {{'HOME.Active_letters_guarantee' | translate}}\n                                                          </h3>\n                                                        </div>\n                                                      </div>\n                                                      \n                                                       <!--begin::Form-->\n                                                       <div class=\"kt-form kt-form--label-right\">\n                                                        <div class=\"kt-portlet__body\">\n                                                          <div class=\"container\">\n                                                            <div class=\"row\">\n                                                             <div class=\"col-md-12\">\n                                                                <div class=\"kt-portlet no-shadow\">\n                                                                  <div class=\"new-blue-table1\">\n\n\n\n                                                                    <div class=\"table-responsive\">\n                                                                      <div *ngIf=\"this.translate.currentLang == 'en'\">\n                                                                        <div *ngIf=\"myActiveLgLists.userObject?.length > 0; then myActivethenBlock else myActiveelseBlock\"> </div>\n                                                                        <ng-template #myActivethenBlock>\n                                                                        <table datatable [dtOptions]=\"dtOptions\" class=\"table table-bordered table-striped table-hover\">\n                                                                            <thead>\n                                                                                  <tr>\n                                                                                    <th class=\"table-col-7\">#</th>\n                                                                                    <th class=\"\"> {{'HOME.LG_Number' | translate}}</th>\n                                                                                    <th class=\"\">{{'HOME.LG_amount' | translate}}</th>\n                                                                                    <th class=\"\">{{'HOME.Beneficiary' | translate}}</th>\n                                                                                    <th class=\"\">{{'HOME.Bank' | translate}}</th>\n                                                                                    <th class=\"\">{{'HOME.LG_TYPE' | translate}}</th>\n                                                                                    <th class=\"\">{{'HOME.LG_Status' | translate}}</th>\n                                                                                    <th class=\"\">{{'HOME.Start_Date' | translate}}</th>\n                                                                                    <th class=\"\">{{'HOME.End_Date' | translate}}</th>\n                                                                                    <th class=\"\">{{'HOME.View_Details' | translate}}</th>\n                                                                                  </tr>\n                                                                            </thead>\n                                                                            <tbody>\n                                                                            <tr *ngFor=\"let myActiveLgList of myActiveLgLists.userObject; let i = index \">\n                                                                                <td>{{i+1}}</td>\n                                                                                <td>{{myActiveLgList.lg_no}}</td>\n                                                                                <td>{{myActiveLgList.lG_amount}}</td>\n                                                                                <td>{{myActiveLgList.beneficiary_name}}</td>\n                                                                                <td>{{myActiveLgList.bank_name}}</td>\n                                                                                <td>{{myActiveLgList.lg_type}}</td>\n                                                                                <td>{{myActiveLgList.status}}</td>\n                                                                                <td>{{myActiveLgList.start_date}}</td>\n                                                                                <td>{{myActiveLgList.end_date}}</td>\n                                                                                <td>\n                                                                                  <button type=\"button\" class=\"btn btn-success vw-details\" (click)=\"RowSelected(myActiveLgList)\">{{'HOME.View' | translate}}</button>\n                                                                                </td>\n                                                                            </tr>\n                                                                            </tbody>\n                                                                          </table>\n                                                                        </ng-template>\n\n                                                                        <ng-template #myActiveelseBlock>\n                                                                            <table datatable [dtOptions]=\"dtOptions\" class=\"table table-bordered table-striped table-hover\">\n                                                                                <thead>\n                                                                                      <tr>\n                                                                                        <th class=\"table-col-7\">#</th>\n                                                                                        <th class=\"\"> {{'HOME.LG_Number' | translate}}</th>\n                                                                                        <th class=\"\">{{'HOME.LG_amount' | translate}}</th>\n                                                                                        <th class=\"\">{{'HOME.Beneficiary' | translate}}</th>\n                                                                                        <th class=\"\">{{'HOME.Bank' | translate}}</th>\n                                                                                        <th class=\"\">{{'HOME.LG_TYPE' | translate}}</th>\n                                                                                        <th class=\"\">{{'HOME.LG_Status' | translate}}</th>\n                                                                                        <th class=\"\">{{'HOME.Start_Date' | translate}}</th>\n                                                                                        <th class=\"\">{{'HOME.End_Date' | translate}}</th>\n                                                                                        <th class=\"\">{{'HOME.View_Details' | translate}}</th>\n                                                                                      </tr>\n                                                                                </thead>\n                                                                                <tbody>\n                                                                                <tr *ngFor=\"let myActiveLgList of myActiveLgLists.userObject; let i = index \">\n                                                                                    <td>{{i+1}}</td>\n                                                                                    <td>{{myActiveLgList.lg_no}}</td>\n                                                                                    <td>{{myActiveLgList.lG_amount}}</td>\n                                                                                    <td>{{myActiveLgList.beneficiary_name}}</td>\n                                                                                    <td>{{myActiveLgList.bank_name}}</td>\n                                                                                    <td>{{myActiveLgList.lg_type}}</td>\n                                                                                    <td>{{myActiveLgList.status}}</td>\n                                                                                    <td>{{myActiveLgList.start_date}}</td>\n                                                                                    <td>{{myActiveLgList.end_date}}</td>\n                                                                                    <td>\n                                                                                      <button type=\"button\" class=\"btn btn-success vw-details\" (click)=\"RowSelected(myActiveLgList)\">{{'HOME.View' | translate}}</button>\n                                                                                    </td>\n                                                                                </tr>\n                                                                                </tbody>\n                                                                              </table>\n                                                                            </ng-template>\n                                                                    </div>\n                                                                    <!--This is for Arabic-->\n\n                                                                    <div *ngIf=\"this.translate.currentLang == 'ar'\">\n                                                                      <div *ngIf=\"myActiveLgLists.userObject?.length > 0; then myActivethenBlock else myActiveelseBlock\"> </div>\n                                                                      <ng-template #myActivethenBlock>\n                                                                      <table datatable [dtOptions]=\"dtOptionsAR\" class=\"table table-bordered table-striped table-hover\">\n                                                                          <thead>\n                                                                                <tr>\n                                                                                  <th class=\"table-col-7\">#</th>\n                                                                                  <th class=\"\"> {{'HOME.LG_Number' | translate}}</th>\n                                                                                  <th class=\"\">{{'HOME.LG_amount' | translate}}</th>\n                                                                                  <th class=\"\">{{'HOME.Beneficiary' | translate}}</th>\n                                                                                  <th class=\"\">{{'HOME.Bank' | translate}}</th>\n                                                                                  <th class=\"\">{{'HOME.LG_TYPE' | translate}}</th>\n                                                                                  <th class=\"\">{{'HOME.LG_Status' | translate}}</th>\n                                                                                  <th class=\"\">{{'HOME.Start_Date' | translate}}</th>\n                                                                                  <th class=\"\">{{'HOME.End_Date' | translate}}</th>\n                                                                                  <th class=\"\">{{'HOME.View_Details' | translate}}</th>\n                                                                                </tr>\n                                                                          </thead>\n                                                                          <tbody>\n                                                                          <tr *ngFor=\"let myActiveLgList of myActiveLgLists.userObject; let i = index \">\n                                                                              <td>{{i+1}}</td>\n                                                                              <td>{{myActiveLgList.lg_no}}</td>\n                                                                              <td>{{myActiveLgList.lG_amount}}</td>\n                                                                              <td>{{myActiveLgList.beneficiary_name}}</td>\n                                                                              <td>{{myActiveLgList.bank_name}}</td>\n                                                                              <td>{{myActiveLgList.lg_type}}</td>\n                                                                              <td>{{myActiveLgList.status}}</td>\n                                                                              <td>{{myActiveLgList.start_date}}</td>\n                                                                              <td>{{myActiveLgList.end_date}}</td>\n                                                                              <td>\n                                                                                <button type=\"button\" class=\"btn btn-success vw-details\" (click)=\"RowSelected(myActiveLgList)\">{{'HOME.View' | translate}}</button>\n                                                                              </td>\n                                                                          </tr>\n                                                                          </tbody>\n                                                                        </table>\n                                                                      </ng-template>\n\n                                                                      <ng-template #myActiveelseBlock>\n                                                                          <table datatable [dtOptions]=\"dtOptionsAR\" class=\"table table-bordered table-striped table-hover\">\n                                                                              <thead>\n                                                                                    <tr>\n                                                                                      <th class=\"table-col-7\">#</th>\n                                                                                      <th class=\"\"> {{'HOME.LG_Number' | translate}}</th>\n                                                                                      <th class=\"\">{{'HOME.LG_amount' | translate}}</th>\n                                                                                      <th class=\"\">{{'HOME.Beneficiary' | translate}}</th>\n                                                                                      <th class=\"\">{{'HOME.Bank' | translate}}</th>\n                                                                                      <th class=\"\">{{'HOME.LG_TYPE' | translate}}</th>\n                                                                                      <th class=\"\">{{'HOME.LG_Status' | translate}}</th>\n                                                                                      <th class=\"\">{{'HOME.Start_Date' | translate}}</th>\n                                                                                      <th class=\"\">{{'HOME.End_Date' | translate}}</th>\n                                                                                      <th class=\"\">{{'HOME.View_Details' | translate}}</th>\n                                                                                    </tr>\n                                                                              </thead>\n                                                                              <tbody>\n                                                                              <tr *ngFor=\"let myActiveLgList of myActiveLgLists.userObject; let i = index \">\n                                                                                  <td>{{i+1}}</td>\n                                                                                  <td>{{myActiveLgList.lg_no}}</td>\n                                                                                  <td>{{myActiveLgList.lG_amount}}</td>\n                                                                                  <td>{{myActiveLgList.beneficiary_name}}</td>\n                                                                                  <td>{{myActiveLgList.bank_name}}</td>\n                                                                                  <td>{{myActiveLgList.lg_type}}</td>\n                                                                                  <td>{{myActiveLgList.status}}</td>\n                                                                                  <td>{{myActiveLgList.start_date}}</td>\n                                                                                  <td>{{myActiveLgList.end_date}}</td>\n                                                                                  <td>\n                                                                                    <button type=\"button\" class=\"btn btn-success vw-details\" (click)=\"RowSelected(myActiveLgList)\">{{'HOME.View' | translate}}</button>\n                                                                                  </td>\n                                                                              </tr>\n                                                                              </tbody>\n                                                                            </table>\n                                                                          </ng-template>\n                                                                  </div>\n                                                                  <!--This is for Arabic-->\n                                                                </div>\n                                                                  </div>\n                                                                </div>\n                                                              </div>\n                                                            </div>\n                                                          </div>\n                                                        </div>\n                                                      </div>\n                                                    </div>\n                                                  </div>\n\n                                                  <div class=\"col-sm-12\">\n                                                    <div class=\"kt-portlet\">\n                                                      <div class=\"kt-portlet__head\">\n                                                        <div class=\"kt-portlet__head-label\">\n                                                          <h3 class=\"kt-portlet__head-title\">\n                                                            {{'HOME.Inactives_letter_guarantee' | translate}}\n                                                          </h3>\n                                                        </div>\n                                                      </div>\n                                                      \n                                                      <!--begin::Form-->\n                                                      <div class=\"kt-form kt-form--label-right\">\n                                                        <div class=\"kt-portlet__body\">\n                                                          <div class=\"container\">\n                                                            <div class=\"row\">\n                                                             <div class=\"col-md-12\">\n                                                                <div class=\"kt-portlet no-shadow\">\n                                                                  <div class=\"new-blue-table1\">\n                                                                    <div class=\"table-responsive\">\n\n\n\n\n\n\n                                                                      <div *ngIf=\"this.translate.currentLang == 'en'\">\n\n\n                                                                        <div *ngIf=\"myInactiveLgLists.userObject?.length > 0; then myInactivethenBlock else myInactiveelseBlock\"> </div>\n                                                                        <ng-template #myInactivethenBlock>\n                                                                        <table datatable [dtOptions]=\"dtOptions\" class=\"table table-bordered table-striped table-hover\">\n                                                                            <thead>\n                                                                                <tr>\n                                                                                    <th class=\"table-col-7\">#</th>\n                                                                                    <th class=\"\"> {{'HOME.LG_Number' | translate}}</th>\n                                                                                    <th class=\"\">{{'HOME.LG_amount' | translate}}</th>\n                                                                                    <th class=\"\">{{'HOME.Beneficiary' | translate}}</th>\n                                                                                    <th class=\"\">{{'HOME.Bank' | translate}}</th>\n                                                                                    <th class=\"\">{{'HOME.LG_TYPE' | translate}}</th>\n                                                                                    <th class=\"\">{{'HOME.LG_Status' | translate}}</th>\n                                                                                    <th class=\"\">{{'HOME.Start_Date' | translate}}</th>\n                                                                                    <th class=\"\">{{'HOME.End_Date' | translate}}</th>\n                                                                                    <th class=\"\">{{'HOME.View_Details' | translate}}</th>\n                                                                                  </tr>\n                                                                            </thead>\n                                                                            <tbody>\n                                                                            <tr *ngFor=\"let myInactiveLgList of myInactiveLgLists.userObject; let i = index \">\n                                                                                <td>{{i+1}}</td>\n                                                                                <td>{{myInactiveLgList.lg_no}}</td>\n                                                                                <td>{{myInactiveLgList.lG_amount}}</td>\n                                                                                <td>{{myInactiveLgList.beneficiary_name}}</td>\n                                                                                <td>{{myInactiveLgList.bank_name}}</td>\n                                                                                <td>{{myInactiveLgList.lg_type}}</td>\n                                                                                <td>{{myInactiveLgList.status}}</td>\n                                                                                <td>{{myInactiveLgList.start_date}}</td>\n                                                                                <td>{{myInactiveLgList.end_date}}</td>\n                                                                                <td>\n                                                                                  <button type=\"button\" class=\"btn btn-success vw-details\" (click)=\"RowSelected(myInactiveLgList)\">{{'HOME.View' | translate}}</button>\n                                                                                </td>\n                                                                            </tr>\n                                                                            </tbody>\n                                                                          </table>\n                                                                        </ng-template>\n\n\n                                                                        <ng-template #myInactiveelseBlock>\n                                                                            <table datatable [dtOptions]=\"dtOptions\" class=\"table table-bordered table-striped table-hover\">\n                                                                                <thead>\n                                                                                    <tr>\n                                                                                        <th class=\"table-col-7\">#</th>\n                                                                                        <th class=\"\"> {{'HOME.LG_Number' | translate}}</th>\n                                                                                        <th class=\"\">{{'HOME.LG_amount' | translate}}</th>\n                                                                                        <th class=\"\">{{'HOME.Beneficiary' | translate}}</th>\n                                                                                        <th class=\"\">{{'HOME.Bank' | translate}}</th>\n                                                                                        <th class=\"\">{{'HOME.LG_TYPE' | translate}}</th>\n                                                                                        <th class=\"\">{{'HOME.LG_Status' | translate}}</th>\n                                                                                        <th class=\"\">{{'HOME.Start_Date' | translate}}</th>\n                                                                                        <th class=\"\">{{'HOME.End_Date' | translate}}</th>\n                                                                                        <th class=\"\">{{'HOME.View_Details' | translate}}</th>\n                                                                                      </tr>\n                                                                                </thead>\n                                                                                <tbody>\n                                                                                <tr *ngFor=\"let myInactiveLgList of myInactiveLgLists.userObject; let i = index \">\n                                                                                    <td>{{i+1}}</td>\n                                                                                    <td>{{myInactiveLgList.lg_no}}</td>\n                                                                                    <td>{{myInactiveLgList.lG_amount}}</td>\n                                                                                    <td>{{myInactiveLgList.beneficiary_name}}</td>\n                                                                                    <td>{{myInactiveLgList.bank_name}}</td>\n                                                                                    <td>{{myInactiveLgList.lg_type}}</td>\n                                                                                    <td>{{myInactiveLgList.status}}</td>\n                                                                                    <td>{{myInactiveLgList.start_date}}</td>\n                                                                                    <td>{{myInactiveLgList.end_date}}</td>\n                                                                                    <td>\n                                                                                      <button type=\"button\" class=\"btn btn-success vw-details\" (click)=\"RowSelected(myInactiveLgList)\">{{'HOME.View' | translate}}</button>\n                                                                                    </td>\n                                                                                </tr>\n                                                                                </tbody>\n                                                                            </table>\n                                                                        </ng-template>\n                                                                      </div>\n\n                                                                      <div *ngIf=\"this.translate.currentLang == 'ar'\">\n                                                                        <div *ngIf=\"myInactiveLgLists.userObject?.length > 0; then myInactivethenBlock else myInactiveelseBlock\"> </div>\n                                                                        <ng-template #myInactivethenBlock>\n                                                                        <table datatable [dtOptions]=\"dtOptionsAR\" class=\"table table-bordered table-striped table-hover\">\n                                                                            <thead>\n                                                                                <tr>\n                                                                                    <th class=\"table-col-7\">#</th>\n                                                                                    <th class=\"\"> {{'HOME.LG_Number' | translate}}</th>\n                                                                                    <th class=\"\">{{'HOME.LG_amount' | translate}}</th>\n                                                                                    <th class=\"\">{{'HOME.Beneficiary' | translate}}</th>\n                                                                                    <th class=\"\">{{'HOME.Bank' | translate}}</th>\n                                                                                    <th class=\"\">{{'HOME.LG_TYPE' | translate}}</th>\n                                                                                    <th class=\"\">{{'HOME.LG_Status' | translate}}</th>\n                                                                                    <th class=\"\">{{'HOME.Start_Date' | translate}}</th>\n                                                                                    <th class=\"\">{{'HOME.End_Date' | translate}}</th>\n                                                                                    <th class=\"\">{{'HOME.View_Details' | translate}}</th>\n                                                                                  </tr>\n                                                                            </thead>\n                                                                            <tbody>\n                                                                            <tr *ngFor=\"let myInactiveLgList of myInactiveLgLists.userObject; let i = index \">\n                                                                                <td>{{i+1}}</td>\n                                                                                <td>{{myInactiveLgList.lg_no}}</td>\n                                                                                <td>{{myInactiveLgList.lG_amount}}</td>\n                                                                                <td>{{myInactiveLgList.beneficiary_name}}</td>\n                                                                                <td>{{myInactiveLgList.bank_name}}</td>\n                                                                                <td>{{myInactiveLgList.lg_type}}</td>\n                                                                                <td>{{myInactiveLgList.status}}</td>\n                                                                                <td>{{myInactiveLgList.start_date}}</td>\n                                                                                <td>{{myInactiveLgList.end_date}}</td>\n                                                                                <td>\n                                                                                  <button type=\"button\" class=\"btn btn-success vw-details\" (click)=\"RowSelected(myInactiveLgList)\">{{'HOME.View' | translate}}</button>\n                                                                                </td>\n                                                                            </tr>\n                                                                            </tbody>\n                                                                          </table>\n                                                                        </ng-template>\n\n\n                                                                        <ng-template #myInactiveelseBlock>\n                                                                            <table datatable [dtOptions]=\"dtOptionsAR\" class=\"table table-bordered table-striped table-hover\">\n                                                                                <thead>\n                                                                                    <tr>\n                                                                                        <th class=\"table-col-7\">#</th>\n                                                                                        <th class=\"\"> {{'HOME.LG_Number' | translate}}</th>\n                                                                                        <th class=\"\">{{'HOME.LG_amount' | translate}}</th>\n                                                                                        <th class=\"\">{{'HOME.Beneficiary' | translate}}</th>\n                                                                                        <th class=\"\">{{'HOME.Bank' | translate}}</th>\n                                                                                        <th class=\"\">{{'HOME.LG_TYPE' | translate}}</th>\n                                                                                        <th class=\"\">{{'HOME.LG_Status' | translate}}</th>\n                                                                                        <th class=\"\">{{'HOME.Start_Date' | translate}}</th>\n                                                                                        <th class=\"\">{{'HOME.End_Date' | translate}}</th>\n                                                                                        <th class=\"\">{{'HOME.View_Details' | translate}}</th>\n                                                                                      </tr>\n                                                                                </thead>\n                                                                                <tbody>\n                                                                                <tr *ngFor=\"let myInactiveLgList of myInactiveLgLists.userObject; let i = index \">\n                                                                                    <td>{{i+1}}</td>\n                                                                                    <td>{{myInactiveLgList.lg_no}}</td>\n                                                                                    <td>{{myInactiveLgList.lG_amount}}</td>\n                                                                                    <td>{{myInactiveLgList.beneficiary_name}}</td>\n                                                                                    <td>{{myInactiveLgList.bank_name}}</td>\n                                                                                    <td>{{myInactiveLgList.lg_type}}</td>\n                                                                                    <td>{{myInactiveLgList.status}}</td>\n                                                                                    <td>{{myInactiveLgList.start_date}}</td>\n                                                                                    <td>{{myInactiveLgList.end_date}}</td>\n                                                                                    <td>\n                                                                                      <button type=\"button\" class=\"btn btn-success vw-details\" (click)=\"RowSelected(myInactiveLgList)\">{{'HOME.View' | translate}}</button>\n                                                                                    </td>\n                                                                                </tr>\n                                                                                </tbody>\n                                                                            </table>\n                                                                        </ng-template>\n                                                                      </div>\n                                                                    </div>\n            \n                                                                  </div>\n\n                                                                </div>\n                                                              </div>\n            \n                                                            </div>\n                                                          </div>\n            \n                                                        </div>\n                                                      </div>\n                                                    </div>\n                                                  </div>\n                                                </div>\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n                                                <div class=\"row\" *ngIf=\"isOpenLgIssuedMeList\">\n\n                                                  <div class=\"col-sm-12\">\n                                                    <div class=\"kt-portlet\">\n                                                      <div class=\"kt-portlet__head\">\n                                                        <div class=\"kt-portlet__head-label\">\n                                                          <h3 class=\"kt-portlet__head-title\">\n                                                            {{'HOME.Active_letters_guarantee' | translate}}\n                                                          </h3>\n                                                        </div>\n                                                      </div>\n                                                      <!--begin::Form-->\n                                                      <div class=\"kt-form kt-form--label-right\">\n                                                        <div class=\"kt-portlet__body\">\n                                                          <div class=\"container\">\n                                                            <div class=\"row\">\n                                                             <div class=\"col-md-12\">\n                                                                <div class=\"kt-portlet no-shadow\">\n                                                                  <div class=\"new-blue-table1\">\n                                                                    <div class=\"table-responsive\">\n                                                                      <div *ngIf=\"this.translate.currentLang == 'en'\">\n                                                                        <div *ngIf=\"activeLgForMeLists.userObject?.length > 0; then activemethenBlock else activemeelseBlock\"> </div>\n                                                                        <ng-template #activemethenBlock>\n                                                                        <table datatable [dtOptions]=\"dtOptions\" class=\"table table-bordered table-striped table-hover\">\n                                                                            <thead>\n                                                                                  <tr>\n                                                                                    <th class=\"table-col-7\">#</th>\n                                                                                    <th class=\"\"> {{'HOME.LG_Number' | translate}}</th>\n                                                                                    <th class=\"\">{{'HOME.LG_amount' | translate}}</th>\n                                                                                    <th class=\"\">{{'HOME.Beneficiary' | translate}}</th>\n                                                                                    <th class=\"\">{{'HOME.Bank' | translate}}</th>\n                                                                                    <th class=\"\">{{'HOME.LG_TYPE' | translate}}</th>\n                                                                                    <th class=\"\">{{'HOME.LG_Status' | translate}}</th>\n                                                                                    <th class=\"\">{{'HOME.Start_Date' | translate}}</th>\n                                                                                    <th class=\"\">{{'HOME.End_Date' | translate}}</th>\n                                                                                    <th class=\"\">{{'HOME.View_Details' | translate}}</th>\n                                                                                  </tr>\n                                                                            </thead>\n                                                                            <tbody>\n                                                                            <tr *ngFor=\"let activeLgForMeList of activeLgForMeLists.userObject; let i = index \">\n                                                                                <td>{{i+1}}</td>\n                                                                                  <td>{{activeLgForMeList.lg_no}}</td>\n                                                                                  <td>{{activeLgForMeList.lG_amount}}</td>\n                                                                                  <td>{{activeLgForMeList.beneficiary_name}}</td>\n                                                                                  <td>{{activeLgForMeList.bank_name}}</td>\n                                                                                  <td>{{activeLgForMeList.lg_type}}</td>\n                                                                                  <td>{{activeLgForMeList.status}}</td>\n                                                                                  <td>{{activeLgForMeList.start_date}}</td>\n                                                                                  <td>{{activeLgForMeList.end_date}}</td>\n                                                                                <td><button type=\"button\" class=\"btn btn-success vw-details\" (click)=\"RowSelected(activeLgForMeList)\">{{'HOME.View' | translate}}</button>\n                                                                                </td>\n                                                                            </tr>\n                                                                            </tbody>\n                                                                          </table>\n                                                                        </ng-template>\n                                                                        <ng-template #activemeelseBlock>\n                                                                            <table datatable [dtOptions]=\"dtOptions\" class=\"table table-bordered table-striped table-hover\">\n                                                                                <thead>\n                                                                                      <tr>\n                                                                                        <th class=\"table-col-7\">#</th>\n                                                                                        <th class=\"\"> {{'HOME.LG_Number' | translate}}</th>\n                                                                                        <th class=\"\">{{'HOME.LG_amount' | translate}}</th>\n                                                                                        <th class=\"\">{{'HOME.Beneficiary' | translate}}</th>\n                                                                                        <th class=\"\">{{'HOME.Bank' | translate}}</th>\n                                                                                        <th class=\"\">{{'HOME.LG_TYPE' | translate}}</th>\n                                                                                        <th class=\"\">{{'HOME.LG_Status' | translate}}</th>\n                                                                                        <th class=\"\">{{'HOME.Start_Date' | translate}}</th>\n                                                                                        <th class=\"\">{{'HOME.End_Date' | translate}}</th>\n                                                                                        <th class=\"\">{{'HOME.View_Details' | translate}}</th>\n                                                                                      </tr>\n                                                                                </thead>\n                                                                                <tbody>\n                                                                                <tr *ngFor=\"let activeLgForMeList of activeLgForMeLists.userObject; let i = index \">\n                                                                                    <td>{{i+1}}</td>\n                                                                                      <td>{{activeLgForMeList.lg_no}}</td>\n                                                                                      <td>{{activeLgForMeList.lG_amount}}</td>\n                                                                                      <td>{{activeLgForMeList.beneficiary_name}}</td>\n                                                                                      <td>{{activeLgForMeList.bank_name}}</td>\n                                                                                      <td>{{activeLgForMeList.lg_type}}</td>\n                                                                                      <td>{{activeLgForMeList.status}}</td>\n                                                                                      <td>{{activeLgForMeList.start_date}}</td>\n                                                                                      <td>{{activeLgForMeList.end_date}}</td>\n                                                                                    <td><button type=\"button\" class=\"btn btn-success vw-details\" (click)=\"RowSelected(activeLgForMeList)\">{{'HOME.View' | translate}}</button>\n                                                                                    </td>\n                                                                                </tr>\n                                                                                </tbody>\n                                                                              </table>\n                                                                            </ng-template>\n                                                                      </div>\n                                                                      <div *ngIf=\"this.translate.currentLang == 'ar'\">\n                                                                        <div *ngIf=\"activeLgForMeLists.userObject?.length > 0; then activemethenBlock else activemeelseBlock\"> </div>\n                                                                        <ng-template #activemethenBlock>\n                                                                        <table datatable [dtOptions]=\"dtOptionsAR\" class=\"table table-bordered table-striped table-hover\">\n                                                                            <thead>\n                                                                                  <tr>\n                                                                                    <th class=\"table-col-7\">#</th>\n                                                                                    <th class=\"\"> {{'HOME.LG_Number' | translate}}</th>\n                                                                                    <th class=\"\">{{'HOME.LG_amount' | translate}}</th>\n                                                                                    <th class=\"\">{{'HOME.Beneficiary' | translate}}</th>\n                                                                                    <th class=\"\">{{'HOME.Bank' | translate}}</th>\n                                                                                    <th class=\"\">{{'HOME.LG_TYPE' | translate}}</th>\n                                                                                    <th class=\"\">{{'HOME.LG_Status' | translate}}</th>\n                                                                                    <th class=\"\">{{'HOME.Start_Date' | translate}}</th>\n                                                                                    <th class=\"\">{{'HOME.End_Date' | translate}}</th>\n                                                                                    <th class=\"\">{{'HOME.View_Details' | translate}}</th>\n                                                                                  </tr>\n                                                                            </thead>\n                                                                            <tbody>\n                                                                            <tr *ngFor=\"let activeLgForMeList of activeLgForMeLists.userObject; let i = index \">\n                                                                                <td>{{i+1}}</td>\n                                                                                  <td>{{activeLgForMeList.lg_no}}</td>\n                                                                                  <td>{{activeLgForMeList.lG_amount}}</td>\n                                                                                  <td>{{activeLgForMeList.beneficiary_name}}</td>\n                                                                                  <td>{{activeLgForMeList.bank_name}}</td>\n                                                                                  <td>{{activeLgForMeList.lg_type}}</td>\n                                                                                  <td>{{activeLgForMeList.status}}</td>\n                                                                                  <td>{{activeLgForMeList.start_date}}</td>\n                                                                                  <td>{{activeLgForMeList.end_date}}</td>\n                                                                                <td><button type=\"button\" class=\"btn btn-success vw-details\" (click)=\"RowSelected(activeLgForMeList)\">{{'HOME.View' | translate}}</button>\n                                                                                </td>\n                                                                            </tr>\n                                                                            </tbody>\n                                                                          </table>\n                                                                        </ng-template>\n                                                                        <ng-template #activemeelseBlock>\n                                                                            <table datatable [dtOptions]=\"dtOptionsAR\" class=\"table table-bordered table-striped table-hover\">\n                                                                                <thead>\n                                                                                      <tr>\n                                                                                        <th class=\"table-col-7\">#</th>\n                                                                                        <th class=\"\"> {{'HOME.LG_Number' | translate}}</th>\n                                                                                        <th class=\"\">{{'HOME.LG_amount' | translate}}</th>\n                                                                                        <th class=\"\">{{'HOME.Beneficiary' | translate}}</th>\n                                                                                        <th class=\"\">{{'HOME.Bank' | translate}}</th>\n                                                                                        <th class=\"\">{{'HOME.LG_TYPE' | translate}}</th>\n                                                                                        <th class=\"\">{{'HOME.LG_Status' | translate}}</th>\n                                                                                        <th class=\"\">{{'HOME.Start_Date' | translate}}</th>\n                                                                                        <th class=\"\">{{'HOME.End_Date' | translate}}</th>\n                                                                                        <th class=\"\">{{'HOME.View_Details' | translate}}</th>\n                                                                                      </tr>\n                                                                                </thead>\n                                                                                <tbody>\n                                                                                <tr *ngFor=\"let activeLgForMeList of activeLgForMeLists.userObject; let i = index \">\n                                                                                    <td>{{i+1}}</td>\n                                                                                      <td>{{activeLgForMeList.lg_no}}</td>\n                                                                                      <td>{{activeLgForMeList.lG_amount}}</td>\n                                                                                      <td>{{activeLgForMeList.beneficiary_name}}</td>\n                                                                                      <td>{{activeLgForMeList.bank_name}}</td>\n                                                                                      <td>{{activeLgForMeList.lg_type}}</td>\n                                                                                      <td>{{activeLgForMeList.status}}</td>\n                                                                                      <td>{{activeLgForMeList.start_date}}</td>\n                                                                                      <td>{{activeLgForMeList.end_date}}</td>\n                                                                                    <td><button type=\"button\" class=\"btn btn-success vw-details\" (click)=\"RowSelected(activeLgForMeList)\">{{'HOME.View' | translate}}</button>\n                                                                                    </td>\n                                                                                </tr>\n                                                                                </tbody>\n                                                                              </table>\n                                                                            </ng-template>\n                                                                      </div>\n                                                                    </div>\n                                                                  </div>\n                                                                </div>\n                                                              </div>\n                                                            </div>\n                                                          </div>\n                                                        </div>\n                                                      </div>\n                                                    </div>\n                                                  </div>\n\n                                                  <div class=\"col-sm-12\">\n                                                    <div class=\"kt-portlet\">\n                                                      <div class=\"kt-portlet__head\">\n                                                        <div class=\"kt-portlet__head-label\">\n                                                          <h3 class=\"kt-portlet__head-title\">\n                                                            {{'HOME.Inactives_letter_guarantee' | translate}}\n                                                          </h3>\n                                                        </div>\n                                                      </div>\n                                                      <!--begin::Form-->\n                                                      <div class=\"kt-form kt-form--label-right\">\n                                                        <div class=\"kt-portlet__body\">\n                                                          <div class=\"container\">\n                                                            <div class=\"row\">\n                                                             <div class=\"col-md-12\">\n                                                                <div class=\"kt-portlet no-shadow\">\n                                                                  <div class=\"new-blue-table1\">\n                                                                    <div class=\"table-responsive\">\n                                                                    <div *ngIf=\"this.translate.currentLang == 'en'\">\n                                                                    <div *ngIf=\"inactiveLgForMeLists.userObject?.length > 0; then inactivemethenBlock else inactivemeelseBlock\"> </div>\n\n                                                                    <ng-template #inactivemethenBlock>\n                                                                        <table datatable [dtOptions]=\"dtOptions\" class=\"table table-bordered table-striped table-hover\">\n                                                                            <thead>\n                                                                                  <tr>\n                                                                                    <th class=\"table-col-7\">#</th>\n                                                                                    <th class=\"\"> {{'HOME.LG_Number' | translate}}</th>\n                                                                                        <th class=\"\">{{'HOME.LG_amount' | translate}}</th>\n                                                                                        <th class=\"\">{{'HOME.Beneficiary' | translate}}</th>\n                                                                                        <th class=\"\">{{'HOME.Bank' | translate}}</th>\n                                                                                        <th class=\"\">{{'HOME.LG_TYPE' | translate}}</th>\n                                                                                        <th class=\"\">{{'HOME.LG_Status' | translate}}</th>\n                                                                                        <th class=\"\">{{'HOME.Start_Date' | translate}}</th>\n                                                                                        <th class=\"\">{{'HOME.End_Date' | translate}}</th>\n                                                                                        <th class=\"\">{{'HOME.View_Details' | translate}}</th>\n                                                                                  </tr>\n                                                                            </thead>\n                                                                            <tbody>\n                                                                            <tr *ngFor=\"let inactiveLgForMeList of inactiveLgForMeLists.userObject; let i = index \">\n                                                                                <td>{{i+1}}</td>\n                                                                                  <td>{{inactiveLgForMeList.lg_no}}</td>\n                                                                                  <td>{{inactiveLgForMeList.lG_amount}}</td>\n                                                                                  <td>{{inactiveLgForMeList.beneficiary_name}}</td>\n                                                                                  <td>{{inactiveLgForMeList.bank_name}}</td>\n                                                                                  <td>{{inactiveLgForMeList.lg_type}}</td>\n                                                                                  <td>{{inactiveLgForMeList.status}}</td>\n                                                                                  <td>{{inactiveLgForMeList.start_date}}</td>\n                                                                                  <td>{{inactiveLgForMeList.end_date}}</td>\n                                                                                <td><button type=\"button\" class=\"btn btn-success vw-details\" (click)=\"RowSelected(inactiveLgForMeList)\">{{'HOME.View' | translate}}</button>\n                                                                                </td>\n                                                                            </tr>\n                                                                            </tbody>\n                                                                          </table>\n                                                                        </ng-template>\n                                                                        <ng-template #inactivemeelseBlock>\n                                                                            <table datatable [dtOptions]=\"dtOptions\" class=\"table table-bordered table-striped table-hover\">\n                                                                                <thead>\n                                                                                      <tr>\n                                                                                        <th class=\"table-col-7\">#</th>\n                                                                                        <th class=\"\"> {{'HOME.LG_Number' | translate}}</th>\n                                                                                        <th class=\"\">{{'HOME.LG_amount' | translate}}</th>\n                                                                                        <th class=\"\">{{'HOME.Beneficiary' | translate}}</th>\n                                                                                        <th class=\"\">{{'HOME.Bank' | translate}}</th>\n                                                                                        <th class=\"\">{{'HOME.LG_TYPE' | translate}}</th>\n                                                                                        <th class=\"\">{{'HOME.LG_Status' | translate}}</th>\n                                                                                        <th class=\"\">{{'HOME.Start_Date' | translate}}</th>\n                                                                                        <th class=\"\">{{'HOME.End_Date' | translate}}</th>\n                                                                                        <th class=\"\">{{'HOME.View_Details' | translate}}</th>\n                                                                                      </tr>\n                                                                                </thead>\n                                                                                <tbody>\n                                                                                <tr *ngFor=\"let inactiveLgForMeList of inactiveLgForMeLists.userObject; let i = index \">\n                                                                                    <td>{{i+1}}</td>\n                                                                                      <td>{{inactiveLgForMeList.lg_no}}</td>\n                                                                                      <td>{{inactiveLgForMeList.lG_amount}}</td>\n                                                                                      <td>{{inactiveLgForMeList.beneficiary_name}}</td>\n                                                                                      <td>{{inactiveLgForMeList.bank_name}}</td>\n                                                                                      <td>{{inactiveLgForMeList.lg_type}}</td>\n                                                                                      <td>{{inactiveLgForMeList.status}}</td>\n                                                                                      <td>{{inactiveLgForMeList.start_date}}</td>\n                                                                                      <td>{{inactiveLgForMeList.end_date}}</td>\n                                                                                    <td><button type=\"button\" class=\"btn btn-success vw-details\" (click)=\"RowSelected(inactiveLgForMeList)\">{{'HOME.View' | translate}}</button>\n                                                                                    </td>\n                                                                                </tr>\n                                                                                </tbody>\n                                                                              </table>\n                                                                        </ng-template>\n                                                                    </div>\n                                                                    <div *ngIf=\"this.translate.currentLang == 'ar'\">\n                                                                      <div *ngIf=\"inactiveLgForMeLists.userObject?.length > 0; then inactivemethenBlock else inactivemeelseBlock\"> </div>\n  \n                                                                      <ng-template #inactivemethenBlock>\n                                                                          <table datatable [dtOptions]=\"dtOptionsAR\" class=\"table table-bordered table-striped table-hover\">\n                                                                              <thead>\n                                                                                    <tr>\n                                                                                      <th class=\"table-col-7\">#</th>\n                                                                                      <th class=\"\"> {{'HOME.LG_Number' | translate}}</th>\n                                                                                          <th class=\"\">{{'HOME.LG_amount' | translate}}</th>\n                                                                                          <th class=\"\">{{'HOME.Beneficiary' | translate}}</th>\n                                                                                          <th class=\"\">{{'HOME.Bank' | translate}}</th>\n                                                                                          <th class=\"\">{{'HOME.LG_TYPE' | translate}}</th>\n                                                                                          <th class=\"\">{{'HOME.LG_Status' | translate}}</th>\n                                                                                          <th class=\"\">{{'HOME.Start_Date' | translate}}</th>\n                                                                                          <th class=\"\">{{'HOME.End_Date' | translate}}</th>\n                                                                                          <th class=\"\">{{'HOME.View_Details' | translate}}</th>\n                                                                                    </tr>\n                                                                              </thead>\n                                                                              <tbody>\n                                                                              <tr *ngFor=\"let inactiveLgForMeList of inactiveLgForMeLists.userObject; let i = index \">\n                                                                                  <td>{{i+1}}</td>\n                                                                                    <td>{{inactiveLgForMeList.lg_no}}</td>\n                                                                                    <td>{{inactiveLgForMeList.lG_amount}}</td>\n                                                                                    <td>{{inactiveLgForMeList.beneficiary_name}}</td>\n                                                                                    <td>{{inactiveLgForMeList.bank_name}}</td>\n                                                                                    <td>{{inactiveLgForMeList.lg_type}}</td>\n                                                                                    <td>{{inactiveLgForMeList.status}}</td>\n                                                                                    <td>{{inactiveLgForMeList.start_date}}</td>\n                                                                                    <td>{{inactiveLgForMeList.end_date}}</td>\n                                                                                  <td><button type=\"button\" class=\"btn btn-success vw-details\" (click)=\"RowSelected(inactiveLgForMeList)\">{{'HOME.View' | translate}}</button>\n                                                                                  </td>\n                                                                              </tr>\n                                                                              </tbody>\n                                                                            </table>\n                                                                          </ng-template>\n                                                                          <ng-template #inactivemeelseBlock>\n                                                                              <table datatable [dtOptions]=\"dtOptionsAR\" class=\"table table-bordered table-striped table-hover\">\n                                                                                  <thead>\n                                                                                        <tr>\n                                                                                          <th class=\"table-col-7\">#</th>\n                                                                                          <th class=\"\"> {{'HOME.LG_Number' | translate}}</th>\n                                                                                          <th class=\"\">{{'HOME.LG_amount' | translate}}</th>\n                                                                                          <th class=\"\">{{'HOME.Beneficiary' | translate}}</th>\n                                                                                          <th class=\"\">{{'HOME.Bank' | translate}}</th>\n                                                                                          <th class=\"\">{{'HOME.LG_TYPE' | translate}}</th>\n                                                                                          <th class=\"\">{{'HOME.LG_Status' | translate}}</th>\n                                                                                          <th class=\"\">{{'HOME.Start_Date' | translate}}</th>\n                                                                                          <th class=\"\">{{'HOME.End_Date' | translate}}</th>\n                                                                                          <th class=\"\">{{'HOME.View_Details' | translate}}</th>\n                                                                                        </tr>\n                                                                                  </thead>\n                                                                                  <tbody>\n                                                                                  <tr *ngFor=\"let inactiveLgForMeList of inactiveLgForMeLists.userObject; let i = index \">\n                                                                                      <td>{{i+1}}</td>\n                                                                                        <td>{{inactiveLgForMeList.lg_no}}</td>\n                                                                                        <td>{{inactiveLgForMeList.lG_amount}}</td>\n                                                                                        <td>{{inactiveLgForMeList.beneficiary_name}}</td>\n                                                                                        <td>{{inactiveLgForMeList.bank_name}}</td>\n                                                                                        <td>{{inactiveLgForMeList.lg_type}}</td>\n                                                                                        <td>{{inactiveLgForMeList.status}}</td>\n                                                                                        <td>{{inactiveLgForMeList.start_date}}</td>\n                                                                                        <td>{{inactiveLgForMeList.end_date}}</td>\n                                                                                      <td><button type=\"button\" class=\"btn btn-success vw-details\" (click)=\"RowSelected(inactiveLgForMeList)\">{{'HOME.View' | translate}}</button>\n                                                                                      </td>\n                                                                                  </tr>\n                                                                                  </tbody>\n                                                                                </table>\n                                                                          </ng-template>\n                                                                      </div>\n                                                                    </div>\n                                                                  </div>\n            \n                                                                </div>\n                                                              </div>\n            \n                                                            </div>\n                                                          </div>\n            \n                                                        </div>\n                                                      </div>\n                                                    </div>\n                                                  </div>\n\n\n                                                </div>\n                                              </form>\n            \n                                            </div>\n                                          </div>\n                                        </div>\n            \n                                      </div>\n                                    </div>\n                                  </div>\n                                </section>\n                              </div>\n                              \n                            </div>\n                          </div>\n                          <!--New Design Here-->\n                        </div>\n                      </div>\n                      <!--===========================\n                                    End Content\n                                    ============================-->\n                   \n              <!--begin::Global Theme Bundle(used by all pages) -->\n              <script src=\"../../assets/js/plugins.bundle.js\" type=\"text/javascript\"></script>\n              <!-- end::Body -->\n            \n            \n            \n            \n            ");

/***/ }),

/***/ "./node_modules/raw-loader/dist/cjs.js!./src/app/private-release-list/private-release-list.component.html":
/*!****************************************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/private-release-list/private-release-list.component.html ***!
  \****************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (" \n \n          <!--===========================\n                        Start Content\n                        ============================-->\n                        <div class=\"pt-0 kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor kt-margin-top-50\">\n                            <div class=\"kt-container\">\n                          <!--New Design Here-->\n                          <div class=\"row\">\n                            <app-sidemenu></app-sidemenu>\n                            <!--<div class=\"col-12 col-sm-3 col-md-3 col-lg-3 left-panel-menu-wrap w-20 fixed-wrap\">\n                              \n                              <ul class=\"vertical-menu\">\n                                <li *ngIf=\"roleId == 3\"><a routerLink=\"/adminDashboard\"><span class=\"db-icon\"></span>{{'HOME.Dashboard' | translate}}</a></li>\n            \n                                <li *ngIf=\"roleId == 2\"><a routerLink=\"/govDashboard\"><span class=\"db-icon\"></span>{{'HOME.Dashboard' | translate}}</a></li>\n                                \n                                <li *ngIf=\"roleId == 1\"><a routerLink=\"/dashboard\"><span class=\"db-icon\"></span>{{'HOME.Dashboard' | translate}}</a></li>\n                                <li *ngIf=\"roleId == 1\"><a routerLink=\"/privateLgManagement\" class=\"active\"><span class=\"lg-icon\"></span>{{'HOME.LG_Management' | translate}}</a>\n                                <li *ngIf=\"roleId == 1\"><a routerLink=\"/requestLgIssuance\"><span class=\"lg-icon\"></span>{{'HOME.LG_issuance' | translate}}</a></li>\n                                <li *ngIf=\"roleId == 3\"><a routerLink=\"/pendingtasks\" ><span class=\"lg-icon\"></span>{{'HOME.Pending_Tasks' | translate}}</a></li>\n                                <li *ngIf=\"roleId == 1\"><a routerLink=\"/privatependingtasks\"><span class=\"lg-icon\"></span>{{'HOME.Pending_Tasks' | translate}}</a>\n                              </ul>\n                            </div>-->\n                            <div class=\"col-12 col-sm-9 col-md-9 col-lg-9 padding-null scroll-wrap\">\n                              <!-- <div class=\"white-area\">\n                                <div class=\"user-area\">\n                                  <span class=\"user-img-wrap\"><img src=\"../../assets/images/user.png\" alt=\"image\"\n                                      class=\"user-img\"></span><span>Abdulla Ahmad</span>\n                                </div>\n                                <div class=\"clear\"></div>\n                              </div> -->\n                              \n                              <div class=\"grey-bg\">\n                                <section class=\"design-process-section\" id=\"process-tab\">\n                                  <div>\n                                    <div>\n                                      <div>\n                                        <div class=\"two-blocks-tab\">\n                                          <ul>\n                                            <li [ngClass]=\"{'active': isMyIssuedLGClicked}\" (click)=\"goToMyIssuedLGTab()\"><a \n                                                >{{'HOME.Letter_of_guarantee_issued_me' | translate}}</a></li>\n                                            <!-- <li><a href=\"private-entity-lg-list.html\">LG List</a></li> -->\n                                            <!--<li [ngClass]=\"{'active': isLgIssuedMeClicked}\" (click)=\"goToLgIssuedMeTab()\"><a >{{'HOME.Letter_of_guarantee_issued_me' | translate}}</a></li>-->\n            \n                                          </ul>\n                                        </div>\n                                        <!-- Tab panes -->\n                                        <div class=\"tab-content\">\n                                          <div role=\"tabpanel\" class=\"tab-pane active\" id=\"discover\">\n                                            <div class=\"design-process-content\">\n                                              <form>\n                                                <div class=\"row\" *ngIf=\"isOpenMyIssuedLGList\">\n                                                 \n                                                    <div class=\"col-sm-12\">\n                                                    <div class=\"kt-portlet\">\n                                                      <div class=\"kt-portlet__head\">\n                                                        <div class=\"kt-portlet__head-label\">\n                                                          <h3 class=\"kt-portlet__head-title\">\n                                                            {{'HOME.Active_letters_guarantee' | translate}}\n                                                          </h3>\n                                                        </div>\n                                                      </div>\n                                                      \n                                                       <!--begin::Form-->\n                                                       <div class=\"kt-form kt-form--label-right\">\n                                                        <div class=\"kt-portlet__body\">\n                                                          <div class=\"container\">\n                                                            <div class=\"row\">\n                                                             <div class=\"col-md-12\">\n                                                                <div class=\"kt-portlet no-shadow\">\n                                                                  <div class=\"new-blue-table1\">\n\n\n\n                                                                    <div class=\"table-responsive\">\n                                                                      <div *ngIf=\"this.translate.currentLang == 'en'\">\n                                                                        <div *ngIf=\"myActiveLgLists.userObject?.length > 0; then myActivethenBlock else myActiveelseBlock\"> </div>\n                                                                        <ng-template #myActivethenBlock>\n                                                                        <table datatable [dtOptions]=\"dtOptions\" class=\"table table-bordered table-striped table-hover\">\n                                                                            <thead>\n                                                                                  <tr>\n                                                                                    <th class=\"table-col-7\">#</th>\n                                                                                    <th class=\"\"> {{'HOME.LG_Number' | translate}}</th>\n                                                                                    <th class=\"\">{{'HOME.LG_amount' | translate}}</th>\n                                                                                    <th class=\"\">{{'HOME.Beneficiary' | translate}}</th>\n                                                                                    <th class=\"\">{{'HOME.Bank' | translate}}</th>\n                                                                                    <th class=\"\">{{'HOME.LG_TYPE' | translate}}</th>\n                                                                                    <th class=\"\">{{'HOME.LG_Status' | translate}}</th>\n                                                                                    <th class=\"\">{{'HOME.Start_Date' | translate}}</th>\n                                                                                    <th class=\"\">{{'HOME.End_Date' | translate}}</th>\n                                                                                    <th class=\"\">{{'HOME.View_Details' | translate}}</th>\n                                                                                  </tr>\n                                                                            </thead>\n                                                                            <tbody>\n                                                                            <tr *ngFor=\"let myActiveLgList of myActiveLgLists.userObject; let i = index \">\n                                                                                <td>{{i+1}}</td>\n                                                                                <td>{{myActiveLgList.lg_no}}</td>\n                                                                                <td>{{myActiveLgList.lG_amount}}</td>\n                                                                                <td>{{myActiveLgList.beneficiary_name}}</td>\n                                                                                <td>{{myActiveLgList.bank_name}}</td>\n                                                                                <td>{{myActiveLgList.lg_type}}</td>\n                                                                                <td>{{myActiveLgList.status}}</td>\n                                                                                <td>{{myActiveLgList.start_date}}</td>\n                                                                                <td>{{myActiveLgList.end_date}}</td>\n                                                                                <td>\n                                                                                  <button type=\"button\" class=\"btn btn-success vw-details\" (click)=\"RowSelected(myActiveLgList)\">Release</button>\n                                                                                </td>\n                                                                            </tr>\n                                                                            </tbody>\n                                                                          </table>\n                                                                        </ng-template>\n\n                                                                        <ng-template #myActiveelseBlock>\n                                                                            <table datatable [dtOptions]=\"dtOptions\" class=\"table table-bordered table-striped table-hover\">\n                                                                                <thead>\n                                                                                      <tr>\n                                                                                        <th class=\"table-col-7\">#</th>\n                                                                                        <th class=\"\"> {{'HOME.LG_Number' | translate}}</th>\n                                                                                        <th class=\"\">{{'HOME.LG_amount' | translate}}</th>\n                                                                                        <th class=\"\">{{'HOME.Beneficiary' | translate}}</th>\n                                                                                        <th class=\"\">{{'HOME.Bank' | translate}}</th>\n                                                                                        <th class=\"\">{{'HOME.LG_TYPE' | translate}}</th>\n                                                                                        <th class=\"\">{{'HOME.LG_Status' | translate}}</th>\n                                                                                        <th class=\"\">{{'HOME.Start_Date' | translate}}</th>\n                                                                                        <th class=\"\">{{'HOME.End_Date' | translate}}</th>\n                                                                                        <th class=\"\">{{'HOME.View_Details' | translate}}</th>\n                                                                                      </tr>\n                                                                                </thead>\n                                                                                <tbody>\n                                                                                <tr *ngFor=\"let myActiveLgList of myActiveLgLists.userObject; let i = index \">\n                                                                                    <td>{{i+1}}</td>\n                                                                                    <td>{{myActiveLgList.lg_no}}</td>\n                                                                                    <td>{{myActiveLgList.lG_amount}}</td>\n                                                                                    <td>{{myActiveLgList.beneficiary_name}}</td>\n                                                                                    <td>{{myActiveLgList.bank_name}}</td>\n                                                                                    <td>{{myActiveLgList.lg_type}}</td>\n                                                                                    <td>{{myActiveLgList.status}}</td>\n                                                                                    <td>{{myActiveLgList.start_date}}</td>\n                                                                                    <td>{{myActiveLgList.end_date}}</td>\n                                                                                    <td>\n                                                                                      <button type=\"button\" class=\"btn btn-success vw-details\" (click)=\"RowSelected(myActiveLgList)\">Release</button>\n                                                                                    </td>\n                                                                                </tr>\n                                                                                </tbody>\n                                                                              </table>\n                                                                            </ng-template>\n                                                                    </div>\n                                                                    <!--This is for Arabic-->\n\n                                                                    <div *ngIf=\"this.translate.currentLang == 'ar'\">\n                                                                      <div *ngIf=\"myActiveLgLists.userObject?.length > 0; then myActivethenBlock else myActiveelseBlock\"> </div>\n                                                                      <ng-template #myActivethenBlock>\n                                                                      <table datatable [dtOptions]=\"dtOptionsAR\" class=\"table table-bordered table-striped table-hover\">\n                                                                          <thead>\n                                                                                <tr>\n                                                                                  <th class=\"table-col-7\">#</th>\n                                                                                  <th class=\"\"> {{'HOME.LG_Number' | translate}}</th>\n                                                                                  <th class=\"\">{{'HOME.LG_amount' | translate}}</th>\n                                                                                  <th class=\"\">{{'HOME.Beneficiary' | translate}}</th>\n                                                                                  <th class=\"\">{{'HOME.Bank' | translate}}</th>\n                                                                                  <th class=\"\">{{'HOME.LG_TYPE' | translate}}</th>\n                                                                                  <th class=\"\">{{'HOME.LG_Status' | translate}}</th>\n                                                                                  <th class=\"\">{{'HOME.Start_Date' | translate}}</th>\n                                                                                  <th class=\"\">{{'HOME.End_Date' | translate}}</th>\n                                                                                  <th class=\"\">{{'HOME.View_Details' | translate}}</th>\n                                                                                </tr>\n                                                                          </thead>\n                                                                          <tbody>\n                                                                          <tr *ngFor=\"let myActiveLgList of myActiveLgLists.userObject; let i = index \">\n                                                                              <td>{{i+1}}</td>\n                                                                              <td>{{myActiveLgList.lg_no}}</td>\n                                                                              <td>{{myActiveLgList.lG_amount}}</td>\n                                                                              <td>{{myActiveLgList.beneficiary_name}}</td>\n                                                                              <td>{{myActiveLgList.bank_name}}</td>\n                                                                              <td>{{myActiveLgList.lg_type}}</td>\n                                                                              <td>{{myActiveLgList.status}}</td>\n                                                                              <td>{{myActiveLgList.start_date}}</td>\n                                                                              <td>{{myActiveLgList.end_date}}</td>\n                                                                              <td>\n                                                                                <button type=\"button\" class=\"btn btn-success vw-details\" (click)=\"RowSelected(myActiveLgList)\">Release</button>\n                                                                              </td>\n                                                                          </tr>\n                                                                          </tbody>\n                                                                        </table>\n                                                                      </ng-template>\n\n                                                                      <ng-template #myActiveelseBlock>\n                                                                          <table datatable [dtOptions]=\"dtOptionsAR\" class=\"table table-bordered table-striped table-hover\">\n                                                                              <thead>\n                                                                                    <tr>\n                                                                                      <th class=\"table-col-7\">#</th>\n                                                                                      <th class=\"\"> {{'HOME.LG_Number' | translate}}</th>\n                                                                                      <th class=\"\">{{'HOME.LG_amount' | translate}}</th>\n                                                                                      <th class=\"\">{{'HOME.Beneficiary' | translate}}</th>\n                                                                                      <th class=\"\">{{'HOME.Bank' | translate}}</th>\n                                                                                      <th class=\"\">{{'HOME.LG_TYPE' | translate}}</th>\n                                                                                      <th class=\"\">{{'HOME.LG_Status' | translate}}</th>\n                                                                                      <th class=\"\">{{'HOME.Start_Date' | translate}}</th>\n                                                                                      <th class=\"\">{{'HOME.End_Date' | translate}}</th>\n                                                                                      <th class=\"\">{{'HOME.View_Details' | translate}}</th>\n                                                                                    </tr>\n                                                                              </thead>\n                                                                              <tbody>\n                                                                              <tr *ngFor=\"let myActiveLgList of myActiveLgLists.userObject; let i = index \">\n                                                                                  <td>{{i+1}}</td>\n                                                                                  <td>{{myActiveLgList.lg_no}}</td>\n                                                                                  <td>{{myActiveLgList.lG_amount}}</td>\n                                                                                  <td>{{myActiveLgList.beneficiary_name}}</td>\n                                                                                  <td>{{myActiveLgList.bank_name}}</td>\n                                                                                  <td>{{myActiveLgList.lg_type}}</td>\n                                                                                  <td>{{myActiveLgList.status}}</td>\n                                                                                  <td>{{myActiveLgList.start_date}}</td>\n                                                                                  <td>{{myActiveLgList.end_date}}</td>\n                                                                                  <td>\n                                                                                    <button type=\"button\" class=\"btn btn-success vw-details\" (click)=\"RowSelected(myActiveLgList)\">Release</button>\n                                                                                  </td>\n                                                                              </tr>\n                                                                              </tbody>\n                                                                            </table>\n                                                                          </ng-template>\n                                                                  </div>\n                                                                  <!--This is for Arabic-->\n                                                                </div>\n                                                                  </div>\n                                                                </div>\n                                                              </div>\n                                                            </div>\n                                                          </div>\n                                                        </div>\n                                                      </div>\n                                                    </div>\n                                                  </div>\n\n                                                  \n                                                </div>\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n                                              </form>\n            \n                                            </div>\n                                          </div>\n                                        </div>\n            \n                                      </div>\n                                    </div>\n                                  </div>\n                                </section>\n                              </div>\n                              \n                            </div>\n                          </div>\n                          <!--New Design Here-->\n                        </div>\n                      </div>\n                      <!--===========================\n                                    End Content\n                                    ============================-->\n                   \n              <!--begin::Global Theme Bundle(used by all pages) -->\n              <script src=\"../../assets/js/plugins.bundle.js\" type=\"text/javascript\"></script>\n              <!-- end::Body -->\n            \n            \n            \n            \n            ");

/***/ }),

/***/ "./node_modules/raw-loader/dist/cjs.js!./src/app/privatependingtasks/privatependingtasks.component.html":
/*!**************************************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/privatependingtasks/privatependingtasks.component.html ***!
  \**************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (" \n   \n          <!--===========================\n                        Start Content\n                        ============================-->\n                        <div class=\"pt-0 kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor kt-margin-top-50\">\n                          <div class=\"kt-container\">\n              <!--New Design Here-->\n              <div class=\"row\">\n                <app-sidemenu></app-sidemenu>\n                <!--<div class=\"col-12 col-sm-3 col-md-3 col-lg-3 left-panel-menu-wrap w-20 fixed-wrap\">\n                   \n                  <ul class=\"vertical-menu\">\n                    <li><a routerLink=\"/dashboard\"><span class=\"db-icon\"></span>{{'HOME.Dashboard' | translate}}</a></li>\n                    <li *ngIf=\"roleId == 1\"><a routerLink=\"/privateLgManagement\"><span class=\"lg-icon\"></span>{{'HOME.LG_Management' | translate}}</a>\n                    <li *ngIf=\"roleId == 1\"><a routerLink=\"/requestLgIssuance\"><span class=\"lg-icon\"></span>{{'HOME.LG_issuance' | translate}}</a></li>\n                    <li *ngIf=\"roleId == 3\"><a routerLink=\"/pendingtasks\"><span class=\"lg-icon\"></span>{{'HOME.Pending_Tasks' | translate}}</a></li>\n                    <li *ngIf=\"roleId == 1\"><a routerLink=\"/privatependingtasks\" class=\"active\"><span class=\"lg-icon\"></span>{{'HOME.Pending_Tasks' | translate}}</a></li>\n                  </ul>\n                </div>-->\n                <div class=\"col-12 col-sm-9 col-md-9 col-lg-9 padding-null scroll-wrap\">\n                  <!-- <div class=\"white-area\">\n                    <div class=\"user-area\">\n                      <span class=\"user-img-wrap\"><img src=\"../../assets/images/user.png\" alt=\"image\"\n                          class=\"user-img\"></span><span>Abdulla Ahmad</span>\n                    </div>\n                    <div class=\"clear\"></div>\n                  </div> -->\n                  \n                  <div class=\"grey-bg\">\n                    <section class=\"design-process-section\" id=\"process-tab\">\n                      <div>\n                        <div>\n                          <div>\n                            <div class=\"two-blocks-tab\">\n                              <ul>\n\n\n                                <li (click)=\"goToPendingReqTabPri()\" [ngClass]=\"{'active': isPendingClicked}\"><a>Pending task for External</a></li>\n                                <!--<li (click)=\"goToLGAmendTab()\" [ngClass]=\"{'active': isLGAmendClicked}\"><a>Pending task for Amend/Confiscate/Release</a></li>-->\n                                <li (click)=\"goToInternalPendingTab()\" [ngClass]=\"{'active': isInternalClicked}\"><a>Pending task for Internal Rewiew/Approve</a></li>\n\n\n                                <!--<li><button (click)=\"goToPendingReqTabPri()\"\n                                    [ngClass]=\"{'active': isPendingClicked}\">{{'HOME.PendingApproval_Acceptance' | translate}}</button></li> -->\n                                <!--<li><button (click)=\"goToPendingReqTabPri()\"\n                                      [ngClass]=\"{'active': isPendingClicked}\">Pending task for LG issue</button></li>\n                                <li><button (click)=\"goToLGAmendTab()\" [ngClass]=\"{'active': isLGAmendClicked}\">Pending task for Amend/Confiscate/Release</button></li>-->\n\n                              </ul>\n                            </div>\n                            <!-- Tab panes -->\n                            <div class=\"tab-content\">\n                              <div role=\"tabpanel\" class=\"tab-pane active\" id=\"discover\">\n                                <div class=\"design-process-content\">\n                                  <form>\n                                  <div *ngIf=\"isOpenPendingList\">\n                                    <div class=\"row\">\n                                      <div class=\"col-sm-12\">\n                                        <div class=\"kt-portlet\">\n                                          <div class=\"kt-portlet__head\">\n                                            <div class=\"kt-portlet__head-label\">\n                                              <h3 class=\"kt-portlet__head-title\">\n                                                Pending requests for Issuance \n                                              </h3>\n                                            </div>\n                                          </div>\n                                          <!--begin::Form-->\n\n\n                                          <div class=\"kt-form kt-form--label-right\">\n                                            <div class=\"kt-portlet__body\">\n                                              <div class=\"container\">\n                                                <div class=\"row\">\n                                                 <div class=\"col-md-12\">\n                                                    <div class=\"kt-portlet no-shadow\">\n                                                      <div class=\"new-blue-table1\">\n                                                        <div class=\"table-responsive\">\n                                                          <div *ngIf=\"this.translate.currentLang == 'en'\">\n                                                          <div *ngIf=\"pendingList?.length > 0\">\n                                                              <table datatable [dtOptions]=\"dtOptions\" class=\"table table-bordered table-striped table-hover\">\n                                                                  <thead>\n                                                                        <tr>\n                                                                          <th class=\"table14\">#</th>\n                                                                          <th class=\"table14\">{{'HOME.Request_date' | translate}}</th>\n                                                                          <th class=\"table15\">{{'HOME.LG_amount' | translate}}</th>\n                                                                          <th class=\"table16\">{{'HOME.LG_TYPE' | translate}}</th>\n                                                                          <th class=\"table17\">{{'HOME.Beneficiary' | translate}}</th>\n                                                                          <th class=\"table18\">{{'HOME.Project_name' | translate}}</th>\n                                                                          <th class=\"table19\">{{'HOME.Bank' | translate}}</th>\n                                                                          <th class=\"\">{{'HOME.View_Details' | translate}}</th>\n                                                                        </tr>\n                                                                  </thead>\n                                                                  <tbody>\n                                                                  <tr *ngFor=\"let plist of pendingList; let i = index \">\n                                  <td>{{i+1}}</td>\n                                  <td>{{plist.request_date}}</td>\n                                  <td>{{plist.contract_value}}</td>\n                                  <td>{{plist.lg_type}}</td>\n                                  <td>{{plist.beneficiary_name}}</td>\n                                  <td>{{plist.project_name}}</td>\n                                  <td>{{plist.bank_name}}</td>\n                                  <td>\n                                    <button type=\"button\" class=\"btn btn-success vw-details\" (click)=\"RowSelected(plist, 'LG_issue')\">{{'HOME.View' | translate}}</button>\n                                  </td>\n                                                                  </tr>\n                                                                  </tbody>\n                                                              </table>\n                                                          </div>\n                                                        </div>\n\n                                                        <div *ngIf=\"this.translate.currentLang == 'ar'\">\n                                                          <div *ngIf=\"pendingList?.length > 0\">\n                                                              <table datatable [dtOptions]=\"dtOptionsAR\" class=\"table table-bordered table-striped table-hover\">\n                                                                  <thead>\n                                                                        <tr>\n                                                                          <th class=\"table14\">#</th>\n                                                                          <th class=\"table14\">{{'HOME.Request_date' | translate}}</th>\n                                                                          <th class=\"table15\">{{'HOME.LG_amount' | translate}}</th>\n                                                                          <th class=\"table16\">{{'HOME.LG_TYPE' | translate}}</th>\n                                                                          <th class=\"table17\">{{'HOME.Beneficiary' | translate}}</th>\n                                                                          <th class=\"table18\">{{'HOME.Project_name' | translate}}</th>\n                                                                          <th class=\"table19\">{{'HOME.Bank' | translate}}</th>\n                                                                          <th class=\"\">{{'HOME.View_Details' | translate}}</th>\n                                                                        </tr>\n                                                                  </thead>\n                                                                  <tbody>\n                                                                  <tr *ngFor=\"let plist of pendingList; let i = index \">\n                                  <td>{{i+1}}</td>\n                                  <td>{{plist.request_date}}</td>\n                                  <td>{{plist.contract_value}}</td>\n                                  <td>{{plist.lg_type}}</td>\n                                  <td>{{plist.beneficiary_name}}</td>\n                                  <td>{{plist.project_name}}</td>\n                                  <td>{{plist.bank_name}}</td>\n                                  <td>\n                                    <button type=\"button\" class=\"btn btn-success vw-details\" (click)=\"RowSelected(plist, 'LG_issue')\">{{'HOME.View' | translate}}</button>\n                                  </td>\n                                                                  </tr>\n                                                                  </tbody>\n                                                              </table>\n                                                          </div>\n                                                        </div>\n                                                        </div>\n                                                      </div>\n                                                    </div>\n                                                  </div>\n                                                </div>\n                                              </div>\n                                            </div>\n                                          </div>\n                                        </div>\n                                      </div>\n                                    </div>\n\n\n\n\n\n\n\n                                    <!--<div class=\"row\" *ngIf=\"isOpenLGAmendList\">-->\n                                    <div class=\"row\">\n                                      <div class=\"col-sm-12\">\n                                        <div class=\"kt-portlet\">\n                                          <div class=\"kt-portlet__head\">\n                                            <div class=\"kt-portlet__head-label\">\n                                              <h3 class=\"kt-portlet__head-title\">\n                                                Pending requests for amendment\n                                              </h3>\n                                            </div>\n                                          </div>\n                                          <!--begin::Form-->\n\n\n                                          <div class=\"kt-form kt-form--label-right\">\n                                            <div class=\"kt-portlet__body\">\n                                              <div class=\"container\">\n                                                <div class=\"row\">\n                                                 <div class=\"col-md-12\">\n                                                    <div class=\"kt-portlet no-shadow\">\n                                                      <div class=\"new-blue-table1\">\n                                                        <div class=\"table-responsive\">\n                                                          <div *ngIf=\"this.translate.currentLang == 'en'\">\n                                                          <div *ngIf=\"amendList?.length > 0\">\n                                                              <table datatable [dtOptions]=\"dtOptions\" class=\"table table-bordered table-striped table-hover\">\n                                                                  <thead>\n                                                                        <tr>\n                                                                          <th class=\"table14\">#</th>\n                                                                          <th class=\"table14\">{{'HOME.Request_date' | translate}}</th>\n                                                                          <th class=\"table15\">{{'HOME.LG_amount' | translate}}</th>\n                                                                          <th class=\"table16\">{{'HOME.LG_TYPE' | translate}}</th>\n                                                                          <th class=\"table17\">{{'HOME.Beneficiary' | translate}}</th>\n                                                                          <th class=\"table18\">{{'HOME.Project_name' | translate}}</th>\n                                                                          <th class=\"table19\">{{'HOME.Bank' | translate}}</th>\n                                                                          <th class=\"\">{{'HOME.View_Details' | translate}}</th>\n                                                                        </tr>\n                                                                  </thead>\n                                                                  <tbody>\n                                                                  <tr *ngFor=\"let alist of amendList; let i = index \">\n                                                                    <td>{{i+1}}</td>\n                                                                    <td>{{alist.request_date}}</td>\n                                                                    <td>{{alist.contract_value}}</td>\n                                                                    <td>{{alist.lg_type}}</td>\n                                                                    <td>{{alist.beneficiary_name}}</td>\n                                                                    <td>{{alist.project_name}}</td>\n                                                                    <td>{{alist.bank_name}}</td>\n                                                                    <td>\n                                                                      <button type=\"button\" class=\"btn btn-success vw-details\" (click)=\"ACRRowSelected(alist, 'amend')\">{{'HOME.View' | translate}}</button>\n                                                                    </td>\n                                                                  </tr>\n                                                                  \n                                  \n                                                                  </tbody>\n                                                              </table>\n                                                          </div>\n                                                        </div>\n\n                                                        <div *ngIf=\"this.translate.currentLang == 'ar'\">\n                                                          <div *ngIf=\"amendList?.length > 0\">\n                                                              <table datatable [dtOptions]=\"dtOptionsAR\" class=\"table table-bordered table-striped table-hover\">\n                                                                  <thead>\n                                                                        <tr>\n                                                                          <th class=\"table14\">#</th>\n                                                                          <th class=\"table14\">{{'HOME.Request_date' | translate}}</th>\n                                                                          <th class=\"table15\">{{'HOME.LG_amount' | translate}}</th>\n                                                                          <th class=\"table16\">{{'HOME.LG_TYPE' | translate}}</th>\n                                                                          <th class=\"table17\">{{'HOME.Beneficiary' | translate}}</th>\n                                                                          <th class=\"table18\">{{'HOME.Project_name' | translate}}</th>\n                                                                          <th class=\"table19\">{{'HOME.Bank' | translate}}</th>\n                                                                          <th class=\"\">{{'HOME.View_Details' | translate}}</th>\n                                                                        </tr>\n                                                                  </thead>\n                                                                  <tbody>\n                                                                    <tr *ngFor=\"let alist of amendList; let i = index \">\n                                                                      <td>{{i+1}}</td>\n                                                                      <td>{{alist.request_date}}</td>\n                                                                      <td>{{alist.contract_value}}</td>\n                                                                      <td>{{alist.lg_type}}</td>\n                                                                      <td>{{alist.beneficiary_name}}</td>\n                                                                      <td>{{alist.project_name}}</td>\n                                                                      <td>{{alist.bank_name}}</td>\n                                                                      <td>\n                                                                        <button type=\"button\" class=\"btn btn-success vw-details\" (click)=\"ACRRowSelected(alist, 'amend')\">{{'HOME.View' | translate}}</button>\n                                                                      </td>\n                                                                       </tr>\n                                                                  </tbody>\n                                                              </table>\n                                                          </div>\n                                                        </div>\n                                                        </div>\n                                                      </div>\n                                                    </div>\n                                                  </div>\n                                                </div>\n                                              </div>\n                                            </div>\n                                          </div>\n                                        </div>\n                                      </div>\n                                    </div>\n\n\n\n\n\n\n\n\n\n                                    <div class=\"row\">\n                                      <div class=\"col-sm-12\">\n                                        <div class=\"kt-portlet\">\n                                          <div class=\"kt-portlet__head\">\n                                            <div class=\"kt-portlet__head-label\">\n                                              <h3 class=\"kt-portlet__head-title\">\n                                                Pending requests for confiscate\n                                              </h3>\n                                            </div>\n                                          </div>\n                                          <!--begin::Form-->\n\n\n                                          <div class=\"kt-form kt-form--label-right\">\n                                            <div class=\"kt-portlet__body\">\n                                              <div class=\"container\">\n                                                <div class=\"row\">\n                                                 <div class=\"col-md-12\">\n                                                    <div class=\"kt-portlet no-shadow\">\n                                                      <div class=\"new-blue-table1\">\n                                                        <div class=\"table-responsive\">\n                                                          <div *ngIf=\"this.translate.currentLang == 'en'\">\n                                                          <div *ngIf=\"confiscateList?.length > 0\">\n                                                              <table datatable [dtOptions]=\"dtOptions\" class=\"table table-bordered table-striped table-hover\">\n                                                                  <thead>\n                                                                        <tr>\n                                                                          <th class=\"table14\">#</th>\n                                                                          <th class=\"table14\">{{'HOME.Request_date' | translate}}</th>\n                                                                          <th class=\"table15\">{{'HOME.LG_amount' | translate}}</th>\n                                                                          <th class=\"table16\">{{'HOME.LG_TYPE' | translate}}</th>\n                                                                          <th class=\"table17\">{{'HOME.Beneficiary' | translate}}</th>\n                                                                          <th class=\"table18\">{{'HOME.Project_name' | translate}}</th>\n                                                                          <th class=\"table19\">{{'HOME.Bank' | translate}}</th>\n                                                                          <th class=\"\">{{'HOME.View_Details' | translate}}</th>\n                                                                        </tr>\n                                                                  </thead>\n                                                                  <tbody>\n                                                                    <tr *ngFor=\"let clist of confiscateList; let c = index \">\n                                                                      <td>{{c+amendList?.length+releaseList?.length+1}}</td>\n                                                                      <td>{{clist.request_date}}</td>\n                                                                      <td>{{clist.contract_value}}</td>\n                                                                      <td>{{clist.lg_type}}</td>\n                                                                      <td>{{clist.beneficiary_name}}</td>\n                                                                      <td>{{clist.project_name}}</td>\n                                                                      <td>{{clist.bank_name}}</td>\n                                                                      <td>\n                                                                        <button type=\"button\" class=\"btn btn-success vw-details\" (click)=\"ACRRowSelected(clist, 'confiscate')\">{{'HOME.View' | translate}}</button>\n                                                                      </td>\n                                                                      </tr>\n                                                                  \n                                  \n                                                                  </tbody>\n                                                              </table>\n                                                          </div>\n                                                        </div>\n\n                                                        <div *ngIf=\"this.translate.currentLang == 'ar'\">\n                                                          <div *ngIf=\"confiscateList?.length > 0\">\n                                                              <table datatable [dtOptions]=\"dtOptionsAR\" class=\"table table-bordered table-striped table-hover\">\n                                                                  <thead>\n                                                                        <tr>\n                                                                          <th class=\"table14\">#</th>\n                                                                          <th class=\"table14\">{{'HOME.Request_date' | translate}}</th>\n                                                                          <th class=\"table15\">{{'HOME.LG_amount' | translate}}</th>\n                                                                          <th class=\"table16\">{{'HOME.LG_TYPE' | translate}}</th>\n                                                                          <th class=\"table17\">{{'HOME.Beneficiary' | translate}}</th>\n                                                                          <th class=\"table18\">{{'HOME.Project_name' | translate}}</th>\n                                                                          <th class=\"table19\">{{'HOME.Bank' | translate}}</th>\n                                                                          <th class=\"\">{{'HOME.View_Details' | translate}}</th>\n                                                                        </tr>\n                                                                  </thead>\n                                                                  <tbody>\n                                                                    <tr *ngFor=\"let clist of confiscateList; let c = index \">\n                                                                      <td>{{c+1}}</td>\n                                                                      <td>{{clist.request_date}}</td>\n                                                                      <td>{{clist.contract_value}}</td>\n                                                                      <td>{{clist.lg_type}}</td>\n                                                                      <td>{{clist.beneficiary_name}}</td>\n                                                                      <td>{{clist.project_name}}</td>\n                                                                      <td>{{clist.bank_name}}</td>\n                                                                      <td>\n                                                                        <button type=\"button\" class=\"btn btn-success vw-details\" (click)=\"ACRRowSelected(clist, 'confiscate')\">{{'HOME.View' | translate}}</button>\n                                                                      </td>\n                                                                      </tr>\n                                                                  </tbody>\n                                                              </table>\n                                                          </div>\n                                                        </div>\n                                                        </div>\n                                                      </div>\n                                                    </div>\n                                                  </div>\n                                                </div>\n                                              </div>\n                                            </div>\n                                          </div>\n                                        </div>\n                                      </div>\n                                    </div>\n\n\n\n\n\n                                    <div class=\"row\">\n                                      <div class=\"col-sm-12\">\n                                        <div class=\"kt-portlet\">\n                                          <div class=\"kt-portlet__head\">\n                                            <div class=\"kt-portlet__head-label\">\n                                              <h3 class=\"kt-portlet__head-title\">\n                                                Pending requests for release\n                                              </h3>\n                                            </div>\n                                          </div>\n                                          <!--begin::Form-->\n\n\n                                          <div class=\"kt-form kt-form--label-right\">\n                                            <div class=\"kt-portlet__body\">\n                                              <div class=\"container\">\n                                                <div class=\"row\">\n                                                 <div class=\"col-md-12\">\n                                                    <div class=\"kt-portlet no-shadow\">\n                                                      <div class=\"new-blue-table1\">\n                                                        <div class=\"table-responsive\">\n                                                          <div *ngIf=\"this.translate.currentLang == 'en'\">\n                                                          <div *ngIf=\"releaseList?.length > 0\">\n                                                              <table datatable [dtOptions]=\"dtOptions\" class=\"table table-bordered table-striped table-hover\">\n                                                                  <thead>\n                                                                        <tr>\n                                                                          <th class=\"table14\">#</th>\n                                                                          <th class=\"table14\">{{'HOME.Request_date' | translate}}</th>\n                                                                          <th class=\"table15\">{{'HOME.LG_amount' | translate}}</th>\n                                                                          <th class=\"table16\">{{'HOME.LG_TYPE' | translate}}</th>\n                                                                          <th class=\"table17\">{{'HOME.Beneficiary' | translate}}</th>\n                                                                          <th class=\"table18\">{{'HOME.Project_name' | translate}}</th>\n                                                                          <th class=\"table19\">{{'HOME.Bank' | translate}}</th>\n                                                                          <th class=\"\">{{'HOME.View_Details' | translate}}</th>\n                                                                        </tr>\n                                                                  </thead>\n                                                                  <tbody>\n                                                                    <tr *ngFor=\"let rlist of releaseList; let r = index \">\n                                                                      <td>{{r+1}}</td>\n                                                                      <td>{{rlist.request_date}}</td>\n                                                                      <td>{{rlist.contract_value}}</td>\n                                                                      <td>{{rlist.lg_type}}</td>\n                                                                      <td>{{rlist.beneficiary_name}}</td>\n                                                                      <td>{{rlist.project_name}}</td>\n                                                                      <td>{{rlist.bank_name}}</td>\n                                                                      <td>\n                                                                        <button type=\"button\" class=\"btn btn-success vw-details\" (click)=\"ACRRowSelected(rlist, 'release')\">{{'HOME.View' | translate}}</button>\n                                                                      </td>\n                                                                      </tr>\n                                                                  \n                                  \n                                                                  </tbody>\n                                                              </table>\n                                                          </div>\n                                                        </div>\n\n                                                        <div *ngIf=\"this.translate.currentLang == 'ar'\">\n                                                          <div *ngIf=\"releaseList?.length > 0\">\n                                                              <table datatable [dtOptions]=\"dtOptionsAR\" class=\"table table-bordered table-striped table-hover\">\n                                                                  <thead>\n                                                                        <tr>\n                                                                          <th class=\"table14\">#</th>\n                                                                          <th class=\"table14\">{{'HOME.Request_date' | translate}}</th>\n                                                                          <th class=\"table15\">{{'HOME.LG_amount' | translate}}</th>\n                                                                          <th class=\"table16\">{{'HOME.LG_TYPE' | translate}}</th>\n                                                                          <th class=\"table17\">{{'HOME.Beneficiary' | translate}}</th>\n                                                                          <th class=\"table18\">{{'HOME.Project_name' | translate}}</th>\n                                                                          <th class=\"table19\">{{'HOME.Bank' | translate}}</th>\n                                                                          <th class=\"\">{{'HOME.View_Details' | translate}}</th>\n                                                                        </tr>\n                                                                  </thead>\n                                                                  <tbody>\n                                                                    <tr *ngFor=\"let rlist of releaseList; let r = index \">\n                                                                      <td>{{r+1}}</td>\n                                                                      <td>{{rlist.request_date}}</td>\n                                                                      <td>{{rlist.contract_value}}</td>\n                                                                      <td>{{rlist.lg_type}}</td>\n                                                                      <td>{{rlist.beneficiary_name}}</td>\n                                                                      <td>{{rlist.project_name}}</td>\n                                                                      <td>{{rlist.bank_name}}</td>\n                                                                      <td>\n                                                                        <button type=\"button\" class=\"btn btn-success vw-details\" (click)=\"ACRRowSelected(rlist, 'release')\">{{'HOME.View' | translate}}</button>\n                                                                      </td>\n                                                                      </tr>\n                                                                  </tbody>\n                                                              </table>\n                                                          </div>\n                                                        </div>\n                                                        </div>\n                                                      </div>\n                                                    </div>\n                                                  </div>\n                                                </div>\n                                              </div>\n                                            </div>\n                                          </div>\n                                        </div>\n                                      </div>\n                                    </div>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                                  </div>\n\n\n<!-- Internal Pending list for LG/Amend/Confiscation/release -->\n  <div class=\"row\" *ngIf=\"isOpenInternalList\">\n\n<!-- Internal Pending list for LG Reject -->\n<div *ngIf=\"aclLGCreate\">\n  <div class=\"col-sm-12\">\n    <div class=\"kt-portlet\">\n      <div class=\"kt-portlet__head\">\n        <div class=\"kt-portlet__head-label\">\n          <h3 class=\"kt-portlet__head-title\">\n            Pending LG Reject List\n          </h3>\n        </div>\n      </div>\n      \n        <!--begin::Form-->\n        <div class=\"kt-form kt-form--label-right\">\n        <div class=\"kt-portlet__body\">\n          <div class=\"container\">\n            <div class=\"row\">\n              <div class=\"col-md-12\">\n                <div class=\"kt-portlet no-shadow\">\n                  <div class=\"new-blue-table1\">\n\n\n\n                    <div class=\"table-responsive\">\n                      <div *ngIf=\"this.translate.currentLang == 'en'\">\n                        <div *ngIf=\"intIssuanceRejectList?.length > 0; then LGRejectthenBlock else LGRejectelseBlock\"> </div>\n                        <ng-template #LGRejectthenBlock>\n                        <table datatable [dtOptions]=\"dtOptions\" class=\"table table-bordered table-striped table-hover\">\n                            <thead>\n                                <tr>\n                                    <th class=\"table14\">#</th>\n                                    <th class=\"table14\">{{'HOME.Request_date' | translate}}</th>\n                                    <th class=\"table15\">{{'HOME.LG_amount' | translate}}</th>\n                                    <th class=\"table16\">{{'HOME.LG_TYPE' | translate}}</th>\n                                    <th class=\"table17\">{{'HOME.Beneficiary' | translate}}</th>\n                                    <th class=\"table18\">{{'HOME.Project_name' | translate}}</th>\n                                    <th class=\"table19\">{{'HOME.Bank' | translate}}</th>\n                                    <th class=\"\">{{'HOME.View_Details' | translate}}</th>\n                                  </tr>\n                            </thead>\n                            <tbody>\n                              <tr *ngFor=\"let plist of intIssuanceRejectList; let i = index \">\n                                <td>{{i+1}}</td>\n                                <td>{{plist.request_date}}</td>\n                                <td>{{plist.contract_value}}</td>\n                                <td>{{plist.lg_type}}</td>\n                                <td>{{plist.beneficiary_name}}</td>\n                                <td>{{plist.project_name}}</td>\n                                <td>{{plist.bank_name}}</td>\n                                <td>\n                                  <button type=\"button\" class=\"btn btn-success vw-details\" (click)=\"internalRowSelected(plist, 'issuance_Reject')\">Edit</button>\n                                </td>\n                              </tr>\n                            </tbody>\n                          </table>\n                        </ng-template>\n\n                        <ng-template #LGRejectelseBlock>\n                            <table datatable [dtOptions]=\"dtOptions\" class=\"table table-bordered table-striped table-hover\">\n                                <thead>\n                                  <tr>\n                                    <th class=\"table14\">#</th>\n                                    <th class=\"table14\">{{'HOME.Request_date' | translate}}</th>\n                                    <th class=\"table15\">{{'HOME.LG_amount' | translate}}</th>\n                                    <th class=\"table16\">{{'HOME.LG_TYPE' | translate}}</th>\n                                    <th class=\"table17\">{{'HOME.Beneficiary' | translate}}</th>\n                                    <th class=\"table18\">{{'HOME.Project_name' | translate}}</th>\n                                    <th class=\"table19\">{{'HOME.Bank' | translate}}</th>\n                                    <th class=\"\">{{'HOME.View_Details' | translate}}</th>\n                                  </tr>\n                                </thead>\n                                <tbody>\n                                  <tr *ngFor=\"let plist of intIssuanceRejectList; let i = index \">\n                                    <td>{{i+1}}</td>\n                                    <td>{{plist.request_date}}</td>\n                                    <td>{{plist.contract_value}}</td>\n                                    <td>{{plist.lg_type}}</td>\n                                    <td>{{plist.beneficiary_name}}</td>\n                                    <td>{{plist.project_name}}</td>\n                                    <td>{{plist.bank_name}}</td>\n                                    <td>\n                                      <button type=\"button\" class=\"btn btn-success vw-details\" (click)=\"internalRowSelected(plist, 'issuance_Reject')\">Edit</button>\n                                    </td>\n                                  </tr>\n                                </tbody>\n                              </table>\n                            </ng-template>\n                    </div>\n                    <!--This is for Arabic-->\n\n                    <div *ngIf=\"this.translate.currentLang == 'ar'\">\n                      <div *ngIf=\"intIssuanceRejectList?.length > 0; then LGRejectthenBlock else LGRejectelseBlock\"> </div>\n                      <ng-template #LGRejectthenBlock>\n                      <table datatable [dtOptions]=\"dtOptionsAR\" class=\"table table-bordered table-striped table-hover\">\n                          <thead>\n                            <tr>\n                              <th class=\"table14\">#</th>\n                              <th class=\"table14\">{{'HOME.Request_date' | translate}}</th>\n                              <th class=\"table15\">{{'HOME.LG_amount' | translate}}</th>\n                              <th class=\"table16\">{{'HOME.LG_TYPE' | translate}}</th>\n                              <th class=\"table17\">{{'HOME.Beneficiary' | translate}}</th>\n                              <th class=\"table18\">{{'HOME.Project_name' | translate}}</th>\n                              <th class=\"table19\">{{'HOME.Bank' | translate}}</th>\n                              <th class=\"\">{{'HOME.View_Details' | translate}}</th>\n                            </tr>\n                          </thead>\n                          <tbody>\n                            <tr *ngFor=\"let plist of intIssuanceRejectList; let i = index \">\n                              <td>{{i+1}}</td>\n                              <td>{{plist.request_date}}</td>\n                              <td>{{plist.contract_value}}</td>\n                              <td>{{plist.lg_type}}</td>\n                              <td>{{plist.beneficiary_name}}</td>\n                              <td>{{plist.project_name}}</td>\n                              <td>{{plist.bank_name}}</td>\n                              <td>\n                                <button type=\"button\" class=\"btn btn-success vw-details\" (click)=\"internalRowSelected(plist, 'issuance_Reject')\">Edit</button>\n                              </td>\n                            </tr>\n                          </tbody>\n                        </table>\n                      </ng-template>\n\n                      <ng-template #LGRejectelseBlock>\n                          <table datatable [dtOptions]=\"dtOptionsAR\" class=\"table table-bordered table-striped table-hover\">\n                              <thead>\n                                <tr>\n                                  <th class=\"table14\">#</th>\n                                  <th class=\"table14\">{{'HOME.Request_date' | translate}}</th>\n                                  <th class=\"table15\">{{'HOME.LG_amount' | translate}}</th>\n                                  <th class=\"table16\">{{'HOME.LG_TYPE' | translate}}</th>\n                                  <th class=\"table17\">{{'HOME.Beneficiary' | translate}}</th>\n                                  <th class=\"table18\">{{'HOME.Project_name' | translate}}</th>\n                                  <th class=\"table19\">{{'HOME.Bank' | translate}}</th>\n                                  <th class=\"\">{{'HOME.View_Details' | translate}}</th>\n                                </tr>\n                              </thead>\n                              <tbody>\n                                <tr *ngFor=\"let plist of intIssuanceRejectList; let i = index \">\n                                  <td>{{i+1}}</td>\n                                  <td>{{plist.request_date}}</td>\n                                  <td>{{plist.contract_value}}</td>\n                                  <td>{{plist.lg_type}}</td>\n                                  <td>{{plist.beneficiary_name}}</td>\n                                  <td>{{plist.project_name}}</td>\n                                  <td>{{plist.bank_name}}</td>\n                                  <td>\n                                    <button type=\"button\" class=\"btn btn-success vw-details\" (click)=\"internalRowSelected(plist, 'issuance_Reject')\">Edit</button>\n                                  </td>\n                                </tr>\n                              </tbody>\n                            </table>\n                          </ng-template>\n                  </div>\n                  <!--This is for Arabic-->\n                </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n<!-- Internal Pending list for LG Reject -->\n    \n<!-- Internal Pending list for LG Creator -->\n<div *ngIf=\"aclLGCreate\">\n  <div class=\"col-sm-12\">\n    <div class=\"kt-portlet\">\n      <div class=\"kt-portlet__head\">\n        <div class=\"kt-portlet__head-label\">\n          <h3 class=\"kt-portlet__head-title\">\n            Pending LG Create List\n          </h3>\n        </div>\n      </div>\n      \n        <!--begin::Form-->\n        <div class=\"kt-form kt-form--label-right\">\n        <div class=\"kt-portlet__body\">\n          <div class=\"container\">\n            <div class=\"row\">\n              <div class=\"col-md-12\">\n                <div class=\"kt-portlet no-shadow\">\n                  <div class=\"new-blue-table1\">\n\n\n\n                    <div class=\"table-responsive\">\n                      <div *ngIf=\"this.translate.currentLang == 'en'\">\n                        <div *ngIf=\"intIssuanceCreateList?.length > 0; then LGCreatethenBlock else LGCreateelseBlock\"> </div>\n                        <ng-template #LGCreatethenBlock>\n                        <table datatable [dtOptions]=\"dtOptions\" class=\"table table-bordered table-striped table-hover\">\n                            <thead>\n                                <tr>\n                                    <th class=\"table14\">#</th>\n                                    <th class=\"table14\">{{'HOME.Request_date' | translate}}</th>\n                                    <th class=\"table15\">{{'HOME.LG_amount' | translate}}</th>\n                                    <th class=\"table16\">{{'HOME.LG_TYPE' | translate}}</th>\n                                    <th class=\"table17\">{{'HOME.Beneficiary' | translate}}</th>\n                                    <th class=\"table18\">{{'HOME.Project_name' | translate}}</th>\n                                    <th class=\"table19\">{{'HOME.Bank' | translate}}</th>\n                                    <th class=\"\">{{'HOME.View_Details' | translate}}</th>\n                                  </tr>\n                            </thead>\n                            <tbody>\n                              <tr *ngFor=\"let plist of intIssuanceCreateList; let i = index \">\n                                <td>{{i+1}}</td>\n                                <td>{{plist.request_date}}</td>\n                                <td>{{plist.contract_value}}</td>\n                                <td>{{plist.lg_type}}</td>\n                                <td>{{plist.beneficiary_name}}</td>\n                                <td>{{plist.project_name}}</td>\n                                <td>{{plist.bank_name}}</td>\n                                <td>\n                                  <button type=\"button\" class=\"btn btn-success vw-details\" (click)=\"internalRowSelected(plist, 'issuance_create')\">{{'HOME.View' | translate}}</button>\n                                </td>\n                              </tr>\n                            </tbody>\n                          </table>\n                        </ng-template>\n\n                        <ng-template #LGCreateelseBlock>\n                            <table datatable [dtOptions]=\"dtOptions\" class=\"table table-bordered table-striped table-hover\">\n                                <thead>\n                                  <tr>\n                                    <th class=\"table14\">#</th>\n                                    <th class=\"table14\">{{'HOME.Request_date' | translate}}</th>\n                                    <th class=\"table15\">{{'HOME.LG_amount' | translate}}</th>\n                                    <th class=\"table16\">{{'HOME.LG_TYPE' | translate}}</th>\n                                    <th class=\"table17\">{{'HOME.Beneficiary' | translate}}</th>\n                                    <th class=\"table18\">{{'HOME.Project_name' | translate}}</th>\n                                    <th class=\"table19\">{{'HOME.Bank' | translate}}</th>\n                                    <th class=\"\">{{'HOME.View_Details' | translate}}</th>\n                                  </tr>\n                                </thead>\n                                <tbody>\n                                  <tr *ngFor=\"let plist of intIssuanceCreateList; let i = index \">\n                                    <td>{{i+1}}</td>\n                                    <td>{{plist.request_date}}</td>\n                                    <td>{{plist.contract_value}}</td>\n                                    <td>{{plist.lg_type}}</td>\n                                    <td>{{plist.beneficiary_name}}</td>\n                                    <td>{{plist.project_name}}</td>\n                                    <td>{{plist.bank_name}}</td>\n                                    <td>\n                                      <button type=\"button\" class=\"btn btn-success vw-details\" (click)=\"internalRowSelected(plist, 'issuance_create')\">{{'HOME.View' | translate}}</button>\n                                    </td>\n                                  </tr>\n                                </tbody>\n                              </table>\n                            </ng-template>\n                    </div>\n                    <!--This is for Arabic-->\n\n                    <div *ngIf=\"this.translate.currentLang == 'ar'\">\n                      <div *ngIf=\"intIssuanceCreateList?.length > 0; then LGCreatethenBlock else LGCreateelseBlock\"> </div>\n                      <ng-template #LGCreatethenBlock>\n                      <table datatable [dtOptions]=\"dtOptionsAR\" class=\"table table-bordered table-striped table-hover\">\n                          <thead>\n                            <tr>\n                              <th class=\"table14\">#</th>\n                              <th class=\"table14\">{{'HOME.Request_date' | translate}}</th>\n                              <th class=\"table15\">{{'HOME.LG_amount' | translate}}</th>\n                              <th class=\"table16\">{{'HOME.LG_TYPE' | translate}}</th>\n                              <th class=\"table17\">{{'HOME.Beneficiary' | translate}}</th>\n                              <th class=\"table18\">{{'HOME.Project_name' | translate}}</th>\n                              <th class=\"table19\">{{'HOME.Bank' | translate}}</th>\n                              <th class=\"\">{{'HOME.View_Details' | translate}}</th>\n                            </tr>\n                          </thead>\n                          <tbody>\n                            <tr *ngFor=\"let plist of intIssuanceCreateList; let i = index \">\n                              <td>{{i+1}}</td>\n                              <td>{{plist.request_date}}</td>\n                              <td>{{plist.contract_value}}</td>\n                              <td>{{plist.lg_type}}</td>\n                              <td>{{plist.beneficiary_name}}</td>\n                              <td>{{plist.project_name}}</td>\n                              <td>{{plist.bank_name}}</td>\n                              <td>\n                                <button type=\"button\" class=\"btn btn-success vw-details\" (click)=\"internalRowSelected(plist, 'issuance_create')\">{{'HOME.View' | translate}}</button>\n                              </td>\n                            </tr>\n                          </tbody>\n                        </table>\n                      </ng-template>\n\n                      <ng-template #LGCreateelseBlock>\n                          <table datatable [dtOptions]=\"dtOptionsAR\" class=\"table table-bordered table-striped table-hover\">\n                              <thead>\n                                <tr>\n                                  <th class=\"table14\">#</th>\n                                  <th class=\"table14\">{{'HOME.Request_date' | translate}}</th>\n                                  <th class=\"table15\">{{'HOME.LG_amount' | translate}}</th>\n                                  <th class=\"table16\">{{'HOME.LG_TYPE' | translate}}</th>\n                                  <th class=\"table17\">{{'HOME.Beneficiary' | translate}}</th>\n                                  <th class=\"table18\">{{'HOME.Project_name' | translate}}</th>\n                                  <th class=\"table19\">{{'HOME.Bank' | translate}}</th>\n                                  <th class=\"\">{{'HOME.View_Details' | translate}}</th>\n                                </tr>\n                              </thead>\n                              <tbody>\n                                <tr *ngFor=\"let plist of intIssuanceCreateList; let i = index \">\n                                  <td>{{i+1}}</td>\n                                  <td>{{plist.request_date}}</td>\n                                  <td>{{plist.contract_value}}</td>\n                                  <td>{{plist.lg_type}}</td>\n                                  <td>{{plist.beneficiary_name}}</td>\n                                  <td>{{plist.project_name}}</td>\n                                  <td>{{plist.bank_name}}</td>\n                                  <td>\n                                    <button type=\"button\" class=\"btn btn-success vw-details\" (click)=\"internalRowSelected(plist, 'issuance_create')\">{{'HOME.View' | translate}}</button>\n                                  </td>\n                                </tr>\n                              </tbody>\n                            </table>\n                          </ng-template>\n                  </div>\n                  <!--This is for Arabic-->\n                </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n<!-- Internal Pending list for LG Creator -->\n\n<!-- Internal Pending list for LG Review -->\n    <div *ngIf=\"aclLGReview\">\n      <div class=\"col-sm-12\">\n        <div class=\"kt-portlet\">\n          <div class=\"kt-portlet__head\">\n            <div class=\"kt-portlet__head-label\">\n              <h3 class=\"kt-portlet__head-title\">\n                Pending LG Review List\n              </h3>\n            </div>\n          </div>\n          \n            <!--begin::Form-->\n            <div class=\"kt-form kt-form--label-right\">\n            <div class=\"kt-portlet__body\">\n              <div class=\"container\">\n                <div class=\"row\">\n                  <div class=\"col-md-12\">\n                    <div class=\"kt-portlet no-shadow\">\n                      <div class=\"new-blue-table1\">\n\n\n\n                        <div class=\"table-responsive\">\n                          <div *ngIf=\"this.translate.currentLang == 'en'\">\n                            <div *ngIf=\"intIssuanceReviewList?.length > 0; then LGReviewthenBlock else LGReviewelseBlock\"> </div>\n                            <ng-template #LGReviewthenBlock>\n                            <table datatable [dtOptions]=\"dtOptions\" class=\"table table-bordered table-striped table-hover\">\n                                <thead>\n                                    <tr>\n                                        <th class=\"table14\">#</th>\n                                        <th class=\"table14\">{{'HOME.Request_date' | translate}}</th>\n                                        <th class=\"table15\">{{'HOME.LG_amount' | translate}}</th>\n                                        <th class=\"table16\">{{'HOME.LG_TYPE' | translate}}</th>\n                                        <th class=\"table17\">{{'HOME.Beneficiary' | translate}}</th>\n                                        <th class=\"table18\">{{'HOME.Project_name' | translate}}</th>\n                                        <th class=\"table19\">{{'HOME.Bank' | translate}}</th>\n                                        <th class=\"\">{{'HOME.View_Details' | translate}}</th>\n                                      </tr>\n                                </thead>\n                                <tbody>\n                                  <tr *ngFor=\"let plist of intIssuanceReviewList; let i = index \">\n                                    <td>{{i+1}}</td>\n                                    <td>{{plist.request_date}}</td>\n                                    <td>{{plist.contract_value}}</td>\n                                    <td>{{plist.lg_type}}</td>\n                                    <td>{{plist.beneficiary_name}}</td>\n                                    <td>{{plist.project_name}}</td>\n                                    <td>{{plist.bank_name}}</td>\n                                    <td>\n                                      <button type=\"button\" class=\"btn btn-success vw-details\" (click)=\"internalRowSelected(plist, 'issuance_review')\">{{'HOME.View' | translate}}</button>\n                                    </td>\n                                  </tr>\n                                </tbody>\n                              </table>\n                            </ng-template>\n\n                            <ng-template #LGReviewelseBlock>\n                                <table datatable [dtOptions]=\"dtOptions\" class=\"table table-bordered table-striped table-hover\">\n                                    <thead>\n                                      <tr>\n                                        <th class=\"table14\">#</th>\n                                        <th class=\"table14\">{{'HOME.Request_date' | translate}}</th>\n                                        <th class=\"table15\">{{'HOME.LG_amount' | translate}}</th>\n                                        <th class=\"table16\">{{'HOME.LG_TYPE' | translate}}</th>\n                                        <th class=\"table17\">{{'HOME.Beneficiary' | translate}}</th>\n                                        <th class=\"table18\">{{'HOME.Project_name' | translate}}</th>\n                                        <th class=\"table19\">{{'HOME.Bank' | translate}}</th>\n                                        <th class=\"\">{{'HOME.View_Details' | translate}}</th>\n                                      </tr>\n                                    </thead>\n                                    <tbody>\n                                      <tr *ngFor=\"let plist of intIssuanceReviewList; let i = index \">\n                                        <td>{{i+1}}</td>\n                                        <td>{{plist.request_date}}</td>\n                                        <td>{{plist.contract_value}}</td>\n                                        <td>{{plist.lg_type}}</td>\n                                        <td>{{plist.beneficiary_name}}</td>\n                                        <td>{{plist.project_name}}</td>\n                                        <td>{{plist.bank_name}}</td>\n                                        <td>\n                                          <button type=\"button\" class=\"btn btn-success vw-details\" (click)=\"internalRowSelected(plist, 'issuance_review')\">{{'HOME.View' | translate}}</button>\n                                        </td>\n                                      </tr>\n                                    </tbody>\n                                  </table>\n                                </ng-template>\n                        </div>\n                        <!--This is for Arabic-->\n\n                        <div *ngIf=\"this.translate.currentLang == 'ar'\">\n                          <div *ngIf=\"intIssuanceReviewList?.length > 0; then LGReviewthenBlock else LGReviewelseBlock\"> </div>\n                          <ng-template #LGReviewthenBlock>\n                          <table datatable [dtOptions]=\"dtOptionsAR\" class=\"table table-bordered table-striped table-hover\">\n                              <thead>\n                                <tr>\n                                  <th class=\"table14\">#</th>\n                                  <th class=\"table14\">{{'HOME.Request_date' | translate}}</th>\n                                  <th class=\"table15\">{{'HOME.LG_amount' | translate}}</th>\n                                  <th class=\"table16\">{{'HOME.LG_TYPE' | translate}}</th>\n                                  <th class=\"table17\">{{'HOME.Beneficiary' | translate}}</th>\n                                  <th class=\"table18\">{{'HOME.Project_name' | translate}}</th>\n                                  <th class=\"table19\">{{'HOME.Bank' | translate}}</th>\n                                  <th class=\"\">{{'HOME.View_Details' | translate}}</th>\n                                </tr>\n                              </thead>\n                              <tbody>\n                                <tr *ngFor=\"let plist of intIssuanceReviewList; let i = index \">\n                                  <td>{{i+1}}</td>\n                                  <td>{{plist.request_date}}</td>\n                                  <td>{{plist.contract_value}}</td>\n                                  <td>{{plist.lg_type}}</td>\n                                  <td>{{plist.beneficiary_name}}</td>\n                                  <td>{{plist.project_name}}</td>\n                                  <td>{{plist.bank_name}}</td>\n                                  <td>\n                                    <button type=\"button\" class=\"btn btn-success vw-details\" (click)=\"internalRowSelected(plist, 'issuance_review')\">{{'HOME.View' | translate}}</button>\n                                  </td>\n                                </tr>\n                              </tbody>\n                            </table>\n                          </ng-template>\n\n                          <ng-template #LGReviewelseBlock>\n                              <table datatable [dtOptions]=\"dtOptionsAR\" class=\"table table-bordered table-striped table-hover\">\n                                  <thead>\n                                    <tr>\n                                      <th class=\"table14\">#</th>\n                                      <th class=\"table14\">{{'HOME.Request_date' | translate}}</th>\n                                      <th class=\"table15\">{{'HOME.LG_amount' | translate}}</th>\n                                      <th class=\"table16\">{{'HOME.LG_TYPE' | translate}}</th>\n                                      <th class=\"table17\">{{'HOME.Beneficiary' | translate}}</th>\n                                      <th class=\"table18\">{{'HOME.Project_name' | translate}}</th>\n                                      <th class=\"table19\">{{'HOME.Bank' | translate}}</th>\n                                      <th class=\"\">{{'HOME.View_Details' | translate}}</th>\n                                    </tr>\n                                  </thead>\n                                  <tbody>\n                                    <tr *ngFor=\"let plist of intIssuanceReviewList; let i = index \">\n                                      <td>{{i+1}}</td>\n                                      <td>{{plist.request_date}}</td>\n                                      <td>{{plist.contract_value}}</td>\n                                      <td>{{plist.lg_type}}</td>\n                                      <td>{{plist.beneficiary_name}}</td>\n                                      <td>{{plist.project_name}}</td>\n                                      <td>{{plist.bank_name}}</td>\n                                      <td>\n                                        <button type=\"button\" class=\"btn btn-success vw-details\" (click)=\"internalRowSelected(plist, 'issuance_review')\">{{'HOME.View' | translate}}</button>\n                                      </td>\n                                    </tr>\n                                  </tbody>\n                                </table>\n                              </ng-template>\n                      </div>\n                      <!--This is for Arabic-->\n                    </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n<!-- Internal Pending list for LG Review -->\n\n<!-- Internal Pending list for LG Approve -->\n    <div *ngIf=\"aclLGApprove\">\n      <div class=\"col-sm-12\">\n        <div class=\"kt-portlet\">\n          <div class=\"kt-portlet__head\">\n            <div class=\"kt-portlet__head-label\">\n              <h3 class=\"kt-portlet__head-title\">\n                Pending LG Approve List\n              </h3>\n            </div>\n          </div>\n          \n            <!--begin::Form-->\n            <div class=\"kt-form kt-form--label-right\">\n            <div class=\"kt-portlet__body\">\n              <div class=\"container\">\n                <div class=\"row\">\n                  <div class=\"col-md-12\">\n                    <div class=\"kt-portlet no-shadow\">\n                      <div class=\"new-blue-table1\">\n\n\n\n                        <div class=\"table-responsive\">\n                          <div *ngIf=\"this.translate.currentLang == 'en'\">\n                            <div *ngIf=\"intIssuanceApprovalList?.length > 0; then LGApprovethenBlock else LGApproveelseBlock\"> </div>\n                            <ng-template #LGApprovethenBlock>\n                            <table datatable [dtOptions]=\"dtOptions\" class=\"table table-bordered table-striped table-hover\">\n                                <thead>\n                                    <tr>\n                                        <th class=\"table14\">#</th>\n                                        <th class=\"table14\">{{'HOME.Request_date' | translate}}</th>\n                                        <th class=\"table15\">{{'HOME.LG_amount' | translate}}</th>\n                                        <th class=\"table16\">{{'HOME.LG_TYPE' | translate}}</th>\n                                        <th class=\"table17\">{{'HOME.Beneficiary' | translate}}</th>\n                                        <th class=\"table18\">{{'HOME.Project_name' | translate}}</th>\n                                        <th class=\"table19\">{{'HOME.Bank' | translate}}</th>\n                                        <th class=\"\">{{'HOME.View_Details' | translate}}</th>\n                                      </tr>\n                                </thead>\n                                <tbody>\n                                  <tr *ngFor=\"let plist of intIssuanceApprovalList; let i = index \">\n                                    <td>{{i+1}}</td>\n                                    <td>{{plist.request_date}}</td>\n                                    <td>{{plist.contract_value}}</td>\n                                    <td>{{plist.lg_type}}</td>\n                                    <td>{{plist.beneficiary_name}}</td>\n                                    <td>{{plist.project_name}}</td>\n                                    <td>{{plist.bank_name}}</td>\n                                    <td>\n                                      <button type=\"button\" class=\"btn btn-success vw-details\" (click)=\"internalRowSelected(plist, 'issuance_approve')\">{{'HOME.View' | translate}}</button>\n                                    </td>\n                                  </tr>\n                                </tbody>\n                              </table>\n                            </ng-template>\n\n                            <ng-template #LGApproveelseBlock>\n                                <table datatable [dtOptions]=\"dtOptions\" class=\"table table-bordered table-striped table-hover\">\n                                    <thead>\n                                      <tr>\n                                        <th class=\"table14\">#</th>\n                                        <th class=\"table14\">{{'HOME.Request_date' | translate}}</th>\n                                        <th class=\"table15\">{{'HOME.LG_amount' | translate}}</th>\n                                        <th class=\"table16\">{{'HOME.LG_TYPE' | translate}}</th>\n                                        <th class=\"table17\">{{'HOME.Beneficiary' | translate}}</th>\n                                        <th class=\"table18\">{{'HOME.Project_name' | translate}}</th>\n                                        <th class=\"table19\">{{'HOME.Bank' | translate}}</th>\n                                        <th class=\"\">{{'HOME.View_Details' | translate}}</th>\n                                      </tr>\n                                    </thead>\n                                    <tbody>\n                                      <tr *ngFor=\"let plist of intIssuanceApprovalList; let i = index \">\n                                        <td>{{i+1}}</td>\n                                        <td>{{plist.request_date}}</td>\n                                        <td>{{plist.contract_value}}</td>\n                                        <td>{{plist.lg_type}}</td>\n                                        <td>{{plist.beneficiary_name}}</td>\n                                        <td>{{plist.project_name}}</td>\n                                        <td>{{plist.bank_name}}</td>\n                                        <td>\n                                          <button type=\"button\" class=\"btn btn-success vw-details\" (click)=\"internalRowSelected(plist, 'issuance_approve')\">{{'HOME.View' | translate}}</button>\n                                        </td>\n                                      </tr>\n                                    </tbody>\n                                  </table>\n                                </ng-template>\n                        </div>\n                        <!--This is for Arabic-->\n\n                        <div *ngIf=\"this.translate.currentLang == 'ar'\">\n                          <div *ngIf=\"intIssuanceApprovalList?.length > 0; then LGApprovethenBlock else LGApproveelseBlock\"> </div>\n                          <ng-template #LGApprovethenBlock>\n                          <table datatable [dtOptions]=\"dtOptionsAR\" class=\"table table-bordered table-striped table-hover\">\n                              <thead>\n                                <tr>\n                                  <th class=\"table14\">#</th>\n                                  <th class=\"table14\">{{'HOME.Request_date' | translate}}</th>\n                                  <th class=\"table15\">{{'HOME.LG_amount' | translate}}</th>\n                                  <th class=\"table16\">{{'HOME.LG_TYPE' | translate}}</th>\n                                  <th class=\"table17\">{{'HOME.Beneficiary' | translate}}</th>\n                                  <th class=\"table18\">{{'HOME.Project_name' | translate}}</th>\n                                  <th class=\"table19\">{{'HOME.Bank' | translate}}</th>\n                                  <th class=\"\">{{'HOME.View_Details' | translate}}</th>\n                                </tr>\n                              </thead>\n                              <tbody>\n                                <tr *ngFor=\"let plist of intIssuanceApprovalList; let i = index \">\n                                  <td>{{i+1}}</td>\n                                  <td>{{plist.request_date}}</td>\n                                  <td>{{plist.contract_value}}</td>\n                                  <td>{{plist.lg_type}}</td>\n                                  <td>{{plist.beneficiary_name}}</td>\n                                  <td>{{plist.project_name}}</td>\n                                  <td>{{plist.bank_name}}</td>\n                                  <td>\n                                    <button type=\"button\" class=\"btn btn-success vw-details\" (click)=\"internalRowSelected(plist, 'issuance_approve')\">{{'HOME.View' | translate}}</button>\n                                  </td>\n                                </tr>\n                              </tbody>\n                            </table>\n                          </ng-template>\n\n                          <ng-template #LGApproveelseBlock>\n                              <table datatable [dtOptions]=\"dtOptionsAR\" class=\"table table-bordered table-striped table-hover\">\n                                  <thead>\n                                    <tr>\n                                      <th class=\"table14\">#</th>\n                                      <th class=\"table14\">{{'HOME.Request_date' | translate}}</th>\n                                      <th class=\"table15\">{{'HOME.LG_amount' | translate}}</th>\n                                      <th class=\"table16\">{{'HOME.LG_TYPE' | translate}}</th>\n                                      <th class=\"table17\">{{'HOME.Beneficiary' | translate}}</th>\n                                      <th class=\"table18\">{{'HOME.Project_name' | translate}}</th>\n                                      <th class=\"table19\">{{'HOME.Bank' | translate}}</th>\n                                      <th class=\"\">{{'HOME.View_Details' | translate}}</th>\n                                    </tr>\n                                  </thead>\n                                  <tbody>\n                                    <tr *ngFor=\"let plist of intIssuanceApprovalList; let i = index \">\n                                      <td>{{i+1}}</td>\n                                      <td>{{plist.request_date}}</td>\n                                      <td>{{plist.contract_value}}</td>\n                                      <td>{{plist.lg_type}}</td>\n                                      <td>{{plist.beneficiary_name}}</td>\n                                      <td>{{plist.project_name}}</td>\n                                      <td>{{plist.bank_name}}</td>\n                                      <td>\n                                        <button type=\"button\" class=\"btn btn-success vw-details\" (click)=\"internalRowSelected(plist, 'issuance_approve')\">{{'HOME.View' | translate}}</button>\n                                      </td>\n                                    </tr>\n                                  </tbody>\n                                </table>\n                              </ng-template>\n                      </div>\n                      <!--This is for Arabic-->\n                    </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n<!-- Internal Pending list for LG Approve -->\n  \n\n\n<!-- Internal Pending list for Amendment Reject -->\n<div *ngIf=\"aclAmendCreate\">\n  <div class=\"col-sm-12\">\n    <div class=\"kt-portlet\">\n      <div class=\"kt-portlet__head\">\n        <div class=\"kt-portlet__head-label\">\n          <h3 class=\"kt-portlet__head-title\">\n            Pending Amendment Reject List\n          </h3>\n        </div>\n      </div>\n      \n        <!--begin::Form-->\n        <div class=\"kt-form kt-form--label-right\">\n        <div class=\"kt-portlet__body\">\n          <div class=\"container\">\n            <div class=\"row\">\n              <div class=\"col-md-12\">\n                <div class=\"kt-portlet no-shadow\">\n                  <div class=\"new-blue-table1\">\n\n\n\n                    <div class=\"table-responsive\">\n                      <div *ngIf=\"this.translate.currentLang == 'en'\">\n                        <div *ngIf=\"intAmendmentRejectList?.length > 0; then AmendmentRejectthenBlock else AmendmentRejectelseBlock\"> </div>\n                        <ng-template #AmendmentRejectthenBlock>\n                        <table datatable [dtOptions]=\"dtOptions\" class=\"table table-bordered table-striped table-hover\">\n                            <thead>\n                                <tr>\n                                    <th class=\"table14\">#</th>\n                                    <th class=\"table14\">{{'HOME.Request_date' | translate}}</th>\n                                    <th class=\"table15\">{{'HOME.LG_amount' | translate}}</th>\n                                    <th class=\"table16\">{{'HOME.LG_TYPE' | translate}}</th>\n                                    <th class=\"table17\">{{'HOME.Beneficiary' | translate}}</th>\n                                    <th class=\"table18\">{{'HOME.Project_name' | translate}}</th>\n                                    <th class=\"table19\">{{'HOME.Bank' | translate}}</th>\n                                    <th class=\"\">{{'HOME.View_Details' | translate}}</th>\n                                  </tr>\n                            </thead>\n                            <tbody>\n                              <tr *ngFor=\"let plist of intAmendmentRejectList; let i = index \">\n                                <td>{{i+1}}</td>\n                                <td>{{plist.request_date}}</td>\n                                <td>{{plist.contract_value}}</td>\n                                <td>{{plist.lg_type}}</td>\n                                <td>{{plist.beneficiary_name}}</td>\n                                <td>{{plist.project_name}}</td>\n                                <td>{{plist.bank_name}}</td>\n                                <td>\n                                  <button type=\"button\" class=\"btn btn-success vw-details\" (click)=\"internalRowSelected(plist, 'amendment_Reject')\">{{'HOME.View' | translate}}</button>\n                                </td>\n                              </tr>\n                            </tbody>\n                          </table>\n                        </ng-template>\n\n                        <ng-template #AmendmentRejectelseBlock>\n                            <table datatable [dtOptions]=\"dtOptions\" class=\"table table-bordered table-striped table-hover\">\n                                <thead>\n                                  <tr>\n                                    <th class=\"table14\">#</th>\n                                    <th class=\"table14\">{{'HOME.Request_date' | translate}}</th>\n                                    <th class=\"table15\">{{'HOME.LG_amount' | translate}}</th>\n                                    <th class=\"table16\">{{'HOME.LG_TYPE' | translate}}</th>\n                                    <th class=\"table17\">{{'HOME.Beneficiary' | translate}}</th>\n                                    <th class=\"table18\">{{'HOME.Project_name' | translate}}</th>\n                                    <th class=\"table19\">{{'HOME.Bank' | translate}}</th>\n                                    <th class=\"\">{{'HOME.View_Details' | translate}}</th>\n                                  </tr>\n                                </thead>\n                                <tbody>\n                                  <tr *ngFor=\"let plist of intAmendmentRejectList; let i = index \">\n                                    <td>{{i+1}}</td>\n                                    <td>{{plist.request_date}}</td>\n                                    <td>{{plist.contract_value}}</td>\n                                    <td>{{plist.lg_type}}</td>\n                                    <td>{{plist.beneficiary_name}}</td>\n                                    <td>{{plist.project_name}}</td>\n                                    <td>{{plist.bank_name}}</td>\n                                    <td>\n                                      <button type=\"button\" class=\"btn btn-success vw-details\" (click)=\"internalRowSelected(plist, 'amendment_Reject')\">{{'HOME.View' | translate}}</button>\n                                    </td>\n                                  </tr>\n                                </tbody>\n                              </table>\n                            </ng-template>\n                    </div>\n                    <!--This is for Arabic-->\n\n                    <div *ngIf=\"this.translate.currentLang == 'ar'\">\n                      <div *ngIf=\"intAmendmentRejectList?.length > 0; then AmendmentRejectthenBlock else AmendmentRejectelseBlock\"> </div>\n                      <ng-template #AmendmentRejectthenBlock>\n                      <table datatable [dtOptions]=\"dtOptionsAR\" class=\"table table-bordered table-striped table-hover\">\n                          <thead>\n                            <tr>\n                              <th class=\"table14\">#</th>\n                              <th class=\"table14\">{{'HOME.Request_date' | translate}}</th>\n                              <th class=\"table15\">{{'HOME.LG_amount' | translate}}</th>\n                              <th class=\"table16\">{{'HOME.LG_TYPE' | translate}}</th>\n                              <th class=\"table17\">{{'HOME.Beneficiary' | translate}}</th>\n                              <th class=\"table18\">{{'HOME.Project_name' | translate}}</th>\n                              <th class=\"table19\">{{'HOME.Bank' | translate}}</th>\n                              <th class=\"\">{{'HOME.View_Details' | translate}}</th>\n                            </tr>\n                          </thead>\n                          <tbody>\n                            <tr *ngFor=\"let plist of intAmendmentRejectList; let i = index \">\n                              <td>{{i+1}}</td>\n                              <td>{{plist.request_date}}</td>\n                              <td>{{plist.contract_value}}</td>\n                              <td>{{plist.lg_type}}</td>\n                              <td>{{plist.beneficiary_name}}</td>\n                              <td>{{plist.project_name}}</td>\n                              <td>{{plist.bank_name}}</td>\n                              <td>\n                                <button type=\"button\" class=\"btn btn-success vw-details\" (click)=\"internalRowSelected(plist, 'amendment_Reject')\">{{'HOME.View' | translate}}</button>\n                              </td>\n                            </tr>\n                          </tbody>\n                        </table>\n                      </ng-template>\n\n                      <ng-template #AmendmentRejectelseBlock>\n                          <table datatable [dtOptions]=\"dtOptionsAR\" class=\"table table-bordered table-striped table-hover\">\n                              <thead>\n                                <tr>\n                                  <th class=\"table14\">#</th>\n                                  <th class=\"table14\">{{'HOME.Request_date' | translate}}</th>\n                                  <th class=\"table15\">{{'HOME.LG_amount' | translate}}</th>\n                                  <th class=\"table16\">{{'HOME.LG_TYPE' | translate}}</th>\n                                  <th class=\"table17\">{{'HOME.Beneficiary' | translate}}</th>\n                                  <th class=\"table18\">{{'HOME.Project_name' | translate}}</th>\n                                  <th class=\"table19\">{{'HOME.Bank' | translate}}</th>\n                                  <th class=\"\">{{'HOME.View_Details' | translate}}</th>\n                                </tr>\n                              </thead>\n                              <tbody>\n                                <tr *ngFor=\"let plist of intAmendmentRejectList; let i = index \">\n                                  <td>{{i+1}}</td>\n                                  <td>{{plist.request_date}}</td>\n                                  <td>{{plist.contract_value}}</td>\n                                  <td>{{plist.lg_type}}</td>\n                                  <td>{{plist.beneficiary_name}}</td>\n                                  <td>{{plist.project_name}}</td>\n                                  <td>{{plist.bank_name}}</td>\n                                  <td>\n                                    <button type=\"button\" class=\"btn btn-success vw-details\" (click)=\"internalRowSelected(plist, 'amendment_Reject')\">{{'HOME.View' | translate}}</button>\n                                  </td>\n                                </tr>\n                              </tbody>\n                            </table>\n                          </ng-template>\n                  </div>\n                  <!--This is for Arabic-->\n                </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n<!-- Internal Pending list for Amendment Reject -->\n\n<!-- Internal Pending list for Amendment Create -->\n<div *ngIf=\"aclAmendCreate\">\n  <div class=\"col-sm-12\">\n    <div class=\"kt-portlet\">\n      <div class=\"kt-portlet__head\">\n        <div class=\"kt-portlet__head-label\">\n          <h3 class=\"kt-portlet__head-title\">\n            Pending Amendment Create List\n          </h3>\n        </div>\n      </div>\n      \n        <!--begin::Form-->\n        <div class=\"kt-form kt-form--label-right\">\n        <div class=\"kt-portlet__body\">\n          <div class=\"container\">\n            <div class=\"row\">\n              <div class=\"col-md-12\">\n                <div class=\"kt-portlet no-shadow\">\n                  <div class=\"new-blue-table1\">\n\n\n\n                    <div class=\"table-responsive\">\n                      <div *ngIf=\"this.translate.currentLang == 'en'\">\n                        <div *ngIf=\"intAmendmentCreateList?.length > 0; then AmendmentCreatethenBlock else AmendmentCreateelseBlock\"> </div>\n                        <ng-template #AmendmentCreatethenBlock>\n                        <table datatable [dtOptions]=\"dtOptions\" class=\"table table-bordered table-striped table-hover\">\n                            <thead>\n                                <tr>\n                                    <th class=\"table14\">#</th>\n                                    <th class=\"table14\">{{'HOME.Request_date' | translate}}</th>\n                                    <th class=\"table15\">{{'HOME.LG_amount' | translate}}</th>\n                                    <th class=\"table16\">{{'HOME.LG_TYPE' | translate}}</th>\n                                    <th class=\"table17\">{{'HOME.Beneficiary' | translate}}</th>\n                                    <th class=\"table18\">{{'HOME.Project_name' | translate}}</th>\n                                    <th class=\"table19\">{{'HOME.Bank' | translate}}</th>\n                                    <th class=\"\">{{'HOME.View_Details' | translate}}</th>\n                                  </tr>\n                            </thead>\n                            <tbody>\n                              <tr *ngFor=\"let plist of intAmendmentCreateList; let i = index \">\n                                <td>{{i+1}}</td>\n                                <td>{{plist.request_date}}</td>\n                                <td>{{plist.contract_value}}</td>\n                                <td>{{plist.lg_type}}</td>\n                                <td>{{plist.beneficiary_name}}</td>\n                                <td>{{plist.project_name}}</td>\n                                <td>{{plist.bank_name}}</td>\n                                <td>\n                                  <button type=\"button\" class=\"btn btn-success vw-details\" (click)=\"internalRowSelected(plist, 'amendment_create')\">{{'HOME.View' | translate}}</button>\n                                </td>\n                              </tr>\n                            </tbody>\n                          </table>\n                        </ng-template>\n\n                        <ng-template #AmendmentCreateelseBlock>\n                            <table datatable [dtOptions]=\"dtOptions\" class=\"table table-bordered table-striped table-hover\">\n                                <thead>\n                                  <tr>\n                                    <th class=\"table14\">#</th>\n                                    <th class=\"table14\">{{'HOME.Request_date' | translate}}</th>\n                                    <th class=\"table15\">{{'HOME.LG_amount' | translate}}</th>\n                                    <th class=\"table16\">{{'HOME.LG_TYPE' | translate}}</th>\n                                    <th class=\"table17\">{{'HOME.Beneficiary' | translate}}</th>\n                                    <th class=\"table18\">{{'HOME.Project_name' | translate}}</th>\n                                    <th class=\"table19\">{{'HOME.Bank' | translate}}</th>\n                                    <th class=\"\">{{'HOME.View_Details' | translate}}</th>\n                                  </tr>\n                                </thead>\n                                <tbody>\n                                  <tr *ngFor=\"let plist of intAmendmentCreateList; let i = index \">\n                                    <td>{{i+1}}</td>\n                                    <td>{{plist.request_date}}</td>\n                                    <td>{{plist.contract_value}}</td>\n                                    <td>{{plist.lg_type}}</td>\n                                    <td>{{plist.beneficiary_name}}</td>\n                                    <td>{{plist.project_name}}</td>\n                                    <td>{{plist.bank_name}}</td>\n                                    <td>\n                                      <button type=\"button\" class=\"btn btn-success vw-details\" (click)=\"internalRowSelected(plist, 'amendment_create')\">{{'HOME.View' | translate}}</button>\n                                    </td>\n                                  </tr>\n                                </tbody>\n                              </table>\n                            </ng-template>\n                    </div>\n                    <!--This is for Arabic-->\n\n                    <div *ngIf=\"this.translate.currentLang == 'ar'\">\n                      <div *ngIf=\"intAmendmentCreateList?.length > 0; then AmendmentCreatethenBlock else AmendmentCreateelseBlock\"> </div>\n                      <ng-template #AmendmentCreatethenBlock>\n                      <table datatable [dtOptions]=\"dtOptionsAR\" class=\"table table-bordered table-striped table-hover\">\n                          <thead>\n                            <tr>\n                              <th class=\"table14\">#</th>\n                              <th class=\"table14\">{{'HOME.Request_date' | translate}}</th>\n                              <th class=\"table15\">{{'HOME.LG_amount' | translate}}</th>\n                              <th class=\"table16\">{{'HOME.LG_TYPE' | translate}}</th>\n                              <th class=\"table17\">{{'HOME.Beneficiary' | translate}}</th>\n                              <th class=\"table18\">{{'HOME.Project_name' | translate}}</th>\n                              <th class=\"table19\">{{'HOME.Bank' | translate}}</th>\n                              <th class=\"\">{{'HOME.View_Details' | translate}}</th>\n                            </tr>\n                          </thead>\n                          <tbody>\n                            <tr *ngFor=\"let plist of intAmendmentCreateList; let i = index \">\n                              <td>{{i+1}}</td>\n                              <td>{{plist.request_date}}</td>\n                              <td>{{plist.contract_value}}</td>\n                              <td>{{plist.lg_type}}</td>\n                              <td>{{plist.beneficiary_name}}</td>\n                              <td>{{plist.project_name}}</td>\n                              <td>{{plist.bank_name}}</td>\n                              <td>\n                                <button type=\"button\" class=\"btn btn-success vw-details\" (click)=\"internalRowSelected(plist, 'amendment_create')\">{{'HOME.View' | translate}}</button>\n                              </td>\n                            </tr>\n                          </tbody>\n                        </table>\n                      </ng-template>\n\n                      <ng-template #AmendmentCreateelseBlock>\n                          <table datatable [dtOptions]=\"dtOptionsAR\" class=\"table table-bordered table-striped table-hover\">\n                              <thead>\n                                <tr>\n                                  <th class=\"table14\">#</th>\n                                  <th class=\"table14\">{{'HOME.Request_date' | translate}}</th>\n                                  <th class=\"table15\">{{'HOME.LG_amount' | translate}}</th>\n                                  <th class=\"table16\">{{'HOME.LG_TYPE' | translate}}</th>\n                                  <th class=\"table17\">{{'HOME.Beneficiary' | translate}}</th>\n                                  <th class=\"table18\">{{'HOME.Project_name' | translate}}</th>\n                                  <th class=\"table19\">{{'HOME.Bank' | translate}}</th>\n                                  <th class=\"\">{{'HOME.View_Details' | translate}}</th>\n                                </tr>\n                              </thead>\n                              <tbody>\n                                <tr *ngFor=\"let plist of intAmendmentCreateList; let i = index \">\n                                  <td>{{i+1}}</td>\n                                  <td>{{plist.request_date}}</td>\n                                  <td>{{plist.contract_value}}</td>\n                                  <td>{{plist.lg_type}}</td>\n                                  <td>{{plist.beneficiary_name}}</td>\n                                  <td>{{plist.project_name}}</td>\n                                  <td>{{plist.bank_name}}</td>\n                                  <td>\n                                    <button type=\"button\" class=\"btn btn-success vw-details\" (click)=\"internalRowSelected(plist, 'amendment_create')\">{{'HOME.View' | translate}}</button>\n                                  </td>\n                                </tr>\n                              </tbody>\n                            </table>\n                          </ng-template>\n                  </div>\n                  <!--This is for Arabic-->\n                </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n<!-- Internal Pending list for Amendment Create -->\n\n<!-- Internal Pending list for Amendment Review -->\n<div *ngIf=\"aclAmendReview\">\n  <div class=\"col-sm-12\">\n    <div class=\"kt-portlet\">\n      <div class=\"kt-portlet__head\">\n        <div class=\"kt-portlet__head-label\">\n          <h3 class=\"kt-portlet__head-title\">\n            Pending Amendment Review List\n          </h3>\n        </div>\n      </div>\n      \n        <!--begin::Form-->\n        <div class=\"kt-form kt-form--label-right\">\n        <div class=\"kt-portlet__body\">\n          <div class=\"container\">\n            <div class=\"row\">\n              <div class=\"col-md-12\">\n                <div class=\"kt-portlet no-shadow\">\n                  <div class=\"new-blue-table1\">\n\n\n\n                    <div class=\"table-responsive\">\n                      <div *ngIf=\"this.translate.currentLang == 'en'\">\n                        <div *ngIf=\"intAmendmentReviewList?.length > 0; then AmendmentReviewthenBlock else AmendmentReviewelseBlock\"> </div>\n                        <ng-template #AmendmentReviewthenBlock>\n                        <table datatable [dtOptions]=\"dtOptions\" class=\"table table-bordered table-striped table-hover\">\n                            <thead>\n                                <tr>\n                                    <th class=\"table14\">#</th>\n                                    <th class=\"table14\">{{'HOME.Request_date' | translate}}</th>\n                                    <th class=\"table15\">{{'HOME.LG_amount' | translate}}</th>\n                                    <th class=\"table16\">{{'HOME.LG_TYPE' | translate}}</th>\n                                    <th class=\"table17\">{{'HOME.Beneficiary' | translate}}</th>\n                                    <th class=\"table18\">{{'HOME.Project_name' | translate}}</th>\n                                    <th class=\"table19\">{{'HOME.Bank' | translate}}</th>\n                                    <th class=\"\">{{'HOME.View_Details' | translate}}</th>\n                                  </tr>\n                            </thead>\n                            <tbody>\n                              <tr *ngFor=\"let plist of intAmendmentReviewList; let i = index \">\n                                <td>{{i+1}}</td>\n                                <td>{{plist.request_date}}</td>\n                                <td>{{plist.contract_value}}</td>\n                                <td>{{plist.lg_type}}</td>\n                                <td>{{plist.beneficiary_name}}</td>\n                                <td>{{plist.project_name}}</td>\n                                <td>{{plist.bank_name}}</td>\n                                <td>\n                                  <button type=\"button\" class=\"btn btn-success vw-details\" (click)=\"internalRowSelected(plist, 'amendment_review')\">{{'HOME.View' | translate}}</button>\n                                </td>\n                              </tr>\n                            </tbody>\n                          </table>\n                        </ng-template>\n\n                        <ng-template #AmendmentReviewelseBlock>\n                            <table datatable [dtOptions]=\"dtOptions\" class=\"table table-bordered table-striped table-hover\">\n                                <thead>\n                                  <tr>\n                                    <th class=\"table14\">#</th>\n                                    <th class=\"table14\">{{'HOME.Request_date' | translate}}</th>\n                                    <th class=\"table15\">{{'HOME.LG_amount' | translate}}</th>\n                                    <th class=\"table16\">{{'HOME.LG_TYPE' | translate}}</th>\n                                    <th class=\"table17\">{{'HOME.Beneficiary' | translate}}</th>\n                                    <th class=\"table18\">{{'HOME.Project_name' | translate}}</th>\n                                    <th class=\"table19\">{{'HOME.Bank' | translate}}</th>\n                                    <th class=\"\">{{'HOME.View_Details' | translate}}</th>\n                                  </tr>\n                                </thead>\n                                <tbody>\n                                  <tr *ngFor=\"let plist of intAmendmentReviewList; let i = index \">\n                                    <td>{{i+1}}</td>\n                                    <td>{{plist.request_date}}</td>\n                                    <td>{{plist.contract_value}}</td>\n                                    <td>{{plist.lg_type}}</td>\n                                    <td>{{plist.beneficiary_name}}</td>\n                                    <td>{{plist.project_name}}</td>\n                                    <td>{{plist.bank_name}}</td>\n                                    <td>\n                                      <button type=\"button\" class=\"btn btn-success vw-details\" (click)=\"internalRowSelected(plist, 'amendment_review')\">{{'HOME.View' | translate}}</button>\n                                    </td>\n                                  </tr>\n                                </tbody>\n                              </table>\n                            </ng-template>\n                    </div>\n                    <!--This is for Arabic-->\n\n                    <div *ngIf=\"this.translate.currentLang == 'ar'\">\n                      <div *ngIf=\"intAmendmentReviewList?.length > 0; then AmendmentReviewthenBlock else AmendmentReviewelseBlock\"> </div>\n                      <ng-template #AmendmentReviewthenBlock>\n                      <table datatable [dtOptions]=\"dtOptionsAR\" class=\"table table-bordered table-striped table-hover\">\n                          <thead>\n                            <tr>\n                              <th class=\"table14\">#</th>\n                              <th class=\"table14\">{{'HOME.Request_date' | translate}}</th>\n                              <th class=\"table15\">{{'HOME.LG_amount' | translate}}</th>\n                              <th class=\"table16\">{{'HOME.LG_TYPE' | translate}}</th>\n                              <th class=\"table17\">{{'HOME.Beneficiary' | translate}}</th>\n                              <th class=\"table18\">{{'HOME.Project_name' | translate}}</th>\n                              <th class=\"table19\">{{'HOME.Bank' | translate}}</th>\n                              <th class=\"\">{{'HOME.View_Details' | translate}}</th>\n                            </tr>\n                          </thead>\n                          <tbody>\n                            <tr *ngFor=\"let plist of intAmendmentReviewList; let i = index \">\n                              <td>{{i+1}}</td>\n                              <td>{{plist.request_date}}</td>\n                              <td>{{plist.contract_value}}</td>\n                              <td>{{plist.lg_type}}</td>\n                              <td>{{plist.beneficiary_name}}</td>\n                              <td>{{plist.project_name}}</td>\n                              <td>{{plist.bank_name}}</td>\n                              <td>\n                                <button type=\"button\" class=\"btn btn-success vw-details\" (click)=\"internalRowSelected(plist, 'amendment_review')\">{{'HOME.View' | translate}}</button>\n                              </td>\n                            </tr>\n                          </tbody>\n                        </table>\n                      </ng-template>\n\n                      <ng-template #AmendmentReviewelseBlock>\n                          <table datatable [dtOptions]=\"dtOptionsAR\" class=\"table table-bordered table-striped table-hover\">\n                              <thead>\n                                <tr>\n                                  <th class=\"table14\">#</th>\n                                  <th class=\"table14\">{{'HOME.Request_date' | translate}}</th>\n                                  <th class=\"table15\">{{'HOME.LG_amount' | translate}}</th>\n                                  <th class=\"table16\">{{'HOME.LG_TYPE' | translate}}</th>\n                                  <th class=\"table17\">{{'HOME.Beneficiary' | translate}}</th>\n                                  <th class=\"table18\">{{'HOME.Project_name' | translate}}</th>\n                                  <th class=\"table19\">{{'HOME.Bank' | translate}}</th>\n                                  <th class=\"\">{{'HOME.View_Details' | translate}}</th>\n                                </tr>\n                              </thead>\n                              <tbody>\n                                <tr *ngFor=\"let plist of intAmendmentReviewList; let i = index \">\n                                  <td>{{i+1}}</td>\n                                  <td>{{plist.request_date}}</td>\n                                  <td>{{plist.contract_value}}</td>\n                                  <td>{{plist.lg_type}}</td>\n                                  <td>{{plist.beneficiary_name}}</td>\n                                  <td>{{plist.project_name}}</td>\n                                  <td>{{plist.bank_name}}</td>\n                                  <td>\n                                    <button type=\"button\" class=\"btn btn-success vw-details\" (click)=\"internalRowSelected(plist, 'amendment_review')\">{{'HOME.View' | translate}}</button>\n                                  </td>\n                                </tr>\n                              </tbody>\n                            </table>\n                          </ng-template>\n                  </div>\n                  <!--This is for Arabic-->\n                </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n<!-- Internal Pending list for Amendment Review -->\n\n<!-- Internal Pending list for Amendment Approve -->\n<div *ngIf=\"aclAmendApprove\">\n  <div class=\"col-sm-12\">\n    <div class=\"kt-portlet\">\n      <div class=\"kt-portlet__head\">\n        <div class=\"kt-portlet__head-label\">\n          <h3 class=\"kt-portlet__head-title\">\n            Pending Amendment Approve List\n          </h3>\n        </div>\n      </div>\n      \n        <!--begin::Form-->\n        <div class=\"kt-form kt-form--label-right\">\n        <div class=\"kt-portlet__body\">\n          <div class=\"container\">\n            <div class=\"row\">\n              <div class=\"col-md-12\">\n                <div class=\"kt-portlet no-shadow\">\n                  <div class=\"new-blue-table1\">\n\n\n\n                    <div class=\"table-responsive\">\n                      <div *ngIf=\"this.translate.currentLang == 'en'\">\n                        <div *ngIf=\"intAmendmentApproveList?.length > 0; then AmendmentApprovethenBlock else AmendmentApproveelseBlock\"> </div>\n                        <ng-template #AmendmentApprovethenBlock>\n                        <table datatable [dtOptions]=\"dtOptions\" class=\"table table-bordered table-striped table-hover\">\n                            <thead>\n                                <tr>\n                                    <th class=\"table14\">#</th>\n                                    <th class=\"table14\">{{'HOME.Request_date' | translate}}</th>\n                                    <th class=\"table15\">{{'HOME.LG_amount' | translate}}</th>\n                                    <th class=\"table16\">{{'HOME.LG_TYPE' | translate}}</th>\n                                    <th class=\"table17\">{{'HOME.Beneficiary' | translate}}</th>\n                                    <th class=\"table18\">{{'HOME.Project_name' | translate}}</th>\n                                    <th class=\"table19\">{{'HOME.Bank' | translate}}</th>\n                                    <th class=\"\">{{'HOME.View_Details' | translate}}</th>\n                                  </tr>\n                            </thead>\n                            <tbody>\n                              <tr *ngFor=\"let plist of intAmendmentApproveList; let i = index \">\n                                <td>{{i+1}}</td>\n                                <td>{{plist.request_date}}</td>\n                                <td>{{plist.contract_value}}</td>\n                                <td>{{plist.lg_type}}</td>\n                                <td>{{plist.beneficiary_name}}</td>\n                                <td>{{plist.project_name}}</td>\n                                <td>{{plist.bank_name}}</td>\n                                <td>\n                                  <button type=\"button\" class=\"btn btn-success vw-details\" (click)=\"internalRowSelected(plist, 'amendment_approve')\">{{'HOME.View' | translate}}</button>\n                                </td>\n                              </tr>\n                            </tbody>\n                          </table>\n                        </ng-template>\n\n                        <ng-template #AmendmentApproveelseBlock>\n                            <table datatable [dtOptions]=\"dtOptions\" class=\"table table-bordered table-striped table-hover\">\n                                <thead>\n                                  <tr>\n                                    <th class=\"table14\">#</th>\n                                    <th class=\"table14\">{{'HOME.Request_date' | translate}}</th>\n                                    <th class=\"table15\">{{'HOME.LG_amount' | translate}}</th>\n                                    <th class=\"table16\">{{'HOME.LG_TYPE' | translate}}</th>\n                                    <th class=\"table17\">{{'HOME.Beneficiary' | translate}}</th>\n                                    <th class=\"table18\">{{'HOME.Project_name' | translate}}</th>\n                                    <th class=\"table19\">{{'HOME.Bank' | translate}}</th>\n                                    <th class=\"\">{{'HOME.View_Details' | translate}}</th>\n                                  </tr>\n                                </thead>\n                                <tbody>\n                                  <tr *ngFor=\"let plist of intAmendmentApproveList; let i = index \">\n                                    <td>{{i+1}}</td>\n                                    <td>{{plist.request_date}}</td>\n                                    <td>{{plist.contract_value}}</td>\n                                    <td>{{plist.lg_type}}</td>\n                                    <td>{{plist.beneficiary_name}}</td>\n                                    <td>{{plist.project_name}}</td>\n                                    <td>{{plist.bank_name}}</td>\n                                    <td>\n                                      <button type=\"button\" class=\"btn btn-success vw-details\" (click)=\"internalRowSelected(plist, 'amendment_approve')\">{{'HOME.View' | translate}}</button>\n                                    </td>\n                                  </tr>\n                                </tbody>\n                              </table>\n                            </ng-template>\n                    </div>\n                    <!--This is for Arabic-->\n\n                    <div *ngIf=\"this.translate.currentLang == 'ar'\">\n                      <div *ngIf=\"intAmendmentApproveList?.length > 0; then AmendmentApprovethenBlock else AmendmentApproveelseBlock\"> </div>\n                      <ng-template #AmendmentApprovethenBlock>\n                      <table datatable [dtOptions]=\"dtOptionsAR\" class=\"table table-bordered table-striped table-hover\">\n                          <thead>\n                            <tr>\n                              <th class=\"table14\">#</th>\n                              <th class=\"table14\">{{'HOME.Request_date' | translate}}</th>\n                              <th class=\"table15\">{{'HOME.LG_amount' | translate}}</th>\n                              <th class=\"table16\">{{'HOME.LG_TYPE' | translate}}</th>\n                              <th class=\"table17\">{{'HOME.Beneficiary' | translate}}</th>\n                              <th class=\"table18\">{{'HOME.Project_name' | translate}}</th>\n                              <th class=\"table19\">{{'HOME.Bank' | translate}}</th>\n                              <th class=\"\">{{'HOME.View_Details' | translate}}</th>\n                            </tr>\n                          </thead>\n                          <tbody>\n                            <tr *ngFor=\"let plist of intAmendmentApproveList; let i = index \">\n                              <td>{{i+1}}</td>\n                              <td>{{plist.request_date}}</td>\n                              <td>{{plist.contract_value}}</td>\n                              <td>{{plist.lg_type}}</td>\n                              <td>{{plist.beneficiary_name}}</td>\n                              <td>{{plist.project_name}}</td>\n                              <td>{{plist.bank_name}}</td>\n                              <td>\n                                <button type=\"button\" class=\"btn btn-success vw-details\" (click)=\"internalRowSelected(plist, 'amendment_approve')\">{{'HOME.View' | translate}}</button>\n                              </td>\n                            </tr>\n                          </tbody>\n                        </table>\n                      </ng-template>\n\n                      <ng-template #AmendmentApproveelseBlock>\n                          <table datatable [dtOptions]=\"dtOptionsAR\" class=\"table table-bordered table-striped table-hover\">\n                              <thead>\n                                <tr>\n                                  <th class=\"table14\">#</th>\n                                  <th class=\"table14\">{{'HOME.Request_date' | translate}}</th>\n                                  <th class=\"table15\">{{'HOME.LG_amount' | translate}}</th>\n                                  <th class=\"table16\">{{'HOME.LG_TYPE' | translate}}</th>\n                                  <th class=\"table17\">{{'HOME.Beneficiary' | translate}}</th>\n                                  <th class=\"table18\">{{'HOME.Project_name' | translate}}</th>\n                                  <th class=\"table19\">{{'HOME.Bank' | translate}}</th>\n                                  <th class=\"\">{{'HOME.View_Details' | translate}}</th>\n                                </tr>\n                              </thead>\n                              <tbody>\n                                <tr *ngFor=\"let plist of intAmendmentApproveList; let i = index \">\n                                  <td>{{i+1}}</td>\n                                  <td>{{plist.request_date}}</td>\n                                  <td>{{plist.contract_value}}</td>\n                                  <td>{{plist.lg_type}}</td>\n                                  <td>{{plist.beneficiary_name}}</td>\n                                  <td>{{plist.project_name}}</td>\n                                  <td>{{plist.bank_name}}</td>\n                                  <td>\n                                    <button type=\"button\" class=\"btn btn-success vw-details\" (click)=\"internalRowSelected(plist, 'amendment_approve')\">{{'HOME.View' | translate}}</button>\n                                  </td>\n                                </tr>\n                              </tbody>\n                            </table>\n                          </ng-template>\n                  </div>\n                  <!--This is for Arabic-->\n                </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n<!-- Internal Pending list for Amendment Approve -->\n\n\n<!-- Internal Pending list for Confiscate Reject -->\n<div *ngIf=\"aclConfiscateCreate\">\n  <div class=\"col-sm-12\">\n    <div class=\"kt-portlet\">\n      <div class=\"kt-portlet__head\">\n        <div class=\"kt-portlet__head-label\">\n          <h3 class=\"kt-portlet__head-title\">\n            Pending Confiscate Reject List\n          </h3>\n        </div>\n      </div>\n      \n        <!--begin::Form-->\n        <div class=\"kt-form kt-form--label-right\">\n        <div class=\"kt-portlet__body\">\n          <div class=\"container\">\n            <div class=\"row\">\n              <div class=\"col-md-12\">\n                <div class=\"kt-portlet no-shadow\">\n                  <div class=\"new-blue-table1\">\n\n\n\n                    <div class=\"table-responsive\">\n                      <div *ngIf=\"this.translate.currentLang == 'en'\">\n                        <div *ngIf=\"intConfiscateRejectList?.length > 0; then ConfiscateRejectthenBlock else ConfiscateRejectelseBlock\"> </div>\n                        <ng-template #ConfiscateRejectthenBlock>\n                        <table datatable [dtOptions]=\"dtOptions\" class=\"table table-bordered table-striped table-hover\">\n                            <thead>\n                                <tr>\n                                    <th class=\"table14\">#</th>\n                                    <th class=\"table14\">{{'HOME.Request_date' | translate}}</th>\n                                    <th class=\"table15\">{{'HOME.LG_amount' | translate}}</th>\n                                    <th class=\"table16\">{{'HOME.LG_TYPE' | translate}}</th>\n                                    <th class=\"table17\">{{'HOME.Beneficiary' | translate}}</th>\n                                    <th class=\"table18\">{{'HOME.Project_name' | translate}}</th>\n                                    <th class=\"table19\">{{'HOME.Bank' | translate}}</th>\n                                    <th class=\"\">{{'HOME.View_Details' | translate}}</th>\n                                  </tr>\n                            </thead>\n                            <tbody>\n                              <tr *ngFor=\"let plist of intConfiscateRejectList; let i = index \">\n                                <td>{{i+1}}</td>\n                                <td>{{plist.request_date}}</td>\n                                <td>{{plist.contract_value}}</td>\n                                <td>{{plist.lg_type}}</td>\n                                <td>{{plist.beneficiary_name}}</td>\n                                <td>{{plist.project_name}}</td>\n                                <td>{{plist.bank_name}}</td>\n                                <td>\n                                  <button type=\"button\" class=\"btn btn-success vw-details\" (click)=\"internalRowSelected(plist, 'confiscate_Reject')\">{{'HOME.View' | translate}}</button>\n                                </td>\n                              </tr>\n                            </tbody>\n                          </table>\n                        </ng-template>\n\n                        <ng-template #ConfiscateRejectelseBlock>\n                            <table datatable [dtOptions]=\"dtOptions\" class=\"table table-bordered table-striped table-hover\">\n                                <thead>\n                                  <tr>\n                                    <th class=\"table14\">#</th>\n                                    <th class=\"table14\">{{'HOME.Request_date' | translate}}</th>\n                                    <th class=\"table15\">{{'HOME.LG_amount' | translate}}</th>\n                                    <th class=\"table16\">{{'HOME.LG_TYPE' | translate}}</th>\n                                    <th class=\"table17\">{{'HOME.Beneficiary' | translate}}</th>\n                                    <th class=\"table18\">{{'HOME.Project_name' | translate}}</th>\n                                    <th class=\"table19\">{{'HOME.Bank' | translate}}</th>\n                                    <th class=\"\">{{'HOME.View_Details' | translate}}</th>\n                                  </tr>\n                                </thead>\n                                <tbody>\n                                  <tr *ngFor=\"let plist of intConfiscateRejectList; let i = index \">\n                                    <td>{{i+1}}</td>\n                                    <td>{{plist.request_date}}</td>\n                                    <td>{{plist.contract_value}}</td>\n                                    <td>{{plist.lg_type}}</td>\n                                    <td>{{plist.beneficiary_name}}</td>\n                                    <td>{{plist.project_name}}</td>\n                                    <td>{{plist.bank_name}}</td>\n                                    <td>\n                                      <button type=\"button\" class=\"btn btn-success vw-details\" (click)=\"internalRowSelected(plist, 'confiscate_Reject')\">{{'HOME.View' | translate}}</button>\n                                    </td>\n                                  </tr>\n                                </tbody>\n                              </table>\n                            </ng-template>\n                    </div>\n                    <!--This is for Arabic-->\n\n                    <div *ngIf=\"this.translate.currentLang == 'ar'\">\n                      <div *ngIf=\"intConfiscateRejectList?.length > 0; then ConfiscateRejectthenBlock else ConfiscateRejectelseBlock\"> </div>\n                      <ng-template #ConfiscateRejectthenBlock>\n                      <table datatable [dtOptions]=\"dtOptionsAR\" class=\"table table-bordered table-striped table-hover\">\n                          <thead>\n                            <tr>\n                              <th class=\"table14\">#</th>\n                              <th class=\"table14\">{{'HOME.Request_date' | translate}}</th>\n                              <th class=\"table15\">{{'HOME.LG_amount' | translate}}</th>\n                              <th class=\"table16\">{{'HOME.LG_TYPE' | translate}}</th>\n                              <th class=\"table17\">{{'HOME.Beneficiary' | translate}}</th>\n                              <th class=\"table18\">{{'HOME.Project_name' | translate}}</th>\n                              <th class=\"table19\">{{'HOME.Bank' | translate}}</th>\n                              <th class=\"\">{{'HOME.View_Details' | translate}}</th>\n                            </tr>\n                          </thead>\n                          <tbody>\n                            <tr *ngFor=\"let plist of intConfiscateRejectList; let i = index \">\n                              <td>{{i+1}}</td>\n                              <td>{{plist.request_date}}</td>\n                              <td>{{plist.contract_value}}</td>\n                              <td>{{plist.lg_type}}</td>\n                              <td>{{plist.beneficiary_name}}</td>\n                              <td>{{plist.project_name}}</td>\n                              <td>{{plist.bank_name}}</td>\n                              <td>\n                                <button type=\"button\" class=\"btn btn-success vw-details\" (click)=\"internalRowSelected(plist, 'confiscate_Reject')\">{{'HOME.View' | translate}}</button>\n                              </td>\n                            </tr>\n                          </tbody>\n                        </table>\n                      </ng-template>\n\n                      <ng-template #ConfiscateRejectelseBlock>\n                          <table datatable [dtOptions]=\"dtOptionsAR\" class=\"table table-bordered table-striped table-hover\">\n                              <thead>\n                                <tr>\n                                  <th class=\"table14\">#</th>\n                                  <th class=\"table14\">{{'HOME.Request_date' | translate}}</th>\n                                  <th class=\"table15\">{{'HOME.LG_amount' | translate}}</th>\n                                  <th class=\"table16\">{{'HOME.LG_TYPE' | translate}}</th>\n                                  <th class=\"table17\">{{'HOME.Beneficiary' | translate}}</th>\n                                  <th class=\"table18\">{{'HOME.Project_name' | translate}}</th>\n                                  <th class=\"table19\">{{'HOME.Bank' | translate}}</th>\n                                  <th class=\"\">{{'HOME.View_Details' | translate}}</th>\n                                </tr>\n                              </thead>\n                              <tbody>\n                                <tr *ngFor=\"let plist of intConfiscateRejectList; let i = index \">\n                                  <td>{{i+1}}</td>\n                                  <td>{{plist.request_date}}</td>\n                                  <td>{{plist.contract_value}}</td>\n                                  <td>{{plist.lg_type}}</td>\n                                  <td>{{plist.beneficiary_name}}</td>\n                                  <td>{{plist.project_name}}</td>\n                                  <td>{{plist.bank_name}}</td>\n                                  <td>\n                                    <button type=\"button\" class=\"btn btn-success vw-details\" (click)=\"internalRowSelected(plist, 'confiscate_Reject')\">{{'HOME.View' | translate}}</button>\n                                  </td>\n                                </tr>\n                              </tbody>\n                            </table>\n                          </ng-template>\n                  </div>\n                  <!--This is for Arabic-->\n                </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n<!-- Internal Pending list for Confiscate Reject -->\n<!-- Internal Pending list for Confiscate Create -->\n<div *ngIf=\"aclConfiscateCreate\">\n  <div class=\"col-sm-12\">\n    <div class=\"kt-portlet\">\n      <div class=\"kt-portlet__head\">\n        <div class=\"kt-portlet__head-label\">\n          <h3 class=\"kt-portlet__head-title\">\n            Pending Confiscate Create List\n          </h3>\n        </div>\n      </div>\n      \n        <!--begin::Form-->\n        <div class=\"kt-form kt-form--label-right\">\n        <div class=\"kt-portlet__body\">\n          <div class=\"container\">\n            <div class=\"row\">\n              <div class=\"col-md-12\">\n                <div class=\"kt-portlet no-shadow\">\n                  <div class=\"new-blue-table1\">\n\n\n\n                    <div class=\"table-responsive\">\n                      <div *ngIf=\"this.translate.currentLang == 'en'\">\n                        <div *ngIf=\"intConfiscateCreateList?.length > 0; then ConfiscateCreatethenBlock else ConfiscateCreateelseBlock\"> </div>\n                        <ng-template #ConfiscateCreatethenBlock>\n                        <table datatable [dtOptions]=\"dtOptions\" class=\"table table-bordered table-striped table-hover\">\n                            <thead>\n                                <tr>\n                                    <th class=\"table14\">#</th>\n                                    <th class=\"table14\">{{'HOME.Request_date' | translate}}</th>\n                                    <th class=\"table15\">{{'HOME.LG_amount' | translate}}</th>\n                                    <th class=\"table16\">{{'HOME.LG_TYPE' | translate}}</th>\n                                    <th class=\"table17\">{{'HOME.Beneficiary' | translate}}</th>\n                                    <th class=\"table18\">{{'HOME.Project_name' | translate}}</th>\n                                    <th class=\"table19\">{{'HOME.Bank' | translate}}</th>\n                                    <th class=\"\">{{'HOME.View_Details' | translate}}</th>\n                                  </tr>\n                            </thead>\n                            <tbody>\n                              <tr *ngFor=\"let plist of intConfiscateCreateList; let i = index \">\n                                <td>{{i+1}}</td>\n                                <td>{{plist.request_date}}</td>\n                                <td>{{plist.contract_value}}</td>\n                                <td>{{plist.lg_type}}</td>\n                                <td>{{plist.beneficiary_name}}</td>\n                                <td>{{plist.project_name}}</td>\n                                <td>{{plist.bank_name}}</td>\n                                <td>\n                                  <button type=\"button\" class=\"btn btn-success vw-details\" (click)=\"internalRowSelected(plist, 'confiscate_create')\">{{'HOME.View' | translate}}</button>\n                                </td>\n                              </tr>\n                            </tbody>\n                          </table>\n                        </ng-template>\n\n                        <ng-template #ConfiscateCreateelseBlock>\n                            <table datatable [dtOptions]=\"dtOptions\" class=\"table table-bordered table-striped table-hover\">\n                                <thead>\n                                  <tr>\n                                    <th class=\"table14\">#</th>\n                                    <th class=\"table14\">{{'HOME.Request_date' | translate}}</th>\n                                    <th class=\"table15\">{{'HOME.LG_amount' | translate}}</th>\n                                    <th class=\"table16\">{{'HOME.LG_TYPE' | translate}}</th>\n                                    <th class=\"table17\">{{'HOME.Beneficiary' | translate}}</th>\n                                    <th class=\"table18\">{{'HOME.Project_name' | translate}}</th>\n                                    <th class=\"table19\">{{'HOME.Bank' | translate}}</th>\n                                    <th class=\"\">{{'HOME.View_Details' | translate}}</th>\n                                  </tr>\n                                </thead>\n                                <tbody>\n                                  <tr *ngFor=\"let plist of intConfiscateCreateList; let i = index \">\n                                    <td>{{i+1}}</td>\n                                    <td>{{plist.request_date}}</td>\n                                    <td>{{plist.contract_value}}</td>\n                                    <td>{{plist.lg_type}}</td>\n                                    <td>{{plist.beneficiary_name}}</td>\n                                    <td>{{plist.project_name}}</td>\n                                    <td>{{plist.bank_name}}</td>\n                                    <td>\n                                      <button type=\"button\" class=\"btn btn-success vw-details\" (click)=\"internalRowSelected(plist, 'confiscate_create')\">{{'HOME.View' | translate}}</button>\n                                    </td>\n                                  </tr>\n                                </tbody>\n                              </table>\n                            </ng-template>\n                    </div>\n                    <!--This is for Arabic-->\n\n                    <div *ngIf=\"this.translate.currentLang == 'ar'\">\n                      <div *ngIf=\"intConfiscateCreateList?.length > 0; then ConfiscateCreatethenBlock else ConfiscateCreateelseBlock\"> </div>\n                      <ng-template #ConfiscateCreatethenBlock>\n                      <table datatable [dtOptions]=\"dtOptionsAR\" class=\"table table-bordered table-striped table-hover\">\n                          <thead>\n                            <tr>\n                              <th class=\"table14\">#</th>\n                              <th class=\"table14\">{{'HOME.Request_date' | translate}}</th>\n                              <th class=\"table15\">{{'HOME.LG_amount' | translate}}</th>\n                              <th class=\"table16\">{{'HOME.LG_TYPE' | translate}}</th>\n                              <th class=\"table17\">{{'HOME.Beneficiary' | translate}}</th>\n                              <th class=\"table18\">{{'HOME.Project_name' | translate}}</th>\n                              <th class=\"table19\">{{'HOME.Bank' | translate}}</th>\n                              <th class=\"\">{{'HOME.View_Details' | translate}}</th>\n                            </tr>\n                          </thead>\n                          <tbody>\n                            <tr *ngFor=\"let plist of intConfiscateCreateList; let i = index \">\n                              <td>{{i+1}}</td>\n                              <td>{{plist.request_date}}</td>\n                              <td>{{plist.contract_value}}</td>\n                              <td>{{plist.lg_type}}</td>\n                              <td>{{plist.beneficiary_name}}</td>\n                              <td>{{plist.project_name}}</td>\n                              <td>{{plist.bank_name}}</td>\n                              <td>\n                                <button type=\"button\" class=\"btn btn-success vw-details\" (click)=\"internalRowSelected(plist, 'confiscate_create')\">{{'HOME.View' | translate}}</button>\n                              </td>\n                            </tr>\n                          </tbody>\n                        </table>\n                      </ng-template>\n\n                      <ng-template #ConfiscateCreateelseBlock>\n                          <table datatable [dtOptions]=\"dtOptionsAR\" class=\"table table-bordered table-striped table-hover\">\n                              <thead>\n                                <tr>\n                                  <th class=\"table14\">#</th>\n                                  <th class=\"table14\">{{'HOME.Request_date' | translate}}</th>\n                                  <th class=\"table15\">{{'HOME.LG_amount' | translate}}</th>\n                                  <th class=\"table16\">{{'HOME.LG_TYPE' | translate}}</th>\n                                  <th class=\"table17\">{{'HOME.Beneficiary' | translate}}</th>\n                                  <th class=\"table18\">{{'HOME.Project_name' | translate}}</th>\n                                  <th class=\"table19\">{{'HOME.Bank' | translate}}</th>\n                                  <th class=\"\">{{'HOME.View_Details' | translate}}</th>\n                                </tr>\n                              </thead>\n                              <tbody>\n                                <tr *ngFor=\"let plist of intConfiscateCreateList; let i = index \">\n                                  <td>{{i+1}}</td>\n                                  <td>{{plist.request_date}}</td>\n                                  <td>{{plist.contract_value}}</td>\n                                  <td>{{plist.lg_type}}</td>\n                                  <td>{{plist.beneficiary_name}}</td>\n                                  <td>{{plist.project_name}}</td>\n                                  <td>{{plist.bank_name}}</td>\n                                  <td>\n                                    <button type=\"button\" class=\"btn btn-success vw-details\" (click)=\"internalRowSelected(plist, 'confiscate_create')\">{{'HOME.View' | translate}}</button>\n                                  </td>\n                                </tr>\n                              </tbody>\n                            </table>\n                          </ng-template>\n                  </div>\n                  <!--This is for Arabic-->\n                </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n<!-- Internal Pending list for Confiscate Create -->\n<!-- Internal Pending list for Confiscate Review -->\n<div *ngIf=\"aclConfiscateReview\">\n  <div class=\"col-sm-12\">\n    <div class=\"kt-portlet\">\n      <div class=\"kt-portlet__head\">\n        <div class=\"kt-portlet__head-label\">\n          <h3 class=\"kt-portlet__head-title\">\n            Pending Confiscate Review List\n          </h3>\n        </div>\n      </div>\n      \n        <!--begin::Form-->\n        <div class=\"kt-form kt-form--label-right\">\n        <div class=\"kt-portlet__body\">\n          <div class=\"container\">\n            <div class=\"row\">\n              <div class=\"col-md-12\">\n                <div class=\"kt-portlet no-shadow\">\n                  <div class=\"new-blue-table1\">\n\n\n\n                    <div class=\"table-responsive\">\n                      <div *ngIf=\"this.translate.currentLang == 'en'\">\n                        <div *ngIf=\"intConfiscateReviewList?.length > 0; then ConfiscateReviewthenBlock else ConfiscateReviewelseBlock\"> </div>\n                        <ng-template #ConfiscateReviewthenBlock>\n                        <table datatable [dtOptions]=\"dtOptions\" class=\"table table-bordered table-striped table-hover\">\n                            <thead>\n                                <tr>\n                                    <th class=\"table14\">#</th>\n                                    <th class=\"table14\">{{'HOME.Request_date' | translate}}</th>\n                                    <th class=\"table15\">{{'HOME.LG_amount' | translate}}</th>\n                                    <th class=\"table16\">{{'HOME.LG_TYPE' | translate}}</th>\n                                    <th class=\"table17\">{{'HOME.Beneficiary' | translate}}</th>\n                                    <th class=\"table18\">{{'HOME.Project_name' | translate}}</th>\n                                    <th class=\"table19\">{{'HOME.Bank' | translate}}</th>\n                                    <th class=\"\">{{'HOME.View_Details' | translate}}</th>\n                                  </tr>\n                            </thead>\n                            <tbody>\n                              <tr *ngFor=\"let plist of intConfiscateReviewList; let i = index \">\n                                <td>{{i+1}}</td>\n                                <td>{{plist.request_date}}</td>\n                                <td>{{plist.contract_value}}</td>\n                                <td>{{plist.lg_type}}</td>\n                                <td>{{plist.beneficiary_name}}</td>\n                                <td>{{plist.project_name}}</td>\n                                <td>{{plist.bank_name}}</td>\n                                <td>\n                                  <button type=\"button\" class=\"btn btn-success vw-details\" (click)=\"internalRowSelected(plist, 'confiscate_review')\">{{'HOME.View' | translate}}</button>\n                                </td>\n                              </tr>\n                            </tbody>\n                          </table>\n                        </ng-template>\n\n                        <ng-template #ConfiscateReviewelseBlock>\n                            <table datatable [dtOptions]=\"dtOptions\" class=\"table table-bordered table-striped table-hover\">\n                                <thead>\n                                  <tr>\n                                    <th class=\"table14\">#</th>\n                                    <th class=\"table14\">{{'HOME.Request_date' | translate}}</th>\n                                    <th class=\"table15\">{{'HOME.LG_amount' | translate}}</th>\n                                    <th class=\"table16\">{{'HOME.LG_TYPE' | translate}}</th>\n                                    <th class=\"table17\">{{'HOME.Beneficiary' | translate}}</th>\n                                    <th class=\"table18\">{{'HOME.Project_name' | translate}}</th>\n                                    <th class=\"table19\">{{'HOME.Bank' | translate}}</th>\n                                    <th class=\"\">{{'HOME.View_Details' | translate}}</th>\n                                  </tr>\n                                </thead>\n                                <tbody>\n                                  <tr *ngFor=\"let plist of intConfiscateReviewList; let i = index \">\n                                    <td>{{i+1}}</td>\n                                    <td>{{plist.request_date}}</td>\n                                    <td>{{plist.contract_value}}</td>\n                                    <td>{{plist.lg_type}}</td>\n                                    <td>{{plist.beneficiary_name}}</td>\n                                    <td>{{plist.project_name}}</td>\n                                    <td>{{plist.bank_name}}</td>\n                                    <td>\n                                      <button type=\"button\" class=\"btn btn-success vw-details\" (click)=\"internalRowSelected(plist, 'confiscate_review')\">{{'HOME.View' | translate}}</button>\n                                    </td>\n                                  </tr>\n                                </tbody>\n                              </table>\n                            </ng-template>\n                    </div>\n                    <!--This is for Arabic-->\n\n                    <div *ngIf=\"this.translate.currentLang == 'ar'\">\n                      <div *ngIf=\"intConfiscateReviewList?.length > 0; then ConfiscateReviewthenBlock else ConfiscateReviewelseBlock\"> </div>\n                      <ng-template #ConfiscateReviewthenBlock>\n                      <table datatable [dtOptions]=\"dtOptionsAR\" class=\"table table-bordered table-striped table-hover\">\n                          <thead>\n                            <tr>\n                              <th class=\"table14\">#</th>\n                              <th class=\"table14\">{{'HOME.Request_date' | translate}}</th>\n                              <th class=\"table15\">{{'HOME.LG_amount' | translate}}</th>\n                              <th class=\"table16\">{{'HOME.LG_TYPE' | translate}}</th>\n                              <th class=\"table17\">{{'HOME.Beneficiary' | translate}}</th>\n                              <th class=\"table18\">{{'HOME.Project_name' | translate}}</th>\n                              <th class=\"table19\">{{'HOME.Bank' | translate}}</th>\n                              <th class=\"\">{{'HOME.View_Details' | translate}}</th>\n                            </tr>\n                          </thead>\n                          <tbody>\n                            <tr *ngFor=\"let plist of intConfiscateReviewList; let i = index \">\n                              <td>{{i+1}}</td>\n                              <td>{{plist.request_date}}</td>\n                              <td>{{plist.contract_value}}</td>\n                              <td>{{plist.lg_type}}</td>\n                              <td>{{plist.beneficiary_name}}</td>\n                              <td>{{plist.project_name}}</td>\n                              <td>{{plist.bank_name}}</td>\n                              <td>\n                                <button type=\"button\" class=\"btn btn-success vw-details\" (click)=\"internalRowSelected(plist, 'confiscate_review')\">{{'HOME.View' | translate}}</button>\n                              </td>\n                            </tr>\n                          </tbody>\n                        </table>\n                      </ng-template>\n\n                      <ng-template #ConfiscateReviewelseBlock>\n                          <table datatable [dtOptions]=\"dtOptionsAR\" class=\"table table-bordered table-striped table-hover\">\n                              <thead>\n                                <tr>\n                                  <th class=\"table14\">#</th>\n                                  <th class=\"table14\">{{'HOME.Request_date' | translate}}</th>\n                                  <th class=\"table15\">{{'HOME.LG_amount' | translate}}</th>\n                                  <th class=\"table16\">{{'HOME.LG_TYPE' | translate}}</th>\n                                  <th class=\"table17\">{{'HOME.Beneficiary' | translate}}</th>\n                                  <th class=\"table18\">{{'HOME.Project_name' | translate}}</th>\n                                  <th class=\"table19\">{{'HOME.Bank' | translate}}</th>\n                                  <th class=\"\">{{'HOME.View_Details' | translate}}</th>\n                                </tr>\n                              </thead>\n                              <tbody>\n                                <tr *ngFor=\"let plist of intConfiscateReviewList; let i = index \">\n                                  <td>{{i+1}}</td>\n                                  <td>{{plist.request_date}}</td>\n                                  <td>{{plist.contract_value}}</td>\n                                  <td>{{plist.lg_type}}</td>\n                                  <td>{{plist.beneficiary_name}}</td>\n                                  <td>{{plist.project_name}}</td>\n                                  <td>{{plist.bank_name}}</td>\n                                  <td>\n                                    <button type=\"button\" class=\"btn btn-success vw-details\" (click)=\"internalRowSelected(plist, 'confiscate_review')\">{{'HOME.View' | translate}}</button>\n                                  </td>\n                                </tr>\n                              </tbody>\n                            </table>\n                          </ng-template>\n                  </div>\n                  <!--This is for Arabic-->\n                </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n<!-- Internal Pending list for Confiscate Review -->\n\n<!-- Internal Pending list for Confiscate Approve -->\n<div *ngIf=\"aclConfiscateApprove\">\n  <div class=\"col-sm-12\">\n    <div class=\"kt-portlet\">\n      <div class=\"kt-portlet__head\">\n        <div class=\"kt-portlet__head-label\">\n          <h3 class=\"kt-portlet__head-title\">\n            Pending Confiscate Approve List\n          </h3>\n        </div>\n      </div>\n      \n        <!--begin::Form-->\n        <div class=\"kt-form kt-form--label-right\">\n        <div class=\"kt-portlet__body\">\n          <div class=\"container\">\n            <div class=\"row\">\n              <div class=\"col-md-12\">\n                <div class=\"kt-portlet no-shadow\">\n                  <div class=\"new-blue-table1\">\n\n\n\n                    <div class=\"table-responsive\">\n                      <div *ngIf=\"this.translate.currentLang == 'en'\">\n                        <div *ngIf=\"intConfiscateApproveList?.length > 0; then ConfiscateApprovethenBlock else ConfiscateApproveelseBlock\"> </div>\n                        <ng-template #ConfiscateApprovethenBlock>\n                        <table datatable [dtOptions]=\"dtOptions\" class=\"table table-bordered table-striped table-hover\">\n                            <thead>\n                                <tr>\n                                    <th class=\"table14\">#</th>\n                                    <th class=\"table14\">{{'HOME.Request_date' | translate}}</th>\n                                    <th class=\"table15\">{{'HOME.LG_amount' | translate}}</th>\n                                    <th class=\"table16\">{{'HOME.LG_TYPE' | translate}}</th>\n                                    <th class=\"table17\">{{'HOME.Beneficiary' | translate}}</th>\n                                    <th class=\"table18\">{{'HOME.Project_name' | translate}}</th>\n                                    <th class=\"table19\">{{'HOME.Bank' | translate}}</th>\n                                    <th class=\"\">{{'HOME.View_Details' | translate}}</th>\n                                  </tr>\n                            </thead>\n                            <tbody>\n                              <tr *ngFor=\"let plist of intConfiscateApproveList; let i = index \">\n                                <td>{{i+1}}</td>\n                                <td>{{plist.request_date}}</td>\n                                <td>{{plist.contract_value}}</td>\n                                <td>{{plist.lg_type}}</td>\n                                <td>{{plist.beneficiary_name}}</td>\n                                <td>{{plist.project_name}}</td>\n                                <td>{{plist.bank_name}}</td>\n                                <td>\n                                  <button type=\"button\" class=\"btn btn-success vw-details\" (click)=\"internalRowSelected(plist, 'confiscate_approve')\">{{'HOME.View' | translate}}</button>\n                                </td>\n                              </tr>\n                            </tbody>\n                          </table>\n                        </ng-template>\n\n                        <ng-template #ConfiscateApproveelseBlock>\n                            <table datatable [dtOptions]=\"dtOptions\" class=\"table table-bordered table-striped table-hover\">\n                                <thead>\n                                  <tr>\n                                    <th class=\"table14\">#</th>\n                                    <th class=\"table14\">{{'HOME.Request_date' | translate}}</th>\n                                    <th class=\"table15\">{{'HOME.LG_amount' | translate}}</th>\n                                    <th class=\"table16\">{{'HOME.LG_TYPE' | translate}}</th>\n                                    <th class=\"table17\">{{'HOME.Beneficiary' | translate}}</th>\n                                    <th class=\"table18\">{{'HOME.Project_name' | translate}}</th>\n                                    <th class=\"table19\">{{'HOME.Bank' | translate}}</th>\n                                    <th class=\"\">{{'HOME.View_Details' | translate}}</th>\n                                  </tr>\n                                </thead>\n                                <tbody>\n                                  <tr *ngFor=\"let plist of intConfiscateApproveList; let i = index \">\n                                    <td>{{i+1}}</td>\n                                    <td>{{plist.request_date}}</td>\n                                    <td>{{plist.contract_value}}</td>\n                                    <td>{{plist.lg_type}}</td>\n                                    <td>{{plist.beneficiary_name}}</td>\n                                    <td>{{plist.project_name}}</td>\n                                    <td>{{plist.bank_name}}</td>\n                                    <td>\n                                      <button type=\"button\" class=\"btn btn-success vw-details\" (click)=\"internalRowSelected(plist, 'confiscate_approve')\">{{'HOME.View' | translate}}</button>\n                                    </td>\n                                  </tr>\n                                </tbody>\n                              </table>\n                            </ng-template>\n                    </div>\n                    <!--This is for Arabic-->\n\n                    <div *ngIf=\"this.translate.currentLang == 'ar'\">\n                      <div *ngIf=\"intConfiscateApproveList?.length > 0; then ConfiscateApprovethenBlock else ConfiscateApproveelseBlock\"> </div>\n                      <ng-template #ConfiscateApprovethenBlock>\n                      <table datatable [dtOptions]=\"dtOptionsAR\" class=\"table table-bordered table-striped table-hover\">\n                          <thead>\n                            <tr>\n                              <th class=\"table14\">#</th>\n                              <th class=\"table14\">{{'HOME.Request_date' | translate}}</th>\n                              <th class=\"table15\">{{'HOME.LG_amount' | translate}}</th>\n                              <th class=\"table16\">{{'HOME.LG_TYPE' | translate}}</th>\n                              <th class=\"table17\">{{'HOME.Beneficiary' | translate}}</th>\n                              <th class=\"table18\">{{'HOME.Project_name' | translate}}</th>\n                              <th class=\"table19\">{{'HOME.Bank' | translate}}</th>\n                              <th class=\"\">{{'HOME.View_Details' | translate}}</th>\n                            </tr>\n                          </thead>\n                          <tbody>\n                            <tr *ngFor=\"let plist of intConfiscateApproveList; let i = index \">\n                              <td>{{i+1}}</td>\n                              <td>{{plist.request_date}}</td>\n                              <td>{{plist.contract_value}}</td>\n                              <td>{{plist.lg_type}}</td>\n                              <td>{{plist.beneficiary_name}}</td>\n                              <td>{{plist.project_name}}</td>\n                              <td>{{plist.bank_name}}</td>\n                              <td>\n                                <button type=\"button\" class=\"btn btn-success vw-details\" (click)=\"internalRowSelected(plist, 'confiscate_approve')\">{{'HOME.View' | translate}}</button>\n                              </td>\n                            </tr>\n                          </tbody>\n                        </table>\n                      </ng-template>\n\n                      <ng-template #ConfiscateApproveelseBlock>\n                          <table datatable [dtOptions]=\"dtOptionsAR\" class=\"table table-bordered table-striped table-hover\">\n                              <thead>\n                                <tr>\n                                  <th class=\"table14\">#</th>\n                                  <th class=\"table14\">{{'HOME.Request_date' | translate}}</th>\n                                  <th class=\"table15\">{{'HOME.LG_amount' | translate}}</th>\n                                  <th class=\"table16\">{{'HOME.LG_TYPE' | translate}}</th>\n                                  <th class=\"table17\">{{'HOME.Beneficiary' | translate}}</th>\n                                  <th class=\"table18\">{{'HOME.Project_name' | translate}}</th>\n                                  <th class=\"table19\">{{'HOME.Bank' | translate}}</th>\n                                  <th class=\"\">{{'HOME.View_Details' | translate}}</th>\n                                </tr>\n                              </thead>\n                              <tbody>\n                                <tr *ngFor=\"let plist of intConfiscateApproveList; let i = index \">\n                                  <td>{{i+1}}</td>\n                                  <td>{{plist.request_date}}</td>\n                                  <td>{{plist.contract_value}}</td>\n                                  <td>{{plist.lg_type}}</td>\n                                  <td>{{plist.beneficiary_name}}</td>\n                                  <td>{{plist.project_name}}</td>\n                                  <td>{{plist.bank_name}}</td>\n                                  <td>\n                                    <button type=\"button\" class=\"btn btn-success vw-details\" (click)=\"internalRowSelected(plist, 'confiscate_approve')\">{{'HOME.View' | translate}}</button>\n                                  </td>\n                                </tr>\n                              </tbody>\n                            </table>\n                          </ng-template>\n                  </div>\n                  <!--This is for Arabic-->\n                </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n<!-- Internal Pending list for Confiscate Approve -->\n\n\n<!-- Internal Pending list for Release Reject -->\n<div *ngIf=\"aclReleaseCreate\">\n  <div class=\"col-sm-12\">\n    <div class=\"kt-portlet\">\n      <div class=\"kt-portlet__head\">\n        <div class=\"kt-portlet__head-label\">\n          <h3 class=\"kt-portlet__head-title\">\n            Pending Release Reject List\n          </h3>\n        </div>\n      </div>\n      \n        <!--begin::Form-->\n        <div class=\"kt-form kt-form--label-right\">\n        <div class=\"kt-portlet__body\">\n          <div class=\"container\">\n            <div class=\"row\">\n              <div class=\"col-md-12\">\n                <div class=\"kt-portlet no-shadow\">\n                  <div class=\"new-blue-table1\">\n\n\n\n                    <div class=\"table-responsive\">\n                      <div *ngIf=\"this.translate.currentLang == 'en'\">\n                        <div *ngIf=\"intReleaseRejectList?.length > 0; then ReleaseRejectthenBlock else ReleaseRejectelseBlock\"> </div>\n                        <ng-template #ReleaseRejectthenBlock>\n                        <table datatable [dtOptions]=\"dtOptions\" class=\"table table-bordered table-striped table-hover\">\n                            <thead>\n                                <tr>\n                                    <th class=\"table14\">#</th>\n                                    <th class=\"table14\">{{'HOME.Request_date' | translate}}</th>\n                                    <th class=\"table15\">{{'HOME.LG_amount' | translate}}</th>\n                                    <th class=\"table16\">{{'HOME.LG_TYPE' | translate}}</th>\n                                    <th class=\"table17\">{{'HOME.Beneficiary' | translate}}</th>\n                                    <th class=\"table18\">{{'HOME.Project_name' | translate}}</th>\n                                    <th class=\"table19\">{{'HOME.Bank' | translate}}</th>\n                                    <th class=\"\">{{'HOME.View_Details' | translate}}</th>\n                                  </tr>\n                            </thead>\n                            <tbody>\n                              <tr *ngFor=\"let plist of intReleaseRejectList; let i = index \">\n                                <td>{{i+1}}</td>\n                                <td>{{plist.request_date}}</td>\n                                <td>{{plist.contract_value}}</td>\n                                <td>{{plist.lg_type}}</td>\n                                <td>{{plist.beneficiary_name}}</td>\n                                <td>{{plist.project_name}}</td>\n                                <td>{{plist.bank_name}}</td>\n                                <td>\n                                  <button type=\"button\" class=\"btn btn-success vw-details\" (click)=\"internalRowSelected(plist, 'release_Reject')\">{{'HOME.View' | translate}}</button>\n                                </td>\n                              </tr>\n                            </tbody>\n                          </table>\n                        </ng-template>\n\n                        <ng-template #ReleaseRejectelseBlock>\n                            <table datatable [dtOptions]=\"dtOptions\" class=\"table table-bordered table-striped table-hover\">\n                                <thead>\n                                  <tr>\n                                    <th class=\"table14\">#</th>\n                                    <th class=\"table14\">{{'HOME.Request_date' | translate}}</th>\n                                    <th class=\"table15\">{{'HOME.LG_amount' | translate}}</th>\n                                    <th class=\"table16\">{{'HOME.LG_TYPE' | translate}}</th>\n                                    <th class=\"table17\">{{'HOME.Beneficiary' | translate}}</th>\n                                    <th class=\"table18\">{{'HOME.Project_name' | translate}}</th>\n                                    <th class=\"table19\">{{'HOME.Bank' | translate}}</th>\n                                    <th class=\"\">{{'HOME.View_Details' | translate}}</th>\n                                  </tr>\n                                </thead>\n                                <tbody>\n                                  <tr *ngFor=\"let plist of intReleaseRejectList; let i = index \">\n                                    <td>{{i+1}}</td>\n                                    <td>{{plist.request_date}}</td>\n                                    <td>{{plist.contract_value}}</td>\n                                    <td>{{plist.lg_type}}</td>\n                                    <td>{{plist.beneficiary_name}}</td>\n                                    <td>{{plist.project_name}}</td>\n                                    <td>{{plist.bank_name}}</td>\n                                    <td>\n                                      <button type=\"button\" class=\"btn btn-success vw-details\" (click)=\"internalRowSelected(plist, 'release_Reject')\">{{'HOME.View' | translate}}</button>\n                                    </td>\n                                  </tr>\n                                </tbody>\n                              </table>\n                            </ng-template>\n                    </div>\n                    <!--This is for Arabic-->\n\n                    <div *ngIf=\"this.translate.currentLang == 'ar'\">\n                      <div *ngIf=\"intReleaseRejectList?.length > 0; then ReleaseRejectthenBlock else ReleaseRejectelseBlock\"> </div>\n                      <ng-template #ReleaseRejectthenBlock>\n                      <table datatable [dtOptions]=\"dtOptionsAR\" class=\"table table-bordered table-striped table-hover\">\n                          <thead>\n                            <tr>\n                              <th class=\"table14\">#</th>\n                              <th class=\"table14\">{{'HOME.Request_date' | translate}}</th>\n                              <th class=\"table15\">{{'HOME.LG_amount' | translate}}</th>\n                              <th class=\"table16\">{{'HOME.LG_TYPE' | translate}}</th>\n                              <th class=\"table17\">{{'HOME.Beneficiary' | translate}}</th>\n                              <th class=\"table18\">{{'HOME.Project_name' | translate}}</th>\n                              <th class=\"table19\">{{'HOME.Bank' | translate}}</th>\n                              <th class=\"\">{{'HOME.View_Details' | translate}}</th>\n                            </tr>\n                          </thead>\n                          <tbody>\n                            <tr *ngFor=\"let plist of intReleaseRejectList; let i = index \">\n                              <td>{{i+1}}</td>\n                              <td>{{plist.request_date}}</td>\n                              <td>{{plist.contract_value}}</td>\n                              <td>{{plist.lg_type}}</td>\n                              <td>{{plist.beneficiary_name}}</td>\n                              <td>{{plist.project_name}}</td>\n                              <td>{{plist.bank_name}}</td>\n                              <td>\n                                <button type=\"button\" class=\"btn btn-success vw-details\" (click)=\"internalRowSelected(plist, 'release_Reject')\">{{'HOME.View' | translate}}</button>\n                              </td>\n                            </tr>\n                          </tbody>\n                        </table>\n                      </ng-template>\n\n                      <ng-template #ReleaseRejectelseBlock>\n                          <table datatable [dtOptions]=\"dtOptionsAR\" class=\"table table-bordered table-striped table-hover\">\n                              <thead>\n                                <tr>\n                                  <th class=\"table14\">#</th>\n                                  <th class=\"table14\">{{'HOME.Request_date' | translate}}</th>\n                                  <th class=\"table15\">{{'HOME.LG_amount' | translate}}</th>\n                                  <th class=\"table16\">{{'HOME.LG_TYPE' | translate}}</th>\n                                  <th class=\"table17\">{{'HOME.Beneficiary' | translate}}</th>\n                                  <th class=\"table18\">{{'HOME.Project_name' | translate}}</th>\n                                  <th class=\"table19\">{{'HOME.Bank' | translate}}</th>\n                                  <th class=\"\">{{'HOME.View_Details' | translate}}</th>\n                                </tr>\n                              </thead>\n                              <tbody>\n                                <tr *ngFor=\"let plist of intReleaseRejectList; let i = index \">\n                                  <td>{{i+1}}</td>\n                                  <td>{{plist.request_date}}</td>\n                                  <td>{{plist.contract_value}}</td>\n                                  <td>{{plist.lg_type}}</td>\n                                  <td>{{plist.beneficiary_name}}</td>\n                                  <td>{{plist.project_name}}</td>\n                                  <td>{{plist.bank_name}}</td>\n                                  <td>\n                                    <button type=\"button\" class=\"btn btn-success vw-details\" (click)=\"internalRowSelected(plist, 'release_Reject')\">{{'HOME.View' | translate}}</button>\n                                  </td>\n                                </tr>\n                              </tbody>\n                            </table>\n                          </ng-template>\n                  </div>\n                  <!--This is for Arabic-->\n                </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n<!-- Internal Pending list for Release Reject -->\n\n<!-- Internal Pending list for Release Create -->\n<div *ngIf=\"aclReleaseCreate\">\n  <div class=\"col-sm-12\">\n    <div class=\"kt-portlet\">\n      <div class=\"kt-portlet__head\">\n        <div class=\"kt-portlet__head-label\">\n          <h3 class=\"kt-portlet__head-title\">\n            Pending Release Create List\n          </h3>\n        </div>\n      </div>\n      \n        <!--begin::Form-->\n        <div class=\"kt-form kt-form--label-right\">\n        <div class=\"kt-portlet__body\">\n          <div class=\"container\">\n            <div class=\"row\">\n              <div class=\"col-md-12\">\n                <div class=\"kt-portlet no-shadow\">\n                  <div class=\"new-blue-table1\">\n\n\n\n                    <div class=\"table-responsive\">\n                      <div *ngIf=\"this.translate.currentLang == 'en'\">\n                        <div *ngIf=\"intReleaseCreateList?.length > 0; then ReleaseCreatethenBlock else ReleaseCreateelseBlock\"> </div>\n                        <ng-template #ReleaseCreatethenBlock>\n                        <table datatable [dtOptions]=\"dtOptions\" class=\"table table-bordered table-striped table-hover\">\n                            <thead>\n                                <tr>\n                                    <th class=\"table14\">#</th>\n                                    <th class=\"table14\">{{'HOME.Request_date' | translate}}</th>\n                                    <th class=\"table15\">{{'HOME.LG_amount' | translate}}</th>\n                                    <th class=\"table16\">{{'HOME.LG_TYPE' | translate}}</th>\n                                    <th class=\"table17\">{{'HOME.Beneficiary' | translate}}</th>\n                                    <th class=\"table18\">{{'HOME.Project_name' | translate}}</th>\n                                    <th class=\"table19\">{{'HOME.Bank' | translate}}</th>\n                                    <th class=\"\">{{'HOME.View_Details' | translate}}</th>\n                                  </tr>\n                            </thead>\n                            <tbody>\n                              <tr *ngFor=\"let plist of intReleaseCreateList; let i = index \">\n                                <td>{{i+1}}</td>\n                                <td>{{plist.request_date}}</td>\n                                <td>{{plist.contract_value}}</td>\n                                <td>{{plist.lg_type}}</td>\n                                <td>{{plist.beneficiary_name}}</td>\n                                <td>{{plist.project_name}}</td>\n                                <td>{{plist.bank_name}}</td>\n                                <td>\n                                  <button type=\"button\" class=\"btn btn-success vw-details\" (click)=\"internalRowSelected(plist, 'release_create')\">{{'HOME.View' | translate}}</button>\n                                </td>\n                              </tr>\n                            </tbody>\n                          </table>\n                        </ng-template>\n\n                        <ng-template #ReleaseCreateelseBlock>\n                            <table datatable [dtOptions]=\"dtOptions\" class=\"table table-bordered table-striped table-hover\">\n                                <thead>\n                                  <tr>\n                                    <th class=\"table14\">#</th>\n                                    <th class=\"table14\">{{'HOME.Request_date' | translate}}</th>\n                                    <th class=\"table15\">{{'HOME.LG_amount' | translate}}</th>\n                                    <th class=\"table16\">{{'HOME.LG_TYPE' | translate}}</th>\n                                    <th class=\"table17\">{{'HOME.Beneficiary' | translate}}</th>\n                                    <th class=\"table18\">{{'HOME.Project_name' | translate}}</th>\n                                    <th class=\"table19\">{{'HOME.Bank' | translate}}</th>\n                                    <th class=\"\">{{'HOME.View_Details' | translate}}</th>\n                                  </tr>\n                                </thead>\n                                <tbody>\n                                  <tr *ngFor=\"let plist of intReleaseCreateList; let i = index \">\n                                    <td>{{i+1}}</td>\n                                    <td>{{plist.request_date}}</td>\n                                    <td>{{plist.contract_value}}</td>\n                                    <td>{{plist.lg_type}}</td>\n                                    <td>{{plist.beneficiary_name}}</td>\n                                    <td>{{plist.project_name}}</td>\n                                    <td>{{plist.bank_name}}</td>\n                                    <td>\n                                      <button type=\"button\" class=\"btn btn-success vw-details\" (click)=\"internalRowSelected(plist, 'release_create')\">{{'HOME.View' | translate}}</button>\n                                    </td>\n                                  </tr>\n                                </tbody>\n                              </table>\n                            </ng-template>\n                    </div>\n                    <!--This is for Arabic-->\n\n                    <div *ngIf=\"this.translate.currentLang == 'ar'\">\n                      <div *ngIf=\"intReleaseCreateList?.length > 0; then ReleaseCreatethenBlock else ReleaseCreateelseBlock\"> </div>\n                      <ng-template #ReleaseCreatethenBlock>\n                      <table datatable [dtOptions]=\"dtOptionsAR\" class=\"table table-bordered table-striped table-hover\">\n                          <thead>\n                            <tr>\n                              <th class=\"table14\">#</th>\n                              <th class=\"table14\">{{'HOME.Request_date' | translate}}</th>\n                              <th class=\"table15\">{{'HOME.LG_amount' | translate}}</th>\n                              <th class=\"table16\">{{'HOME.LG_TYPE' | translate}}</th>\n                              <th class=\"table17\">{{'HOME.Beneficiary' | translate}}</th>\n                              <th class=\"table18\">{{'HOME.Project_name' | translate}}</th>\n                              <th class=\"table19\">{{'HOME.Bank' | translate}}</th>\n                              <th class=\"\">{{'HOME.View_Details' | translate}}</th>\n                            </tr>\n                          </thead>\n                          <tbody>\n                            <tr *ngFor=\"let plist of intReleaseCreateList; let i = index \">\n                              <td>{{i+1}}</td>\n                              <td>{{plist.request_date}}</td>\n                              <td>{{plist.contract_value}}</td>\n                              <td>{{plist.lg_type}}</td>\n                              <td>{{plist.beneficiary_name}}</td>\n                              <td>{{plist.project_name}}</td>\n                              <td>{{plist.bank_name}}</td>\n                              <td>\n                                <button type=\"button\" class=\"btn btn-success vw-details\" (click)=\"internalRowSelected(plist, 'release_create')\">{{'HOME.View' | translate}}</button>\n                              </td>\n                            </tr>\n                          </tbody>\n                        </table>\n                      </ng-template>\n\n                      <ng-template #ReleaseCreateelseBlock>\n                          <table datatable [dtOptions]=\"dtOptionsAR\" class=\"table table-bordered table-striped table-hover\">\n                              <thead>\n                                <tr>\n                                  <th class=\"table14\">#</th>\n                                  <th class=\"table14\">{{'HOME.Request_date' | translate}}</th>\n                                  <th class=\"table15\">{{'HOME.LG_amount' | translate}}</th>\n                                  <th class=\"table16\">{{'HOME.LG_TYPE' | translate}}</th>\n                                  <th class=\"table17\">{{'HOME.Beneficiary' | translate}}</th>\n                                  <th class=\"table18\">{{'HOME.Project_name' | translate}}</th>\n                                  <th class=\"table19\">{{'HOME.Bank' | translate}}</th>\n                                  <th class=\"\">{{'HOME.View_Details' | translate}}</th>\n                                </tr>\n                              </thead>\n                              <tbody>\n                                <tr *ngFor=\"let plist of intReleaseCreateList; let i = index \">\n                                  <td>{{i+1}}</td>\n                                  <td>{{plist.request_date}}</td>\n                                  <td>{{plist.contract_value}}</td>\n                                  <td>{{plist.lg_type}}</td>\n                                  <td>{{plist.beneficiary_name}}</td>\n                                  <td>{{plist.project_name}}</td>\n                                  <td>{{plist.bank_name}}</td>\n                                  <td>\n                                    <button type=\"button\" class=\"btn btn-success vw-details\" (click)=\"internalRowSelected(plist, 'release_create')\">{{'HOME.View' | translate}}</button>\n                                  </td>\n                                </tr>\n                              </tbody>\n                            </table>\n                          </ng-template>\n                  </div>\n                  <!--This is for Arabic-->\n                </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n<!-- Internal Pending list for Release Create -->\n\n<!-- Internal Pending list for Release Review -->\n<div *ngIf=\"aclReleaseReview\">\n  <div class=\"col-sm-12\">\n    <div class=\"kt-portlet\">\n      <div class=\"kt-portlet__head\">\n        <div class=\"kt-portlet__head-label\">\n          <h3 class=\"kt-portlet__head-title\">\n            Pending Release Review List\n          </h3>\n        </div>\n      </div>\n      \n        <!--begin::Form-->\n        <div class=\"kt-form kt-form--label-right\">\n        <div class=\"kt-portlet__body\">\n          <div class=\"container\">\n            <div class=\"row\">\n              <div class=\"col-md-12\">\n                <div class=\"kt-portlet no-shadow\">\n                  <div class=\"new-blue-table1\">\n\n\n\n                    <div class=\"table-responsive\">\n                      <div *ngIf=\"this.translate.currentLang == 'en'\">\n                        <div *ngIf=\"intReleaseReviewList?.length > 0; then ReleaseReviewthenBlock else ReleaseReviewelseBlock\"> </div>\n                        <ng-template #ReleaseReviewthenBlock>\n                        <table datatable [dtOptions]=\"dtOptions\" class=\"table table-bordered table-striped table-hover\">\n                            <thead>\n                                <tr>\n                                    <th class=\"table14\">#</th>\n                                    <th class=\"table14\">{{'HOME.Request_date' | translate}}</th>\n                                    <th class=\"table15\">{{'HOME.LG_amount' | translate}}</th>\n                                    <th class=\"table16\">{{'HOME.LG_TYPE' | translate}}</th>\n                                    <th class=\"table17\">{{'HOME.Beneficiary' | translate}}</th>\n                                    <th class=\"table18\">{{'HOME.Project_name' | translate}}</th>\n                                    <th class=\"table19\">{{'HOME.Bank' | translate}}</th>\n                                    <th class=\"\">{{'HOME.View_Details' | translate}}</th>\n                                  </tr>\n                            </thead>\n                            <tbody>\n                              <tr *ngFor=\"let plist of intReleaseReviewList; let i = index \">\n                                <td>{{i+1}}</td>\n                                <td>{{plist.request_date}}</td>\n                                <td>{{plist.contract_value}}</td>\n                                <td>{{plist.lg_type}}</td>\n                                <td>{{plist.beneficiary_name}}</td>\n                                <td>{{plist.project_name}}</td>\n                                <td>{{plist.bank_name}}</td>\n                                <td>\n                                  <button type=\"button\" class=\"btn btn-success vw-details\" (click)=\"internalRowSelected(plist, 'release_review')\">{{'HOME.View' | translate}}</button>\n                                </td>\n                              </tr>\n                            </tbody>\n                          </table>\n                        </ng-template>\n\n                        <ng-template #ReleaseReviewelseBlock>\n                            <table datatable [dtOptions]=\"dtOptions\" class=\"table table-bordered table-striped table-hover\">\n                                <thead>\n                                  <tr>\n                                    <th class=\"table14\">#</th>\n                                    <th class=\"table14\">{{'HOME.Request_date' | translate}}</th>\n                                    <th class=\"table15\">{{'HOME.LG_amount' | translate}}</th>\n                                    <th class=\"table16\">{{'HOME.LG_TYPE' | translate}}</th>\n                                    <th class=\"table17\">{{'HOME.Beneficiary' | translate}}</th>\n                                    <th class=\"table18\">{{'HOME.Project_name' | translate}}</th>\n                                    <th class=\"table19\">{{'HOME.Bank' | translate}}</th>\n                                    <th class=\"\">{{'HOME.View_Details' | translate}}</th>\n                                  </tr>\n                                </thead>\n                                <tbody>\n                                  <tr *ngFor=\"let plist of intReleaseReviewList; let i = index \">\n                                    <td>{{i+1}}</td>\n                                    <td>{{plist.request_date}}</td>\n                                    <td>{{plist.contract_value}}</td>\n                                    <td>{{plist.lg_type}}</td>\n                                    <td>{{plist.beneficiary_name}}</td>\n                                    <td>{{plist.project_name}}</td>\n                                    <td>{{plist.bank_name}}</td>\n                                    <td>\n                                      <button type=\"button\" class=\"btn btn-success vw-details\" (click)=\"internalRowSelected(plist, 'release_review')\">{{'HOME.View' | translate}}</button>\n                                    </td>\n                                  </tr>\n                                </tbody>\n                              </table>\n                            </ng-template>\n                    </div>\n                    <!--This is for Arabic-->\n\n                    <div *ngIf=\"this.translate.currentLang == 'ar'\">\n                      <div *ngIf=\"intReleaseReviewList?.length > 0; then ReleaseReviewthenBlock else ReleaseReviewelseBlock\"> </div>\n                      <ng-template #ReleaseReviewthenBlock>\n                      <table datatable [dtOptions]=\"dtOptionsAR\" class=\"table table-bordered table-striped table-hover\">\n                          <thead>\n                            <tr>\n                              <th class=\"table14\">#</th>\n                              <th class=\"table14\">{{'HOME.Request_date' | translate}}</th>\n                              <th class=\"table15\">{{'HOME.LG_amount' | translate}}</th>\n                              <th class=\"table16\">{{'HOME.LG_TYPE' | translate}}</th>\n                              <th class=\"table17\">{{'HOME.Beneficiary' | translate}}</th>\n                              <th class=\"table18\">{{'HOME.Project_name' | translate}}</th>\n                              <th class=\"table19\">{{'HOME.Bank' | translate}}</th>\n                              <th class=\"\">{{'HOME.View_Details' | translate}}</th>\n                            </tr>\n                          </thead>\n                          <tbody>\n                            <tr *ngFor=\"let plist of intReleaseReviewList; let i = index \">\n                              <td>{{i+1}}</td>\n                              <td>{{plist.request_date}}</td>\n                              <td>{{plist.contract_value}}</td>\n                              <td>{{plist.lg_type}}</td>\n                              <td>{{plist.beneficiary_name}}</td>\n                              <td>{{plist.project_name}}</td>\n                              <td>{{plist.bank_name}}</td>\n                              <td>\n                                <button type=\"button\" class=\"btn btn-success vw-details\" (click)=\"internalRowSelected(plist, 'release_review')\">{{'HOME.View' | translate}}</button>\n                              </td>\n                            </tr>\n                          </tbody>\n                        </table>\n                      </ng-template>\n\n                      <ng-template #ReleaseReviewelseBlock>\n                          <table datatable [dtOptions]=\"dtOptionsAR\" class=\"table table-bordered table-striped table-hover\">\n                              <thead>\n                                <tr>\n                                  <th class=\"table14\">#</th>\n                                  <th class=\"table14\">{{'HOME.Request_date' | translate}}</th>\n                                  <th class=\"table15\">{{'HOME.LG_amount' | translate}}</th>\n                                  <th class=\"table16\">{{'HOME.LG_TYPE' | translate}}</th>\n                                  <th class=\"table17\">{{'HOME.Beneficiary' | translate}}</th>\n                                  <th class=\"table18\">{{'HOME.Project_name' | translate}}</th>\n                                  <th class=\"table19\">{{'HOME.Bank' | translate}}</th>\n                                  <th class=\"\">{{'HOME.View_Details' | translate}}</th>\n                                </tr>\n                              </thead>\n                              <tbody>\n                                <tr *ngFor=\"let plist of intReleaseReviewList; let i = index \">\n                                  <td>{{i+1}}</td>\n                                  <td>{{plist.request_date}}</td>\n                                  <td>{{plist.contract_value}}</td>\n                                  <td>{{plist.lg_type}}</td>\n                                  <td>{{plist.beneficiary_name}}</td>\n                                  <td>{{plist.project_name}}</td>\n                                  <td>{{plist.bank_name}}</td>\n                                  <td>\n                                    <button type=\"button\" class=\"btn btn-success vw-details\" (click)=\"internalRowSelected(plist, 'release_review')\">{{'HOME.View' | translate}}</button>\n                                  </td>\n                                </tr>\n                              </tbody>\n                            </table>\n                          </ng-template>\n                  </div>\n                  <!--This is for Arabic-->\n                </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n<!-- Internal Pending list for Release Review -->\n\n<!-- Internal Pending list for Release Approve -->\n<div *ngIf=\"aclReleaseApprove\">\n  <div class=\"col-sm-12\">\n    <div class=\"kt-portlet\">\n      <div class=\"kt-portlet__head\">\n        <div class=\"kt-portlet__head-label\">\n          <h3 class=\"kt-portlet__head-title\">\n            Pending Release Approve List\n          </h3>\n        </div>\n      </div>\n      \n        <!--begin::Form-->\n        <div class=\"kt-form kt-form--label-right\">\n        <div class=\"kt-portlet__body\">\n          <div class=\"container\">\n            <div class=\"row\">\n              <div class=\"col-md-12\">\n                <div class=\"kt-portlet no-shadow\">\n                  <div class=\"new-blue-table1\">\n\n\n\n                    <div class=\"table-responsive\">\n                      <div *ngIf=\"this.translate.currentLang == 'en'\">\n                        <div *ngIf=\"intReleaseApproveList?.length > 0; then ReleaseApprovethenBlock else ReleaseApproveelseBlock\"> </div>\n                        <ng-template #ReleaseApprovethenBlock>\n                        <table datatable [dtOptions]=\"dtOptions\" class=\"table table-bordered table-striped table-hover\">\n                            <thead>\n                                <tr>\n                                    <th class=\"table14\">#</th>\n                                    <th class=\"table14\">{{'HOME.Request_date' | translate}}</th>\n                                    <th class=\"table15\">{{'HOME.LG_amount' | translate}}</th>\n                                    <th class=\"table16\">{{'HOME.LG_TYPE' | translate}}</th>\n                                    <th class=\"table17\">{{'HOME.Beneficiary' | translate}}</th>\n                                    <th class=\"table18\">{{'HOME.Project_name' | translate}}</th>\n                                    <th class=\"table19\">{{'HOME.Bank' | translate}}</th>\n                                    <th class=\"\">{{'HOME.View_Details' | translate}}</th>\n                                  </tr>\n                            </thead>\n                            <tbody>\n                              <tr *ngFor=\"let plist of intReleaseApproveList; let i = index \">\n                                <td>{{i+1}}</td>\n                                <td>{{plist.request_date}}</td>\n                                <td>{{plist.contract_value}}</td>\n                                <td>{{plist.lg_type}}</td>\n                                <td>{{plist.beneficiary_name}}</td>\n                                <td>{{plist.project_name}}</td>\n                                <td>{{plist.bank_name}}</td>\n                                <td>\n                                  <button type=\"button\" class=\"btn btn-success vw-details\" (click)=\"internalRowSelected(plist, 'release_approve')\">{{'HOME.View' | translate}}</button>\n                                </td>\n                              </tr>\n                            </tbody>\n                          </table>\n                        </ng-template>\n\n                        <ng-template #ReleaseApproveelseBlock>\n                            <table datatable [dtOptions]=\"dtOptions\" class=\"table table-bordered table-striped table-hover\">\n                                <thead>\n                                  <tr>\n                                    <th class=\"table14\">#</th>\n                                    <th class=\"table14\">{{'HOME.Request_date' | translate}}</th>\n                                    <th class=\"table15\">{{'HOME.LG_amount' | translate}}</th>\n                                    <th class=\"table16\">{{'HOME.LG_TYPE' | translate}}</th>\n                                    <th class=\"table17\">{{'HOME.Beneficiary' | translate}}</th>\n                                    <th class=\"table18\">{{'HOME.Project_name' | translate}}</th>\n                                    <th class=\"table19\">{{'HOME.Bank' | translate}}</th>\n                                    <th class=\"\">{{'HOME.View_Details' | translate}}</th>\n                                  </tr>\n                                </thead>\n                                <tbody>\n                                  <tr *ngFor=\"let plist of intReleaseApproveList; let i = index \">\n                                    <td>{{i+1}}</td>\n                                    <td>{{plist.request_date}}</td>\n                                    <td>{{plist.contract_value}}</td>\n                                    <td>{{plist.lg_type}}</td>\n                                    <td>{{plist.beneficiary_name}}</td>\n                                    <td>{{plist.project_name}}</td>\n                                    <td>{{plist.bank_name}}</td>\n                                    <td>\n                                      <button type=\"button\" class=\"btn btn-success vw-details\" (click)=\"internalRowSelected(plist, 'release_approve')\">{{'HOME.View' | translate}}</button>\n                                    </td>\n                                  </tr>\n                                </tbody>\n                              </table>\n                            </ng-template>\n                    </div>\n                    <!--This is for Arabic-->\n\n                    <div *ngIf=\"this.translate.currentLang == 'ar'\">\n                      <div *ngIf=\"intReleaseApproveList?.length > 0; then ReleaseApprovethenBlock else ReleaseApproveelseBlock\"> </div>\n                      <ng-template #ReleaseApprovethenBlock>\n                      <table datatable [dtOptions]=\"dtOptionsAR\" class=\"table table-bordered table-striped table-hover\">\n                          <thead>\n                            <tr>\n                              <th class=\"table14\">#</th>\n                              <th class=\"table14\">{{'HOME.Request_date' | translate}}</th>\n                              <th class=\"table15\">{{'HOME.LG_amount' | translate}}</th>\n                              <th class=\"table16\">{{'HOME.LG_TYPE' | translate}}</th>\n                              <th class=\"table17\">{{'HOME.Beneficiary' | translate}}</th>\n                              <th class=\"table18\">{{'HOME.Project_name' | translate}}</th>\n                              <th class=\"table19\">{{'HOME.Bank' | translate}}</th>\n                              <th class=\"\">{{'HOME.View_Details' | translate}}</th>\n                            </tr>\n                          </thead>\n                          <tbody>\n                            <tr *ngFor=\"let plist of intReleaseApproveList; let i = index \">\n                              <td>{{i+1}}</td>\n                              <td>{{plist.request_date}}</td>\n                              <td>{{plist.contract_value}}</td>\n                              <td>{{plist.lg_type}}</td>\n                              <td>{{plist.beneficiary_name}}</td>\n                              <td>{{plist.project_name}}</td>\n                              <td>{{plist.bank_name}}</td>\n                              <td>\n                                <button type=\"button\" class=\"btn btn-success vw-details\" (click)=\"internalRowSelected(plist, 'release_approve')\">{{'HOME.View' | translate}}</button>\n                              </td>\n                            </tr>\n                          </tbody>\n                        </table>\n                      </ng-template>\n\n                      <ng-template #ReleaseApproveelseBlock>\n                          <table datatable [dtOptions]=\"dtOptionsAR\" class=\"table table-bordered table-striped table-hover\">\n                              <thead>\n                                <tr>\n                                  <th class=\"table14\">#</th>\n                                  <th class=\"table14\">{{'HOME.Request_date' | translate}}</th>\n                                  <th class=\"table15\">{{'HOME.LG_amount' | translate}}</th>\n                                  <th class=\"table16\">{{'HOME.LG_TYPE' | translate}}</th>\n                                  <th class=\"table17\">{{'HOME.Beneficiary' | translate}}</th>\n                                  <th class=\"table18\">{{'HOME.Project_name' | translate}}</th>\n                                  <th class=\"table19\">{{'HOME.Bank' | translate}}</th>\n                                  <th class=\"\">{{'HOME.View_Details' | translate}}</th>\n                                </tr>\n                              </thead>\n                              <tbody>\n                                <tr *ngFor=\"let plist of intReleaseApproveList; let i = index \">\n                                  <td>{{i+1}}</td>\n                                  <td>{{plist.request_date}}</td>\n                                  <td>{{plist.contract_value}}</td>\n                                  <td>{{plist.lg_type}}</td>\n                                  <td>{{plist.beneficiary_name}}</td>\n                                  <td>{{plist.project_name}}</td>\n                                  <td>{{plist.bank_name}}</td>\n                                  <td>\n                                    <button type=\"button\" class=\"btn btn-success vw-details\" (click)=\"internalRowSelected(plist, 'release_approve')\">{{'HOME.View' | translate}}</button>\n                                  </td>\n                                </tr>\n                              </tbody>\n                            </table>\n                          </ng-template>\n                  </div>\n                  <!--This is for Arabic-->\n                </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n<!-- Internal Pending list for Release Approve -->\n\n\n\n\n\n\n</div>\n<!-- Internal Pending list for LG/Amend/Confiscation/release -->\n\n\n\n\n\n\n                                  </form>\n\n                                </div>\n                              </div>\n                            </div>\n\n                          </div>\n                        </div>\n                      </div>\n                    </section>\n                  </div>\n                  \n                </div>\n              </div>\n              <!--New Design Here-->\n            </div>\n          </div>\n          <!--===========================\n                        End Content\n                        ============================-->\n         \n  <!--begin::Global Theme Bundle(used by all pages) -->\n  <script src=\"../../assets/js/plugins.bundle.js\" type=\"text/javascript\"></script>\n  <!-- end::Body -->\n ");

/***/ }),

/***/ "./node_modules/raw-loader/dist/cjs.js!./src/app/request-lg-issuance-approval/request-lg-issuance-approval.component.html":
/*!********************************************************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/request-lg-issuance-approval/request-lg-issuance-approval.component.html ***!
  \********************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("\n\n          <!--===========================\n                    Start Content\n                    ============================-->\n                    <div class=\"pt-0 kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor kt-margin-top-50\">\n                      <div class=\"kt-container\">\n              <!--New Design Here-->\n              <div class=\"row\">\n                <app-sidemenu></app-sidemenu>\n                <!--<div class=\"col-12 col-sm-3 col-md-3 col-lg-3 left-panel-menu-wrap w-20 fixed-wrap\">\n\n                  <ul class=\"vertical-menu\">\n                    <li><a routerLink=\"/dashboard\" ><span class=\"db-icon\"></span>{{'HOME.Dashboard' | translate}}</a></li>\n                    <li *ngIf=\"roleId == 1\"><a routerLink=\"/privateLgManagement\"><span class=\"lg-icon\"></span>{{'HOME.LG_Management' | translate}}</a>\n                    <li *ngIf=\"roleId == 1\"><a routerLink=\"/requestLgIssuance\" class=\"active\"><span class=\"lg-icon\"></span>{{'HOME.LG_issuance' | translate}}</a></li>\n                    <li *ngIf=\"roleId == 3\"><a routerLink=\"/pendingtasks\"><span class=\"lg-icon\"></span>{{'HOME.Pending_Tasks' | translate}}</a></li>\n                    <li *ngIf=\"roleId == 1\"><a routerLink=\"/privatependingtasks\"><span class=\"lg-icon\"></span>{{'HOME.Pending_Tasks' | translate}}</a></li>\n                  </ul>\n                </div>-->\n                <div class=\"col-12 col-sm-9 col-md-9 col-lg-9 padding-null scroll-wrap\">\n\n                  <div class=\"grey-bg\">\n                    <section class=\"design-process-section\" id=\"process-tab\">\n                      <div>\n                        <div>\n                          <div>\n                            <div class=\"text-left1\">\n                              <h3 class=\"kt-login__title pt-3 m-0 mb-30\">{{'HOME.ISSUE_TITLE' | translate}}</h3>\n                            </div>\n                            <!-- Step Wizard -->\n                            <div class=\"stepwizard-wrap\" *ngIf=\"!isInternalPending\">\n                              <div class=\"stepwizard\">\n                                <div class=\"stepwizard-row setup-panel\">\n                                  <div class=\"stepwizard-step col-xs-3\">\n                                    <div class=\"stepwizard-circle1\">\n                                      <a routerLink=\"/requestLgIssuance\">\n                                        <div class=\"stepwizard-circle\">\n                                          <div class=\"outer-circle\">\n                                            <div class=\"check-icon1\"> &#10003;</div>\n                                          </div>\n                                        </div>\n                                      </a>\n                                    </div>\n                                    <p><span>{{'HOME.ISSUE_STEP_1' | translate}}</span></p>\n                                  </div>\n                                  <div class=\"stepwizard-step stepwizard-circle-approval-wrap col-xs-3\">\n                                    <div class=\"stepwizard-circle2\">\n                                      <a routerLink=\"/requestLgIssuanceApproval\">\n                                        <div class=\"stepwizard-circle stepwizard-circle-approval\">\n                                          <div class=\"outer-circle\">\n                                            <div class=\"check-icon1\"> &#10003;</div>\n                                          </div>\n                                        </div>\n                                      </a>\n                                    </div>\n                                    <p><span>{{'HOME.STEP2_PAYMENT' | translate}}</span></p>\n                                  </div>\n                                  <div class=\"stepwizard-step stepwizard-circle-payment-wrap col-xs-3\">\n                                    <div class=\"stepwizard-circle3\">\n                                      <a routerLink=\"/requestLgIssuancePayment\">\n                                        <div class=\"stepwizard-circle stepwizard-circle-payment\">\n                                          <div class=\"outer-circle\">\n                                            <div class=\"inner-circle\"></div>\n                                          </div>\n                                        </div>\n                                      </a>\n                                    </div>\n                                    <p><span>{{'HOME.STEP3_APPPROVAL' | translate}}</span></p>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                            <!--/Step Wizard-->\n                            <!-- Tab panes -->\n                            <div class=\"tab-content\">\n                              <div role=\"tabpanel\" class=\"tab-pane active\" id=\"discover\">\n                                <div class=\"design-process-content\">\n                                  <form [formGroup]=\"submitLGIssuanceApproval\">\n                                    <div class=\"row\">\n                                      <div class=\"col-sm-12\">\n                                        <div class=\"pop-block\">\n                                          <div class=\"blue-block\"><img src=\"../../assets/images/alert.png\"\n                                              alt=\"alert-icon\" class=\"alert-icon\"></div>\n                                          <p>{{alertMsgforPrivateLGApproval1 |translate}}</p>\n                                          <div class=\"clearfix\"></div>\n                                        </div>\n                                      </div>\n                                      <div class=\"col-sm-12\">\n                                        <div class=\"kt-portlet\">\n                                          <div class=\"kt-portlet__head\">\n                                            <div class=\"kt-portlet__head-label\">\n                                              <h3 class=\"kt-portlet__head-title\">\n                                                {{'HOME.LG_DETAILS' | translate}}\n                                              </h3>\n                                            </div>\n                                          </div>\n\n                                          <div class=\"kt-form kt-form--label-right\">\n                                            <div class=\"kt-portlet__body\">\n                                              <div class=\"container\">\n                                                <div class=\"row\">\n                                                  <div class=\"col-md-12\">\n                                                    <div class=\"form-group margin-bottom-10\">\n                                                      <label for=\"lg-type\" class=\"col-form-label full-width-label\">{{'HOME.LG_Status' | translate}} <em\n                                                          style=\"font-style: normal;\"\n                                                          class=\"text-danger-black\">*</em></label>\n                                                      <input class=\"form-control col-md-11 profile-txt1 col-width-88\"\n                                                        type=\"text\" value=\"\" id=\"\" readonly\n                                                        formControlName=\"activeStatus\">\n                                                    </div>\n                                                  </div>\n                                                  <div class=\"col-md-6\">\n                                                    <div class=\"form-group margin-bottom-10\">\n                                                      <label for=\"lg-type\" class=\"col-form-label\">{{'HOME.Request_ID' | translate}} <em\n                                                          style=\"font-style: normal;\"\n                                                          class=\"text-danger-black\">*</em></label>\n                                                      <input class=\"form-control col-md-9 profile-txt1\" type=\"text\"\n                                                        value=\"\" id=\"\" readonly formControlName=\"requestId\">\n                                                    </div>\n                                                  </div>\n                                                  <div class=\"col-md-6\">\n                                                    <div class=\"form-group margin-bottom-10\">\n                                                      <label for=\"lg-type\" class=\"col-form-label\">{{'HOME.LG_Number' | translate}} <em\n                                                          style=\"font-style: normal;\"\n                                                          class=\"text-danger-black\">*</em></label>\n                                                      <input class=\"form-control col-md-9 profile-txt1\" type=\"text\"\n                                                        value=\"\" id=\"\" readonly formControlName=\"LGNumber\">\n                                                    </div>\n                                                  </div>\n                                                  <div class=\"col-md-6\">\n                                                    <div class=\"form-group margin-bottom-10\">\n                                                      <label for=\"lg-type\" class=\"col-form-label\">{{'HOME.LG_TYPE' | translate}} <em\n                                                          style=\"font-style: normal;\"\n                                                          class=\"text-danger-black\">*</em></label>\n                                                      <input class=\"form-control col-md-9 profile-txt1\" type=\"text\"\n                                                        value=\"\" id=\"\" readonly formControlName=\"LGType\">\n                                                    </div>\n                                                  </div>\n                                                  <div class=\"col-md-6\">\n                                                    <div class=\"form-group margin-bottom-10\">\n                                                      <label for=\"lg-type\" class=\"col-form-label\">{{'HOME.WRITE_UP' | translate}}<em\n                                                          style=\"font-style: normal;\"\n                                                          class=\"text-danger-black\">*</em></label>\n                                                      <input class=\"form-control col-md-9 profile-txt1\" type=\"text\"\n                                                        value=\"\" id=\"\" readonly formControlName=\"writeUpType\">\n                                                    </div>\n                                                  </div>\n                                                  <div class=\"col-md-6\">\n                                                    <div class=\"form-group margin-bottom-10\">\n                                                      <label for=\"lg-type\" class=\"col-form-label\">{{'HOME.AMOUNT' | translate}} <em\n                                                          style=\"font-style: normal;\"\n                                                          class=\"text-danger-black\">*</em></label>\n                                                      <input class=\"form-control col-md-9 profile-txt1\" type=\"text\"\n                                                        value=\"\" id=\"\" readonly formControlName=\"Amount\">\n                                                    </div>\n                                                  </div>\n                                                  <div class=\"col-md-6\">\n                                                    <div class=\"form-group margin-bottom-10\">\n                                                      <label for=\"lg-type\" class=\"col-form-label\">{{'HOME.AMOUNT_WORDS' | translate}}<em\n                                                          style=\"font-style: normal;\"\n                                                          class=\"text-danger-black\">*</em></label>\n                                                      <input class=\"form-control col-md-9 profile-txt1\" type=\"text\"\n                                                        value=\"\" id=\"\" readonly formControlName=\"amountInText\">\n                                                    </div>\n                                                  </div>\n\n                                                  <div class=\"col-md-6\">\n                                                    <div class=\"form-group margin-bottom-10\">\n                                                      <label for=\"lg-start-date\" class=\"col-form-label\">{{'HOME.LG_START_DATE' | translate}}\n                                                        <em style=\"font-style: normal;\"\n                                                          class=\"text-danger-black\">*</em></label>\n\n                                                      <!-- <p-calendar [style]=\"{'width':'75%'}\" [inputStyle]=\"{'width':'100%'}\" formControlName=\"LGStartDate\"></p-calendar> -->\n                                                      <input class=\"form-control col-md-9 profile-txt1\" type=\"text\"\n                                                        value=\"\" id=\"\" readonly formControlName=\"LGStartDate\">\n\n                                                    </div>\n                                                  </div>\n\n                                                  <div class=\" col-md-6\">\n                                                    <div class=\" form-group margin-bottom-10\">\n                                                      <label for=\"lg-end-date\" class=\"col-form-label\">{{'HOME.LG_END_DATE' | translate}} <em\n                                                          style=\"font-style: normal;\"\n                                                          class=\"text-danger-black\">*</em></label>\n\n                                                      <!-- <p-calendar [style]=\"{'width':'75%'}\" [inputStyle]=\"{'width':'100%'}\" formControlName=\"LGEndDate\"></p-calendar> -->\n                                                      <input class=\"form-control col-md-9 profile-txt1\" type=\"text\"\n                                                        value=\"\" id=\"\" readonly formControlName=\"LGEndDate\">\n                                                    </div>\n                                                  </div>\n\n                                                  <div class=\"col-md-6\">\n                                                    <div class=\"form-group margin-bottom-10\">\n                                                      <label for=\"amount\" class=\"col-form-label\">{{'HOME.Issue_Date' | translate}} <em\n                                                          style=\"font-style: normal;\"\n                                                          class=\"text-danger-black\">*</em></label>\n                                                      <input class=\"form-control col-md-9 profile-txt1\" type=\"text\"\n                                                        value=\"\" id=\"\" readonly formControlName=\"LGValidityDate\">\n                                                    </div>\n                                                  </div>\n\n                                                  <div class=\"col-md-6\">\n                                                    <div class=\"form-group margin-bottom-10\">\n                                                      <label for=\"currency\" class=\"col-form-label\">{{'HOME.CURRENCY' | translate}} <em\n                                                          style=\"font-style: normal;\"\n                                                          class=\"text-danger-black\">*</em></label>\n                                                      <input class=\"form-control col-md-9 profile-txt1\" type=\"text\"\n                                                        value=\"\" id=\"\" readonly formControlName=\"currency\">\n                                                    </div>\n                                                  </div>\n\n                                                  <div class=\"col-md-6\" *ngIf=\"LGType === 'Zakat Guarantee Bond'\">\n                                                    <div class=\"form-group margin-bottom-10\">\n                                                      <label for=\"amount\" class=\"col-form-label\">{{'HOME.ZAKAT_START_DATE' | translate}}\n                                                      </label>\n                                                      <input class=\"form-control col-md-9 profile-txt1\" type=\"text\"\n                                                        value=\"\" id=\"\" readonly formControlName=\"zakatStartDate\">\n                                                    </div>\n                                                  </div>\n\n                                                  <div class=\"col-md-6\" *ngIf=\"LGType === 'Zakat Guarantee Bond'\">\n                                                    <div class=\"form-group margin-bottom-10\">\n                                                      <label for=\"amount\" class=\"col-form-label\">{{'HOME.ZAKAT_END_DATE' | translate}}\n                                                      </label>\n                                                      <input class=\"form-control col-md-9 profile-txt1\" type=\"text\"\n                                                        value=\"\" id=\"\" readonly formControlName=\"zakatEndDate\">\n                                                    </div>\n                                                  </div>\n\n                                                  <div class=\"col-md-6\">\n                                                    <div class=\"form-group margin-bottom-10\">\n                                                      <label for=\"amount\" class=\"col-form-label\">{{'HOME.PROJECT_NAME' | translate}} </label>\n                                                      <input class=\"form-control col-md-9 profile-txt1\" type=\"text\"\n                                                        value=\"\" id=\"\" readonly formControlName=\"projectName\">\n                                                    </div>\n                                                  </div>\n\n                                                  <div class=\"col-md-6\">\n                                                    <div class=\"form-group margin-bottom-10\">\n                                                      <label for=\"amount\" class=\"col-form-label\">{{'HOME.PROJECT_NUMBER' | translate}} </label>\n                                                      <input class=\"form-control col-md-9 profile-txt1\" type=\"text\"\n                                                        value=\"\" id=\"\" readonly formControlName=\"projectId\">\n                                                    </div>\n                                                  </div>\n\n                                                  <div class=\"col-md-6\">\n                                                    <div class=\"form-group margin-bottom-10\">\n                                                      <label for=\"amount\" class=\"col-form-label\">{{'HOME.PURPOSE_OF_BOND' | translate}} <em\n                                                          style=\"font-style: normal;\"\n                                                          class=\"text-danger-black\">*</em></label>\n                                                      <input class=\"form-control col-md-9 profile-txt1\" type=\"text\"\n                                                        value=\"\" id=\"\" readonly formControlName=\"purposeOfBond\">\n                                                    </div>\n                                                  </div>\n\n                                                  <div class=\"col-md-6\" *ngIf=\"LGType === 'Custom Guarantee Bond'\">\n                                                    <div class=\"form-group margin-bottom-10\">\n                                                      <label for=\"amount\" class=\"col-form-label\">{{'HOME.BAYAN_NUMBER' | translate}} </label>\n                                                      <input class=\"form-control col-md-9 profile-txt1\" type=\"text\"\n                                                        value=\"\" id=\"\" readonly formControlName=\"byanNo\">\n                                                    </div>\n                                                  </div>\n                                                  <div class=\"col-md-12\" style=\"text-align: left;\">\n                                                    <div class=\"checkbox margin-top-10\">\n                                                      <label class=\"container-checkbox\"> {{'HOME.ACCOUNT_OF_CONTRACT_PROCESSED' | translate}}\n                                                        <input type=\"checkbox\" [(ngModel)]=\"accountOfContractcheckBox\"\n                                                          formControlName=\"accountOfContractcheckBox\" >\n                                                        <span class=\"checkmark\"></span>\n                                                      </label>\n                                                    </div>\n                                                  </div>\n\n                                                  <div class=\"col-md-12\" *ngIf=\"isEditTnC\">\n                                                    <div class=\"form-group\">\n                                                      <label for=\"terms-and-condition\" class=\"col-form-label full-width\">{{'HOME.TERMS_AND_CONDITIONS' | translate}}\n                                                      <em\n                                                        style=\"font-style: normal;\"\n                                                        class=\"text-danger-black\">*</em></label>\n                                                      <div class=\"terms-wrap\" id=\"editable\">\n                                                        <!-- <textarea rows=\"10\" cols=\"100\"\n                                                          formControlName=\"TermsAndCondContent\" [readonly]=\"!isEditTnC\"\n                                                          [ngStyle]=\"{'background-color':isEditTnC === true ? '#fff' : '#efefef'}\">\n                                                          </textarea> -->\n                                                        <textarea rows=\"10\" cols=\"100\"\n                                                          formControlName=\"TermsAndCondContent\"\n                                                          [(ngModel)]=\"TermsAndCondContent\" [readonly]=\"!isEditTnC\"\n                                                          [ngStyle]=\"styleObject()\">\n                                                          </textarea>\n\n                                                        <div *ngIf=\"isEditTnC\">\n                                                          <button type=\"button\" class=\"btn btn-success margin-top-10\"\n                                                            id=\"editBtn1\" (click)=\"updateTnC()\">{{'HOME.UPDATE' | translate}}</button>\n                                                        </div>\n\n                                                      </div>\n                                                    </div>\n                                                    <div class=\"col-md-12\" style=\"text-align: left;\">\n                                                      <div class=\"checkbox\">\n                                                        <label class=\"container-checkbox\"> {{'HOME.TERMS_AND_CONDITIONS' | translate}}\n                                                          <input type=\"checkbox\" [(ngModel)]=\"checkBox\"\n                                                            formControlName=\"checkBox\" >\n                                                          <span class=\"checkmark\"></span>\n                                                        </label>\n                                                      </div>\n                                                    </div>\n                                                  </div>\n\n                                                  <div class=\"col-md-12\" *ngIf=\"!isEditTnC\">\n                                                    <div class=\"form-group\">\n                                                      <label for=\"terms-and-condition\" class=\"col-form-label full-width-label\">{{'HOME.TERMS_AND_CONDITIONS' | translate}}\n                                                    <em\n                                                        style=\"font-style: normal;\"\n                                                        class=\"text-danger-black\">*</em></label>\n                                                      <div  class=\"terms-wrap no-margin-bottom\">\n                                                          <textarea rows=\"10\" cols=\"100\" formControlName=\"TermsAndCondContent\" readonly [ngStyle]=\"styleObject()\">\n                                                          </textarea>\n                                                      </div>\n                                                      <div class=\"checkbox margin-top-10\">\n                                                        <label class=\"container-checkbox\"> {{'HOME.TERMS_AND_CONDITIONS' | translate}}\n                                                          <input type=\"checkbox\" [(ngModel)]=\"checkBox\"\n                                                            formControlName=\"checkBox\" >\n                                                          <span class=\"checkmark\"></span>\n                                                        </label>\n                                                      </div>\n                                                    </div>\n                                                  </div>\n\n                                                </div>\n\n                                              </div>\n                                            </div>\n\n                                          </div>\n                                        </div>\n                                      </div>\n                                      <!--/Lg Details-->\n                                    </div>\n\n\n\n                                    <!--Applicant Information-->\n\n                                    <div class=\"row\">\n                                      <div class=\"col-sm-12\">\n                                        <div class=\"kt-portlet\">\n                                          <div class=\"kt-portlet__head\">\n                                            <div class=\"kt-portlet__head-label\">\n                                              <h3 class=\"kt-portlet__head-title\">\n                                              {{'HOME.Applicant_Information' | translate}}\n                                              </h3>\n                                            </div>\n                                          </div>\n                                          \n                                          <div class=\"kt-form kt-form--label-right\">\n                                            <div class=\"kt-portlet__body\">\n                                            <div class=\"container\">\n\n                                              <div class=\"row\">\n                                                <div class=\"col-md-6\">\n                                                  <div class=\"form-group margin-bottom-10\">\n                                                  <label for=\"lg-type\" class=\"col-form-label\"> {{'HOME.CRN' | translate}}<em\n                                                    style=\"font-style: normal;\"\n                                                    class=\"text-danger-black\"></em></label>\n                                                  <input class=\"form-control col-md-9 profile-txt1\" type=\"text\"\n                                                    value=\"{{Applicant_CRN}}\" id=\"\" readonly formControlName=\"Applicant_CRN\">\n                                                  </div>\n                                                </div>\n                                                <div class=\"col-md-6\">\n                                                  <div class=\"form-group margin-bottom-10\">\n                                                  <label for=\"lg-type\" class=\"col-form-label\">{{'HOME.Entity_name_Arabic' | translate}} <em\n                                                    style=\"font-style: normal;\"\n                                                    class=\"text-danger-black\"></em></label>\n                                                  <input class=\"form-control col-md-9 profile-txt1\" type=\"text\"\n                                                    value=\"{{Applicant_Entity_name_Arabic}}\" id=\"\" readonly formControlName=\"Applicant_Entity_name_Arabic\">\n                                                  </div>\n                                                </div>\n                                              </div>\n                                              <div class=\"row\">\n                                                <div class=\"col-md-6\">\n                                                  <div class=\"form-group margin-bottom-10\">\n                                                  <label for=\"lg-type\" class=\"col-form-label\"> {{'HOME.Selected_Bank' | translate}}<em\n                                                    style=\"font-style: normal;\"\n                                                    class=\"text-danger-black\"></em></label>\n                                                  <input class=\"form-control col-md-9 profile-txt1\" type=\"text\"\n                                                    value=\"{{Applicant_Selected_Bank}}\" id=\"\" readonly formControlName=\"Applicant_Selected_Bank\">\n                                                  </div>\n                                                </div>\n                                                <div class=\"col-md-6\">\n                                                  <div class=\"form-group margin-bottom-10\">\n                                                  <label for=\"lg-type\" class=\"col-form-label\">{{'HOME.Selected_IBAN' | translate}} <em\n                                                    style=\"font-style: normal;\"\n                                                    class=\"text-danger-black\"></em></label>\n                                                  <input class=\"form-control col-md-9 profile-txt1\" type=\"text\"\n                                                    value=\"{{Applicant_Selected_IBAN}}\" id=\"\" readonly formControlName=\"Applicant_Selected_IBAN\">\n                                                  </div>\n                                                </div>\n                                              </div>\n                                              <div class=\"row\">\n                                                <div class=\"col-md-6\">\n                                                  <div class=\"form-group margin-bottom-10\">\n                                                  <label for=\"lg-type\" class=\"col-form-label\"> {{'HOME.CR_type' | translate}}<em\n                                                    style=\"font-style: normal;\"\n                                                    class=\"text-danger-black\"></em></label>\n                                                  <input class=\"form-control col-md-9 profile-txt1\" type=\"text\"\n                                                    value=\"{{Applicant_CR_type}}\" id=\"\" readonly formControlName=\"Applicant_CR_type\">\n                                                  </div>\n                                                </div>\n                                                <div class=\"col-md-6\">\n                                                  <div class=\"form-group margin-bottom-10\">\n                                                  <label for=\"lg-type\" class=\"col-form-label\">{{'HOME.CR_status' | translate}} <em\n                                                    style=\"font-style: normal;\"\n                                                    class=\"text-danger-black\"></em></label>\n                                                  <input class=\"form-control col-md-9 profile-txt1\" type=\"text\"\n                                                    value=\"{{Applicant_CR_status}}\" id=\"\" readonly formControlName=\"Applicant_CR_status\">\n                                                  </div>\n                                                </div>\n                                              </div>\n                                              <div class=\"row\">\n                                                <div class=\"col-md-6\">\n                                                  <div class=\"form-group margin-bottom-10\">\n                                                  <label for=\"lg-type\" class=\"col-form-label\"> {{'HOME.CR_Issue_Date' | translate}}<em\n                                                    style=\"font-style: normal;\"\n                                                    class=\"text-danger-black\"></em></label>\n                                                  <input class=\"form-control col-md-9 profile-txt1\" type=\"text\"\n                                                    value=\"{{Applicant_CR_Issue_Date}}\" id=\"\" readonly formControlName=\"Applicant_CR_Issue_Date\">\n                                                  </div>\n                                                </div>\n                                                <div class=\"col-md-6\">\n                                                  <div class=\"form-group margin-bottom-10\">\n                                                  <label for=\"lg-type\" class=\"col-form-label\">{{'HOME.CR_expiry_Date' | translate}} <em\n                                                    style=\"font-style: normal;\"\n                                                    class=\"text-danger-black\"></em></label>\n                                                  <input class=\"form-control col-md-9 profile-txt1\" type=\"text\"\n                                                    value=\"{{Applicant_CR_expiry_Date}}\" id=\"\" readonly formControlName=\"Applicant_CR_expiry_Date\">\n                                                  </div>\n                                                </div>\n                                              </div>\n                                              <div class=\"row\">\n                                                <div class=\"col-md-6\">\n                                                  <div class=\"form-group margin-bottom-10\">\n                                                  <label for=\"lg-type\" class=\"col-form-label\"> {{'HOME.Address' | translate}}<em\n                                                    style=\"font-style: normal;\"\n                                                    class=\"text-danger-black\"></em></label>\n                                                  <input class=\"form-control col-md-9 profile-txt1\" type=\"text\"\n                                                    value=\"{{Applicant_Address}}\" id=\"\" readonly formControlName=\"Applicant_Address\">\n                                                  </div>\n                                                </div>\n                                                <div class=\"col-md-6\">\n                                                  <div class=\"form-group margin-bottom-10\">\n                                                  <label for=\"lg-type\" class=\"col-form-label\">{{'HOME.City' | translate}} <em\n                                                    style=\"font-style: normal;\"\n                                                    class=\"text-danger-black\"></em></label>\n                                                  <input class=\"form-control col-md-9 profile-txt1\" type=\"text\"\n                                                    value=\"{{Applicant_City}}\" id=\"\" readonly formControlName=\"Applicant_City\">\n                                                  </div>\n                                                </div>\n                                              </div>\n                                            </div>\n                                          </div>\n                                          </div>\n                                          \n                                        </div>\n                                      </div>\n                                    </div>\n                                    <!--Applicant Information-->\n\n\n\n                                    <!--Beneficiary Information-->\n                                    <div class=\"row\">\n                                      <div class=\"col-sm-12\">\n                                        <div class=\"kt-portlet\">\n                                          <div class=\"kt-portlet__head\">\n                                            <div class=\"kt-portlet__head-label\">\n                                              <h3 class=\"kt-portlet__head-title\">\n                                              {{'HOME.Beneficiary_Information' | translate}}\n                                              </h3>\n                                            </div>\n                                          </div>\n                                          \n                                          <div class=\"kt-form kt-form--label-right\">\n                                            <div class=\"kt-portlet__body\">\n                                            <div class=\"container\">\n                                              <div class=\"row\">\n                                              <div class=\"col-md-6\">\n                                                <div class=\"form-group margin-bottom-10\">\n                                                <label for=\"lg-type\" class=\"col-form-label\"> {{'HOME.Name' | translate}}<em\n                                                  style=\"font-style: normal;\"\n                                                  class=\"text-danger-black\"></em></label>\n                                                <input class=\"form-control col-md-9 profile-txt1\" type=\"text\"\n                                                  value=\"\" id=\"\" readonly formControlName=\"Beneficiary_Name\">\n                                                </div>\n                                              </div>\n                                              <div class=\"col-md-6\">\n                                                <div class=\"form-group margin-bottom-10\">\n                                                <label for=\"lg-type\" class=\"col-form-label\">{{'HOME.UID_or_CRN' | translate}} <em\n                                                  style=\"font-style: normal;\"\n                                                  class=\"text-danger-black\"></em></label>\n                                                <input class=\"form-control col-md-9 profile-txt1\" type=\"text\"\n                                                  value=\"\" id=\"\" readonly formControlName=\"Beneficiary_UID_or_CRN\">\n                                                </div>\n                                              </div>\n                                              </div>\n                                            </div>\n                                          </div>\n                                          </div>\n                                          \n                                        </div>\n                                      </div>\n                                    </div>\n\n\n                                    <!--Beneficiary Information-->\n\n                                    <!--LG History-->\n                                    <div class=\"row\" *ngIf=\"LG_History.length > 0\">\n                                      <div class=\"col-sm-12\">\n                                        <div class=\"kt-portlet\">\n                                          <div class=\"kt-portlet__head\">\n                                            <div class=\"kt-portlet__head-label\">\n                                              <h3 class=\"kt-portlet__head-title\">LG History</h3>\n                                            </div>\n                                          </div>\n                                          <div class=\"kt-form kt-form--label-right\">\n                                            <div class=\"kt-portlet__body\">\n                                            <div class=\"container\">\n                                              <div class=\"row\">\n                                                <div class=\"col-md-12\">\n                                                  <div class=\"kt-portlet no-shadow\">\n                                                    <div class=\"new-blue-table no-border\">\n                                                      <div class=\"table-responsive\">\n                                                          <table class=\"table table-bordered table-striped table-hover\">\n                                                            <thead>\n                                                              <tr>\n                                                                <th class=\"table-col-7\">#</th>\n                                                                <th class=\"\"> {{'HOME.LG_Number' | translate}}</th>\n                                                                <th class=\"\">Transaction ID</th>\n                                                                <th class=\"\">Changes</th>\n                                                                <th class=\"\">Old Value</th>\n                                                                <th class=\"\">New Value</th>\n                                                                <th class=\"\">Transaction date</th>\n                                                                <th class=\"\">Name</th>\n                                                              </tr>\n                                                            </thead>\n                                                            <tbody>\n                                                            <tr *ngFor=\"let History of LG_History; let i = index \">\n                                                              <td>{{i+1}}</td>\n                                                              <td>{{History.lg_no}}</td>\n                                                              <td>{{History.trans_id}}</td>\n                                                              <td>{{History.status}}</td>\n                                                              <td>{{History.old_Value}}</td>\n                                                              <td>{{History.new_value}}</td>\n                                                              <td>{{History.trans_date}}</td>\n                                                              <td>{{History.name}}</td>\n                                                              \n                                                            </tr>\n                                                            </tbody>\n                                                          </table>\n                                                      </div>\n                                                    </div>\n                                                  </div>\n                                                </div>\n                                              </div>\n                                            </div>\n                                          </div>\n                                          </div>\n                                        </div>\n                                      </div>\n                                    </div>\n\n\n                                    <!-- LG History-->\n\n                               <!--Amend/confiscate/release Information Details Start-->\n                                <div class=\"row\" *ngIf=\"isACRpending\">\n\n                                  <div class=\"col-sm-12\" *ngIf=\"ACRpendingtype =='amend'\">\n                                    <div class=\"kt-portlet\">\n                                      <div class=\"kt-portlet__head\">\n                                        <div class=\"kt-portlet__head-label\">\n                                          <h3 class=\"kt-portlet__head-title\">\n                                            Amend Information\n                                          </h3>\n                                        </div>\n                                      </div>\n                                      \n                                      <div class=\"kt-form kt-form--label-right\">\n                                        <div class=\"kt-portlet__body\">\n                                        <div class=\"container\">\n                                          <div class=\"row\">\n                                          <div class=\"col-md-6\">\n                                            <div class=\"form-group margin-bottom-10\">\n                                            <label for=\"lg-type\" class=\"col-form-label\">Request ID<em\n                                              style=\"font-style: normal;\"\n                                              class=\"text-danger-black\"></em></label>\n                                            <input class=\"form-control col-md-9 profile-txt1\" type=\"text\"\n                                              value=\"\" id=\"\" readonly formControlName=\"Amendmend_request_id\">\n                                            </div>\n                                          </div>\n                                          <div class=\"col-md-6\">\n                                            <div class=\"form-group margin-bottom-10\">\n                                            <label for=\"lg-type\" class=\"col-form-label\">Amount<em\n                                              style=\"font-style: normal;\"\n                                              class=\"text-danger-black\"></em></label>\n                                            <input class=\"form-control col-md-9 profile-txt1\" type=\"text\"\n                                              value=\"\" id=\"\" readonly formControlName=\"amendAmount\">\n                                            </div>\n                                          </div>\n                                          <div class=\"col-md-6\">\n                                            <div class=\"form-group margin-bottom-10\">\n                                            <label for=\"lg-type\" class=\"col-form-label\">LG end date<em\n                                              style=\"font-style: normal;\"\n                                              class=\"text-danger-black\"></em></label>\n                                            <input class=\"form-control col-md-9 profile-txt1\" type=\"text\"\n                                              value=\"\" id=\"\" readonly formControlName=\"amendLGenddate\">\n                                            </div>\n                                          </div>\n\n                                          <div class=\"col-md-12\" *ngIf=\"!isEditTnC\">\n                                            <div class=\"form-group margin-bottom-10\">\n                                              <label for=\"terms-and-condition\" class=\"col-form-label\">Write-up</label>\n                                              <div  class=\"terms-wrap text-wrap-bordered\">\n                                                  <textarea rows=\"10\" cols=\"100\" formControlName=\"amendWriteup\" readonly [ngStyle]=\"styleObject()\">\n                                                  </textarea>\n                                              </div>\n                                              \n                                            </div>\n                                          </div>\n\n                                          </div>\n                                        </div>\n                                      </div>\n                                      </div>\n                                      \n                                    </div>\n                                  </div>\n\n\n\n\n\n                                  <div class=\"col-sm-12\" *ngIf=\"ACRpendingtype =='confiscate'\">\n                                    <div class=\"kt-portlet\">\n                                      <div class=\"kt-portlet__head\">\n                                        <div class=\"kt-portlet__head-label\">\n                                          <h3 class=\"kt-portlet__head-title\">\n                                            Confiscate Information\n                                          </h3>\n                                        </div>\n                                      </div>\n                                      \n                                      <div class=\"kt-form kt-form--label-right\">\n                                        <div class=\"kt-portlet__body\">\n                                        <div class=\"container\">\n                                          <div class=\"row\">\n\n                                          <div class=\"col-md-6\">\n                                            <div class=\"form-group margin-bottom-10\">\n                                            <label for=\"lg-type\" class=\"col-form-label\">Request ID<em\n                                              style=\"font-style: normal;\"\n                                              class=\"text-danger-black\"></em></label>\n                                            <input class=\"form-control col-md-9 profile-txt1\" type=\"text\"\n                                              value=\"\" id=\"\" readonly formControlName=\"confiscate_request_id\">\n                                            </div>\n                                          </div>\n                                          \n                                          <div class=\"col-md-6\">\n                                            <div class=\"form-group margin-bottom-10\">\n                                            <label for=\"lg-type\" class=\"col-form-label\">Bank Name<em\n                                              style=\"font-style: normal;\"\n                                              class=\"text-danger-black\"></em></label>\n                                            <input class=\"form-control col-md-9 profile-txt1\" type=\"text\"\n                                              value=\"\" id=\"\" readonly formControlName=\"confiscatebankName\">\n                                            </div>\n                                           </div>\n\n                                           <div class=\"col-md-6\">\n                                            <div class=\"form-group margin-bottom-10\">\n                                            <label for=\"lg-type\" class=\"col-form-label\">IBAN<em\n                                              style=\"font-style: normal;\"\n                                              class=\"text-danger-black\"></em></label>\n                                            <input class=\"form-control col-md-9 profile-txt1\" type=\"text\"\n                                              value=\"\" id=\"\" readonly formControlName=\"confiscateIBAN\">\n                                            </div>\n                                           </div>\n\n                                          <div class=\"col-md-12\">\n                                            <div class=\"form-group margin-bottom-10\">\n                                              <label for=\"terms-and-condition\" class=\"col-form-label\">Reason</label>\n                                              <div  class=\"terms-wrap text-wrap-bordered\">\n                                                  <textarea rows=\"10\" cols=\"100\" formControlName=\"confiscateReason\" readonly [ngStyle]=\"styleObject()\">\n                                                  </textarea>\n                                              </div>\n                                              \n                                            </div>\n                                          </div>\n\n                                          <div class=\"col-md-12\" style=\"text-align:left;\">\n                                            <div class=\"checkbox margin-top-10\">\n                                              <label class=\"container-checkbox par-blu-txt\">Partial confiscation?\n                                                <input type=\"checkbox\" [(ngModel)]=\"partialConfiscation\"\n                                                  formControlName=\"partialConfiscation\" >\n                                                <span class=\"checkmark\"></span>\n                                              </label>\n                                            </div>\n                                          </div>\n                                         \n\n                                          <div class=\"col-md-6\">\n                                            <div class=\"form-group margin-bottom-10\">\n                                            <label for=\"lg-type\" class=\"col-form-label\">Confiscation amount<em\n                                              style=\"font-style: normal;\"\n                                              class=\"text-danger-black\"></em></label>\n                                            <input class=\"form-control col-md-9 profile-txt1\" type=\"text\"\n                                              value=\"\" id=\"\" readonly formControlName=\"confiscateAmount\">\n                                            </div>\n                                           </div>\n\n\n\n                                          </div>\n                                        </div>\n                                      </div>\n                                      </div>\n                                      \n                                    </div>\n                                  </div>\n\n\n\n\n\n\n                                  <div class=\"col-sm-12\" *ngIf=\"ACRpendingtype =='release'\">\n                                    <div class=\"kt-portlet\">\n                                      <div class=\"kt-portlet__head\">\n                                        <div class=\"kt-portlet__head-label\">\n                                          <h3 class=\"kt-portlet__head-title\">\n                                            Release Information\n                                          </h3>\n                                        </div>\n                                      </div>\n                                      \n                                      <div class=\"kt-form kt-form--label-right\">\n                                        <div class=\"kt-portlet__body\">\n                                        <div class=\"container\">\n                                          <div class=\"row\">\n                                            <div class=\"col-md-6\">\n                                              <div class=\"form-group margin-bottom-10\">\n                                              <label for=\"lg-type\" class=\"col-form-label\">Request ID<em\n                                                style=\"font-style: normal;\"\n                                                class=\"text-danger-black\"></em></label>\n                                              <input class=\"form-control col-md-9 profile-txt1\" type=\"text\"\n                                                value=\"\" id=\"\" readonly formControlName=\"release_request_id\">\n                                              </div>\n                                            </div>\n                                            <div class=\"col-md-12\">\n                                              <div class=\"form-group margin-bottom-10\">\n                                                <label for=\"terms-and-condition\" class=\"col-form-label\">Reason</label>\n                                                <div  class=\"terms-wrap text-wrap-bordered\">\n                                                    <textarea rows=\"10\" cols=\"100\" formControlName=\"releaseReason\" readonly [ngStyle]=\"styleObject()\">\n                                                    </textarea>\n                                                </div>\n                                              </div>\n                                            </div>\n  \n                                            <div class=\"col-md-12\" style=\"text-align:left;\">\n                                              <div class=\"checkbox margin-top-10\">\n                                                <label class=\"container-checkbox par-blu-txt\">Partial release?\n                                                  <input type=\"checkbox\" [(ngModel)]=\"partialRelease\" formControlName=\"partialRelease\" >\n                                                  <span class=\"checkmark\"></span>\n                                                </label>\n                                              </div>\n                                            </div>\n                                \n                                           \n                                            <div class=\"col-md-6\">\n                                              <div class=\"form-group margin-bottom-10\">\n                                              <label for=\"lg-type\" class=\"col-form-label\">Release amount<em\n                                                style=\"font-style: normal;\"\n                                                class=\"text-danger-black\"></em></label>\n                                              <input class=\"form-control col-md-9 profile-txt1\" type=\"text\"\n                                                value=\"\" id=\"\" readonly formControlName=\"releaseAmount\">\n                                              </div>\n                                             </div>\n\n\n\n                                          </div>\n                                        </div>\n                                      </div>\n                                      </div>\n                                    </div>\n                                  </div>\n\n\n\n\n\n\n\n                                </div>\n\n\n                                <!--Amend/confiscate/release Information Details End-->\n\n\n\n                                <!-- Internal Amend/confiscate/release Details Start-->\n                                <div class=\"col-sm-12\" *ngIf=\"internalPendingType =='amendment_review' || internalPendingType =='amendment_approve'\">\n                                  <div class=\"kt-portlet\">\n                                    <div class=\"kt-portlet__head\">\n                                      <div class=\"kt-portlet__head-label\">\n                                        <h3 class=\"kt-portlet__head-title\">\n                                          Amend Information\n                                        </h3>\n                                      </div>\n                                    </div>\n                                    \n                                    <div class=\"kt-form kt-form--label-right\">\n                                      <div class=\"kt-portlet__body\">\n                                      <div class=\"container\">\n                                        <div class=\"row\">\n                                        <div class=\"col-md-6\">\n                                          <div class=\"form-group margin-bottom-10\">\n                                          <label for=\"lg-type\" class=\"col-form-label\">Request ID<em\n                                            style=\"font-style: normal;\"\n                                            class=\"text-danger-black\"></em></label>\n                                          <input class=\"form-control col-md-9 profile-txt1\" type=\"text\"\n                                            value=\"\" id=\"\" readonly formControlName=\"Amendmend_request_id\">\n                                          </div>\n                                        </div>\n                                        <div class=\"col-md-6\">\n                                          <div class=\"form-group margin-bottom-10\">\n                                          <label for=\"lg-type\" class=\"col-form-label\">Amount<em\n                                            style=\"font-style: normal;\"\n                                            class=\"text-danger-black\"></em></label>\n                                          <input class=\"form-control col-md-9 profile-txt1\" type=\"text\"\n                                            value=\"\" id=\"\" readonly formControlName=\"amendAmount\">\n                                          </div>\n                                        </div>\n                                        <div class=\"col-md-6\">\n                                          <div class=\"form-group margin-bottom-10\">\n                                          <label for=\"lg-type\" class=\"col-form-label\">LG end date<em\n                                            style=\"font-style: normal;\"\n                                            class=\"text-danger-black\"></em></label>\n                                          <input class=\"form-control col-md-9 profile-txt1\" type=\"text\"\n                                            value=\"\" id=\"\" readonly formControlName=\"amendLGenddate\">\n                                          </div>\n                                        </div>\n\n                                        <div class=\"col-md-12\" *ngIf=\"!isEditTnC\">\n                                          <div class=\"form-group margin-bottom-10\">\n                                            <label for=\"terms-and-condition\" class=\"col-form-label\">Write-up</label>\n                                            <div  class=\"terms-wrap text-wrap-bordered\">\n                                                <textarea rows=\"10\" cols=\"100\" formControlName=\"amendWriteup\" readonly [ngStyle]=\"styleObject()\">\n                                                </textarea>\n                                            </div>\n                                            \n                                          </div>\n                                        </div>\n\n                                        </div>\n                                      </div>\n                                    </div>\n                                    </div>\n                                    \n                                  </div>\n                                </div>\n\n\n\n\n\n                                <div class=\"col-sm-12\" *ngIf=\"internalPendingType=='confiscate_review' || internalPendingType=='confiscate_approve'\">\n                                  <div class=\"kt-portlet\">\n                                    <div class=\"kt-portlet__head\">\n                                      <div class=\"kt-portlet__head-label\">\n                                        <h3 class=\"kt-portlet__head-title\">\n                                          Confiscate Information\n                                        </h3>\n                                      </div>\n                                    </div>\n                                    \n                                    <div class=\"kt-form kt-form--label-right\">\n                                      <div class=\"kt-portlet__body\">\n                                      <div class=\"container\">\n                                        <div class=\"row\">\n\n                                        <div class=\"col-md-6\">\n                                          <div class=\"form-group margin-bottom-10\">\n                                          <label for=\"lg-type\" class=\"col-form-label\">Request ID<em\n                                            style=\"font-style: normal;\"\n                                            class=\"text-danger-black\"></em></label>\n                                          <input class=\"form-control col-md-9 profile-txt1\" type=\"text\"\n                                            value=\"\" id=\"\" readonly formControlName=\"confiscate_request_id\">\n                                          </div>\n                                        </div>\n                                        \n                                        <div class=\"col-md-6\">\n                                          <div class=\"form-group margin-bottom-10\">\n                                          <label for=\"lg-type\" class=\"col-form-label\">Bank Name<em\n                                            style=\"font-style: normal;\"\n                                            class=\"text-danger-black\"></em></label>\n                                          <input class=\"form-control col-md-9 profile-txt1\" type=\"text\"\n                                            value=\"\" id=\"\" readonly formControlName=\"confiscatebankName\">\n                                          </div>\n                                         </div>\n\n                                         <div class=\"col-md-6\">\n                                          <div class=\"form-group margin-bottom-10\">\n                                          <label for=\"lg-type\" class=\"col-form-label\">IBAN<em\n                                            style=\"font-style: normal;\"\n                                            class=\"text-danger-black\"></em></label>\n                                          <input class=\"form-control col-md-9 profile-txt1\" type=\"text\"\n                                            value=\"\" id=\"\" readonly formControlName=\"confiscateIBAN\">\n                                          </div>\n                                         </div>\n\n                                        <div class=\"col-md-12\">\n                                          <div class=\"form-group margin-bottom-10\">\n                                            <label for=\"terms-and-condition\" class=\"col-form-label\">Reason</label>\n                                            <div  class=\"terms-wrap text-wrap-bordered\">\n                                                <textarea rows=\"10\" cols=\"100\" formControlName=\"confiscateReason\" readonly [ngStyle]=\"styleObject()\">\n                                                </textarea>\n                                            </div>\n                                            \n                                          </div>\n                                        </div>\n\n                                        <div class=\"col-md-12\" style=\"text-align:left;\">\n                                          <div class=\"checkbox margin-top-10\">\n                                            <label class=\"container-checkbox par-blu-txt\">Partial confiscation?\n                                              <input type=\"checkbox\" [(ngModel)]=\"partialConfiscation\"\n                                                formControlName=\"partialConfiscation\" >\n                                              <span class=\"checkmark\"></span>\n                                            </label>\n                                          </div>\n                                        </div>\n                                       \n\n                                        <div class=\"col-md-6\">\n                                          <div class=\"form-group margin-bottom-10\">\n                                          <label for=\"lg-type\" class=\"col-form-label\">Confiscation amount<em\n                                            style=\"font-style: normal;\"\n                                            class=\"text-danger-black\"></em></label>\n                                          <input class=\"form-control col-md-9 profile-txt1\" type=\"text\"\n                                            value=\"\" id=\"\" readonly formControlName=\"confiscateAmount\">\n                                          </div>\n                                         </div>\n\n\n\n                                        </div>\n                                      </div>\n                                    </div>\n                                    </div>\n                                    \n                                  </div>\n                                </div>\n\n\n\n\n\n\n                                <div class=\"col-sm-12\" *ngIf=\"internalPendingType=='release_review' || internalPendingType=='release_approve'\">\n                                  <div class=\"kt-portlet\">\n                                    <div class=\"kt-portlet__head\">\n                                      <div class=\"kt-portlet__head-label\">\n                                        <h3 class=\"kt-portlet__head-title\">\n                                          Release Information\n                                        </h3>\n                                      </div>\n                                    </div>\n                                    \n                                    <div class=\"kt-form kt-form--label-right\">\n                                      <div class=\"kt-portlet__body\">\n                                      <div class=\"container\">\n                                        <div class=\"row\">\n                                          <div class=\"col-md-6\">\n                                            <div class=\"form-group margin-bottom-10\">\n                                            <label for=\"lg-type\" class=\"col-form-label\">Request ID<em\n                                              style=\"font-style: normal;\"\n                                              class=\"text-danger-black\"></em></label>\n                                            <input class=\"form-control col-md-9 profile-txt1\" type=\"text\"\n                                              value=\"\" id=\"\" readonly formControlName=\"release_request_id\">\n                                            </div>\n                                          </div>\n                                          <div class=\"col-md-12\">\n                                            <div class=\"form-group margin-bottom-10\">\n                                              <label for=\"terms-and-condition\" class=\"col-form-label\">Reason</label>\n                                              <div  class=\"terms-wrap text-wrap-bordered\">\n                                                  <textarea rows=\"10\" cols=\"100\" formControlName=\"releaseReason\" readonly [ngStyle]=\"styleObject()\">\n                                                  </textarea>\n                                              </div>\n                                            </div>\n                                          </div>\n\n                                          <div class=\"col-md-12\" style=\"text-align:left;\">\n                                            <div class=\"checkbox margin-top-10\">\n                                              <label class=\"container-checkbox par-blu-txt\">Partial release?\n                                                <input type=\"checkbox\" [(ngModel)]=\"partialRelease\" formControlName=\"partialRelease\" >\n                                                <span class=\"checkmark\"></span>\n                                              </label>\n                                            </div>\n                                          </div>\n                              \n                                         \n                                          <div class=\"col-md-6\">\n                                            <div class=\"form-group margin-bottom-10\">\n                                            <label for=\"lg-type\" class=\"col-form-label\">Release amount<em\n                                              style=\"font-style: normal;\"\n                                              class=\"text-danger-black\"></em></label>\n                                            <input class=\"form-control col-md-9 profile-txt1\" type=\"text\"\n                                              value=\"\" id=\"\" readonly formControlName=\"releaseAmount\">\n                                            </div>\n                                           </div>\n\n\n\n                                        </div>\n                                      </div>\n                                    </div>\n                                    </div>\n                                  </div>\n                                </div>\n                                <!-- Internal Amend/confiscate/release Details End-->\n\n\n\n\n\n\n                                    <div class=\"row\">\n                                      <div class=\"col-sm-12\">\n                                      <div *ngIf=\"onBoardResolution == 'Y'\">\n                                        <div class=\"kt-portlet__foot\" *ngIf=\"isEnableButtons\">\n                                          <div class=\"kt-form__actions\">\n                                            <div class=\"row\">\n                                              <div class=\"col-12\">\n                                                <div class=\"btn-wrap\">\n                                                  <button type=\"button\" class=\"btn btn-red btn-margin-2\"\n                                                    (click)=\"rejectLGIssuanceApprovalData()\">{{'HOME.Reject' | translate}}</button>\n                                                  <button type=\"button\" class=\"btn btn-success btn-margin-2\"\n                                                    (click)=\"acceptLGIssuanceApprovalData()\">{{'HOME.Accept' | translate}}</button>\n                                                </div>\n\n                                              </div>\n                                            </div>\n                                          </div>\n                                        </div>\n                                        <div class=\"kt-portlet__foot\" *ngIf=\"isEnableGovButtons\">\n                                          <div class=\"kt-form__actions\">\n                                            <div class=\"row\">\n                                              <div class=\"col-12\">\n                                                <div class=\"btn-wrap\">\n                                                  <button type=\"button\" class=\"btn btn-gry btn-margin-2\"\n                                                    (click)=\"resetData()\">{{'HOME.CANCEL' | translate}}</button>\n                                                  <button type=\"button\" class=\"btn btn-success btn-margin-2\"\n                                                    [disabled]=\"isDisablesendBackButton\"\n                                                    (click)=\"sendBackLGIssuanceApprovalData()\">{{'HOME.Send_back' | translate}}</button>\n                                                  <button type=\"button\" class=\"btn btn-gry btn-margin-2\"\n                                                    (click)=\"editLGIssuanceApprovalData()\">{{'HOME.Edit' | translate}}</button>\n                                                  <button type=\"button\" class=\"btn btn-success btn-margin-2\"\n                                                    [disabled]=\"isDisabledApprovedButton\"\n                                                    (click)=\"submitLGIssuanceApprovalData()\">{{'HOME.Approve' | translate}}</button>\n                                                </div>\n\n                                              </div>\n                                            </div>\n                                          </div>\n                                        </div>\n                                        <div class=\"kt-portlet__foot\" *ngIf=\"nsAcceptButton\">\n                                          <div class=\"kt-form__actions\">\n                                            <div class=\"row\">\n                                              <div class=\"col-12\">\n                                                <div class=\"btn-wrap\">\n                                                  <button type=\"button\" class=\"btn btn-gry btn-margin-2\"\n                                                    (click)=\"resetData()\">{{'HOME.CANCEL' | translate}}</button>\n                                                  <!-- <button type=\"button\" class=\"btn btn-success btn-margin-2\"\n                                                    [disabled]=\"isDisablesendBackButton\"\n                                                    (click)=\"sendBackLGIssuanceApprovalData()\">Send Back</button>\n                                                  <button type=\"button\" class=\"btn btn-gry btn-margin-2\"\n                                                    (click)=\"editLGIssuanceApprovalData()\">Edit</button> -->\n                                                  <button type=\"button\" class=\"btn btn-success btn-margin-2\"\n                                                    [disabled]=\"isDisabledApprovedButton\"\n                                                    (click)=\"submitLGIssuanceApprovalData()\">{{'HOME.Approve' | translate}}</button>\n                                                </div>\n\n                                              </div>\n                                            </div>\n                                          </div>\n                                        </div>\n\n                                        <div *ngIf=\"isACRpending\">\n                                        <div class=\"kt-portlet__foot\" *ngIf=\"isAmendApprove\">\n                                          <div class=\"kt-form__actions\">\n                                            <div class=\"row\">\n                                              <div class=\"col-12\">\n                                                <div class=\"btn-wrap\">\n                                                  <button type=\"button\" class=\"btn btn-gry btn-margin-2\"\n                                                    (click)=\"cancelACRApproval()\">{{'HOME.CANCEL' | translate}}</button>\n                                                  <button type=\"button\" class=\"btn btn-red btn-margin-2\"\n                                                    (click)=\"rejectAmendApprovalData()\">{{'HOME.Reject' | translate}}</button>\n                                                  <button type=\"button\" class=\"btn btn-success btn-margin-2\"\n                                                    (click)=\"acceptAmendApprovalData()\">{{'HOME.Approve' | translate}}</button>\n                                                </div>\n                                              </div>\n                                            </div>\n                                          </div>\n                                        </div>\n                                        </div>\n                                      </div>\n                                    <!-- Internal pending button -->\n                                        <div *ngIf=\"isInternalPending\">\n\n                                          <div class=\"kt-portlet__foot\" *ngIf=\"internalPendingType=='issuance_review' || internalPendingType=='amendment_review' || internalPendingType=='confiscate_review' || internalPendingType=='release_review'\">\n                                            <div class=\"kt-form__actions\">\n                                              <div class=\"row\">\n                                                <div class=\"col-12\">\n                                                  <div class=\"btn-wrap\">\n                                                    <button type=\"button\" class=\"btn btn-gry btn-margin-2\"\n                                                      (click)=\"cancelInternalApproval()\">{{'HOME.CANCEL' | translate}}</button>\n                                                    <button type=\"button\" class=\"btn btn-red btn-margin-2\"\n                                                      (click)=\"rejectInternalApproval()\">{{'HOME.Reject' | translate}}</button>\n                                                    <button type=\"button\" class=\"btn btn-success btn-margin-2\"\n                                                      (click)=\"acceptInternalApproval()\">Review</button>\n                                                  </div>\n                                                </div>\n                                              </div>\n                                            </div>\n                                          </div>\n\n\n                                          <div class=\"kt-portlet__foot\" *ngIf=\"internalPendingType=='issuance_approve' || internalPendingType=='amendment_approve' || internalPendingType=='confiscate_approve' || internalPendingType=='release_approve'\">\n                                            <div class=\"kt-form__actions\">\n                                              <div class=\"row\">\n                                                <div class=\"col-12\">\n                                                  <div class=\"btn-wrap\">\n                                                    <button type=\"button\" class=\"btn btn-gry btn-margin-2\"\n                                                      (click)=\"cancelInternalApproval()\">{{'HOME.CANCEL' | translate}}</button>\n                                                    <button type=\"button\" class=\"btn btn-red btn-margin-2\"\n                                                      (click)=\"rejectInternalApproval()\">{{'HOME.Reject' | translate}}</button>\n                                                    <button type=\"button\" class=\"btn btn-success btn-margin-2\"\n                                                      (click)=\"acceptInternalApproval()\">{{'HOME.Approve' | translate}}</button>\n                                                  </div>\n                                                </div>\n                                              </div>\n                                            </div>\n                                          </div>\n\n                                        </div>\n                                    <!-- Internal pending button -->\n                                      </div>\n                                    </div>\n\n                                  </form>\n                                </div>\n                              </div>\n                            </div>\n\n                          </div>\n                        </div>\n                      </div>\n                    </section>\n                  </div>\n\n                </div>\n              </div>\n              <!--New Design Here-->\n            </div>\n          </div>\n          <!--===========================\n                    End Content\n                    ============================-->\n\n  <!--Modal-->\n  <div class=\"modal\" id=\"myModal\">\n    <div class=\"modal-dialog\">\n      <div class=\"modal-content\">\n        <!-- Modal body -->\n        <div class=\"modal-body text-center\">\n          <p class=\"margin-bottom-null\">LG successfully approved!</p>\n        </div>\n\n        <!-- Modal footer -->\n        <div class=\"modal-footer\">\n          <button type=\"button\" class=\"btn btn-success\" data-dismiss=\"modal\">Close</button>\n        </div>\n\n      </div>\n    </div>\n  </div>\n\n  <!--begin::Global Theme Bundle(used by all pages) -->\n  <script src=\"../../assets/js/plugins.bundle.js\" type=\"text/javascript\"></script>\n  <!--Content Editable-->\n  <script type=\"text/javascript\">\n    window.onload = function () {\n      var btn = document.getElementById('editBtn');\n      var btn1 = document.getElementById('editBtn1');\n      var div = document.getElementById('editable');\n      btn.onclick = function (e) {\n        div.contentEditable = true;\n        div.focus();\n        div.style.backgroundColor = '#ffffff';\n        div.style.border = '1px dotted black';\n        btn1.style.display = \"block\";\n      }\n      btn1.onclick = function (e) {\n        div.contentEditable = false;\n        div.style.backgroundColor = '#f2f2f2';\n        div.style.border = '';\n        btn1.style.display = \"none\";\n      }\n\n    }\n  </script>\n  <!--Content Editable-->\n\n\n  <!-- end::Body -->\n\n\n");

/***/ }),

/***/ "./node_modules/raw-loader/dist/cjs.js!./src/app/request-lg-issuance-gov-approval/request-lg-issuance-gov-approval.component.html":
/*!****************************************************************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/request-lg-issuance-gov-approval/request-lg-issuance-gov-approval.component.html ***!
  \****************************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("\n \n          <!--===========================\n                    Start Content\n                    ============================-->\n                    <div class=\"pt-0 kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor kt-margin-top-50\">\n                      <div class=\"kt-container\">\n              <!--New Design Here-->\n              <div class=\"row\">\n                <app-sidemenu></app-sidemenu>\n                <!--<div class=\"col-12 col-sm-3 col-md-3 col-lg-3 left-panel-menu-wrap w-20 fixed-wrap\">\n                  \n                  <ul class=\"vertical-menu\">\n                    <li><a routerLink=\"/dashboard\"><span class=\"db-icon\"></span>{{'HOME.Dashboard' | translate}}</a></li>\n                    <li><a routerLink=\"/requestLgIssuance\" class=\"active\"><span class=\"lg-icon\"></span>{{'HOME.LG_issuance' | translate}}</a></li>\n\n                  </ul>\n                </div>-->\n                <div class=\"col-12 col-sm-9 col-md-9 col-lg-9 padding-null scroll-wrap\">\n                  <div class=\"white-area\"></div>\n                  <div class=\"grey-bg\">\n                    <section class=\"design-process-section\" id=\"process-tab\">\n                      <div>\n                        <div>\n                          <div>\n                            <div class=\"text-left1\">\n                              <h3 class=\"kt-login__title pt-3 m-0 mb-30\">{{'HOME.ISSUE_TITLE' | translate}}</h3>\n                            </div>\n                            <!-- Step Wizard -->\n                            <div class=\"stepwizard-wrap\">\n                              <div class=\"stepwizard\">\n                                <div class=\"stepwizard-row setup-panel\">\n                                  <div class=\"stepwizard-step col-xs-3\">\n                                    <div class=\"stepwizard-circle1\">\n                                      <!-- <a routerLink=\"/requestLgIssuance\"> -->\n                                        <div class=\"stepwizard-circle\">\n                                          <div class=\"outer-circle\">\n                                            <div class=\"check-icon1\"> &#10003;</div>\n                                          </div>\n                                        </div>\n                                      <!-- </a> -->\n                                    </div>\n                                    <p><span>{{'HOME.ISSUE_STEP_1' | translate}}</span></p>\n                                  </div>\n                                  <div class=\"stepwizard-step stepwizard-circle-approval-wrap col-xs-3\">\n                                    <div class=\"stepwizard-circle2\">\n                                      <a routerLink=\"/requestLgIssuanceApproval\">\n                                        <div class=\"stepwizard-circle stepwizard-circle-approval\">\n                                          <div class=\"outer-circle\">\n                                            <div class=\"inner-circle\"></div>\n                                          </div>\n                                        </div>\n                                      </a>\n                                    </div>\n                                    <p><span>Step 2:Approval</span></p>\n                                  </div>\n                                  <div class=\"stepwizard-step stepwizard-circle-payment-wrap col-xs-3\">\n                                    <!-- <a routerLink=\"/requestLgIssuancePayment\"> -->\n                                      <div class=\"stepwizard-circle stepwizard-circle-payment\">\n                                        <div class=\"outer-circle1\">\n                                          <div class=\"inner-circle1\"></div>\n                                        </div>\n                                      </div>\n                                    <!-- </a> -->\n                                    <p><span>Step 3:Payment</span></p>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                            <!--/Step Wizard-->\n                            <!-- Tab panes -->\n                            <div class=\"tab-content\">\n                              <div role=\"tabpanel\" class=\"tab-pane active\" id=\"discover\">\n                                <div class=\"design-process-content\">\n                                  <form [formGroup]=\"submitLGIssuanceApproval\">\n                                    <div class=\"row\">\n                                      <div class=\"col-sm-12\">\n                                        <div class=\"pop-block\">\n                                          <div class=\"blue-block\"><img src=\"../../assets/images/alert.png\"\n                                              alt=\"alert-icon\" class=\"alert-icon\"></div>\n                                          <p>{{alertMsgforGovLGApproval}}</p>\n                                          <div class=\"clearfix\"></div>\n                                        </div>\n                                      </div>\n                                      <div class=\"col-sm-12\">\n                                        <div class=\"kt-portlet\">\n                                          <div class=\"kt-portlet__head\">\n                                            <div class=\"kt-portlet__head-label\">\n                                              <h3 class=\"kt-portlet__head-title\">\n                                                {{'HOME.LG_DETAILS' | translate}} \n                                              </h3>\n                                            </div>\n                                          </div>\n\n                                          <div class=\"kt-form kt-form--label-right\">\n                                            <div class=\"kt-portlet__body\">\n                                              <div class=\"container\">\n                                                <div class=\"row\">\n                                                  <div class=\"col-md-12\">\n                                                    <div class=\"form-group margin-bottom-10\">\n                                                      <label for=\"lg-type\" class=\"col-form-label\"> {{'HOME.LG_Status' | translate}}  <em\n                                                        style=\"font-style: normal;\"\n                                                        class=\"text-danger-black\">*</em></label>\n                                                      <input class=\"form-control col-md-11 profile-txt1 col-width-88\" type=\"text\"\n                                                        value=\"\" id=\"\" readonly formControlName=\"activeStatus\">\n                                                    </div>\n                                                  </div>\n                                                  <div class=\"col-md-6\">\n                                                    <div class=\"form-group margin-bottom-10\">\n                                                      <label for=\"lg-type\" class=\"col-form-label\">{{'HOME.Request_ID' | translate}}  <em\n                                                        style=\"font-style: normal;\"\n                                                        class=\"text-danger-black\">*</em></label>\n                                                      <input class=\"form-control col-md-9 profile-txt1\" type=\"text\"\n                                                        value=\"\" id=\"\" readonly formControlName=\"requestId\">\n                                                    </div>\n                                                  </div>\n                                                  <div class=\"col-md-6\">\n                                                    <div class=\"form-group margin-bottom-10\">\n                                                      <label for=\"lg-type\" class=\"col-form-label\">{{'HOME.LG_Number' | translate}} <em\n                                                        style=\"font-style: normal;\"\n                                                        class=\"text-danger-black\">*</em></label>\n                                                      <input class=\"form-control col-md-9 profile-txt1\" type=\"text\"\n                                                        value=\"\" id=\"\" readonly formControlName=\"LGNumber\">\n                                                    </div>\n                                                  </div>\n                                                  <div class=\"col-md-6\">\n                                                    <div class=\"form-group margin-bottom-10\">\n                                                      <label for=\"lg-type\" class=\"col-form-label\">{{'HOME.LG_TYPE' | translate}} <em\n                                                        style=\"font-style: normal;\"\n                                                        class=\"text-danger-black\">*</em></label>\n                                                      <input class=\"form-control col-md-9 profile-txt1\" type=\"text\"\n                                                        value=\"\" id=\"\" readonly formControlName=\"LGType\">\n                                                    </div>\n                                                  </div>\n                                                  <div class=\"col-md-6\">\n                                                    <div class=\"form-group margin-bottom-10\">\n                                                      <label for=\"lg-type\" class=\"col-form-label\">{{'HOME.WRITE_UP' | translate}}  <em\n                                                        style=\"font-style: normal;\"\n                                                        class=\"text-danger-black\">*</em></label>\n                                                      <input class=\"form-control col-md-9 profile-txt1\" type=\"text\"\n                                                        value=\"\" id=\"\" readonly formControlName=\"writeUpType\">\n                                                    </div>\n                                                  </div>\n                                                  <div class=\"col-md-6\">\n                                                    <div class=\"form-group margin-bottom-10\">\n                                                      <label for=\"lg-type\" class=\"col-form-label\">{{'HOME.AMOUNT' | translate}}  <em\n                                                        style=\"font-style: normal;\"\n                                                        class=\"text-danger-black\">*</em></label>\n                                                      <input class=\"form-control col-md-9 profile-txt1\" type=\"text\"\n                                                        value=\"\" id=\"\" readonly formControlName=\"Amount\">\n                                                    </div>\n                                                  </div>\n                                                  <div class=\"col-md-6\">\n                                                    <div class=\"form-group margin-bottom-10\">\n                                                      <label for=\"lg-type\" class=\"col-form-label\">{{'HOME.AMOUNT_WORDS' | translate}}<em\n                                                        style=\"font-style: normal;\"\n                                                        class=\"text-danger-black\">*</em></label>\n                                                      <input class=\"form-control col-md-9 profile-txt1\" type=\"text\"\n                                                        value=\"\" id=\"\" readonly formControlName=\"amountInText\">\n                                                    </div>\n                                                  </div>\n\n                                                  <div class=\"col-md-6\">\n                                                    <div class=\"form-group margin-bottom-10\">\n                                                      <label for=\"lg-start-date\" class=\"col-form-label\">{{'HOME.LG_START_DATE' | translate}}\n                                                        <em style=\"font-style: normal;\"\n                                                          class=\"text-danger-black\">*</em></label>\n\n                                                      <!-- <p-calendar [style]=\"{'width':'75%'}\" [inputStyle]=\"{'width':'100%'}\" formControlName=\"LGStartDate\"></p-calendar> -->\n                                                      <input class=\"form-control col-md-9 profile-txt1\" type=\"text\"\n                                                        value=\"\" id=\"\" readonly formControlName=\"LGStartDate\">\n\n                                                    </div>\n                                                  </div>\n\n                                                  <div class=\" col-md-6\">\n                                                    <div class=\" form-group margin-bottom-10\">\n                                                      <label for=\"lg-end-date\" class=\"col-form-label\">{{'HOME.LG_END_DATE' | translate}} <em\n                                                          style=\"font-style: normal;\"\n                                                          class=\"text-danger-black\">*</em></label>\n\n                                                      <!-- <p-calendar [style]=\"{'width':'75%'}\" [inputStyle]=\"{'width':'100%'}\" formControlName=\"LGEndDate\"></p-calendar> -->\n                                                      <input class=\"form-control col-md-9 profile-txt1\" type=\"text\"\n                                                        value=\"\" id=\"\" readonly formControlName=\"LGEndDate\">\n                                                    </div>\n                                                  </div>\n\n                                                  <div class=\"col-md-6\">\n                                                    <div class=\"form-group margin-bottom-10\">\n                                                      <label for=\"amount\" class=\"col-form-label\">{{'HOME.LG_validity_date' | translate}} <em\n                                                        style=\"font-style: normal;\"\n                                                        class=\"text-danger-black\">*</em></label>\n                                                      <input class=\"form-control col-md-9 profile-txt1\" type=\"text\"\n                                                        value=\"\" id=\"\" readonly formControlName=\"LGValidityDate\">\n                                                    </div>\n                                                  </div>\n\n                                                  <div class=\"col-md-6\">\n                                                    <div class=\"form-group margin-bottom-10\">\n                                                      <label for=\"currency\" class=\"col-form-label\">{{'HOME.CURRENCY' | translate}} <em\n                                                        style=\"font-style: normal;\"\n                                                        class=\"text-danger-black\">*</em></label>\n                                                      <input class=\"form-control col-md-9 profile-txt1\" type=\"text\"\n                                                        value=\"\" id=\"\" readonly formControlName=\"currency\">\n                                                    </div>\n                                                  </div>\n\n                                                  <div class=\"col-md-6\" *ngIf=\"LGType === 'Zakat Guarantee Bond'\">\n                                                    <div class=\"form-group margin-bottom-10\">\n                                                      <label for=\"amount\" class=\"col-form-label\">{{'HOME.ZAKAT_START_DATE' | translate}} </label>\n                                                      <input class=\"form-control col-md-9 profile-txt1\" type=\"text\"\n                                                        value=\"\" id=\"\" readonly formControlName=\"zakatStartDate\">\n                                                    </div>\n                                                  </div>\n\n                                                  <div class=\"col-md-6\" *ngIf=\"LGType === 'Zakat Guarantee Bond'\">\n                                                    <div class=\"form-group margin-bottom-10\">\n                                                      <label for=\"amount\" class=\"col-form-label\">{{'HOME.ZAKAT_END_DATE' | translate}} </label>\n                                                      <input class=\"form-control col-md-9 profile-txt1\" type=\"text\"\n                                                        value=\"\" id=\"\" readonly formControlName=\"zakatEndDate\">\n                                                    </div>\n                                                  </div>\n\n                                                  <div class=\"col-md-6\">\n                                                    <div class=\"form-group margin-bottom-10\">\n                                                      <label for=\"amount\" class=\"col-form-label\">{{'HOME.PROJECT_NAME' | translate}} </label>\n                                                      <input class=\"form-control col-md-9 profile-txt1\" type=\"text\"\n                                                        value=\"\" id=\"\" readonly formControlName=\"projectName\">\n                                                    </div>\n                                                  </div>\n\n                                                  <div class=\"col-md-6\">\n                                                    <div class=\"form-group margin-bottom-10\">\n                                                      <label for=\"amount\" class=\"col-form-label\">{{'HOME.PROJECT_NUMBER' | translate}} </label>\n                                                      <input class=\"form-control col-md-9 profile-txt1\" type=\"text\"\n                                                        value=\"\" id=\"\" readonly formControlName=\"projectId\">\n                                                    </div>\n                                                  </div>\n\n                                                  <div class=\"col-md-6\">\n                                                    <div class=\"form-group margin-bottom-10\">\n                                                      <label for=\"amount\" class=\"col-form-label\">{{'HOME.PURPOSE_OF_BOND' | translate}} <em\n                                                        style=\"font-style: normal;\"\n                                                        class=\"text-danger-black\">*</em></label>\n                                                      <input class=\"form-control col-md-9 profile-txt1\" type=\"text\"\n                                                        value=\"\" id=\"\" readonly formControlName=\"purposeOfBond\">\n                                                    </div>\n                                                  </div>\n\n                                                  <div class=\"col-md-6\" *ngIf=\"LGType === 'Custom Guarantee Bond'\">\n                                                    <div class=\"form-group margin-bottom-10\">\n                                                      <label for=\"amount\" class=\"col-form-label\">{{'HOME.BAYAN_NUMBER' | translate}} </label>\n                                                      <input class=\"form-control col-md-9 profile-txt1\" type=\"text\"\n                                                        value=\"\" id=\"\" readonly formControlName=\"byanNo\">\n                                                    </div>\n                                                  </div>\n                                                  <div class=\"col-md-12\" style=\"text-align: left;\">\n                                                    <div class=\"checkbox chk-margin-top\">\n                                                      <label class=\"container-checkbox\"> {{'HOME.Assignment_contract_processed' | translate}}\n                                                        <input type=\"checkbox\" [(ngModel)]=\"checkBox\"\n                                                          formControlName=\"checkBox\" >\n                                                        <span class=\"checkmark\"></span>\n                                                      </label>\n                                                    </div>\n                                                  </div>\n\n                                                  <div class=\"col-md-12\">\n                                                    <div class=\"form-group margin-bottom-10\">\n                                                      <label for=\"terms-and-condition\" class=\"col-form-label\">{{'HOME.TERMS_AND_CONDITIONS' | translate}} <em\n                                                        style=\"font-style: normal;\"\n                                                        class=\"text-danger-black\">*</em></label>\n                                                      <div  class=\"terms-wrap text-wrap-bordered\">\n                                                          <textarea rows=\"10\" cols=\"100\" formControlName=\"TermsAndCondContent\" readonly>\n                                                          </textarea>\n\n\n\n\n                                                      </div>\n                                                    </div>\n                                                  </div>\n\n                                                </div>\n\n                                              </div>\n                                            </div>\n\n                                          </div>\n                                        </div>\n                                        <div class=\"kt-portlet__foot\" *ngIf=\"isEnableButtons\">\n                                            <div class=\"kt-form__actions\">\n                                              <div class=\"row\">\n                                                <div class=\"col-12\">\n                                                  <div class=\"btn-wrap\">\n                                                    <button type=\"button\"\n                                                      class=\"btn btn-gry btn-margin-2\" (click)=\"resetData()\">{{'HOME.Cancel' | translate}}</button>\n                                                      <button type=\"button\"\n                                                      class=\"btn btn-success btn-margin-2\"\n                                                      [disabled]=\"isDisablesendBackButton\" (click)=\"sendBackLGIssuanceApprovalData()\">{{'HOME.Send_back' | translate}}</button>\n                                                    <button type=\"button\" class=\"btn btn-gry btn-margin-2\"\n                                                      (click)=\"editLGIssuanceApprovalData()\">{{'HOME.Edit' | translate}}</button>\n                                                    <button type=\"button\" class=\"btn btn-success btn-margin-2\"\n                                                      [disabled]=\"isDisabledApprovedButton\"\n                                                      (click)=\"submitLGIssuanceApprovalData()\">{{'HOME.Approve' | translate}}</button>\n                                                  </div>\n\n                                                </div>\n                                              </div>\n                                            </div>\n                                          </div>\n                                          <!-- <div class=\"kt-portlet__foot\" *ngIf=\"isEnableButtons\">\n                                            <div class=\"kt-form__actions\">\n                                              <div class=\"row\">\n                                                <div class=\"col-12\">\n                                                  <div class=\"btn-wrap\">\n                                                    <button type=\"button\" class=\"btn btn-red btn-margin-2\"\n                                                      (click)=\"rejectLGIssuanceApprovalData()\">Reject</button>\n                                                    <button type=\"button\" class=\"btn btn-success btn-margin-2\"\n                                                      (click)=\"acceptLGIssuanceApprovalData()\">Accept</button>\n                                                  </div>\n\n                                                </div>\n                                              </div>\n                                            </div>\n                                          </div> -->\n                                      </div>\n                                      <!--/Lg Details-->\n\n\n                                    </div>\n\n                                  </form>\n                                </div>\n                              </div>\n                            </div>\n\n                          </div>\n                        </div>\n                      </div>\n                    </section>\n                  </div>\n                 \n                </div>\n              </div>\n              <!--New Design Here-->\n            </div>\n          </div>\n          <!--===========================\n                    End Content\n                    ============================-->\n       \n  <!--Modal-->\n  <div class=\"modal\" id=\"myModal\">\n    <div class=\"modal-dialog\">\n      <div class=\"modal-content\">\n        <!-- Modal body -->\n        <div class=\"modal-body text-center\">\n          <p class=\"margin-bottom-null\">LG successfully approved!</p>\n        </div>\n\n        <!-- Modal footer -->\n        <div class=\"modal-footer\">\n          <button type=\"button\" class=\"btn btn-success\" data-dismiss=\"modal\">Close</button>\n        </div>\n\n      </div>\n    </div>\n  </div>\n\n  <!--begin::Global Theme Bundle(used by all pages) -->\n  <script src=\"../../assets/js/plugins.bundle.js\" type=\"text/javascript\"></script>\n  <!--Content Editable-->\n  <script type=\"text/javascript\">\n    window.onload = function () {\n      var btn = document.getElementById('editBtn');\n      var btn1 = document.getElementById('editBtn1');\n      var div = document.getElementById('editable');\n      btn.onclick = function (e) {\n        div.contentEditable = true;\n        div.focus();\n        div.style.backgroundColor = '#ffffff';\n        div.style.border = '1px dotted black';\n        btn1.style.display = \"block\";\n      }\n      btn1.onclick = function (e) {\n        div.contentEditable = false;\n        div.style.backgroundColor = '#f2f2f2';\n        div.style.border = '';\n        btn1.style.display = \"none\";\n      }\n\n    }\n  </script>\n  <!--Content Editable-->\n\n\n  <!-- end::Body -->\n\n");

/***/ }),

/***/ "./node_modules/raw-loader/dist/cjs.js!./src/app/request-lg-issuance-payment/request-lg-issuance-payment.component.html":
/*!******************************************************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/request-lg-issuance-payment/request-lg-issuance-payment.component.html ***!
  \******************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<!--===========================\n                    Start Content\n                    ============================-->\n                    <div class=\"pt-0 kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor kt-margin-top-50\">\n                      <div class=\"kt-container\">\n                        <!--New Design Here-->\n                        <div class=\"row\">\n                          <app-sidemenu></app-sidemenu>\n                         <!-- <div class=\"col-12 col-sm-3 col-md-3 col-lg-3 left-panel-menu-wrap w-20 fixed-wrap\">\n                    \n                            <ul class=\"vertical-menu\">\n                              <li><a routerLink=\"/dashboard\"><span class=\"db-icon\"></span>{{'HOME.Dashboard' | translate}}</a></li>\n                              <li><a routerLink=\"/requestLgIssuance\" class=\"active\"><span class=\"lg-icon\"></span>{{'HOME.LG_issuance' | translate}}</a></li>\n                              <li><a routerLink=\"/privatependingtasks\"><span class=\"lg-icon\"></span>{{'HOME.Pending_Tasks' | translate}}</a></li>\n                              \n                            </ul>\n                          </div>-->\n                          <div class=\"col-12 col-sm-9 col-md-9 col-lg-9 padding-null scroll-wrap\">\n                            <div class=\"white-area\"></div>\n                            <div class=\"grey-bg\">\n                              <section class=\"design-process-section\" id=\"process-tab\">\n                                <div>\n                                  <div>\n                                    <div>\n                                      <div class=\"text-left1\">\n                                        <h3 class=\"kt-login__title pt-3 m-0 mb-30\">{{'HOME.ISSUE_TITLE' | translate}}</h3>\n                                      </div>\n                                      <!-- Step Wizard -->\n                                      <!-- <div class=\"stepwizard-wrap\">\n                                                  <div class=\"stepwizard\">\n                                                    <div class=\"stepwizard-row setup-panel\">\n                                                      <div class=\"stepwizard-step col-xs-3\">\n                                                        <div class=\"stepwizard-circle1\">\n                                                          <a routerLink=\"/requestLgIssuance\">\n                                                            <div class=\"stepwizard-circle\">\n                                                              <div class=\"outer-circle\">\n                                                                <div class=\"check-icon1\"> &#10003;</div>\n                                                              </div>\n                                                            </div>\n                                                          </a>\n                                                        </div>\n                                                        <p><span>{{'HOME.ISSUE_TITLE' | translate}}</span></p>\n                                                      </div>\n                                                      <div class=\"stepwizard-step stepwizard-circle-approval-wrap col-xs-3\">\n                                                        <div class=\"stepwizard-circle2\">\n                                                          <a routerLink=\"/requestLgIssuanceApproval\">\n                                                            <div class=\"stepwizard-circle stepwizard-circle-approval\">\n                                                              <div class=\"outer-circle\">\n                                                                <div class=\"check-icon1\"> &#10003;</div>\n                                                              </div>\n                                                            </div>\n                                                          </a>\n                                                        </div>\n                                                        <p><span>{{'HOME.STEP2_PAYMENT' | translate}}</span></p>\n                                                      </div>\n                                                      <div class=\"stepwizard-step stepwizard-circle-payment-wrap col-xs-3\">\n                                                        <div class=\"stepwizard-circle3\">\n                                                          <a routerLink=\"/requestLgIssuancePayment\">\n                                                            <div class=\"stepwizard-circle stepwizard-circle-payment\">\n                                                              <div class=\"outer-circle\">\n                                                                <div class=\"inner-circle\"></div>\n                                                              </div>\n                                                            </div>\n                                                          </a>\n                                                        </div>\n                                                        <p><span>{{'HOME.STEP3_APPPROVAL' | translate}}</span></p>\n                                                      </div>\n                                                    </div>\n                                                  </div>\n                                                </div> -->\n                                      <div class=\"stepwizard-wrap\">\n                                        <div class=\"stepwizard\">\n                                          <div class=\"stepwizard-row setup-panel\">\n                                            <div class=\"stepwizard-step col-xs-3\">\n                                              <div class=\"stepwizard-circle1\">\n                                                <a routerLink=\"/requestLgIssuance\">\n                                                  <div class=\"stepwizard-circle\">\n                                                    <div class=\"outer-circle\">\n                                                      <div class=\"check-icon1\"> &#10003;</div>\n                                                    </div>\n                                                  </div>\n                                                </a>\n                                              </div>\n                                              <p><span>{{'HOME.ISSUE_STEP_1' | translate}}</span></p>\n                                            </div>\n                                            <div class=\"stepwizard-step stepwizard-circle-approval-wrap col-xs-3\">\n                                              <div class=\"stepwizard-circle2\">\n                                                <a routerLink=\"/requestLgIssuanceApproval\">\n                                                  <div class=\"stepwizard-circle stepwizard-circle-approval\">\n                                                    <div class=\"outer-circle\">\n                                                      <div class=\"inner-circle\"></div>\n                                                    </div>\n                                                  </div>\n                                                </a>\n                                              </div>\n                                              <p><span>{{'HOME.STEP2_PAYMENT' | translate}}</span></p>\n                                            </div>\n                                            <div class=\"stepwizard-step stepwizard-circle-payment-wrap col-xs-3\">\n                                              <a routerLink=\"/requestLgIssuancePayment\">\n                                                <div class=\"stepwizard-circle stepwizard-circle-payment\">\n                                                  <div class=\"outer-circle1\">\n                                                    <div class=\"inner-circle1\"></div>\n                                                  </div>\n                                                </div>\n                                              </a>\n                                              <p><span>{{'HOME.STEP3_APPPROVAL' | translate}}</span></p>\n                                            </div>\n                                          </div>\n                                        </div>\n                                      </div>\n                    \n                    \n                                      <!--/Step Wizard-->\n                                      <!-- Tab panes -->\n                                      <div class=\"tab-content\">\n                                        <div role=\"tabpanel\" class=\"tab-pane active\" id=\"discover\">\n                                          <div class=\"design-process-content\">\n                                            <form [formGroup]=\"submitLGPayment\">\n                                              <div class=\"row\">\n                                                <div class=\"col-sm-12\">\n                                                  <div class=\"pop-block\">\n                                                    <div class=\"blue-block\"><img src=\"../../assets/images/alert.png\" alt=\"alert-icon\"\n                                                        class=\"alert-icon\"></div>\n                                                    <p>{{'HOME.Please_make_payment' | translate}}</p>\n                                                    <div class=\"clearfix\"></div>\n                                                  </div>\n                                                </div>\n                                                <div class=\"col-sm-12\">\n                                                  <div class=\"kt-portlet\">\n                                                    <div class=\"kt-portlet__head\">\n                                                      <div class=\"kt-portlet__head-label\">\n                                                        <h3 class=\"kt-portlet__head-title\">\n                                                          {{'HOME.Payment' | translate}}\n                                                        </h3>\n                                                      </div>\n                                                    </div>\n                    \n                                                    <div class=\"kt-form kt-form--label-right\">\n                                                      <div class=\"kt-portlet__body\">\n                                                        <div class=\"container\">\n                                                          <div class=\"row\">\n                                                            <div class=\"col-md-12 text-left\">\n                                                              <p> {{'HOME.below_fees_need' | translate}}\n                                                              </p>\n                                                              <p class=\"big-blue-text\"><u>99SAR</u></p>\n                                                            </div>\n                    \n                                                            <div class=\"col-md-6\">\n                                                              <div class=\"form-group margin-bottom-10\">\n                                                                <label for=\"select-bank\"\n                                                                  class=\"col-form-label\">{{'HOME.CREDIT_CARD' | translate}}</label>\n                                                                <select class=\"form-control col-md-9\">\n                                                                  <option>************ 8259 </option>\n                                                                </select>\n                                                              </div>\n                                                            </div>\n                    \n                    \n                    \n                    \n                                                            <div class=\"col-md-12 margin-top-20 text-left\">\n                                                              <div class=\"checkbox\">\n                                                                <label class=\"container-checkbox\">\n                                                                  {{'HOME.TERMS_AND_CONDITIONS' | translate}}\n                                                                  <input type=\"checkbox\" [(ngModel)]=\"tncPaymentCheckbox\"\n                                                                    formControlName=\"TermsAndCondPayment\"\n                                                                    (change)=\"toggleVisibility(tncPaymentCheckbox)\" required>\n                                                                  <span class=\"checkmark\"></span>\n                                                                </label>\n                                                              </div>\n                                                            </div>\n                                                          </div>\n                                                        </div>\n                    \n                                                      </div>\n                                                    </div>\n                                                  </div>\n                                                  <!--/Lg Details-->\n                                                  <div class=\"kt-portlet__foot\">\n                                                    <div class=\"kt-form__actions\">\n                                                      <div class=\"row\">\n                                                        <div class=\"col-12\">\n                                                          <div class=\"pop-block red-block-wrap\" *ngIf=\"isOpenValidationAlert\">\n                                                            <div class=\"red-block\"><img src=\"../../assets/images/alert.png\" alt=\"alert-icon\"\n                                                                class=\"alert-icon\"></div>\n                                                            <p> <b>Error Message</b> Validation failed</p>\n                                                            <button class=\"dlete-btn-wrap\"><img src=\"../../assets/images/delete-button.png\"\n                                                                alt=\"image\" class=\"delete-btn\" (click)=\"closeAlert()\"></button>\n                                                            <div class=\"clearfix\"></div>\n                                                          </div>\n                                                          <div class=\"btn-wrap\">\n                                                            <button type=\"reset\"\n                                                              class=\"btn btn-gry btn-margin-2\">{{'HOME.CANCEL' | translate}}</button>\n                                                            <!-- <button class=\"btn btn-green pad-10-btn btn-margin-2\" type=\"button\" (click)=\"takeToPrevious()\">{{'HOME.Previous' | translate}}</button> -->\n                    \n                                                            <!--[disabled]=\"isDesableSendButton\"-->\n                    \n                                                            <button type=\"button\" class=\"btn btn-success btn-margin-2\"\n                                                              (click)=\"submitLGIssuancePaymentData()\">{{'HOME.SEND' | translate}}</button>\n                                                          </div>\n                    \n                                                        </div>\n                                                      </div>\n                                                    </div>\n                                                  </div>\n                    \n                                                </div>\n                                              </div>\n                                            </form>\n                                          </div>\n                                        </div>\n                                      </div>\n                    \n                                    </div>\n                                  </div>\n                                </div>\n                              </section>\n                            </div>\n                    \n                          </div>\n                        </div>\n                        <!--New Design Here-->\n                      </div>\n                    </div>\n                    <!--===========================\n                                        End Content\n                                        ============================-->\n                    \n                    <!--Modal-->\n                    <div class=\"modal\" id=\"myModal\">\n                      <div class=\"modal-dialog\">\n                        <div class=\"modal-content\">\n                          <!-- Modal body -->\n                          <div class=\"modal-body text-center\">\n                            <p class=\"margin-bottom-null\">Payment successful!</p>\n                          </div>\n                    \n                          <!-- Modal footer -->\n                          <div class=\"modal-footer\">\n                            <button type=\"button\" class=\"btn btn-success\" data-dismiss=\"modal\">Close</button>\n                          </div>\n                    \n                        </div>\n                      </div>\n                    </div>\n                    <!-- begin::Scrolltop -->\n                    <!-- end::Scrolltop -->\n                    <!--begin::Global Theme Bundle(used by all pages) -->\n                    <script src=\"../../assets/js/plugins.bundle.js\" type=\"text/javascript\"></script>\n                    <!-- end::Body -->");

/***/ }),

/***/ "./node_modules/raw-loader/dist/cjs.js!./src/app/request-lg-issuance/request-lg-issuance.component.html":
/*!**************************************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/request-lg-issuance/request-lg-issuance.component.html ***!
  \**************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<!--===========================\n                Start Content\n                ============================-->\n<div class=\"pt-0 kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor kt-margin-top-50\">\n  <div class=\"kt-container\">\n    <!--New Design Here-->\n    <div class=\"row\">\n      <app-sidemenu></app-sidemenu>\n      <!--<div class=\"col-12 col-sm-3 col-md-3 col-lg-3 left-panel-menu-wrap w-20 fixed-wrap\">\n\n        <ul class=\"vertical-menu\">\n          <li><a routerLink=\"/dashboard\"><span class=\"db-icon\"></span>{{'HOME.Dashboard' | translate}}</a></li>\n          <li *ngIf=\"roleId == 1\"><a routerLink=\"/privateLgManagement\"><span\n                class=\"lg-icon\"></span>{{'HOME.LG_Management' | translate}}</a>\n          <li *ngIf=\"roleId == 1\"><a routerLink=\"/requestLgIssuance\" class=\"active\"><span\n                class=\"lg-icon\"></span>{{'HOME.LG_issuance' | translate}}</a></li>\n          <li *ngIf=\"roleId == 3\"><a routerLink=\"/pendingtasks\"><span\n                class=\"lg-icon\"></span>{{'HOME.Pending_Tasks' | translate}}</a></li>\n          <li *ngIf=\"roleId == 1\"><a routerLink=\"/privatependingtasks\"><span\n                class=\"lg-icon\"></span>{{'HOME.Pending_Tasks' | translate}}</a></li>\n        </ul>\n      </div>-->\n      <div class=\"col-12 col-sm-9 col-md-9 col-lg-9 padding-null scroll-wrap\">\n\n        <div class=\"grey-bg\">\n          <section class=\"design-process-section\" id=\"process-tab\">\n            <div>\n              <div>\n                <div>\n                  <div class=\"text-left1\">\n                    <h3 class=\"kt-login__title pt-3 m-0 mb-30\">{{'HOME.ISSUE_TITLE' | translate}}</h3>\n                  </div>\n                  <!-- Step Wizard -->\n                  <div class=\"stepwizard-wrap\">\n                    <div class=\"stepwizard\">\n                      <div class=\"stepwizard-row setup-panel\">\n                        <div class=\"stepwizard-step col-xs-3\">\n                          <div class=\"stepwizard-circle1\">\n                            <a routerLink=\"/requestLgIssuance\">\n                              <div class=\"stepwizard-circle\">\n                                <div class=\"outer-circle\">\n                                  <div class=\"inner-circle\"></div>\n                                </div>\n                              </div>\n                            </a>\n                          </div>\n                          <p><span>{{'HOME.ISSUE_STEP_1' | translate}}</span></p>\n                        </div>\n                        <div class=\"stepwizard-step stepwizard-circle-approval-wrap col-xs-3\">\n                          <a routerLink=\"/requestLgIssuancePayment\">\n                            <div class=\"stepwizard-circle stepwizard-circle-approval\">\n                              <div class=\"outer-circle1\">\n                                <div class=\"inner-circle1\"></div>\n                              </div>\n                            </div>\n                          </a>\n                          <p><span>{{'HOME.STEP2_PAYMENT' | translate}}</span></p>\n                        </div>\n                        <div class=\"stepwizard-step stepwizard-circle-payment-wrap col-xs-3\">\n                          <a routerLink=\"/requestLgIssuanceApproval\">\n                            <div class=\"stepwizard-circle stepwizard-circle-payment\">\n                              <div class=\"outer-circle1\">\n                                <div class=\"inner-circle1\"></div>\n                              </div>\n                            </div>\n                          </a>\n                          <p><span>{{'HOME.STEP3_APPPROVAL' | translate}}</span></p>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  <!--/Step Wizard-->\n                  <!-- Tab panes -->\n                  <div class=\"tab-content\">\n                    <div role=\"tabpanel\" class=\"tab-pane active\" id=\"discover\">\n                      <div class=\"design-process-content\">\n                        <form [formGroup]=\"submitLG\">\n                          <div class=\"row\">\n                            <div class=\"col-sm-12\">\n                              <div class=\"kt-portlet\">\n                                <div class=\"kt-portlet__head\">\n                                  <div class=\"kt-portlet__head-label\">\n                                    <h3 class=\"kt-portlet__head-title\">\n                                      {{'HOME.BASIC_INFO' | translate}}\n                                    </h3>\n                                  </div>\n                                </div>\n                                <div class=\"kt-form kt-form--label-right\">\n                                  <div class=\"kt-portlet__body\">\n                                    <div class=\"container\">\n                                      <div class=\"row\">\n                                        <div class=\"col-md-6\">\n                                          <div class=\"form-group margin-bottom-10\">\n                                            <label for=\"select-lg-type\"\n                                              class=\"col-form-label\">{{'HOME.SELECT_LG_TYPE' | translate}}<em\n                                                style=\"font-style: normal;\" class=\"text-danger-black\">*</em>\n                                            </label>\n                                            <select class=\"form-control col-md-9\" formControlName=\"LGType\"\n                                              (change)=\"onClickLGType($event.target.value)\">\n                                              <option value=\"\">Select LG type </option>\n                                              <option *ngFor=\"let lgType of lgTypeList\" value=\"{{lgType.bond}}\">\n                                                {{lgType.bond}}\n                                              </option>\n                                            </select>\n                                          </div>\n                                        </div>\n                                        <div class=\"col-md-6\">\n                                          <div class=\"form-group margin-bottom-10\">\n                                            <label for=\"select-write-up-type\"\n                                              class=\"col-form-label\">{{'HOME.WRITE_UP' | translate}}<em\n                                                style=\"font-style: normal;\" class=\"text-danger-black\">*</em></label>\n                                            <select class=\"form-control col-md-9\" formControlName=\"writeUpType\"\n                                              [(ngModel)]=\"writeUpType\" (change)=\"onClick($event.target.value)\">\n                                              <!-- <option>Select write-up type</option> -->\n                                              <option *ngFor=\"let w of writeUpList\"\n                                                [selected]=\"w.writeuptype==selecteWriteUpTypeName\">\n                                                {{w.writeuptype}}\n                                              </option>\n                                            </select>\n                                          </div>\n                                        </div>\n                                        <div class=\"col-md-6\">\n                                          <div class=\"form-group margin-bottom-10\">\n                                            <label for=\"select-bank\"\n                                              class=\"col-form-label\">{{'HOME.SELECT_BANK' | translate}} <em\n                                                style=\"font-style: normal;\" class=\"text-danger-black\">*</em></label>\n                                            <select class=\"form-control col-md-9\" formControlName=\"bankName\"\n                                              (change)=\"onClickBank($event.target.value)\">\n                                              <option value=\"\">{{'HOME.SELECT_BANK' | translate}} </option>\n                                              <option *ngFor=\"let banks of bankIbanList\" value=\"{{banks.bank_code}}\">\n                                                {{banks.bank_name}}\n                                              </option>\n                                            </select>\n                                            <div class=\"validation-errors text-danger\">\n                                              <div *ngFor=\"let validation of validation_messages.bankName\">\n                                                <div col-12 class=\"error-message\"\n                                                  *ngIf=\"submitLG.get('bankName').hasError(validation.type) && (submitLG.get('bankName').dirty || submitLG.get('bankName').touched)\">\n                                                  {{ validation.message }}\n                                                </div>\n                                              </div>\n                                            </div>\n                                          </div>\n                                        </div>\n                                        <div class=\"col-md-6\">\n                                          <div class=\"form-group margin-bottom-10\">\n                                            <label for=\"select-iban\"\n                                              class=\"col-form-label\">{{'HOME.SELECT_IBAN' | translate}} <em\n                                                style=\"font-style: normal;\" class=\"text-danger-black\">*</em></label>\n                                            <select class=\"form-control col-md-9\" formControlName=\"IBAN\">\n                                              <option>{{'HOME.SELECT_IBAN' | translate}} </option>\n                                              <option *ngFor=\"let ibans of IBANList\" [value]='ibans'>\n                                                {{ibans}}\n                                              </option>\n                                            </select>\n                                            <div class=\"validation-errors text-danger\">\n                                              <div *ngFor=\"let validation of validation_messages.IBAN\">\n                                                <div col-12 class=\"error-message\"\n                                                  *ngIf=\"submitLG.get('IBAN').hasError(validation.type) && (submitLG.get('IBAN').dirty || submitLG.get('IBAN').touched)\">\n                                                  {{ validation.message }}\n                                                </div>\n                                              </div>\n                                            </div>\n                                          </div>\n                                        </div>\n\n\n                                      </div>\n                                    </div>\n\n                                  </div>\n                                </div>\n                              </div>\n                              <!--/Basic Information-->\n                              <div class=\"kt-portlet\">\n                                <div class=\"kt-portlet__head\">\n                                  <div class=\"kt-portlet__head-label\">\n                                    <h3 class=\"kt-portlet__head-title\">\n                                      {{'HOME.LG_DETAILS' | translate}}\n                                    </h3>\n                                  </div>\n                                </div>\n                                <!--begin::Form-->\n                                <div class=\"kt-form kt-form--label-right\">\n                                  <div class=\"kt-portlet__body\">\n                                    <div class=\"container\">\n                                      <div class=\"row\">\n\n                                        <div class=\"col-md-6\">\n                                          <div class=\"form-group margin-bottom-10\">\n                                            <label for=\"select-iban\"\n                                              class=\"col-form-label\">{{'HOME.SELECT_ENTITY' | translate}}\n                                            </label>\n                                            <select class=\"form-control col-md-9\" formControlName=\"beneficiaryId\"\n                                              (change)=\"onClickBenificiary($event.target.value)\">\n                                              <option>{{'HOME.SELECT_ENTITY' | translate}} </option>\n                                              <option *ngFor=\"let beneficiary of beneficiaryList\" [value]='beneficiary[1]'>\n                                                {{beneficiary[1]}}\n                                              </option>\n                                            </select>\n                                          </div>\n                                        </div>\n\n\n                                        <div class=\"col-md-6\">\n                                          <div class=\"form-group margin-bottom-10\">\n                                            <div *ngIf=\"isEnableCRNumber\">\n                                              <label for=\"cr\" class=\"col-form-label\">{{'HOME.CR_NUMBER' | translate}}<em\n                                                  style=\"font-style: normal;\" class=\"text-danger-black\">*</em></label>\n                                              <input class=\"form-control col-md-9\" type=\"text\" value=\"\" id=\"\"\n                                                formControlName=\"CR\" (blur)=\"onBlur($event.target.value)\"\n                                                maxlength=\"15\">\n                                              <!-- <input class=\"form-control col-md-9 profile-txt1\" type=\"text\"\n                                                                      value=\"\" id=\"\" formControlName=\"CR\" [readonly]='*ngIf=\"privateEntityCheckBox.checked\"'> -->\n\n                                              <!-- <input class=\"form-control col-md-9 \" type=\"text\" value=\"\" id=\"\"\n                                                                      formControlName=\"CR\" [readonly]='!isCRNumberEnabled()' (blur)=\"onBlur($event.target.value)\"> -->\n\n\n                                              <div class=\"validation-errors text-danger\">\n                                                <div *ngFor=\"let validation of validation_messages.CR\">\n                                                  <div col-12 class=\"error-message\"\n                                                    *ngIf=\"submitLG.get('CR').hasError(validation.type) && (submitLG.get('CR').dirty || submitLG.get('CR').touched)\">\n                                                    {{ validation.message }}\n                                                  </div>\n                                                </div>\n                                              </div>\n                                            </div>\n                                            <div *ngIf=\"!isEnableCRNumber\">\n                                              <label for=\"cr\"\n                                                class=\"col-form-label\">{{'HOME.CR_NUMBER' | translate}}</label>\n                                              <input class=\"form-control col-md-9 profile-txt1\" type=\"text\" value=\"\"\n                                                id=\"\" formControlName=\"disableCR\" readonly=\"true\">\n                                            </div>\n\n                                          </div>\n\n                                        </div>\n\n                                        <div class=\"col-md-6\" style=\"text-align: left;\">\n                                          <div class=\"checkbox margin-top-10\">\n                                            <label class=\"container-checkbox\"> {{'HOME.PRIVATE_ENTITY' | translate}}\n                                              <input type=\"checkbox\" [(ngModel)]=\"privateEntityCheckBox\"\n                                                formControlName=\"privateEntityCheckBox\"\n                                                (change)=\"toggleVisibilityPrivateEntity($event)\">\n                                              <span class=\"checkmark\"></span>\n                                            </label>\n                                          </div>\n\n                                        </div>\n\n                                        <div class=\"col-md-6\">\n                                          <div class=\"row cr-bottom-block\" *ngIf=\"privateEntityCheckBox\">\n\n                                            <div class=\"col-12 col-md-12\" *ngIf=\"bDataExistInDB\">\n                                              <p class=\"cr-bottom-block-txt\">Entity Name: {{entityName}}</p>\n                                              <p class=\"cr-bottom-block-txt\">Email: {{email}}</p>\n                                            </div>\n\n                                            <div class=\"col-12 col-md-12\" *ngIf=\"!bDataExistInDB && !bValidCRFromMCI\">\n                                              <p class=\"cr-bottom-block-txt\" style=\"color: red;\">{{entityName}}</p>\n                                            </div>\n                                            <div class=\"col-12 col-md-12\" *ngIf=\"!bDataExistInDB && bValidCRFromMCI\">\n                                              <p class=\"cr-bottom-block-txt\">Entity Name: {{entityName}}</p>\n                                              <div class=\"col-12 col-md-12\"\n                                                *ngIf=\"!bDataExistInDB && bValidCRFromMCI && bDBCRDataAvailableEmail\">\n                                                <p class=\"cr-bottom-block-txt\">Email: {{email}}</p>\n                                              </div>\n                                              <div class=\"col-12 col-md-12\"\n                                                *ngIf=\"!bDataExistInDB && bValidCRFromMCI && !bDBCRDataAvailableEmail\">\n                                              </div>\n                                              <a class=\"cr-bottom-block-txt\" (click)=\"openModal()\"\n                                                style=\"cursor: pointer;\">{{email}}</a>\n                                            </div>\n\n\n                                          </div>\n                                        </div>\n\n\n                                        <div class=\"col-md-6\">\n                                          <div class=\"form-group margin-bottom-10\">\n\n                                            <div class=\"amount-nw-wrap\">\n\n                                              <div class=\"amount-nw-inner\">\n                                                <label for=\"amount-in-number\"\n                                                  class=\"col-form-label\">{{'HOME.AMOUNT' | translate}} <em\n                                                    style=\"font-style: normal;\" class=\"text-danger-black\">*</em></label>\n                                                <input class=\"form-control\" type=\"text\" value=\"\" id=\"\"\n                                                  formControlName=\"Amount\" (keyup)=\"onKeyup($event.target.value)\">\n                                                <div class=\"validation-errors text-danger\">\n                                                  <div *ngFor=\"let validation of validation_messages.Amount\">\n                                                    <div col-12 class=\"error-message\"\n                                                      *ngIf=\"submitLG.get('Amount').hasError(validation.type) && (submitLG.get('Amount').dirty || submitLG.get('Amount').touched)\">\n                                                      {{ validation.message }}\n                                                    </div>\n                                                  </div>\n                                                </div>\n                                                <div class=\"validation-errors text-danger\" *ngIf=\"!ispriceLimitOk\">\n                                                  <div col-12 class=\"error-message\">\n                                                    Amount should be <=  {{priceLimit}}\n                                                  </div>\n                                              </div>\n                                              </div>\n                                              <div class=\"amount-nw-inner-currency amount-margin-10\">\n                                                <label for=\"amount-in-number\"\n                                                  class=\"col-form-label\">{{'HOME.CURRENCY' | translate}}\n                                                  <em style=\"font-style: normal;\"\n                                                    class=\"text-danger-black\">*</em></label>\n                                                <select class=\"form-control\" formControlName=\"currency\">\n                                                  <option> {{'HOME.Select' | translate}}</option>\n                                                  <option *ngFor=\"let currency of currencyList\" [value]=\"currency[0]\">\n                                                    {{currency[0]}}\n                                                  </option>\n                                                </select>\n\n                                                <div class=\"validation-errors text-danger\">\n                                                  <div *ngFor=\"let validation of validation_messages.currency\">\n                                                    <div col-12 class=\"error-message\"\n                                                      *ngIf=\"submitLG.get('currency').hasError(validation.type) && (submitLG.get('currency').dirty || submitLG.get('currency').touched)\">\n                                                      {{ validation.message }}\n                                                    </div>\n                                                  </div>\n                                                </div>\n                                              </div>\n                                              <div class=\"clear\"></div>\n                                            </div>\n                                            <!-- <div class=\"text-danger\">This is a required field</div> -->\n                                          </div>\n                                        </div>\n\n                                        <div class=\"col-md-6\">\n                                          <div class=\"form-group margin-bottom-10\">\n                                            <label for=\"amount-in-number\"\n                                              class=\"col-form-label\">{{'HOME.AMOUNT_WORDS' | translate}}\n                                              <em style=\"font-style: normal;\" class=\"text-danger-black\">*</em></label>\n                                            <input class=\"form-control col-md-9\" type=\"text\" value=\"\" id=\"\"\n                                              formControlName=\"amountInNumber\" readonly>\n                                            <div class=\"validation-errors text-danger\">\n                                              <div *ngFor=\"let validation of validation_messages.amountInNumber\">\n                                                <div col-12 class=\"error-message\"\n                                                  *ngIf=\"submitLG.get('amountInNumber').hasError(validation.type) && (submitLG.get('amountInNumber').dirty || submitLG.get('amountInNumber').touched)\">\n                                                  {{ validation.message }}\n                                                </div>\n                                              </div>\n                                            </div>\n                                          </div>\n                                        </div>\n\n\n                                        <div class=\"col-md-6\">\n                                          <div class=\"form-group margin-bottom-10\">\n                                            <label for=\"lg-start-date\"\n                                              class=\"col-form-label\">{{'HOME.LG_START_DATE' | translate}} <em\n                                                style=\"font-style: normal;\" class=\"text-danger-black\">*</em></label>\n                                            <div class=\"ui-g ui-fluid\">\n                                              <div class=\"col-md-9 padding-null calendar-icon-wrap\">\n                                                <p-calendar placeholder=\"DD/MM/YYYY\" [readonlyInput]=\"true\"\n                                                  yearRange=\"1950:2050\" [monthNavigator]=\"true\" [yearNavigator]=\"true\"\n                                                  formControlName=\"LGStartDate\" [(ngModel)]=\"startDate\"\n                                                  [showIcon]=\"true\" [minDate]=\"minDate\"\n                                                  (onSelect)=\"getStartDate(startDate)\" dateFormat=\"dd/mm/yy\">\n                                                </p-calendar>\n                                                <div class=\"validation-errors text-danger\">\n                                                  <div *ngFor=\"let validation of validation_messages.LGStartDate\">\n                                                    <div col-12 class=\"error-message\"\n                                                      *ngIf=\"submitLG.get('LGStartDate').hasError(validation.type) && (submitLG.get('LGStartDate').dirty || submitLG.get('LGStartDate').touched)\">\n                                                      {{ validation.message }}\n                                                    </div>\n                                                  </div>\n                                                </div>\n                                              </div>\n                                            </div>\n\n                                          </div>\n                                        </div>\n\n\n\n                                        <div class=\"col-md-6\">\n                                          <div class=\"form-group margin-bottom-10\">\n                                            <label for=\"address2\"\n                                              class=\"col-form-label\">{{'HOME.LG_END_DATE' | translate}} <em\n                                                style=\"font-style: normal;\" class=\"text-danger-black\">*</em></label>\n                                            <!-- <input class=\"form-control col-md-9\" type=\"text\" value=\"\" id=\"\"> -->\n                                            <div class=\"ui-g ui-fluid\">\n                                              <div class=\"col-md-9 padding-null calendar-icon-wrap\">\n                                                <p-calendar placeholder=\"DD/MM/YYYY\" [readonlyInput]=\"true\"\n                                                  yearRange=\"1950:2050\" [monthNavigator]=\"true\" [yearNavigator]=\"true\"\n                                                  formControlName=\"LGEndDate\" [(ngModel)]=\"endDate\" [showIcon]=\"true\" \n                                                  class=\"calendar-text\" [minDate]=\"minDateforEndDate\"\n                                                  dateFormat=\"dd/mm/yy\">\n                                                </p-calendar>\n                                                \n                                                <div class=\"validation-errors text-danger\">\n                                                  <div *ngFor=\"let validation of validation_messages.LGEndDate\">\n                                                    <div col-12 class=\"error-message\"\n                                                      *ngIf=\"submitLG.get('LGEndDate').hasError(validation.type) && (submitLG.get('LGEndDate').dirty || submitLG.get('LGEndDate').touched)\">\n                                                      {{ validation.message }}\n                                                    </div>\n                                                  </div>\n                                                </div>\n                                              </div>\n                                            </div>\n                                          </div>\n                                        </div>\n\n                                        <div class=\"col-md-6\">\n                                          <div class=\"form-group margin-bottom-10\">\n                                            <label for=\"project-name\"\n                                              class=\"col-form-label\">{{'HOME.PROJECT_NAME' | translate}}\n                                            </label>\n                                            <input class=\"form-control col-md-9\" type=\"text\" value=\"\" id=\"\"\n                                              formControlName=\"projectName\">\n                                            <div class=\"validation-errors text-danger\">\n                                              <div *ngFor=\"let validation of validation_messages.projectName\">\n                                                <div col-12 class=\"error-message\"\n                                                  *ngIf=\"submitLG.get('projectName').hasError(validation.type) && (submitLG.get('projectName').dirty || submitLG.get('projectName').touched)\">\n                                                  {{ validation.message }}\n                                                </div>\n                                              </div>\n                                            </div>\n                                          </div>\n                                        </div>\n                                        <div class=\"col-md-6\">\n                                          <div class=\"form-group margin-bottom-10\">\n                                            <label for=\"project-number\"\n                                              class=\"col-form-label\">{{'HOME.PROJECT_NUMBER' | translate}}\n                                            </label>\n                                            <input class=\"form-control col-md-9\" type=\"text\" value=\"\" id=\"\"\n                                              formControlName=\"projectNumber\">\n                                            <div class=\"validation-errors text-danger\">\n                                              <div *ngFor=\"let validation of validation_messages.projectNumber\">\n                                                <div col-12 class=\"error-message\"\n                                                  *ngIf=\"submitLG.get('projectNumber').hasError(validation.type) && (submitLG.get('projectNumber').dirty || submitLG.get('projectNumber').touched)\">\n                                                  {{ validation.message }}\n                                                </div>\n                                              </div>\n                                            </div>\n                                          </div>\n                                        </div>\n\n                                        <div class=\" col-md-6\">\n                                          <div class=\" form-group margin-bottom-10\">\n                                            <div *ngIf=\"isEnableZakatPeriodStartDate\">\n                                              <label for=\"zakat-period-start-date\"\n                                                class=\"col-form-label\">{{'HOME.ZAKAT_START_DATE' | translate}}\n                                                <em style=\"font-style: normal;\" class=\"text-danger-black\">*</em></label>\n                                              <div class=\"ui-g ui-fluid\">\n                                                <div class=\"col-md-9 padding-null calendar-icon-wrap\">\n                                                  <p-calendar placeholder=\"DD/MM/YYYY\" [readonlyInput]=\"true\"\n                                                    yearRange=\"1950:2050\" [monthNavigator]=\"true\" [yearNavigator]=\"true\"\n                                                    formControlName=\"ZakatPeriodStartDate\" [(ngModel)]=\"zakatStartDate\"\n                                                    [showIcon]=\"true\" [minDate]=\"minDate\" dateFormat=\"dd/mm/yy\"\n                                                    (onSelect)=\"getZakatStartDate(zakatStartDate)\"></p-calendar>\n                                                  <div class=\"validation-errors text-danger\">\n                                                    <div\n                                                      *ngFor=\"let validation of validation_messages.ZakatPeriodStartDate\">\n                                                      <div col-12 class=\"error-message\"\n                                                        *ngIf=\"submitLG.get('ZakatPeriodStartDate').hasError(validation.type) && (submitLG.get('ZakatPeriodStartDate').dirty || submitLG.get('ZakatPeriodStartDate').touched)\">\n                                                        {{ validation.message }}\n                                                      </div>\n                                                    </div>\n                                                  </div>\n                                                </div>\n                                              </div>\n                                            </div>\n                                            <div *ngIf=\"!isEnableZakatPeriodStartDate\">\n                                              <label for=\"zakat-period-start-date\"\n                                                class=\"col-form-label\">{{'HOME.ZAKAT_START_DATE' | translate}}\n                                              </label>\n                                              <div class=\"ui-g ui-fluid\">\n                                                <div class=\"col-md-9 padding-null calendar-icon-wrap profile-txt2\">\n                                                  <p-calendar placeholder=\"DD/MM/YYYY\"\n                                                    formControlName=\"disabledZakatPeriodStartDate\"  [showIcon]=\"true\"\n                                                    [disabled]=\"true\"></p-calendar>\n                                                </div>\n                                              </div>\n                                            </div>\n\n                                          </div>\n                                        </div>\n\n                                        <div class=\" col-md-6\">\n                                          <div class=\" form-group margin-bottom-10\">\n                                            <div *ngIf=\"isEnableZakatPeriodEndDate\">\n                                              <label for=\"zakat-period-end-date\"\n                                                class=\"col-form-label\">{{'HOME.ZAKAT_END_DATE' | translate}}\n                                                <em style=\"font-style: normal;\" class=\"text-danger-black\">*</em></label>\n                                              <div class=\"ui-g ui-fluid\">\n                                                <div class=\"col-md-9 padding-null calendar-icon-wrap\">\n                                                  <p-calendar placeholder=\"DD/MM/YYYY\" [readonlyInput]=\"true\"\n                                                    yearRange=\"1950:2050\" [monthNavigator]=\"true\" [yearNavigator]=\"true\"\n                                                    formControlName=\"ZakatPeriodEndDate\" [(ngModel)]=\"zakatEndDate\"\n                                                    [showIcon]=\"true\" [minDate]=\"minDateforzakatEndDate\"\n                                                    dateFormat=\"dd/mm/yy\">\n                                                  </p-calendar>\n                                                  <div class=\"validation-errors text-danger\">\n                                                    <div\n                                                      *ngFor=\"let validation of validation_messages.ZakatPeriodEndDate\">\n                                                      <div col-12 class=\"error-message\"\n                                                        *ngIf=\"submitLG.get('ZakatPeriodEndDate').hasError(validation.type) && (submitLG.get('ZakatPeriodEndDate').dirty || submitLG.get('ZakatPeriodEndDate').touched)\">\n                                                        {{ validation.message }}\n                                                      </div>\n                                                    </div>\n                                                  </div>\n                                                </div>\n                                              </div>\n                                            </div>\n                                            <div *ngIf=\"!isEnableZakatPeriodEndDate\">\n                                              <label for=\"zakat-period-end-date\"\n                                                class=\"col-form-label\">{{'HOME.ZAKAT_END_DATE' | translate}}\n                                              </label>\n                                              <div class=\"ui-g ui-fluid\">\n                                                <div class=\"col-md-9 padding-null calendar-icon-wrap profile-txt2\">\n                                                  <p-calendar placeholder=\"DD/MM/YYYY\"\n                                                    formControlName=\"disabledZakatPeriodEndtDate\" [showIcon]=\"true\"\n                                                    [disabled]=\"true\">\n                                                  </p-calendar>\n                                                </div>\n                                              </div>\n                                            </div>\n\n\n                                          </div>\n                                        </div>\n\n\n\n\n                                        <div class=\"col-md-6\">\n                                          <div class=\"form-group margin-bottom-10\">\n                                            <label for=\"purose-of-bond\"\n                                              class=\"col-form-label\">{{'HOME.PURPOSE_OF_BOND' | translate}}\n                                              <em style=\"font-style: normal;\" class=\"text-danger-black\">*</em></label>\n                                            <textarea class=\"form-control col-md-9 purose-bond-textarea\" type=\"text\"\n                                              value=\"\" id=\"\" formControlName=\"puroseOfBond\"\n                                              [maxLength]=\"300\"></textarea>\n                                            <div class=\"validation-errors text-danger\">\n                                              <div *ngFor=\"let validation of validation_messages.puroseOfBond\">\n                                                <div col-12 class=\"error-message\"\n                                                  *ngIf=\"submitLG.get('puroseOfBond').hasError(validation.type) && (submitLG.get('puroseOfBond').dirty || submitLG.get('puroseOfBond').touched)\">\n                                                  {{ validation.message }}\n                                                </div>\n                                              </div>\n                                            </div>\n                                          </div>\n                                        </div>\n                                        <div class=\"col-md-6\">\n                                          <div class=\"form-group margin-bottom-10\">\n                                            <div *ngIf=\"isEnablebayanNuymber\">\n                                              <label for=\"bayan-number\"\n                                                class=\"col-form-label\">{{'HOME.BAYAN_NUMBER' | translate}}\n                                                <em style=\"font-style: normal;\" class=\"text-danger-black\">*</em></label>\n                                              <input class=\"form-control col-md-9\" type=\"text\" value=\"\" id=\"\"\n                                                formControlName=\"bayanNuymber\">\n                                              <div class=\"validation-errors text-danger\">\n                                                <div *ngFor=\"let validation of validation_messages.bayanNuymber\">\n                                                  <div col-12 class=\"error-message\"\n                                                    *ngIf=\"submitLG.get('bayanNuymber').hasError(validation.type) && (submitLG.get('bayanNuymber').dirty || submitLG.get('bayanNuymber').touched)\">\n                                                    {{ validation.message }}\n                                                  </div>\n                                                </div>\n                                              </div>\n                                            </div>\n                                            <div *ngIf=\"!isEnablebayanNuymber\">\n                                              <label for=\"bayan-number\"\n                                                class=\"col-form-label\">{{'HOME.BAYAN_NUMBER' | translate}}\n                                              </label>\n                                              <input class=\"form-control col-md-9 profile-txt1\" type=\"text\" value=\"\"\n                                                id=\"\" formControlName=\"disabledBayanNuymber\" readonly>\n                                            </div>\n\n                                          </div>\n                                          <div class=\"form-group margin-bottom-10\">\n                                            <label for=\"bayan-number\"\n                                              class=\"col-form-label\">{{'HOME.PERCENTAGE_OF_CONTRACT_VALUE' | translate}}\n                                            </label>\n                                            <input class=\"form-control col-md-9\" type=\"text\" value=\"\" id=\"\"\n                                              formControlName=\"percentageOfContractValue\">\n                                            <div class=\"validation-errors text-danger\">\n                                              <div\n                                                *ngFor=\"let validation of validation_messages.percentageOfContractValue\">\n                                                <div col-12 class=\"error-message\"\n                                                  *ngIf=\"submitLG.get('percentageOfContractValue').hasError(validation.type) && (submitLG.get('percentageOfContractValue').dirty || submitLG.get('percentageOfContractValue').touched)\">\n                                                  {{ validation.message }}\n                                                </div>\n                                              </div>\n                                            </div>\n\n                                          </div>\n                                        </div>\n\n\n                                        <!-- <div class=\"col-md-12\">\n                                                                  <div class=\"form-group margin-bottom-10 lg-text-area\">\n                                                                    <label for=\"terms-and-condition\"\n                                                                      class=\"col-form-label full-width\">Terms and\n                                                                      conditions</label>\n                                                                    <textarea rows=\"10\" cols=\"100\" class=\"col-12\"\n                                                                      formControlName=\"termsNconditionsMessage\" readonly>\n                                                                      </textarea>\n\n                                                                  </div>\n                                                                </div> -->\n                                        <div class=\"col-md-6\" style=\"text-align: left;\">\n                                          <div class=\"checkbox margin-top-10\">\n                                            <label class=\"container-checkbox\">\n                                              {{'HOME.ACCOUNT_OF_CONTRACT_PROCESSED' | translate}}\n                                              <input type=\"checkbox\" [(ngModel)]=\"assignmentOfContractcheckBox\"\n                                                formControlName=\"assignmentOfContractcheckBox\"\n                                                (change)=\"toggleVisibilityassignmentOfContract($event)\">\n                                              <span class=\"checkmark\"></span>\n                                            </label>\n                                          </div>\n\n                                        </div>\n                                        <div class=\"col-md-12\">\n                                          <div class=\"form-group margin-bottom-10\">\n                                            <label for=\"terms-and-condition\"\n                                              class=\"col-form-label terms-label\">{{'HOME.TERMS_AND_CONDITIONS' | translate}}\n                                            </label>\n                                            <div class=\"terms-wrap\" id=\"editable\">\n                                              <!-- <textarea rows=\"10\" cols=\"100\"\n                                                                        formControlName=\"TermsAndCondContent\" [readonly]=\"!isEditTnC\"\n                                                                        [ngStyle]=\"{'background-color':isEditTnC === true ? '#fff' : '#efefef'}\">\n                                                                        </textarea> -->\n                                              <textarea rows=\"10\" cols=\"100\" formControlName=\"TermsAndCondContent\"\n                                              [(ngModel)]=\"TermsAndCondContent\" [readonly]=\"!isEditTnC\"\n                                                [ngStyle]=\"styleObject()\">\n                                                                        </textarea>\n\n                                              <div *ngIf=\"isEditTnC\">\n                                                <button type=\"button\" class=\"btn btn-success margin-top-10\"\n                                                  id=\"editBtn1\"\n                                                  (click)=\"updateTnC()\">{{'HOME.UPDATE' | translate}}</button>\n                                              </div>\n\n                                            </div>\n                                          </div>\n                                        </div>\n                                        <div class=\"col-md-12\" style=\"text-align: left;\">\n                                          <div class=\"checkbox\">\n                                            <label class=\"container-checkbox\"> {{'HOME.ACCEPT_TERMS_COND' | translate}}\n                                              <input type=\"checkbox\" [(ngModel)]=\"checkBox\" formControlName=\"checkBox\"\n                                                (change)=\"toggleVisibility($event)\" required>\n                                              <span class=\"checkmark\"></span>\n                                            </label>\n                                          </div>\n\n                                        </div>\n\n\n\n                                      </div>\n                                    </div>\n\n                                  </div>\n                                </div>\n                              </div>\n\n                              <div>\n\n                                <p-messages [(value)]=\"msgs\"></p-messages>\n\n                              </div>\n\n                              <!--/Lg Details-->\n                              <div class=\"kt-portlet__foot\">\n                                <div class=\"kt-form__actions\">\n                                  <div class=\"row\">\n                                    <div class=\"col-12\">\n                                      <div class=\"pop-block red-block-wrap\" *ngIf=\"isOpenValidationAlert\">\n                                        <div class=\"red-block\"><img src=\"../../assets/images/alert.png\" alt=\"alert-icon\"\n                                            class=\"alert-icon\"></div>\n                                        <p> <b>Error Message</b> Validation failed</p>\n                                        <button class=\"dlete-btn-wrap\"><img src=\"../../assets/images/delete-button.png\"\n                                            alt=\"image\" class=\"delete-btn\" (click)=\"closeAlert()\"></button>\n                                        <div class=\"clearfix\"></div>\n                                      </div>\n                                      <div class=\"btn-wrap\">\n                                        <button *ngIf=\"!lgIssueUpdate\" type=\"reset\" class=\"btn btn-gry btn-margin-2\"\n                                          (click)=\"resetForm()\">{{'HOME.CANCEL' | translate}}</button>\n                                          \n                                          <button *ngIf=\"lgIssueUpdate\" type=\"reset\" class=\"btn btn-gry btn-margin-2\"\n                                          (click)=\"cancelUpdate()\">{{'HOME.CANCEL' | translate}}</button>\n                                        <!-- <button type=\"button\" class=\"btn btn-gry btn-margin-2\"\n                                                                  (click)=\"editLGIssuanceTermsNCondData()\">Edit</button> -->\n                                        <button *ngIf=\"!lgIssueUpdate\" type=\"button\" class=\"btn btn-success btn-margin-2\"\n                                          (click)=\"submitLGIssuance()\"\n                                          [disabled]=\"!bDataExistInDB && !bValidCRFromMCI && privateEntityCheckBox\">{{'HOME.SEND' | translate}}</button>\n                                          \n                                          <button *ngIf=\"lgIssueUpdate\" type=\"button\" class=\"btn btn-success btn-margin-2\"\n                                          (click)=\"submitLGIssuance()\"\n                                          [disabled]=\"!bDataExistInDB && !bValidCRFromMCI && privateEntityCheckBox\">Update</button>\n                                      </div>\n\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n\n                            </div>\n                          </div>\n                        </form>\n                      </div>\n                    </div>\n                  </div>\n\n                </div>\n              </div>\n            </div>\n          </section>\n        </div>\n\n      </div>\n    </div>\n    <!--New Design Here-->\n  </div>\n</div>\n<!--===========================\n                                End Content\n                                ============================-->\n\n<script type=\"text/javascript\" src=\"../../../node_modules/number-to-words/numberToWords.min.js\"></script>\n<!--begin::Global Theme Bundle(used by all pages) -->\n<script src=\"../../assets/js/plugins.bundle.js\" type=\"text/javascript\"></script>\n<!-- For datepicker -->\n<script src=\"../../assets/js/datepicker.js\" type=\"text/javascript\"></script>\n<script>\n  $('#datepicker11').datepicker({\n    uiLibrary: 'bootstrap'\n  });\n  $('#datepicker12').datepicker({\n    uiLibrary: 'bootstrap'\n  });\n  $('#datepicker13').datepicker({\n    uiLibrary: 'bootstrap'\n  });\n  $('#datepicker14').datepicker({\n    uiLibrary: 'bootstrap'\n  });\n</script>\n\n<!-- end::Body -->\n");

/***/ }),

/***/ "./node_modules/raw-loader/dist/cjs.js!./src/app/sidemenu/sidemenu.component.html":
/*!****************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/sidemenu/sidemenu.component.html ***!
  \****************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<div class=\"col-12 col-sm-3 col-md-3 col-lg-3 left-panel-menu-wrap w-20 fixed-wrap\">\n    <div class=\"left-menu-panel\">\n        <nav class=\"nav\" role=\"navigation\">\n            <ul class=\"nav-list vertical-menu\" *ngIf=\"roleId == 1\">\n                <li>\n                    <input id=\"group-0\" type=\"checkbox\" hidden />\n                    <label for=\"group-0\"><a routerLink=\"/dashboard\"><span class=\"hm-icon\"></span>Home</a></label>\n                </li>\n                <li>\n                    <input id=\"group-12\" type=\"checkbox\" hidden  checked/>\n                    <label for=\"group-12\"><span class=\"fa fa-angle-right\"></span><a  routerLink=\"/privateLgManagement\"><span class=\"lg-icon\"></span>{{'HOME.LG_Management' | translate}}</a></label>\n                    <ul class=\"group-list\">\n                        <li *ngIf=\"menuIssuanceCreate\">\n                            <input id=\"group-6\" type=\"checkbox\" hidden />\n                             <label for=\"group-6\"><a (click) = \"workflowSelect('Issuance')\"><span class=\"lg-icon\"></span>Issuance</a></label>\n                             \n                             \n                        </li>\n                        <li *ngIf=\"menuAmendCreate\">\n                            <input id=\"group-7\" type=\"checkbox\" hidden />\n                             <label for=\"group-7\"><a href=\"javascript:;\" (click) = \"workflowSelect('Amendment')\"><span class=\"lg-icon\"></span>Amendment</a></label>\n                             <!--<label for=\"group-6\"><a routerLink=\"/privateAmendmentList\"><span class=\"lg-icon\"></span>Amendment List</a></label>-->\n                            </li>\n                            <li *ngIf=\"menuConfiscateCreate\">\n                                <input id=\"group-8\" type=\"checkbox\" hidden />\n                                <label for=\"group-8\"><a href=\"javascript:;\" (click) = \"workflowSelect('Confiscate')\"><span class=\"lg-icon\"></span>Confiscation</a></label>\n                                <!--<label for=\"group-6\"><a routerLink=\"/privateConfiscateList\"><span class=\"lg-icon\"></span>Confiscation List</a></label>-->\n                            </li>\n                            <li *ngIf=\"menuReleaseCreate\">\n                                <input id=\"group-9\" type=\"checkbox\" hidden />\n                                <label for=\"group-9\"><a href=\"javascript:;\" (click) = \"workflowSelect('Release')\"><span class=\"lg-icon\"></span>Release</a></label>\n                                <!--<label for=\"group-6\"><a routerLink=\"/privateReleaseList\"><span class=\"lg-icon\"></span>Release List</a></label>-->\n                            </li>\n                            <li >\n                                <input id=\"group-10\" type=\"checkbox\" hidden />\n                                <label for=\"group-10\"><a routerLink=\"/privatependingtasks\"><span class=\"lg-icon\"></span>Pending tasks</a></label>\n                        </li>\n                    </ul>\n                </li>\n                <li>\n                    <input id=\"group-4\" type=\"checkbox\" hidden />\n                    <label for=\"group-4\"><a routerLink=\"/privateaccountmanagement\"><span class=\"ta-icon\"></span>Account Management</a></label>\n                </li>\n            </ul>\n            <ul class=\"nav-list vertical-menu\" *ngIf=\"roleId == 2\">\n                <li>\n                    <input id=\"group-0\" type=\"checkbox\" hidden />\n                    <label for=\"group-0\"><a routerLink=\"/govDashboard\"><span class=\"hm-icon\"></span>Home</a></label>\n                </li>\n                <li>\n                    <input id=\"group-12\" type=\"checkbox\" hidden  checked/>\n                    <label for=\"group-12\"><span class=\"fa fa-angle-right\"></span><a  routerLink=\"/govLgManagement\"><span class=\"lg-icon\"></span>{{'HOME.LG_Management' | translate}}</a></label>\n                    <ul class=\"group-list\">\n                        <li *ngIf=\"menuAmendCreate\">\n                            <input id=\"group-7\" type=\"checkbox\" hidden />\n                            <label for=\"group-7\"><a href=\"javascript:;\" (click) = \"workflowSelect('Amendment')\"><span class=\"lg-icon\"></span>Amendment</a></label>\n                            <!--<label for=\"group-6\"><a routerLink=\"/privateAmendmentList\"><span class=\"lg-icon\"></span>Amendment List</a></label>-->\n                        </li>\n                        <li *ngIf=\"menuConfiscateCreate\">\n                            <input id=\"group-8\" type=\"checkbox\" hidden />\n                            <label for=\"group-8\"><a href=\"javascript:;\" (click) = \"workflowSelect('Confiscate')\"><span class=\"lg-icon\"></span>Confiscation</a></label>\n                            <!--<label for=\"group-6\"><a routerLink=\"/privateConfiscateList\"><span class=\"lg-icon\"></span>Confiscation List</a></label>-->\n                        </li>\n                        <li *ngIf=\"menuReleaseCreate\">\n                            <input id=\"group-9\" type=\"checkbox\" hidden />\n                            <label for=\"group-9\"><a href=\"javascript:;\" (click) = \"workflowSelect('Release')\"><span class=\"lg-icon\"></span>Release</a></label>\n                            <!--<label for=\"group-6\"><a routerLink=\"/privateReleaseList\"><span class=\"lg-icon\"></span>Release List</a></label>-->\n                        </li>\n                        <li >\n                            <input id=\"group-10\" type=\"checkbox\" hidden />\n                            <label for=\"group-10\"><a routerLink=\"/governmentpendingtasks\"><span class=\"lg-icon\"></span>Pending tasks</a></label>\n                        </li>\n                    </ul>\n                </li>\n                <li>\n                    <input id=\"group-4\" type=\"checkbox\" hidden />\n                    <label for=\"group-4\"><a routerLink=\"/governmentaccountmanagement\"><span class=\"ta-icon\"></span>Account Management</a></label>\n                </li>\n            </ul>\n        </nav>\n    </div>\n</div>");

/***/ }),

/***/ "./node_modules/raw-loader/dist/cjs.js!./src/app/user-reset-password-modal/user-reset-password-modal.component.html":
/*!**************************************************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/user-reset-password-modal/user-reset-password-modal.component.html ***!
  \**************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<!--ADD NEW USER -->\n<div>\n    <div class=\"login-modal\" id=\"myModal3\">\n      <div class=\"modal-dialog modal-dialog-centered modal-lg\">\n        <div class=\"modal-content\">\n  \n          <!-- Modal Header -->\n          <div class=\"modal-header\">\n            <h4 class=\"modal-title\">Reset Password  </h4>\n          </div>\n  \n          <form [formGroup]=\"submitUser\">\n            <!-- Modal body -->\n            <div class=\"modal-body\" >\n        \n              <div class=\"row\">\n                <div class=\"col-md-12\">\n                  <div class=\"form-group margin-bottom-10\">\n                    <label for=\"password\" class=\"col-form-label\">Password <em\n                        style=\"font-style: normal;\"\n                        class=\"text-danger-black\">*</em></label>\n                    <input class=\"form-control col-md-9\" type=\"Password\" value=\"\" id=\"\"\n                      formControlName=\"password\" style=\"max-width: 100%\">\n                    <div class=\"validation-errors text-danger\">\n                      <div *ngFor=\"let validation of validation_messages.password\">\n                        <div col-12 class=\"error-message\"\n                          *ngIf=\"submitUser.get('password').hasError(validation.type) && (submitUser.get('password').dirty || submitUser.get('password').touched)\">\n                          {{ validation.message }}\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                <div class=\"col-md-12\">\n                  <div class=\"form-group \">\n                    <label for=\"confirm-password\" class=\"col-form-label\">Confirm Password\n                       <em style=\"font-style: normal;\"\n                        class=\"text-danger-black\">*</em></label>\n                        <input class=\"form-control col-md-9\" type=\"password\" value=\"\" id=\"\"\n                        formControlName=\"confirmPassword\" (blur)=\"onBlurPasswordMatch($event.target.value)\" (keyup)=\"onBlurPasswordMatchkeyup($event.target.value)\" style=\"max-width: 100%\">\n                    <div class=\"validation-errors text-danger\">\n                      <div\n                        *ngFor=\"let validation of validation_messages.confirmPassword\">\n                        <div col-12 class=\"error-message\"\n                          *ngIf=\"submitUser.get('confirmPassword').hasError(validation.type) && (submitUser.get('confirmPassword').dirty || submitUser.get('confirmPassword').touched)\">\n                          {{ validation.message }}\n                        </div>\n                      </div>\n                      <div col-12 class=\"error-message\" *ngIf=\"isNotPasswordMatch\" style=\"text-align: center;padding: 10px; font-weight: 600;\" \n                          >\n                         Password Mismatch \n                        </div>\n                    </div>\n                  </div>\n                </div>\n    \n              </div>\n    \n            </div>\n            <div class=\"modal-footer\">\n                <div class=\"row\">\n                    <div class=\"col-12\">\n                        <div class=\"btn-wrap\">\n                            <button type=\"reset\" class=\"btn btn-gry btn-margin-2\" (click)=\"closeAddUserButton()\">Cancel</button>\n                            <button style=\"margin-left: 5px;\" type=\"button\" class=\"btn btn-success btn-margin-2\" (click)=\"addUserSubmit()\">Save</button>\n                        </div>\n      \n                    </div>\n                </div>\n            </div>\n          </form>\n  \n  \n        </div>\n      </div>\n    </div>\n  </div>\n\n <!--  <ng-multiselect-dropdown\n    [placeholder]=\"'custom placeholder'\"\n    [data]=\"dropdownList\"\n    formControlName=\"IBAN\"\n    [(ngModel)]=\"selectedItems\"\n    [settings]=\"dropdownSettings\"\n    (onSelect)=\"onItemSelect($event)\"\n    (onSelectAll)=\"onSelectAll($event)\"\n  >\n  </ng-multiselect-dropdown> -->\n\n  <!--ADD NEW USER -->");

/***/ }),

/***/ "./node_modules/raw-loader/dist/cjs.js!./src/app/workflow-select-modal/workflow-select-modal.component.html":
/*!******************************************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/workflow-select-modal/workflow-select-modal.component.html ***!
  \******************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<div class=\"login-modal\" id=\"myModal3\">\n    <div class=\"modal-dialog modal-lg\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header\">\n                <h4 class=\"modal-title\">Select Workflow</h4>\n            </div>\n            <form [formGroup]=\"selectwork\">\n            <div class=\"modal-body\">\n                <div class=\"row\">\n                    <div class=\"col-12\">\n                        <div class=\"new-blue-table border-none\">\n                            <div class=\"table-responsive\">\n                                <table class=\"table table-bordered table-striped table-hover\">\n                                    <thead>\n                                        <tr>\n                                            <th>#</th>\n                                            <th>Workflow Name</th>\n                                            <th>Actions</th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        <tr *ngFor=\"let workflowList of workflowLists; let i = index \">\n                                            <td>{{i+1}}</td>\n                                            <td><a href=\"javascript:void(0)\" class=\"black-anchor-txt\" (click)=\"workflowDetails(workflowList[0])\">{{workflowList[0].workflow_desc}}</a></td>\n                                            <!-- <td>\n                                                <div>\n                                                    <label class=\"container-radio-btn workflow-radio-btn margin-bot-null\"> Select\n                                                        <input type=\"radio\" formControlName=\"workflow_id\" value=\"workflowList[0].workflow_id\" [value]=\"workflowList[0].workflow_id\">\n                                                        <span class=\"checkmark\"></span>\n                                                    </label>\n                                                </div>\n                                            </td> -->\n                                            <!--Without Select text-->\n                                            <td>\n                                                <div>\n                                                    <label class=\"container-radio-btn workflow-radio-btn1 margin-bot-null\">\n                                                        <input type=\"radio\" formControlName=\"workflow_id\" value=\"workflowList[0].workflow_id\" [value]=\"workflowList[0].workflow_id\">\n                                                        <span class=\"checkmark\"></span>\n                                                    </label>\n                                                </div>\n                                            </td>\n                                        </tr>\n\n                                    </tbody>\n                                </table>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div class=\"modal-footer\">\n                <div class=\"row\">\n                    <div class=\"col-12\">\n                        <div class=\"btn-wrap\">\n                            <button type=\"reset\" class=\"btn btn-gry btn-margin-2\" (click)=\"closeSelectWorkflow()\">Cancel</button>\n                            <button type=\"button\" class=\"btn btn-success btn-margin-2\" (click)=\"SelectWorkflow()\">Submit</button>\n                        </div>\n\n                    </div>\n                </div>\n            </div>\n            </form>\n        </div>\n    </div>\n</div>");

/***/ }),

/***/ "./node_modules/tslib/tslib.es6.js":
/*!*****************************************!*\
  !*** ./node_modules/tslib/tslib.es6.js ***!
  \*****************************************/
/*! exports provided: __extends, __assign, __rest, __decorate, __param, __metadata, __awaiter, __generator, __exportStar, __values, __read, __spread, __spreadArrays, __await, __asyncGenerator, __asyncDelegator, __asyncValues, __makeTemplateObject, __importStar, __importDefault */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__extends", function() { return __extends; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__assign", function() { return __assign; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__rest", function() { return __rest; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__decorate", function() { return __decorate; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__param", function() { return __param; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__metadata", function() { return __metadata; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__awaiter", function() { return __awaiter; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__generator", function() { return __generator; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__exportStar", function() { return __exportStar; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__values", function() { return __values; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__read", function() { return __read; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__spread", function() { return __spread; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__spreadArrays", function() { return __spreadArrays; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__await", function() { return __await; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__asyncGenerator", function() { return __asyncGenerator; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__asyncDelegator", function() { return __asyncDelegator; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__asyncValues", function() { return __asyncValues; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__makeTemplateObject", function() { return __makeTemplateObject; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__importStar", function() { return __importStar; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__importDefault", function() { return __importDefault; });
/*! *****************************************************************************
Copyright (c) Microsoft Corporation. All rights reserved.
Licensed under the Apache License, Version 2.0 (the "License"); you may not use
this file except in compliance with the License. You may obtain a copy of the
License at http://www.apache.org/licenses/LICENSE-2.0

THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
MERCHANTABLITY OR NON-INFRINGEMENT.

See the Apache Version 2.0 License for specific language governing permissions
and limitations under the License.
***************************************************************************** */
/* global Reflect, Promise */

var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return extendStatics(d, b);
};

function __extends(d, b) {
    extendStatics(d, b);
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
}

var __assign = function() {
    __assign = Object.assign || function __assign(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
        }
        return t;
    }
    return __assign.apply(this, arguments);
}

function __rest(s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
}

function __decorate(decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
}

function __param(paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
}

function __metadata(metadataKey, metadataValue) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(metadataKey, metadataValue);
}

function __awaiter(thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
}

function __generator(thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
}

function __exportStar(m, exports) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}

function __values(o) {
    var m = typeof Symbol === "function" && o[Symbol.iterator], i = 0;
    if (m) return m.call(o);
    return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
}

function __read(o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
}

function __spread() {
    for (var ar = [], i = 0; i < arguments.length; i++)
        ar = ar.concat(__read(arguments[i]));
    return ar;
}

function __spreadArrays() {
    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
    for (var r = Array(s), k = 0, i = 0; i < il; i++)
        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
            r[k] = a[j];
    return r;
};

function __await(v) {
    return this instanceof __await ? (this.v = v, this) : new __await(v);
}

function __asyncGenerator(thisArg, _arguments, generator) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var g = generator.apply(thisArg, _arguments || []), i, q = [];
    return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;
    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }
    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }
    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }
    function fulfill(value) { resume("next", value); }
    function reject(value) { resume("throw", value); }
    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }
}

function __asyncDelegator(o) {
    var i, p;
    return i = {}, verb("next"), verb("throw", function (e) { throw e; }), verb("return"), i[Symbol.iterator] = function () { return this; }, i;
    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === "return" } : f ? f(v) : v; } : f; }
}

function __asyncValues(o) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var m = o[Symbol.asyncIterator], i;
    return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);
    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }
    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }
}

function __makeTemplateObject(cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};

function __importStar(mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result.default = mod;
    return result;
}

function __importDefault(mod) {
    return (mod && mod.__esModule) ? mod : { default: mod };
}


/***/ }),

/***/ "./src/app/add-new-user-modal/add-new-user-modal.component.css":
/*!*********************************************************************!*\
  !*** ./src/app/add-new-user-modal/add-new-user-modal.component.css ***!
  \*********************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (".multiselect-dropdown[_ngcontent-kff-c7] .dropdown-btn[_ngcontent-kff-c7] .selected-item[_ngcontent-kff-c7] {\n\tmargin-bottom: 2px !important;\n}\n.custom-file-input:lang(en)~.custom-file-label::after {\n    background-position: 0 12px !important;\n}\n\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYWRkLW5ldy11c2VyLW1vZGFsL2FkZC1uZXctdXNlci1tb2RhbC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0NBQ0MsNkJBQTZCO0FBQzlCO0FBQ0E7SUFDSSxzQ0FBc0M7QUFDMUMiLCJmaWxlIjoic3JjL2FwcC9hZGQtbmV3LXVzZXItbW9kYWwvYWRkLW5ldy11c2VyLW1vZGFsLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubXVsdGlzZWxlY3QtZHJvcGRvd25bX25nY29udGVudC1rZmYtYzddIC5kcm9wZG93bi1idG5bX25nY29udGVudC1rZmYtYzddIC5zZWxlY3RlZC1pdGVtW19uZ2NvbnRlbnQta2ZmLWM3XSB7XG5cdG1hcmdpbi1ib3R0b206IDJweCAhaW1wb3J0YW50O1xufVxuLmN1c3RvbS1maWxlLWlucHV0OmxhbmcoZW4pfi5jdXN0b20tZmlsZS1sYWJlbDo6YWZ0ZXIge1xuICAgIGJhY2tncm91bmQtcG9zaXRpb246IDAgMTJweCAhaW1wb3J0YW50O1xufVxuIl19 */");

/***/ }),

/***/ "./src/app/add-new-user-modal/add-new-user-modal.component.ts":
/*!********************************************************************!*\
  !*** ./src/app/add-new-user-modal/add-new-user-modal.component.ts ***!
  \********************************************************************/
/*! exports provided: AddNewUserModalComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AddNewUserModalComponent", function() { return AddNewUserModalComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/material */ "./node_modules/@angular/material/esm2015/material.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm2015/forms.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm2015/router.js");
/* harmony import */ var _ngx_translate_core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @ngx-translate/core */ "./node_modules/@ngx-translate/core/fesm2015/ngx-translate-core.js");
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/common/http */ "./node_modules/@angular/common/fesm2015/http.js");
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! moment */ "./node_modules/moment/moment.js");
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(moment__WEBPACK_IMPORTED_MODULE_7__);
/* harmony import */ var _services_common_service_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../services/common-service.service */ "./src/app/services/common-service.service.ts");









let AddNewUserModalComponent = class AddNewUserModalComponent {
    constructor(http, zone, commonService, router, fb, dialogRef, data, translate) {
        this.http = http;
        this.zone = zone;
        this.commonService = commonService;
        this.router = router;
        this.fb = fb;
        this.dialogRef = dialogRef;
        this.translate = translate;
        this.bankNamesList = [];
        this.noPattern = '^(0|[1-9][0-9]*)$';
        this.emailPattern = "^[a-z0-9._%+-]+@[a-z0-9.-]+.[a-z]{2,4}$";
        this.notSelected = "Not selected";
        this.isSelectedrniFile = false;
        this.isSelectedlalFile = false;
        this.isSelectedcrFile = false;
        this.isSelectedlaglFile = false;
        this.allowedExtensions = ['jpg', 'gif', 'pdf', 'png'];
        this.validation_messages = {
            NationalId: [
                { type: "required", message: "This is a required field." },
                {
                    type: "pattern",
                    message: "National identification number should be composed of digits."
                },
                /* {
                  type: "maxlength",
                  message: "National identification number should be 10 digits."
                }, */
                {
                    type: "minlength",
                    message: "National identification number should be 10 digits."
                }
            ],
            dateOfBirth: [
                { type: "required", message: "This is a required field." }
            ],
            FirstName: [
                { type: "required", message: "This is a required field." }
            ],
            LastName: [
                { type: "required", message: "This is a required field." }
            ],
            mobileNo: [
                { type: "required", message: "This is a required field." },
                {
                    type: "pattern",
                    message: "Enter valid Mobile Number"
                },
                {
                    type: "minlength",
                    message: "Minimum length should be 10."
                }
            ],
            Email: [
                { type: "required", message: "This is a required field." },
                {
                    type: "pattern",
                    message: "Enter valid email."
                }
            ],
            OnboardResolution: [
                { type: "required", message: "This is a required field." }
            ],
            lalFile: [
                { type: "required", message: "This is a required field." }
            ],
            rniFile: [
                { type: "required", message: "This is a required field." },
            ],
            laglFile: [
                { type: "required", message: "This is a required field." }
            ],
            bankName: [
                { type: "required", message: "This is a required field." }
            ],
            IBAN: [
                { type: "required", message: "This is a required field." }
            ]
        };
        this.dropdownListBank = [];
        this.formSendModel = {};
        this.isSubmitLoading = false;
        this.isNotValidNationalId = false;
        // ng-multiselect-dropdown
        this.dropdownList = [];
        this.selectedItems = [];
        this.dropdownSettings = {};
        this.dropdownSettingsBank = {};
    }
    ngOnInit() {
        console.log('<<<<<<<<<<< --- ngOnInit --- >>>>>>>>>>>');
        let today = new Date();
        let yesterday = new Date(today);
        yesterday.setDate(today.getDate() - 1);
        let month = today.getMonth();
        let year = today.getFullYear();
        this.maxDate = yesterday;
        this.maxDate.setMonth(month);
        this.maxDate.setFullYear(year);
        this.submitUser = this.fb.group({
            NationalId: ["", [_angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].pattern(this.noPattern), _angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].minLength(10)]],
            dateOfBirth: [null, [_angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].required]],
            FirstName: ["", [_angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].required]],
            LastName: ["", [_angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].required]],
            mobileNo: ["", [_angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].pattern(this.noPattern), _angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].minLength(10)]],
            Email: ["", [_angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].pattern(this.emailPattern)]],
            OnboardResolution: [""],
            lalFile: [null, this.OnboardResolutionCheckingValidate],
            rniFile: ["", [_angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].required]],
            laglFile: ["", [_angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].required]],
            bankName: ["", [_angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].required]],
            IBAN: ["", [_angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].required]]
        });
        // multiselct dropdownList
        /*this.dropdownList = [
          { item_id: 1, item_text: 'Mumbai' },
          { item_id: 2, item_text: 'Bangaluru' },
          { item_id: 3, item_text: 'Pune' },
          { item_id: 4, item_text: 'Navsari' },
          { item_id: 5, item_text: 'New Delhi' }
        ];
        this.selectedItems = [
          { item_id: 3, item_text: 'Pune' },
          { item_id: 4, item_text: 'Navsari' }
        ];
        this.dropdownSettings = {
          singleSelection: false,
          idField: 'item_id',
          textField: 'item_text',
          selectAllText: 'Select All',
          unSelectAllText: 'UnSelect All',
          itemsShowLimit: 3,
          allowSearchFilter: true
        };*/
        /*this.dropdownList = [
          { item_id: 1, item_text: 'Mumbai' },
          { item_id: 2, item_text: 'Bangaluru' },
          { item_id: 3, item_text: 'Pune' },
          { item_id: 4, item_text: 'Navsari' },
          { item_id: 5, item_text: 'New Delhi' }
        ];*/
        this.dropdownSettings = {
            singleSelection: false,
            idField: 'ibanNo',
            textField: 'ibanNo',
            selectAllText: 'Select All',
            unSelectAllText: 'UnSelect All',
            itemsShowLimit: 2,
            allowSearchFilter: true
        };
        this.dropdownSettingsBank = {
            singleSelection: false,
            idField: 'name',
            textField: 'name',
            selectAllText: 'Select All',
            unSelectAllText: 'UnSelect All',
            itemsShowLimit: 2,
            allowSearchFilter: true
        };
    }
    ngAfterViewInit() {
        console.log('<<<<<<<<<<< ngAfterViewInit >>>>>>>>>>>');
        this.roleId = localStorage.getItem('roleId');
        console.log("this.roleId::::" + this.roleId);
        this.loginId = localStorage.getItem('userId');
        console.log("this.loginId::::" + this.loginId);
        this.userId = localStorage.getItem('userId');
        this.stroageCrNoOrUidNo = localStorage.getItem('crNoOrUidNo');
        console.log("this.stroageCrNoOrUidNo::::" + this.stroageCrNoOrUidNo);
        console.log("this.userId::::" + this.userId);
        this.dropdownListBank = [];
        this.dataSubscribe = this.commonService.getIBANList(this.userId)
            .subscribe(res => {
            console.log("IBAN list::::" + res);
            this.bankNamesList = res;
            // this.zone.run(() => { 
            for (let item of res) {
                this.dropdownListBank.push({ 'name': item.tBankmaster.bankName });
                console.log('this.dropdownListBank >', this.dropdownListBank);
            }
            // });
            /*this.bankNamesList = [
            {listOfBankNames:{
              tBankmaster:{
                bankName:'sudin'
              }
            }}
            ]*/
        });
    }
    // on change rasulation
    onCaangeResolution(event) {
        this.submitUser.controls['lalFile'].updateValueAndValidity();
        // this.lalFile.updateValueAndValidity();
    }
    // custom validation code
    OnboardResolutionCheckingValidate(control) {
        const fileFiledArea = control.root.get('OnboardResolution');
        if (fileFiledArea) {
            console.log('getResolutionValue >', fileFiledArea.value);
            if (fileFiledArea.value == true) {
                if (control.value === null || control.value === undefined || control.value === '') {
                    return { 'date_error': 'This is a required field' };
                }
                else {
                    return null;
                }
            }
            else {
                // this.removeResolutionFile.nativeElement.value = "";
                // this.submitUser.controls["lalFile"].setValue('');
                // this.lalFile = null;
                // this.lalFile = '';
            }
        }
    }
    getDOB(_getDAte) {
        this.dobFormat = moment__WEBPACK_IMPORTED_MODULE_7__(_getDAte).format('DD/MM/YYYY');
        console.log('getDOB >', _getDAte);
        console.log('formatDate >', this.dobFormat);
    }
    onBlurMobile(mobile) {
        console.log("mobile[0] and type" + mobile[0] + ' ' + typeof (mobile[0]));
        /*if(mobile[0] !== '0' && mobile.length === 11){
          this.submitUser.controls["mobileNo"].setValue(null);
        }*/
    }
    fileProgress(event, fileCat) {
        console.log(fileCat);
        if (fileCat === 'rni') {
            let fileData = event.target.files[0];
            if (fileData === undefined) {
                this.rniFile = null;
                this.isSelectedrniFile = false;
            }
            if (fileData.size > 500000) {
                this.commonService.showGeneralMessage("", "Please upload < 500KB", false);
                // alert("Please upload < 500KB");
                fileData = undefined;
                this.rniFile = null;
                this.isSelectedrniFile = false;
            }
            let fname = fileData.name.split('.');
            this.rniFileName = fname[0];
            this.rniFileExtension = fname[1];
            console.log("rni fname::::" + fname[0]);
            if (!this.allowedExtensions.some((item) => item == (fname[fname.length - 1]).toLowerCase())) {
                //this.commonService.showGeneralMessage("",fname[fname.length - 1] + " file format is not allowed. Please upload recommended file types.",false);
                alert(fname[fname.length - 1] + " file format is not allowed. Please upload recommended file types.");
                //return this.isValidationOK=false;
            }
            else {
                this.rniFile = fileData;
                this.isSelectedrniFile = true;
                this.commonService.userDetails.rniFile = fileData;
            }
        }
        else if (fileCat === 'lal') {
            let fileData = event.target.files[0];
            if (fileData === undefined) {
                this.lalFile = null;
                this.isSelectedlalFile = false;
            }
            if (fileData.size > 500000) {
                //this.commonService.showGeneralMessage("","Please upload < 500KB",false);
                alert("Please upload < 500KB");
                fileData = undefined;
                this.lalFile = null;
                this.isSelectedlalFile = false;
            }
            let fname = fileData.name.split('.');
            this.lalFileName = fname[0];
            this.lalFileExtension = fname[1];
            console.log("lal fname::::" + fname);
            if (!this.allowedExtensions.some((item) => item == (fname[fname.length - 1]).toLowerCase())) {
                //this.commonService.showGeneralMessage("",fname[fname.length - 1] + " file format is not allowed. Please upload recommended file types.",false);
                alert(fname[fname.length - 1] + " file format is not allowed. Please upload recommended file types.");
                //  return this.isValidationOK=false;
            }
            else {
                console.log('fileData  >>', fileData);
                this.lalFile = fileData;
                this.isSelectedlalFile = true;
                this.commonService.userDetails.lalFile = fileData;
            }
        }
        else if (fileCat === 'lagl') {
            let fileData = event.target.files[0];
            if (fileData === undefined) {
                this.laglFile = null;
                this.isSelectedlaglFile = false;
            }
            if (fileData.size > 500000) {
                //this.commonService.showGeneralMessage("","Please upload < 500KB",false);
                alert("Please upload < 500KB");
                fileData = undefined;
                this.laglFile = null;
                this.isSelectedlaglFile = false;
            }
            let fname = fileData.name.split('.');
            this.laglFileName = fname[0];
            this.laglFileExtension = fname[1];
            console.log("lagl fname::::" + fname);
            if (!this.allowedExtensions.some((item) => item == (fname[fname.length - 1]).toLowerCase())) {
                //this.commonService.showGeneralMessage("",fname[fname.length - 1] + " file format is not allowed. Please upload recommended file types.",false);
                alert(fname[fname.length - 1] + " file format is not allowed. Please upload recommended file types.");
                //  return this.isValidationOK=false;
            }
            else {
                this.laglFile = fileData;
                this.isSelectedlaglFile = true;
                this.commonService.userDetails.laglFile = fileData;
            }
        }
        else if (fileCat === 'cr') {
            let fileData = event.target.files[0];
            if (fileData === undefined) {
                this.crFile = null;
                this.isSelectedcrFile = false;
            }
            if (fileData.size > 500000) {
                //this.commonService.showGeneralMessage("","Please upload < 500KB",false);
                alert("Please upload < 500KB");
                fileData = undefined;
                this.crFile = null;
                this.isSelectedcrFile = false;
            }
            let fname = fileData.name.split('.');
            this.crFileName = fname[0];
            this.crFileExtension = fname[1];
            console.log("cr fname::::" + fname);
            if (!this.allowedExtensions.some((item) => item == (fname[fname.length - 1]).toLowerCase())) {
                //this.commonService.showGeneralMessage("",fname[fname.length - 1] + " file format is not allowed. Please upload recommended file types.",false);
                alert(fname[fname.length - 1] + " file format is not allowed. Please upload recommended file types.");
                //  return this.isValidationOK=false;
            }
            else {
                this.crFile = fileData;
                this.isSelectedcrFile = true;
                this.commonService.userDetails.crFile = fileData;
            }
        }
        // if((this.rniFileName === this.lalFileName) || (this.rniFileName === this.laglFileExtension) || (this.rniFileName === this.crFileName)) {
        //   alert("Attachment file should not be same");
        // }
    }
    close() {
        this.dialogRef.close();
    }
    addUserSubmit() {
        console.log("this.getMciValideDataAll >>>>>>", this.getMciValideDataAll);
        console.log("amenaddUserSubmitdSubmit() called valid >", this.submitUser.valid);
        console.log("addUserSubmit VALUE >>" + JSON.stringify(this.submitUser.value));
        /*if (this.submitUser.valid) {
         this.dialogRef.close(this.submitUser.value);
       }*/
        if (this.submitUser.valid) {
            this.isSubmitLoading = true;
            /*this.formSendModel.commRegNo = this.getMciValideDataAll.cr_no;
            this.formSendModel.commRegNoMCI = this.getMciValideDataAll.cr_no;
            this.formSendModel.commRegNo = this.getMciValideDataAll.cr_no;
            this.formSendModel.cr_type = this.getMciValideDataAll.cr_type;
            this.formSendModel.cr_status = this.getMciValideDataAll.cr_status;
            this.formSendModel.cr_issue_dt = this.getMciValideDataAll.cr_issue_dt;
            this.formSendModel.cr_expiry_dt = this.getMciValideDataAll.cr_expiry_dt;
            this.formSendModel.EntityName = this.getMciValideDataAll.entity_name;
            this.formSendModel.address = this.getMciValideDataAll.address;
            this.formSendModel.city = this.getMciValideDataAll.city;
      
            this.formSendModel.FirstName = this.submitUser.controls['FirstName'].value;
            this.formSendModel.LastName = this.submitUser.controls['LastName'].value;
            this.formSendModel.NationalId = this.submitUser.controls['NationalId'].value;
            this.formSendModel.dateOfBirth = this.submitUser.controls['dateOfBirth'].value;
            this.formSendModel.mobileNo = this.submitUser.controls['mobileNo'].value;
            this.formSendModel.Email = this.submitUser.controls['Email'].value;
      
            this.formSendModel.laglFile = this.laglFile;
            this.formSendModel.rniFile = this.rniFile;
            this.formSendModel.lalFile = this.lalFile;
            this.formSendModel.OnboardResolution = this.submitUser.controls['OnboardResolution'].value;
      
            this.formSendModel.IBAN = this.submitUser.controls['IBAN'].value;
            this.formSendModel.bankName = this.submitUser.controls['bankName'].value;
            this.formSendModel.userId = this.userId;
            console.log(JSON.stringify('form modal data >', this.formSendModel));*/
            let params = new FormData();
            let on_board_resolutionvalue = 'N';
            if (this.submitUser.controls['OnboardResolution'].value == true) {
                on_board_resolutionvalue = 'Y';
                params.append('lalFileContent', this.lalFile);
            }
            else {
                on_board_resolutionvalue = 'N';
                // params.append('lalFileContent', "");
            }
            // params.append('commRegNo', this.getMciValideDataAll.cr_no);
            params.append('commRegNoMCI', this.getMciValideDataAll.cr_no);
            params.append('commRegNo', this.getMciValideDataAll.cr_no);
            params.append('cr_type', this.getMciValideDataAll.cr_type);
            params.append('cr_status', this.getMciValideDataAll.cr_status);
            params.append('cr_issue_dt', this.getMciValideDataAll.cr_issue_dt);
            params.append('cr_expiry_dt', this.getMciValideDataAll.cr_expiry_dt);
            params.append('EntityName', this.getMciValideDataAll.entity_name);
            params.append('address', this.getMciValideDataAll.address);
            params.append('city', this.getMciValideDataAll.city);
            params.append('rep_national_id', this.submitUser.controls['NationalId'].value);
            params.append('mobileNo', this.submitUser.controls['mobileNo'].value);
            params.append('Email', this.submitUser.controls['Email'].value);
            params.append('on_board_resolution', on_board_resolutionvalue);
            // params.append('lalFileContent', this.lalFile);
            params.append('laglFileContent', this.laglFile);
            params.append('rniFileContent', this.rniFile);
            params.append('name', this.submitUser.controls['FirstName'].value);
            params.append('rep_last_name', this.submitUser.controls['LastName'].value);
            params.append('dob', this.dobFormat);
            params.append('regType', 'A');
            params.append('userId', '');
            params.append('bi', this.submitUser.controls['IBAN'].value);
            params.append('bankName', this.submitUser.controls['bankName'].value);
            params.append('OfficeMobileNumber', this.submitUser.controls['mobileNo'].value);
            params.append('create_by', this.loginId);
            this.dataSubscribe = this.commonService.submitFormData('save-user', params)
                .subscribe(res => {
                this.isSubmitLoading = false;
                console.log("Gov Reg final page Response is::::" + JSON.stringify(res));
                // if (res.responseCode == 107) {
                //if (res.responseCode == 1) {
                // this.submitUser.reset();
                this.dialogRef.close(this.submitUser.value);
                this.commonService.showGeneralMessage("", res.responseMessage, false);
                // this.commonService.showGeneralMessage("", "User form is submitted successfully.", false);
                //this.router.navigate(['login']);
                //}
            });
        }
        else {
            console.log('in valid form');
            // this.isOpenValidationAlert = true;
            Object.keys(this.submitUser.controls).forEach(field => {
                // console.log('field >', field);
                const control = this.submitUser.get(field);
                // console.log('control >', control);
                control.markAsTouched({ onlySelf: true });
            });
        }
    }
    closeAddUserButton() {
        this.dialogRef.close();
        this.router.navigate(['privateaccountmanagement']);
    }
    onBlurNationalIdentity(_val) {
        this.isNotValidNationalId = false;
        console.log('onBlurNationalIdentity val >', _val);
        this.dataSubscribe = this.commonService.getNationalIdentyData(_val, this.stroageCrNoOrUidNo).subscribe(res => {
            this.getMciValideDataAll = res.userObject;
            console.log("onBlurNationalIdentity ::::" + JSON.stringify(res));
            console.log('open modal >>>>>>>>>>>>>>>.>>');
            // this.commonService.showGeneralMessage("", "User form is submitted successfully.", false);
            if (res.responseCode == 1) {
                this.dataSubscribe = this.commonService.chekingNinData(_val).subscribe(res2 => {
                    console.log('chekingNinData  >>>>>>>>>>>>>>>.>>', res2);
                    if (res2.responseCode == 1) {
                        this.submitUser.controls["FirstName"].setValue('');
                        this.submitUser.controls["LastName"].setValue('');
                        this.isNotValidNationalId = true;
                        // this.ninresponseMessage = res2.responseMessage;
                        this.ninresponseMessage = 'No Data Available';
                    }
                    else {
                        this.isNotValidNationalId = false;
                    }
                });
            }
            else {
                this.submitUser.controls["FirstName"].setValue('');
                this.submitUser.controls["LastName"].setValue('');
                this.isNotValidNationalId = true;
                this.ninresponseMessage = res.responseMessage;
            }
            /*if (res.responseCode == 0) {
                 this.submitUser.controls["FirstName"].setValue('');
                 this.submitUser.controls["LastName"].setValue('');
                 this.isNotValidNationalId = true;
     
            }else{
             this.isNotValidNationalId = false;
            }*/
            this.submitUser.controls["FirstName"].setValue(res.userObject.fname);
            this.submitUser.controls["LastName"].setValue(res.userObject.lname);
            // this.submitUser.controls["bankName"].setValue('Bank Albilad');
        });
    }
    onBlurNationalIdentitykeyup(_val) {
        console.log('onBlurNationalIdentitykeyup val >', _val);
        this.isNotValidNationalId = false;
    }
    onItemSelect(item) {
        console.log(item);
    }
    onSelectAll(items) {
        console.log(items);
    }
    viewPageData() {
        this.viewLoadData = true;
        this.dataSubscribe = this.http.get('Attachment')
            .subscribe((res) => {
            this.viewLoadData = false;
            console.log(" view data  res -------------------->", res);
            if (res.return_status > 0) {
                // this.viewData = res.return_data;
            }
        }, errRes => {
            this.viewLoadData = false;
        });
    }
    // view data fetch end
    // ----------- destroy subscription ---------
    ngOnDestroy() {
        console.log('<<<<<<<<<<< --- ngOnDestroy --- >>>>>>>>>>>');
        if (this.dataSubscribe !== undefined) {
            this.dataSubscribe.unsubscribe();
        }
    }
};
AddNewUserModalComponent.ctorParameters = () => [
    { type: _angular_common_http__WEBPACK_IMPORTED_MODULE_6__["HttpClient"] },
    { type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["NgZone"] },
    { type: _services_common_service_service__WEBPACK_IMPORTED_MODULE_8__["CommonService"] },
    { type: _angular_router__WEBPACK_IMPORTED_MODULE_4__["Router"] },
    { type: _angular_forms__WEBPACK_IMPORTED_MODULE_3__["FormBuilder"] },
    { type: _angular_material__WEBPACK_IMPORTED_MODULE_2__["MatDialogRef"] },
    { type: undefined, decorators: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"], args: [_angular_material__WEBPACK_IMPORTED_MODULE_2__["MAT_DIALOG_DATA"],] }] },
    { type: _ngx_translate_core__WEBPACK_IMPORTED_MODULE_5__["TranslateService"] }
];
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewChild"])('resolutionFile', { static: false }),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", Object)
], AddNewUserModalComponent.prototype, "removeResolutionFile", void 0);
AddNewUserModalComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-add-new-user-modal',
        template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! raw-loader!./add-new-user-modal.component.html */ "./node_modules/raw-loader/dist/cjs.js!./src/app/add-new-user-modal/add-new-user-modal.component.html")).default,
        styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! ./add-new-user-modal.component.css */ "./src/app/add-new-user-modal/add-new-user-modal.component.css")).default]
    }),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__param"](6, Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"])(_angular_material__WEBPACK_IMPORTED_MODULE_2__["MAT_DIALOG_DATA"])),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_angular_common_http__WEBPACK_IMPORTED_MODULE_6__["HttpClient"],
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["NgZone"],
        _services_common_service_service__WEBPACK_IMPORTED_MODULE_8__["CommonService"],
        _angular_router__WEBPACK_IMPORTED_MODULE_4__["Router"],
        _angular_forms__WEBPACK_IMPORTED_MODULE_3__["FormBuilder"],
        _angular_material__WEBPACK_IMPORTED_MODULE_2__["MatDialogRef"], Object, _ngx_translate_core__WEBPACK_IMPORTED_MODULE_5__["TranslateService"]])
], AddNewUserModalComponent);



/***/ }),

/***/ "./src/app/add-new-workflow/add-new-workflow.component.css":
/*!*****************************************************************!*\
  !*** ./src/app/add-new-workflow/add-new-workflow.component.css ***!
  \*****************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkZC1uZXctd29ya2Zsb3cvYWRkLW5ldy13b3JrZmxvdy5jb21wb25lbnQuY3NzIn0= */");

/***/ }),

/***/ "./src/app/add-new-workflow/add-new-workflow.component.ts":
/*!****************************************************************!*\
  !*** ./src/app/add-new-workflow/add-new-workflow.component.ts ***!
  \****************************************************************/
/*! exports provided: AddNewWorkflowComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AddNewWorkflowComponent", function() { return AddNewWorkflowComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm2015/forms.js");
/* harmony import */ var _services_common_service_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../services/common-service.service */ "./src/app/services/common-service.service.ts");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm2015/router.js");
/* harmony import */ var _ngx_translate_core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @ngx-translate/core */ "./node_modules/@ngx-translate/core/fesm2015/ngx-translate-core.js");






let AddNewWorkflowComponent = class AddNewWorkflowComponent {
    constructor(commonService, router, fb, translate) {
        this.commonService = commonService;
        this.router = router;
        this.fb = fb;
        this.translate = translate;
        this.lgTypeList = [];
        this.bankNamesList = [];
        this.actionList = [];
        this.supplierList = [];
        this.activityList = [];
        this.isworkflowDetails = false;
        this.bankIBANList = [];
        this.IBANList = [];
        this.menuAccess = [];
        this.isworkflowdisable = true; //disable button
        this.menuIssuanceCreate = false;
        this.menuReleaseCreate = false;
        this.menuAmendCreate = false;
        this.menuConfiscateCreate = false;
        this.roleId = localStorage.getItem('roleId');
        console.log("this.roleId::::" + this.roleId);
        this.loginId = localStorage.getItem('userId');
        console.log("this.loginId::::" + this.loginId);
        this.userId = localStorage.getItem('userId');
        console.log("this.userId::::" + this.userId);
        this.crNoOrUidNo = localStorage.getItem('crNoOrUidNo');
        console.log("this.crNoOrUidNo::::" + this.crNoOrUidNo);
        this.acl = JSON.parse(localStorage.getItem('acl'));
        console.log("ACL ::::" + JSON.stringify(this.acl));
        if (localStorage.getItem('onBoardResolution') == 'Y') {
            this.isnormaluser = false;
        }
        else {
            this.isnormaluser = true;
        }
        console.log("editworkflowId >>>>>>>>>>>> ::::" + localStorage.getItem('editworkflowId'));
        if (this.acl.Issuance !== undefined) {
            console.log("Issuance workflow_id :" + this.acl.Issuance.workflow_id);
            for (let actions of this.acl.Issuance['subMenu']) {
                console.log(actions.action_nm);
                if (actions.action_nm === 'Create') {
                    this.menuIssuanceCreate = true;
                }
            }
        }
        if (this.acl.Amendment !== undefined) {
            console.log("Amendment workflow_id :" + this.acl.Amendment.workflow_id);
            for (let actions of this.acl.Amendment['subMenu']) {
                console.log(actions.action_nm);
                if (actions.action_nm === 'Create') {
                    this.menuAmendCreate = true;
                }
            }
        }
        if (this.acl.Confiscate !== undefined) {
            console.log("Confiscate workflow_id :" + this.acl.Confiscate.workflow_id);
            for (let actions of this.acl.Confiscate['subMenu']) {
                console.log(actions.action_nm);
                if (actions.action_nm === 'Create') {
                    this.menuConfiscateCreate = true;
                }
            }
        }
        if (this.acl.Release !== undefined) {
            console.log("Release workflow_id :" + this.acl.Release.workflow_id);
            for (let actions of this.acl.Release['subMenu']) {
                console.log(actions.action_nm);
                if (actions.action_nm === 'Create') {
                    this.menuReleaseCreate = true;
                }
            }
        }
    }
    ngOnInit() {
        this.commonService.getMenuByLoginId(this.loginId)
            .subscribe(res => {
            this.menuAccess = res[0];
            console.log("getMenuByLoginId :" + JSON.stringify(res));
            //console.log("MenuByLoginId >>> "+JSON.stringify(res[0].Amendment['subMenu'][0].action_nm));
        });
        this.commonService.getLGTypeList()
            .subscribe(res => {
            console.log("LG list::::" + JSON.stringify(res));
            this.lgTypeList = res;
        });
        //To get IBAN
        /* this.commonService.getIBANList(this.userId)
        .subscribe(res => {
          console.log("IBAN list::::" + JSON.stringify(res));
          this.bankNamesList = res;
        }); */
        this.commonService.getIbanListByLoginId(this.userId)
            .subscribe(res => {
            console.log("NEW IBAN list::::" + JSON.stringify(res));
            this.bankIBANList = res;
        });
        this.commonService.getActionList()
            .subscribe(res => {
            console.log("Action list::::" + JSON.stringify(res));
            this.actionList = res;
        });
        this.commonService.getSupplierByCRNo(this.loginId)
            .subscribe(res => {
            console.log("Supplier list::::" + JSON.stringify(res));
            this.supplierList = res;
        });
        this.commonService.getActivityMasterList()
            .subscribe(res => {
            console.log("Activity list::::" + JSON.stringify(res));
            this.activityList = res;
        });
        this.workflowForm = this.fb.group({
            workflow_id: [''],
            menu_id: [1],
            workflow_desc: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required]],
            status: ['A'],
            type: ['E'],
            entity_id: [this.crNoOrUidNo],
            create_by: [this.userId],
            steps: this.fb.array([
                // load first row at start
                this.getStep()
            ])
        });
        this.commonService.editworkflowIdObservable.subscribe((WFID) => {
            if (WFID) {
                this.clearAllSteps();
                console.log('observable data get @=================>', WFID);
                this.commonService.workflowDetails(this.crNoOrUidNo, WFID)
                    .subscribe(res => {
                    if (res) {
                        this.commonService.getIbanListByLoginId(res[0].create_by)
                            .subscribe(res => {
                            console.log("NEW IBAN list::::" + JSON.stringify(res));
                            this.bankIBANList = res;
                        });
                        this.commonService.getSupplierByCRNo(res[0].create_by)
                            .subscribe(res => {
                            console.log("Supplier list::::" + JSON.stringify(res));
                            this.supplierList = res;
                        });
                        // this.workflowDetails = res;
                        this.isworkflowDetails = true;
                        console.log("workflowDetails :::: >>>>>>" + JSON.stringify(res));
                        this.workflowForm.patchValue({
                            workflow_id: res[0].workflow_id,
                            menu_id: res[0].menu_id,
                            workflow_desc: res[0].workflow_desc,
                            status: 'A',
                            type: 'E',
                            entity_id: res[0].entity_id,
                            create_by: this.userId,
                        });
                        /*  const stepsArray = [
                           {login_id: '2000000007', bank_code: 'ALR', iban_no: 'SA7630000000000222222222', level: "1", step: 0, action_id: "1", price_limit: "150", lg_type_id: "1", activity_id: "3", create_by: "2000000007", isEditable: true },
                           {login_id: '2000000007', bank_code: 'ALR', iban_no: 'SA7630000000000222222222', level: "1", step: 0, action_id: "2", price_limit: "150", lg_type_id: "1", activity_id: "3", create_by: "2000000007", isEditable: true },
                           
                         ]; */
                        const stepsArray = [];
                        //
                        for (var val of res) {
                            let x = { workflow_step_id: val.workflow_step_id, login_id: val.login_id, bank_code: val.bank_code, iban_no: val.iban_no, level: val.level, step: val.step, action_id: JSON.stringify(val.action_id), price_limit: JSON.stringify(val.price_limit), lg_type_id: val.lg_type_id, activity_id: JSON.stringify(val.activity_id), create_by: this.userId, isEditable: true };
                            stepsArray.push(x);
                        }
                        this.onSelectBank(val.bank_code);
                        this.step_length = stepsArray.length;
                        console.log("val.bank_code :::: >>>>>>" + val.bank_code);
                        console.log("stepsArray :::: >>>>>>" + stepsArray);
                        console.log("stepsArray Length :::: >>>>>>" + stepsArray.length);
                        const control = this.workflowForm.controls['steps'];
                        for (let i = 1; i < res.length; i++) {
                            control.push(this.getStep());
                        }
                        this.workflowForm.patchValue({ steps: stepsArray });
                        this.isworkflowdisable = false; //enable button 
                    }
                });
            }
        });
        /* if(localStorage.getItem('editworkflowId')){
          this.editworkflowId = localStorage.getItem('editworkflowId');
          console.log("this.editworkflowId::::" + this.editworkflowId);
          localStorage.removeItem("editworkflowId");
    
          this.commonService.workflowDetails(this.userId,this.editworkflowId)
          .subscribe(res => {
            if(res){
             // this.workflowDetails = res;
              this.isworkflowDetails = true;
              console.log("workflowDetails :::: >>>>>>" + JSON.stringify(res));
    
    
              this.workflowForm.patchValue({
                workflow_id: res[0].workflow_id,
                menu_id: res[0].menu_id,
                workflow_desc: res[0].workflow_desc,
                status: 'A',
                type: 'E',
                entity_id: res[0].entity_id,
                create_by: this.userId,
              });
             
              const stepsArray =[];
              for (var val of res) {
                let x = {workflow_step_id: val.workflow_step_id, login_id: val.login_id, bank_code: val.bank_code, iban_no: val.iban_no, level: val.level, step: val.step, action_id: JSON.stringify(val.action_id), price_limit: JSON.stringify(val.price_limit), lg_type_id:  val.lg_type_id, activity_id: JSON.stringify(val.activity_id), create_by: this.userId, isEditable: true }
                stepsArray.push(x);
              }
              this.onSelectBank(val.bank_code);
              this.step_length = stepsArray.length;
              console.log("stepsArray :::: >>>>>>"+stepsArray);
              console.log("stepsArray Length :::: >>>>>>"+stepsArray.length);
    
              
    
              const control = <FormArray>this.workflowForm.controls['steps'];
              for (let i = 1; i < res.length; i++) {
                control.push(this.getStep());
              }
              this.workflowForm.patchValue({steps: stepsArray});
              this.isworkflowdisable = false; //enable button
    
            }
    
          });
        } */
    }
    ngAfterViewInit() {
        console.log('Hi Sudin');
    }
    getStep() {
        const numberPatern = '^[0-9.,]+$';
        return this.fb.group({
            workflow_step_id: [''],
            login_id: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
            bank_code: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
            iban_no: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
            level: ['1'],
            step: [''],
            action_id: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
            price_limit: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
            lg_type_id: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
            activity_id: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
            //current_action: ['', [Validators.required, Validators.pattern(numberPatern)]],
            //next_action: ['', [Validators.required, Validators.pattern(numberPatern)]],
            //next_state: ['', [Validators.required, Validators.pattern(numberPatern)]],
            //conditional: [''],
            //condition_value: ['', [Validators.required, Validators.pattern(numberPatern)]],
            create_by: [this.userId],
            isEditable: [true]
        });
    }
    /**
     * Add new step row into form
     */
    addStep(i, last) {
        const control = this.workflowForm.controls['steps'];
        //control.push(this.getStep());
        console.log("I >> " + i);
        console.log("last :" + last);
        control.insert(i + 1, this.getStep());
        this.step_length = control.length;
        console.log("length >>" + control.length);
        //this.isworkflowdisable = false; //enable button 
        if (last) {
            this.isworkflowdisable = true; //disable button 
        }
        console.log(this.isworkflowdisable);
    }
    /**
     * Remove step row from form on click delete button
     */
    removeStep(i) {
        const control = this.workflowForm.controls['steps'];
        control.removeAt(i);
    }
    /**
     * This is one of the way how clear steps fields.
     */
    clearAllSteps() {
        const control = this.workflowForm.controls['steps'];
        while (control.length) {
            control.removeAt(control.length - 1);
        }
        control.clearValidators();
        control.push(this.getStep());
    }
    saveworkflow() {
        console.log(this.workflowForm.value);
        this.commonService.saveworkflow(this.workflowForm.value)
            .subscribe(res => {
            console.log(res);
            this.commonService.showGeneralMessage("Message", res.responseMessage, false);
            this.commonService.getMenuByLoginId(this.loginId)
                .subscribe(menures => {
                localStorage.removeItem('acl');
                console.log("acl :" + JSON.stringify(menures[0]));
                localStorage.setItem('acl', JSON.stringify(menures[0]));
                this.commonService.setworkflowchangeObjService(JSON.stringify(menures[0]));
            });
            if (res.responseCode == '1') {
                this.router.navigate(['privateaccountmanagement']);
            }
        });
    }
    /*   onSelectBank(){
        console.log('onSelectBank value >', this.bank_code);
        
        // this.dataSubscribe = this.commonService.getListData('getUserDetail', value)
        // .subscribe(res => {
        //   console.log("onSelectBank response  >>>>>",  res);
        // });
    
      } */
    onSelectBank(bank_code) {
        this.iban_no = [];
        let dropDownData = this.bankIBANList.find((data) => data.bank_code === bank_code);
        if (dropDownData) {
            console.log(dropDownData);
            this.IBANList = dropDownData.Iban_no;
        }
        /*  if (dropDownData) {
           this.IBANList = dropDownData.Iban_no;
           if(this.IBANList){
             this.iban_no=this.IBANList[0];
           }
           
         } else {
           this.IBANList = [];
         } */
    }
    onSelectAction(action_id, i, last) {
        console.log("action_id :" + action_id);
        console.log("i::" + i);
        console.log("Last " + last);
        if (last && (action_id == 3)) {
            this.isworkflowdisable = false; //enable button 
        }
        if (last && (action_id == 2)) {
            this.isworkflowdisable = true; //enable button 
        }
        console.log(this.isworkflowdisable);
    }
};
AddNewWorkflowComponent.ctorParameters = () => [
    { type: _services_common_service_service__WEBPACK_IMPORTED_MODULE_3__["CommonService"] },
    { type: _angular_router__WEBPACK_IMPORTED_MODULE_4__["Router"] },
    { type: _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormBuilder"] },
    { type: _ngx_translate_core__WEBPACK_IMPORTED_MODULE_5__["TranslateService"] }
];
AddNewWorkflowComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-add-new-workflow',
        template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! raw-loader!./add-new-workflow.component.html */ "./node_modules/raw-loader/dist/cjs.js!./src/app/add-new-workflow/add-new-workflow.component.html")).default,
        styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! ./add-new-workflow.component.css */ "./src/app/add-new-workflow/add-new-workflow.component.css")).default]
    }),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_services_common_service_service__WEBPACK_IMPORTED_MODULE_3__["CommonService"], _angular_router__WEBPACK_IMPORTED_MODULE_4__["Router"], _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormBuilder"], _ngx_translate_core__WEBPACK_IMPORTED_MODULE_5__["TranslateService"]])
], AddNewWorkflowComponent);



/***/ }),

/***/ "./src/app/admin-dash-board/admin-dash-board.component.css":
/*!*****************************************************************!*\
  !*** ./src/app/admin-dash-board/admin-dash-board.component.css ***!
  \*****************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluLWRhc2gtYm9hcmQvYWRtaW4tZGFzaC1ib2FyZC5jb21wb25lbnQuY3NzIn0= */");

/***/ }),

/***/ "./src/app/admin-dash-board/admin-dash-board.component.ts":
/*!****************************************************************!*\
  !*** ./src/app/admin-dash-board/admin-dash-board.component.ts ***!
  \****************************************************************/
/*! exports provided: AdminDashBoardComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AdminDashBoardComponent", function() { return AdminDashBoardComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm2015/router.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm2015/forms.js");
/* harmony import */ var _services_common_service_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../services/common-service.service */ "./src/app/services/common-service.service.ts");
/* harmony import */ var ng2_charts__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ng2-charts */ "./node_modules/ng2-charts/fesm2015/ng2-charts.js");
/* harmony import */ var _ngx_translate_core__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @ngx-translate/core */ "./node_modules/@ngx-translate/core/fesm2015/ngx-translate-core.js");







let AdminDashBoardComponent = class AdminDashBoardComponent {
    constructor(router, formBuilder, commonService, translate) {
        this.router = router;
        this.formBuilder = formBuilder;
        this.commonService = commonService;
        this.translate = translate;
        this.isLGClicked = true;
        this.picolor = ['#008077', '#02282b', '#0f7ff5', '#02423d', '#3bbcf3', '#78f1b5', '#0b8d4d', '#02264c', '#0064ca', '#012b28'];
        this.i = 0;
        this.dtOptions = {};
        this.dtOptionsAR = {};
        this.pieChartOptions = {
            responsive: true,
            legend: { position: 'bottom',
                labels: {
                    fontSize: 8
                }
            }
        };
        this.pieChartLabels = [];
        this.pieChartData = [];
        this.pieChartType = 'pie';
        this.pieChartLegend = true;
        this.pieChartPlugins = [];
        this.doughnutposition = 'top';
        this.pieChartColors = [
            {
                backgroundColor: []
            },
        ];
        Object(ng2_charts__WEBPACK_IMPORTED_MODULE_5__["monkeyPatchChartJsTooltip"])();
        Object(ng2_charts__WEBPACK_IMPORTED_MODULE_5__["monkeyPatchChartJsLegend"])();
    }
    ngOnInit() {
        this.userId = localStorage.getItem('userId');
        console.log("this.userId::::" + this.userId);
        this.userName = localStorage.getItem('userName');
        console.log("this.userName::::" + this.userName);
        this.roleId = localStorage.getItem('roleId');
        console.log("this.role_ID::::" + this.roleId);
        /*************************************************** */
        this.dtOptionsAR = {
            pageLength: 10,
            processing: true,
            language: {
                processing: "جارٍ التحميل...",
                search: "ابحث:",
                lengthMenu: "أظهر _MENU_ مدخلات",
                info: "إظهار _START_ إلى _END_ من أصل _TOTAL_ مدخل",
                infoEmpty: "يعرض 0 إلى 0 من أصل 0 سجل",
                infoFiltered: "(منتقاة من مجموع _MAX_ مُدخل)",
                infoPostFix: "",
                loadingRecords: "جارٍ التحميل...",
                zeroRecords: "لم يعثر على أية سجلات",
                emptyTable: "ليست هناك بيانات متاحة في الجدول",
                paginate: {
                    first: "الأول",
                    previous: "السابق",
                    next: "التالي",
                    last: "الأخير"
                },
                aria: {
                    sortAscending: ": تفعيل لترتيب العمود تصاعدياً",
                    sortDescending: ": تفعيل لترتيب العمود تنازلياً"
                }
            }
        };
        this.dtOptions = {
            pageLength: 10,
            processing: true,
        };
        this.commonService.checkSessionExpired(this.userId)
            .then((data) => {
            if (data == 0) {
                this.commonService.showGeneralMessage(this.translate.instant('HOME.Session_Expired'), this.translate.instant('HOME.logged_out'), false);
                this.commonService.logout(this.userId);
                return;
            }
            else {
            }
        });
        /************************************************** */
        this.commonService.adminGetGraphData()
            .subscribe(res => {
            console.log(res);
            for (var val of res.userObject) {
                this.pieChartLabels.push(val.lg_type);
                this.pieChartData.push(val.no_of_count);
                this.pieChartColors[0].backgroundColor.push(this.picolor[this.i]);
                this.i++;
            }
        });
        //To get pending list
        this.commonService.getActiveLgListForAdmin()
            .subscribe(res => {
            console.log(res);
            this.LGLists = res.userObject;
        });
        this.commonService.adminCountOfActive()
            .subscribe(res => {
            console.log(res);
            this.ActiveLG = res;
        });
        this.commonService.adminCountOfPending()
            .subscribe(res => {
            console.log(res);
            this.PendingLG = res;
        });
        this.commonService.adminCountOfExpired()
            .subscribe(res => {
            console.log(res);
            this.ExpiredLG = res;
            //console.log("CountOfNotPending::::" + JSON.stringify(this.ActiveLG));
        });
        this.commonService.adminCountOfPendingApproval()
            .subscribe(res => {
            console.log(res);
            this.PendingApprovalLG = res;
            //console.log("CountOfNotPending::::" + JSON.stringify(this.ActiveLG));
        });
    }
};
AdminDashBoardComponent.ctorParameters = () => [
    { type: _angular_router__WEBPACK_IMPORTED_MODULE_2__["Router"] },
    { type: _angular_forms__WEBPACK_IMPORTED_MODULE_3__["FormBuilder"] },
    { type: _services_common_service_service__WEBPACK_IMPORTED_MODULE_4__["CommonService"] },
    { type: _ngx_translate_core__WEBPACK_IMPORTED_MODULE_6__["TranslateService"] }
];
AdminDashBoardComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-admin-dash-board',
        template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! raw-loader!./admin-dash-board.component.html */ "./node_modules/raw-loader/dist/cjs.js!./src/app/admin-dash-board/admin-dash-board.component.html")).default,
        styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! ./admin-dash-board.component.css */ "./src/app/admin-dash-board/admin-dash-board.component.css")).default]
    }),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_angular_router__WEBPACK_IMPORTED_MODULE_2__["Router"], _angular_forms__WEBPACK_IMPORTED_MODULE_3__["FormBuilder"], _services_common_service_service__WEBPACK_IMPORTED_MODULE_4__["CommonService"], _ngx_translate_core__WEBPACK_IMPORTED_MODULE_6__["TranslateService"]])
], AdminDashBoardComponent);



/***/ }),

/***/ "./src/app/app-routing.module.ts":
/*!***************************************!*\
  !*** ./src/app/app-routing.module.ts ***!
  \***************************************/
/*! exports provided: AppRoutingModule */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AppRoutingModule", function() { return AppRoutingModule; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm2015/router.js");
/* harmony import */ var _private_entity_reg1_private_entity_reg1_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./private-entity-reg1/private-entity-reg1.component */ "./src/app/private-entity-reg1/private-entity-reg1.component.ts");
/* harmony import */ var _private_entity_reg2_private_entity_reg2_component__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./private-entity-reg2/private-entity-reg2.component */ "./src/app/private-entity-reg2/private-entity-reg2.component.ts");
/* harmony import */ var _private_entity_reg3_private_entity_reg3_component__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./private-entity-reg3/private-entity-reg3.component */ "./src/app/private-entity-reg3/private-entity-reg3.component.ts");
/* harmony import */ var _private_entity_reg_final_private_entity_reg_final_component__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./private-entity-reg-final/private-entity-reg-final.component */ "./src/app/private-entity-reg-final/private-entity-reg-final.component.ts");
/* harmony import */ var _government_entity_reg1_government_entity_reg1_component__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./government-entity-reg1/government-entity-reg1.component */ "./src/app/government-entity-reg1/government-entity-reg1.component.ts");
/* harmony import */ var _government_entity_reg2_government_entity_reg2_component__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./government-entity-reg2/government-entity-reg2.component */ "./src/app/government-entity-reg2/government-entity-reg2.component.ts");
/* harmony import */ var _government_entity_reg3_government_entity_reg3_component__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./government-entity-reg3/government-entity-reg3.component */ "./src/app/government-entity-reg3/government-entity-reg3.component.ts");
/* harmony import */ var _login_login_component__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./login/login.component */ "./src/app/login/login.component.ts");
/* harmony import */ var _request_lg_issuance_request_lg_issuance_component__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./request-lg-issuance/request-lg-issuance.component */ "./src/app/request-lg-issuance/request-lg-issuance.component.ts");
/* harmony import */ var _request_lg_issuance_approval_request_lg_issuance_approval_component__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./request-lg-issuance-approval/request-lg-issuance-approval.component */ "./src/app/request-lg-issuance-approval/request-lg-issuance-approval.component.ts");
/* harmony import */ var _request_lg_issuance_payment_request_lg_issuance_payment_component__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./request-lg-issuance-payment/request-lg-issuance-payment.component */ "./src/app/request-lg-issuance-payment/request-lg-issuance-payment.component.ts");
/* harmony import */ var _landing_landing_component__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./landing/landing.component */ "./src/app/landing/landing.component.ts");
/* harmony import */ var _gov_entity_dashboard_gov_entity_dashboard_component__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./gov-entity-dashboard/gov-entity-dashboard.component */ "./src/app/gov-entity-dashboard/gov-entity-dashboard.component.ts");
/* harmony import */ var _gov_pending_action_gov_pending_action_component__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./gov-pending-action/gov-pending-action.component */ "./src/app/gov-pending-action/gov-pending-action.component.ts");
/* harmony import */ var _help_help_component__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./help/help.component */ "./src/app/help/help.component.ts");
/* harmony import */ var _forgot_password_forgot_password_component__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./forgot-password/forgot-password.component */ "./src/app/forgot-password/forgot-password.component.ts");
/* harmony import */ var _request_lg_issuance_gov_approval_request_lg_issuance_gov_approval_component__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./request-lg-issuance-gov-approval/request-lg-issuance-gov-approval.component */ "./src/app/request-lg-issuance-gov-approval/request-lg-issuance-gov-approval.component.ts");
/* harmony import */ var _govpendingtasks_govpendingtasks_component__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./govpendingtasks/govpendingtasks.component */ "./src/app/govpendingtasks/govpendingtasks.component.ts");
/* harmony import */ var _private_entity_reg_info_private_entity_reg_info_component__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./private-entity-reg-info/private-entity-reg-info.component */ "./src/app/private-entity-reg-info/private-entity-reg-info.component.ts");
/* harmony import */ var _privatependingtasks_privatependingtasks_component__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./privatependingtasks/privatependingtasks.component */ "./src/app/privatependingtasks/privatependingtasks.component.ts");
/* harmony import */ var _dash_board_dash_board_component__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./dash-board/dash-board.component */ "./src/app/dash-board/dash-board.component.ts");
/* harmony import */ var _government_entity_reg_view_government_entity_reg_view_component__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./government-entity-reg-view/government-entity-reg-view.component */ "./src/app/government-entity-reg-view/government-entity-reg-view.component.ts");
/* harmony import */ var _admin_dash_board_admin_dash_board_component__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ./admin-dash-board/admin-dash-board.component */ "./src/app/admin-dash-board/admin-dash-board.component.ts");
/* harmony import */ var _private_lg_management_private_lg_management_component__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ./private-lg-management/private-lg-management.component */ "./src/app/private-lg-management/private-lg-management.component.ts");
/* harmony import */ var _private_lg_details_private_lg_details_component__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ./private-lg-details/private-lg-details.component */ "./src/app/private-lg-details/private-lg-details.component.ts");
/* harmony import */ var _logout_logout_component__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ./logout/logout.component */ "./src/app/logout/logout.component.ts");
/* harmony import */ var _gov_lg_management_gov_lg_management_component__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! ./gov-lg-management/gov-lg-management.component */ "./src/app/gov-lg-management/gov-lg-management.component.ts");
/* harmony import */ var _gov_lg_details_gov_lg_details_component__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! ./gov-lg-details/gov-lg-details.component */ "./src/app/gov-lg-details/gov-lg-details.component.ts");
/* harmony import */ var _private_account_management_private_account_management_component__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! ./private-account-management/private-account-management.component */ "./src/app/private-account-management/private-account-management.component.ts");
/* harmony import */ var _government_pending_task_government_pending_task_component__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(/*! ./government-pending-task/government-pending-task.component */ "./src/app/government-pending-task/government-pending-task.component.ts");
/* harmony import */ var _edit_user_details_edit_user_details_component__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(/*! ./edit-user-details/edit-user-details.component */ "./src/app/edit-user-details/edit-user-details.component.ts");
/* harmony import */ var _add_new_workflow_add_new_workflow_component__WEBPACK_IMPORTED_MODULE_34__ = __webpack_require__(/*! ./add-new-workflow/add-new-workflow.component */ "./src/app/add-new-workflow/add-new-workflow.component.ts");
/* harmony import */ var _government_account_management_government_account_management_component__WEBPACK_IMPORTED_MODULE_35__ = __webpack_require__(/*! ./government-account-management/government-account-management.component */ "./src/app/government-account-management/government-account-management.component.ts");
/* harmony import */ var _government_workflow_government_workflow_component__WEBPACK_IMPORTED_MODULE_36__ = __webpack_require__(/*! ./government-workflow/government-workflow.component */ "./src/app/government-workflow/government-workflow.component.ts");
/* harmony import */ var _private_amendment_list_private_amendment_list_component__WEBPACK_IMPORTED_MODULE_37__ = __webpack_require__(/*! ./private-amendment-list/private-amendment-list.component */ "./src/app/private-amendment-list/private-amendment-list.component.ts");
/* harmony import */ var _private_confiscate_list_private_confiscate_list_component__WEBPACK_IMPORTED_MODULE_38__ = __webpack_require__(/*! ./private-confiscate-list/private-confiscate-list.component */ "./src/app/private-confiscate-list/private-confiscate-list.component.ts");
/* harmony import */ var _private_release_list_private_release_list_component__WEBPACK_IMPORTED_MODULE_39__ = __webpack_require__(/*! ./private-release-list/private-release-list.component */ "./src/app/private-release-list/private-release-list.component.ts");
/* harmony import */ var _government_amendment_list_government_amendment_list_component__WEBPACK_IMPORTED_MODULE_40__ = __webpack_require__(/*! ./government-amendment-list/government-amendment-list.component */ "./src/app/government-amendment-list/government-amendment-list.component.ts");
/* harmony import */ var _government_confiscate_list_government_confiscate_list_component__WEBPACK_IMPORTED_MODULE_41__ = __webpack_require__(/*! ./government-confiscate-list/government-confiscate-list.component */ "./src/app/government-confiscate-list/government-confiscate-list.component.ts");
/* harmony import */ var _government_release_list_government_release_list_component__WEBPACK_IMPORTED_MODULE_42__ = __webpack_require__(/*! ./government-release-list/government-release-list.component */ "./src/app/government-release-list/government-release-list.component.ts");
/* harmony import */ var _goverment_edit_user_details_goverment_edit_user_details_component__WEBPACK_IMPORTED_MODULE_43__ = __webpack_require__(/*! ./goverment-edit-user-details/goverment-edit-user-details.component */ "./src/app/goverment-edit-user-details/goverment-edit-user-details.component.ts");




















 //Subhra
 //Subhra




 //Subhra 040220
 //Subhra 040220

 //Subhra 060220
 //Subhra 060220
 //240320












const routes = [
    { path: 'home', component: _landing_landing_component__WEBPACK_IMPORTED_MODULE_14__["LandingComponent"] },
    { path: 'login', component: _login_login_component__WEBPACK_IMPORTED_MODULE_10__["LoginComponent"] },
    { path: 'logout', component: _logout_logout_component__WEBPACK_IMPORTED_MODULE_28__["LogoutComponent"] },
    { path: 'forgotPassword', component: _forgot_password_forgot_password_component__WEBPACK_IMPORTED_MODULE_18__["ForgotPasswordComponent"] },
    { path: 'privateEntityReg', component: _private_entity_reg1_private_entity_reg1_component__WEBPACK_IMPORTED_MODULE_3__["PrivateEntityReg1Component"] },
    { path: 'privateEntityReg2', component: _private_entity_reg2_private_entity_reg2_component__WEBPACK_IMPORTED_MODULE_4__["PrivateEntityReg2Component"] },
    { path: 'privateEntityReg3', component: _private_entity_reg3_private_entity_reg3_component__WEBPACK_IMPORTED_MODULE_5__["PrivateEntityReg3Component"] },
    { path: 'privateEntityRegFinal', component: _private_entity_reg_final_private_entity_reg_final_component__WEBPACK_IMPORTED_MODULE_6__["PrivateEntityRegFinalComponent"] },
    { path: 'dashboard', component: _dash_board_dash_board_component__WEBPACK_IMPORTED_MODULE_23__["DashBoardComponent"] },
    // { path: 'privateEntityReg/dashboard', component: DashBoardComponent },
    // { path: 'privateEntityReg2/dashboard', component: DashBoardComponent },
    // { path: 'privateEntityReg3/dashboard', component: DashBoardComponent },
    // { path: 'privateEntityRegFinal/dashboard', component: DashBoardComponent },
    { path: 'governmentEntityReg', component: _government_entity_reg1_government_entity_reg1_component__WEBPACK_IMPORTED_MODULE_7__["GovernmentEntityReg1Component"] },
    { path: 'governmentEntityReg2', component: _government_entity_reg2_government_entity_reg2_component__WEBPACK_IMPORTED_MODULE_8__["GovernmentEntityReg2Component"] },
    { path: 'governmentEntityReg3', component: _government_entity_reg3_government_entity_reg3_component__WEBPACK_IMPORTED_MODULE_9__["GovernmentEntityReg3Component"] },
    { path: 'govDashboard', component: _gov_entity_dashboard_gov_entity_dashboard_component__WEBPACK_IMPORTED_MODULE_15__["GovEntityDashboardComponent"] },
    { path: 'pendingAction', component: _gov_pending_action_gov_pending_action_component__WEBPACK_IMPORTED_MODULE_16__["GovPendingActionComponent"] },
    // { path: 'governmentEntityReg/govDashboard', component: GovEntityDashboardComponent },
    // { path: 'governmentEntityReg2/govDashboard', component: GovEntityDashboardComponent },
    // { path: 'governmentEntityReg3/govDashboard', component: GovEntityDashboardComponent },
    // { path: 'governmentEntityReg/pendingAction', component: GovPendingActionComponent },
    // { path: 'governmentEntityReg2/pendingAction', component: GovPendingActionComponent },
    // { path: 'governmentEntityReg3/pendingAction', component: GovPendingActionComponent },
    // { path: 'privateEntityReg/requestLgIssuance', component: RequestLgIssuanceComponent },
    // { path: 'privateEntityReg2/requestLgIssuance', component: RequestLgIssuanceComponent },
    // { path: 'privateEntityReg3/requestLgIssuance', component: RequestLgIssuanceComponent },
    // { path: 'privateEntityRegFinal/requestLgIssuance', component: RequestLgIssuanceComponent },
    // { path: 'privateEntityReg/dashboard/', component: DashBoardComponent },
    { path: 'requestLgIssuance', component: _request_lg_issuance_request_lg_issuance_component__WEBPACK_IMPORTED_MODULE_11__["RequestLgIssuanceComponent"] },
    { path: 'requestLgIssuanceApproval', component: _request_lg_issuance_approval_request_lg_issuance_approval_component__WEBPACK_IMPORTED_MODULE_12__["RequestLgIssuanceApprovalComponent"] },
    { path: 'requestLgIssuanceGovApproval', component: _request_lg_issuance_gov_approval_request_lg_issuance_gov_approval_component__WEBPACK_IMPORTED_MODULE_19__["RequestLgIssuanceGovApprovalComponent"] },
    { path: 'requestLgIssuancePayment', component: _request_lg_issuance_payment_request_lg_issuance_payment_component__WEBPACK_IMPORTED_MODULE_13__["RequestLgIssuancePaymentComponent"] },
    // { path: 'dashboard/requestLgIssuance', component: RequestLgIssuanceComponent },
    // { path: 'dashboard/requestLgIssuanceApproval', component: RequestLgIssuanceApprovalComponent },
    // { path: 'dashboard/requestLgIssuancePayment', component: RequestLgIssuancePaymentComponent },
    // { path: 'requestLgIssuance/dashboard', component: DashBoardComponent },
    // { path: 'requestLgIssuanceApproval/dashboard', component: DashBoardComponent },
    // { path: 'requestLgIssuancePayment/dashboard', component: DashBoardComponent },
    { path: 'help', component: _help_help_component__WEBPACK_IMPORTED_MODULE_17__["HelpComponent"] },
    { path: 'pendingtasks', component: _govpendingtasks_govpendingtasks_component__WEBPACK_IMPORTED_MODULE_20__["GovpendingtasksComponent"] },
    { path: 'privateentityreginfo', component: _private_entity_reg_info_private_entity_reg_info_component__WEBPACK_IMPORTED_MODULE_21__["PrivateEntityRegInfoComponent"] },
    { path: 'privatependingtasks', component: _privatependingtasks_privatependingtasks_component__WEBPACK_IMPORTED_MODULE_22__["PrivatependingtasksComponent"] },
    { path: 'governmentEntityRegistrationView', component: _government_entity_reg_view_government_entity_reg_view_component__WEBPACK_IMPORTED_MODULE_24__["GovernmentEntityRegViewComponent"] },
    { path: 'adminDashboard', component: _admin_dash_board_admin_dash_board_component__WEBPACK_IMPORTED_MODULE_25__["AdminDashBoardComponent"] },
    { path: 'privateLgManagement', component: _private_lg_management_private_lg_management_component__WEBPACK_IMPORTED_MODULE_26__["PrivateLgManagementComponent"] },
    { path: 'privateLgDetails', component: _private_lg_details_private_lg_details_component__WEBPACK_IMPORTED_MODULE_27__["PrivateLgDetailsComponent"] },
    { path: 'govLgManagement', component: _gov_lg_management_gov_lg_management_component__WEBPACK_IMPORTED_MODULE_29__["GovLgManagementComponent"] },
    { path: 'govLgDetails', component: _gov_lg_details_gov_lg_details_component__WEBPACK_IMPORTED_MODULE_30__["GovLgDetailsComponent"] },
    { path: 'privateaccountmanagement', component: _private_account_management_private_account_management_component__WEBPACK_IMPORTED_MODULE_31__["PrivateAccountManagementComponent"] },
    { path: 'governmentpendingtasks', component: _government_pending_task_government_pending_task_component__WEBPACK_IMPORTED_MODULE_32__["GovernmentPendingTaskComponent"] },
    { path: 'editUserDetails', component: _edit_user_details_edit_user_details_component__WEBPACK_IMPORTED_MODULE_33__["EditUserDetailsComponent"] },
    { path: 'addnewworkflow', component: _add_new_workflow_add_new_workflow_component__WEBPACK_IMPORTED_MODULE_34__["AddNewWorkflowComponent"] },
    { path: 'governmentaccountmanagement', component: _government_account_management_government_account_management_component__WEBPACK_IMPORTED_MODULE_35__["GovernmentAccountManagementComponent"] },
    { path: 'governmentworkflow', component: _government_workflow_government_workflow_component__WEBPACK_IMPORTED_MODULE_36__["GovernmentWorkflowComponent"] },
    { path: 'privateAmendmentList', component: _private_amendment_list_private_amendment_list_component__WEBPACK_IMPORTED_MODULE_37__["PrivateAmendmentListComponent"] },
    { path: 'privateConfiscateList', component: _private_confiscate_list_private_confiscate_list_component__WEBPACK_IMPORTED_MODULE_38__["PrivateConfiscateListComponent"] },
    { path: 'privateReleaseList', component: _private_release_list_private_release_list_component__WEBPACK_IMPORTED_MODULE_39__["PrivateReleaseListComponent"] },
    { path: 'governmentAmendmentList', component: _government_amendment_list_government_amendment_list_component__WEBPACK_IMPORTED_MODULE_40__["GovernmentAmendmentListComponent"] },
    { path: 'governmentConfiscateList', component: _government_confiscate_list_government_confiscate_list_component__WEBPACK_IMPORTED_MODULE_41__["GovernmentConfiscateListComponent"] },
    { path: 'governmentReleaseList', component: _government_release_list_government_release_list_component__WEBPACK_IMPORTED_MODULE_42__["GovernmentReleaseListComponent"] },
    { path: 'goveditUserDetails', component: _goverment_edit_user_details_goverment_edit_user_details_component__WEBPACK_IMPORTED_MODULE_43__["GovermentEditUserDetailsComponent"] },
];
let AppRoutingModule = class AppRoutingModule {
};
AppRoutingModule = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["NgModule"])({
        imports: [_angular_router__WEBPACK_IMPORTED_MODULE_2__["RouterModule"].forRoot(routes)],
        exports: [_angular_router__WEBPACK_IMPORTED_MODULE_2__["RouterModule"]]
    })
], AppRoutingModule);



/***/ }),

/***/ "./src/app/app.component.css":
/*!***********************************!*\
  !*** ./src/app/app.component.css ***!
  \***********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */");

/***/ }),

/***/ "./src/app/app.component.ts":
/*!**********************************!*\
  !*** ./src/app/app.component.ts ***!
  \**********************************/
/*! exports provided: AppComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AppComponent", function() { return AppComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _ngx_translate_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @ngx-translate/core */ "./node_modules/@ngx-translate/core/fesm2015/ngx-translate-core.js");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/common */ "./node_modules/@angular/common/fesm2015/common.js");




let AppComponent = class AppComponent {
    constructor(document, translate) {
        this.document = document;
        this.translate = translate;
        this.title = 'wthaq';
        translate.addLangs(['en', 'ar']);
        translate.setDefaultLang('ar');
        const browserLang = translate.getBrowserLang();
        translate.use(browserLang.match(/en|ar/) ? browserLang : 'ar');
    }
    loadStyle(styleName) {
        console.log(styleName);
        styleName = "styles-" + styleName + ".css";
        const head = this.document.getElementsByTagName('head')[0];
        let themeLink = this.document.getElementById('client-theme');
        if (themeLink) {
            themeLink.href = styleName;
        }
        else {
            const style = this.document.createElement('link');
            style.id = 'client-theme';
            style.rel = 'stylesheet';
            style.href = `${styleName}`;
            head.appendChild(style);
        }
    }
};
AppComponent.ctorParameters = () => [
    { type: Document, decorators: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"], args: [_angular_common__WEBPACK_IMPORTED_MODULE_3__["DOCUMENT"],] }] },
    { type: _ngx_translate_core__WEBPACK_IMPORTED_MODULE_2__["TranslateService"] }
];
AppComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-root',
        template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! raw-loader!./app.component.html */ "./node_modules/raw-loader/dist/cjs.js!./src/app/app.component.html")).default,
        styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! ./app.component.css */ "./src/app/app.component.css")).default]
    }),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__param"](0, Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"])(_angular_common__WEBPACK_IMPORTED_MODULE_3__["DOCUMENT"])),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [Document, _ngx_translate_core__WEBPACK_IMPORTED_MODULE_2__["TranslateService"]])
], AppComponent);



/***/ }),

/***/ "./src/app/app.module.ts":
/*!*******************************!*\
  !*** ./src/app/app.module.ts ***!
  \*******************************/
/*! exports provided: HttpLoaderFactory, AppModule */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "HttpLoaderFactory", function() { return HttpLoaderFactory; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AppModule", function() { return AppModule; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_platform_browser__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/platform-browser */ "./node_modules/@angular/platform-browser/fesm2015/platform-browser.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm2015/forms.js");
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/common/http */ "./node_modules/@angular/common/fesm2015/http.js");
/* harmony import */ var _app_component__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./app.component */ "./src/app/app.component.ts");
/* harmony import */ var _app_app_routing_module__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../app/app-routing.module */ "./src/app/app-routing.module.ts");
/* harmony import */ var _angular_platform_browser_animations__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/platform-browser/animations */ "./node_modules/@angular/platform-browser/fesm2015/animations.js");
/* harmony import */ var angular_datatables__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! angular-datatables */ "./node_modules/angular-datatables/index.js");
/* harmony import */ var ng2_charts__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ng2-charts */ "./node_modules/ng2-charts/fesm2015/ng2-charts.js");
/* harmony import */ var _ngx_translate_core__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @ngx-translate/core */ "./node_modules/@ngx-translate/core/fesm2015/ngx-translate-core.js");
/* harmony import */ var _ngx_translate_http_loader__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @ngx-translate/http-loader */ "./node_modules/@ngx-translate/http-loader/fesm2015/ngx-translate-http-loader.js");
/* harmony import */ var _private_entity_reg1_private_entity_reg1_component__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./private-entity-reg1/private-entity-reg1.component */ "./src/app/private-entity-reg1/private-entity-reg1.component.ts");
/* harmony import */ var _private_entity_reg2_private_entity_reg2_component__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./private-entity-reg2/private-entity-reg2.component */ "./src/app/private-entity-reg2/private-entity-reg2.component.ts");
/* harmony import */ var _private_entity_reg3_private_entity_reg3_component__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./private-entity-reg3/private-entity-reg3.component */ "./src/app/private-entity-reg3/private-entity-reg3.component.ts");
/* harmony import */ var _private_entity_reg_final_private_entity_reg_final_component__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./private-entity-reg-final/private-entity-reg-final.component */ "./src/app/private-entity-reg-final/private-entity-reg-final.component.ts");
/* harmony import */ var _government_entity_reg1_government_entity_reg1_component__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./government-entity-reg1/government-entity-reg1.component */ "./src/app/government-entity-reg1/government-entity-reg1.component.ts");
/* harmony import */ var _government_entity_reg2_government_entity_reg2_component__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./government-entity-reg2/government-entity-reg2.component */ "./src/app/government-entity-reg2/government-entity-reg2.component.ts");
/* harmony import */ var _government_entity_reg3_government_entity_reg3_component__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./government-entity-reg3/government-entity-reg3.component */ "./src/app/government-entity-reg3/government-entity-reg3.component.ts");
/* harmony import */ var _login_login_component__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./login/login.component */ "./src/app/login/login.component.ts");
/* harmony import */ var _request_lg_issuance_request_lg_issuance_component__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./request-lg-issuance/request-lg-issuance.component */ "./src/app/request-lg-issuance/request-lg-issuance.component.ts");
/* harmony import */ var _request_lg_issuance_approval_request_lg_issuance_approval_component__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./request-lg-issuance-approval/request-lg-issuance-approval.component */ "./src/app/request-lg-issuance-approval/request-lg-issuance-approval.component.ts");
/* harmony import */ var _request_lg_issuance_payment_request_lg_issuance_payment_component__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./request-lg-issuance-payment/request-lg-issuance-payment.component */ "./src/app/request-lg-issuance-payment/request-lg-issuance-payment.component.ts");
/* harmony import */ var _landing_landing_component__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./landing/landing.component */ "./src/app/landing/landing.component.ts");
/* harmony import */ var _gov_entity_dashboard_gov_entity_dashboard_component__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./gov-entity-dashboard/gov-entity-dashboard.component */ "./src/app/gov-entity-dashboard/gov-entity-dashboard.component.ts");
/* harmony import */ var _help_help_component__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ./help/help.component */ "./src/app/help/help.component.ts");
/* harmony import */ var _gov_pending_action_gov_pending_action_component__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ./gov-pending-action/gov-pending-action.component */ "./src/app/gov-pending-action/gov-pending-action.component.ts");
/* harmony import */ var _forgot_password_forgot_password_component__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ./forgot-password/forgot-password.component */ "./src/app/forgot-password/forgot-password.component.ts");
/* harmony import */ var _request_lg_issuance_gov_approval_request_lg_issuance_gov_approval_component__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ./request-lg-issuance-gov-approval/request-lg-issuance-gov-approval.component */ "./src/app/request-lg-issuance-gov-approval/request-lg-issuance-gov-approval.component.ts");
/* harmony import */ var ng_multiselect_dropdown__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! ng-multiselect-dropdown */ "./node_modules/ng-multiselect-dropdown/fesm2015/ng-multiselect-dropdown.js");
/* harmony import */ var ngx_treeview__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! ngx-treeview */ "./node_modules/ngx-treeview/src/index.js");
/* harmony import */ var _summary_pipe__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! ./summary.pipe */ "./src/app/summary.pipe.ts");
/* harmony import */ var primeng_calendar__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(/*! primeng/calendar */ "./node_modules/primeng/fesm2015/primeng-calendar.js");
/* harmony import */ var primeng_button__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(/*! primeng/button */ "./node_modules/primeng/fesm2015/primeng-button.js");
/* harmony import */ var primeng_messages__WEBPACK_IMPORTED_MODULE_34__ = __webpack_require__(/*! primeng/messages */ "./node_modules/primeng/fesm2015/primeng-messages.js");
/* harmony import */ var primeng_message__WEBPACK_IMPORTED_MODULE_35__ = __webpack_require__(/*! primeng/message */ "./node_modules/primeng/fesm2015/primeng-message.js");
/* harmony import */ var primeng_confirmdialog__WEBPACK_IMPORTED_MODULE_36__ = __webpack_require__(/*! primeng/confirmdialog */ "./node_modules/primeng/fesm2015/primeng-confirmdialog.js");
/* harmony import */ var primeng_api__WEBPACK_IMPORTED_MODULE_37__ = __webpack_require__(/*! primeng/api */ "./node_modules/primeng/fesm2015/primeng-api.js");
/* harmony import */ var primeng_table__WEBPACK_IMPORTED_MODULE_38__ = __webpack_require__(/*! primeng/table */ "./node_modules/primeng/fesm2015/primeng-table.js");
/* harmony import */ var primeng_paginator__WEBPACK_IMPORTED_MODULE_39__ = __webpack_require__(/*! primeng/paginator */ "./node_modules/primeng/fesm2015/primeng-paginator.js");
/* harmony import */ var _login_dialog_component_login_dialog_component_component__WEBPACK_IMPORTED_MODULE_40__ = __webpack_require__(/*! ./login-dialog-component/login-dialog-component.component */ "./src/app/login-dialog-component/login-dialog-component.component.ts");
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_41__ = __webpack_require__(/*! @angular/material */ "./node_modules/@angular/material/esm2015/material.js");
/* harmony import */ var _otp_dialog_otp_dialog_component__WEBPACK_IMPORTED_MODULE_42__ = __webpack_require__(/*! ./otp-dialog/otp-dialog.component */ "./src/app/otp-dialog/otp-dialog.component.ts");
/* harmony import */ var _govpendingtasks_govpendingtasks_component__WEBPACK_IMPORTED_MODULE_43__ = __webpack_require__(/*! ./govpendingtasks/govpendingtasks.component */ "./src/app/govpendingtasks/govpendingtasks.component.ts");
/* harmony import */ var _private_entity_reg_info_private_entity_reg_info_component__WEBPACK_IMPORTED_MODULE_44__ = __webpack_require__(/*! ./private-entity-reg-info/private-entity-reg-info.component */ "./src/app/private-entity-reg-info/private-entity-reg-info.component.ts");
/* harmony import */ var _general_modal_general_modal_component__WEBPACK_IMPORTED_MODULE_45__ = __webpack_require__(/*! ./general-modal/general-modal.component */ "./src/app/general-modal/general-modal.component.ts");
/* harmony import */ var _header_header_component__WEBPACK_IMPORTED_MODULE_46__ = __webpack_require__(/*! ./header/header.component */ "./src/app/header/header.component.ts");
/* harmony import */ var _footer_footer_component__WEBPACK_IMPORTED_MODULE_47__ = __webpack_require__(/*! ./footer/footer.component */ "./src/app/footer/footer.component.ts");
/* harmony import */ var _privatependingtasks_privatependingtasks_component__WEBPACK_IMPORTED_MODULE_48__ = __webpack_require__(/*! ./privatependingtasks/privatependingtasks.component */ "./src/app/privatependingtasks/privatependingtasks.component.ts");
/* harmony import */ var _dash_board_dash_board_component__WEBPACK_IMPORTED_MODULE_49__ = __webpack_require__(/*! ./dash-board/dash-board.component */ "./src/app/dash-board/dash-board.component.ts");
/* harmony import */ var _government_entity_reg_view_government_entity_reg_view_component__WEBPACK_IMPORTED_MODULE_50__ = __webpack_require__(/*! ./government-entity-reg-view/government-entity-reg-view.component */ "./src/app/government-entity-reg-view/government-entity-reg-view.component.ts");
/* harmony import */ var _admin_dash_board_admin_dash_board_component__WEBPACK_IMPORTED_MODULE_51__ = __webpack_require__(/*! ./admin-dash-board/admin-dash-board.component */ "./src/app/admin-dash-board/admin-dash-board.component.ts");
/* harmony import */ var ng2_search_filter__WEBPACK_IMPORTED_MODULE_52__ = __webpack_require__(/*! ng2-search-filter */ "./node_modules/ng2-search-filter/ng2-search-filter.js");
/* harmony import */ var _private_lg_management_private_lg_management_component__WEBPACK_IMPORTED_MODULE_53__ = __webpack_require__(/*! ./private-lg-management/private-lg-management.component */ "./src/app/private-lg-management/private-lg-management.component.ts");
/* harmony import */ var _private_lg_details_private_lg_details_component__WEBPACK_IMPORTED_MODULE_54__ = __webpack_require__(/*! ./private-lg-details/private-lg-details.component */ "./src/app/private-lg-details/private-lg-details.component.ts");
/* harmony import */ var _logout_logout_component__WEBPACK_IMPORTED_MODULE_55__ = __webpack_require__(/*! ./logout/logout.component */ "./src/app/logout/logout.component.ts");
/* harmony import */ var _gov_lg_management_gov_lg_management_component__WEBPACK_IMPORTED_MODULE_56__ = __webpack_require__(/*! ./gov-lg-management/gov-lg-management.component */ "./src/app/gov-lg-management/gov-lg-management.component.ts");
/* harmony import */ var _gov_lg_details_gov_lg_details_component__WEBPACK_IMPORTED_MODULE_57__ = __webpack_require__(/*! ./gov-lg-details/gov-lg-details.component */ "./src/app/gov-lg-details/gov-lg-details.component.ts");
/* harmony import */ var _private_account_management_private_account_management_component__WEBPACK_IMPORTED_MODULE_58__ = __webpack_require__(/*! ./private-account-management/private-account-management.component */ "./src/app/private-account-management/private-account-management.component.ts");
/* harmony import */ var _add_new_user_modal_add_new_user_modal_component__WEBPACK_IMPORTED_MODULE_59__ = __webpack_require__(/*! ./add-new-user-modal/add-new-user-modal.component */ "./src/app/add-new-user-modal/add-new-user-modal.component.ts");
/* harmony import */ var _government_pending_task_government_pending_task_component__WEBPACK_IMPORTED_MODULE_60__ = __webpack_require__(/*! ./government-pending-task/government-pending-task.component */ "./src/app/government-pending-task/government-pending-task.component.ts");
/* harmony import */ var _edit_user_details_edit_user_details_component__WEBPACK_IMPORTED_MODULE_61__ = __webpack_require__(/*! ./edit-user-details/edit-user-details.component */ "./src/app/edit-user-details/edit-user-details.component.ts");
/* harmony import */ var _user_reset_password_modal_user_reset_password_modal_component__WEBPACK_IMPORTED_MODULE_62__ = __webpack_require__(/*! ./user-reset-password-modal/user-reset-password-modal.component */ "./src/app/user-reset-password-modal/user-reset-password-modal.component.ts");
/* harmony import */ var _add_new_workflow_add_new_workflow_component__WEBPACK_IMPORTED_MODULE_63__ = __webpack_require__(/*! ./add-new-workflow/add-new-workflow.component */ "./src/app/add-new-workflow/add-new-workflow.component.ts");
/* harmony import */ var _government_account_management_government_account_management_component__WEBPACK_IMPORTED_MODULE_64__ = __webpack_require__(/*! ./government-account-management/government-account-management.component */ "./src/app/government-account-management/government-account-management.component.ts");
/* harmony import */ var _government_workflow_government_workflow_component__WEBPACK_IMPORTED_MODULE_65__ = __webpack_require__(/*! ./government-workflow/government-workflow.component */ "./src/app/government-workflow/government-workflow.component.ts");
/* harmony import */ var _goverment_add_new_user_modal_goverment_add_new_user_modal_component__WEBPACK_IMPORTED_MODULE_66__ = __webpack_require__(/*! ./goverment-add-new-user-modal/goverment-add-new-user-modal.component */ "./src/app/goverment-add-new-user-modal/goverment-add-new-user-modal.component.ts");
/* harmony import */ var _goverment_edit_user_details_goverment_edit_user_details_component__WEBPACK_IMPORTED_MODULE_67__ = __webpack_require__(/*! ./goverment-edit-user-details/goverment-edit-user-details.component */ "./src/app/goverment-edit-user-details/goverment-edit-user-details.component.ts");
/* harmony import */ var _sidemenu_sidemenu_component__WEBPACK_IMPORTED_MODULE_68__ = __webpack_require__(/*! ./sidemenu/sidemenu.component */ "./src/app/sidemenu/sidemenu.component.ts");
/* harmony import */ var _private_amendment_list_private_amendment_list_component__WEBPACK_IMPORTED_MODULE_69__ = __webpack_require__(/*! ./private-amendment-list/private-amendment-list.component */ "./src/app/private-amendment-list/private-amendment-list.component.ts");
/* harmony import */ var _private_confiscate_list_private_confiscate_list_component__WEBPACK_IMPORTED_MODULE_70__ = __webpack_require__(/*! ./private-confiscate-list/private-confiscate-list.component */ "./src/app/private-confiscate-list/private-confiscate-list.component.ts");
/* harmony import */ var _private_release_list_private_release_list_component__WEBPACK_IMPORTED_MODULE_71__ = __webpack_require__(/*! ./private-release-list/private-release-list.component */ "./src/app/private-release-list/private-release-list.component.ts");
/* harmony import */ var _workflow_select_modal_workflow_select_modal_component__WEBPACK_IMPORTED_MODULE_72__ = __webpack_require__(/*! ./workflow-select-modal/workflow-select-modal.component */ "./src/app/workflow-select-modal/workflow-select-modal.component.ts");
/* harmony import */ var _government_amendment_list_government_amendment_list_component__WEBPACK_IMPORTED_MODULE_73__ = __webpack_require__(/*! ./government-amendment-list/government-amendment-list.component */ "./src/app/government-amendment-list/government-amendment-list.component.ts");
/* harmony import */ var _government_confiscate_list_government_confiscate_list_component__WEBPACK_IMPORTED_MODULE_74__ = __webpack_require__(/*! ./government-confiscate-list/government-confiscate-list.component */ "./src/app/government-confiscate-list/government-confiscate-list.component.ts");
/* harmony import */ var _government_release_list_government_release_list_component__WEBPACK_IMPORTED_MODULE_75__ = __webpack_require__(/*! ./government-release-list/government-release-list.component */ "./src/app/government-release-list/government-release-list.component.ts");
/* harmony import */ var _govement_user_reset_password_modal_govement_user_reset_password_modal_component__WEBPACK_IMPORTED_MODULE_76__ = __webpack_require__(/*! ./govement-user-reset-password-modal/govement-user-reset-password-modal.component */ "./src/app/govement-user-reset-password-modal/govement-user-reset-password-modal.component.ts");








 //Subhra
 //Subhra





















//Custom pipe

function HttpLoaderFactory(http) {
    return new _ngx_translate_http_loader__WEBPACK_IMPORTED_MODULE_11__["TranslateHttpLoader"](http);
}
//PrimeNg









/* Tajel  */





































/*  Tajel   */
let AppModule = class AppModule {
};
AppModule = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_2__["NgModule"])({
        declarations: [
            _app_component__WEBPACK_IMPORTED_MODULE_5__["AppComponent"],
            _private_entity_reg1_private_entity_reg1_component__WEBPACK_IMPORTED_MODULE_12__["PrivateEntityReg1Component"],
            _private_entity_reg2_private_entity_reg2_component__WEBPACK_IMPORTED_MODULE_13__["PrivateEntityReg2Component"],
            _private_entity_reg3_private_entity_reg3_component__WEBPACK_IMPORTED_MODULE_14__["PrivateEntityReg3Component"],
            _private_entity_reg_final_private_entity_reg_final_component__WEBPACK_IMPORTED_MODULE_15__["PrivateEntityRegFinalComponent"],
            _government_entity_reg1_government_entity_reg1_component__WEBPACK_IMPORTED_MODULE_16__["GovernmentEntityReg1Component"],
            _government_entity_reg2_government_entity_reg2_component__WEBPACK_IMPORTED_MODULE_17__["GovernmentEntityReg2Component"],
            _government_entity_reg3_government_entity_reg3_component__WEBPACK_IMPORTED_MODULE_18__["GovernmentEntityReg3Component"],
            _login_login_component__WEBPACK_IMPORTED_MODULE_19__["LoginComponent"],
            _dash_board_dash_board_component__WEBPACK_IMPORTED_MODULE_49__["DashBoardComponent"],
            _request_lg_issuance_request_lg_issuance_component__WEBPACK_IMPORTED_MODULE_20__["RequestLgIssuanceComponent"],
            _request_lg_issuance_approval_request_lg_issuance_approval_component__WEBPACK_IMPORTED_MODULE_21__["RequestLgIssuanceApprovalComponent"],
            _request_lg_issuance_payment_request_lg_issuance_payment_component__WEBPACK_IMPORTED_MODULE_22__["RequestLgIssuancePaymentComponent"],
            _landing_landing_component__WEBPACK_IMPORTED_MODULE_23__["LandingComponent"],
            _gov_entity_dashboard_gov_entity_dashboard_component__WEBPACK_IMPORTED_MODULE_24__["GovEntityDashboardComponent"],
            _gov_pending_action_gov_pending_action_component__WEBPACK_IMPORTED_MODULE_26__["GovPendingActionComponent"],
            _help_help_component__WEBPACK_IMPORTED_MODULE_25__["HelpComponent"],
            _forgot_password_forgot_password_component__WEBPACK_IMPORTED_MODULE_27__["ForgotPasswordComponent"],
            _summary_pipe__WEBPACK_IMPORTED_MODULE_31__["SummaryPipe"],
            _request_lg_issuance_gov_approval_request_lg_issuance_gov_approval_component__WEBPACK_IMPORTED_MODULE_28__["RequestLgIssuanceGovApprovalComponent"],
            _login_dialog_component_login_dialog_component_component__WEBPACK_IMPORTED_MODULE_40__["LoginDialogComponentComponent"],
            _otp_dialog_otp_dialog_component__WEBPACK_IMPORTED_MODULE_42__["OtpDialogComponent"],
            _govpendingtasks_govpendingtasks_component__WEBPACK_IMPORTED_MODULE_43__["GovpendingtasksComponent"],
            _private_entity_reg_info_private_entity_reg_info_component__WEBPACK_IMPORTED_MODULE_44__["PrivateEntityRegInfoComponent"],
            _general_modal_general_modal_component__WEBPACK_IMPORTED_MODULE_45__["GeneralModalComponent"],
            _header_header_component__WEBPACK_IMPORTED_MODULE_46__["HeaderComponent"],
            _footer_footer_component__WEBPACK_IMPORTED_MODULE_47__["FooterComponent"],
            _privatependingtasks_privatependingtasks_component__WEBPACK_IMPORTED_MODULE_48__["PrivatependingtasksComponent"],
            _government_entity_reg_view_government_entity_reg_view_component__WEBPACK_IMPORTED_MODULE_50__["GovernmentEntityRegViewComponent"],
            _admin_dash_board_admin_dash_board_component__WEBPACK_IMPORTED_MODULE_51__["AdminDashBoardComponent"],
            _private_lg_management_private_lg_management_component__WEBPACK_IMPORTED_MODULE_53__["PrivateLgManagementComponent"],
            _private_lg_details_private_lg_details_component__WEBPACK_IMPORTED_MODULE_54__["PrivateLgDetailsComponent"],
            _logout_logout_component__WEBPACK_IMPORTED_MODULE_55__["LogoutComponent"],
            _gov_lg_management_gov_lg_management_component__WEBPACK_IMPORTED_MODULE_56__["GovLgManagementComponent"],
            _gov_lg_details_gov_lg_details_component__WEBPACK_IMPORTED_MODULE_57__["GovLgDetailsComponent"],
            _private_account_management_private_account_management_component__WEBPACK_IMPORTED_MODULE_58__["PrivateAccountManagementComponent"],
            _add_new_user_modal_add_new_user_modal_component__WEBPACK_IMPORTED_MODULE_59__["AddNewUserModalComponent"],
            _government_pending_task_government_pending_task_component__WEBPACK_IMPORTED_MODULE_60__["GovernmentPendingTaskComponent"],
            _edit_user_details_edit_user_details_component__WEBPACK_IMPORTED_MODULE_61__["EditUserDetailsComponent"],
            _user_reset_password_modal_user_reset_password_modal_component__WEBPACK_IMPORTED_MODULE_62__["UserResetPasswordModalComponent"],
            _add_new_workflow_add_new_workflow_component__WEBPACK_IMPORTED_MODULE_63__["AddNewWorkflowComponent"],
            _government_account_management_government_account_management_component__WEBPACK_IMPORTED_MODULE_64__["GovernmentAccountManagementComponent"],
            _goverment_add_new_user_modal_goverment_add_new_user_modal_component__WEBPACK_IMPORTED_MODULE_66__["GovermentAddNewUserModalComponent"],
            _goverment_edit_user_details_goverment_edit_user_details_component__WEBPACK_IMPORTED_MODULE_67__["GovermentEditUserDetailsComponent"],
            _government_workflow_government_workflow_component__WEBPACK_IMPORTED_MODULE_65__["GovernmentWorkflowComponent"],
            _sidemenu_sidemenu_component__WEBPACK_IMPORTED_MODULE_68__["SidemenuComponent"],
            _private_amendment_list_private_amendment_list_component__WEBPACK_IMPORTED_MODULE_69__["PrivateAmendmentListComponent"],
            _private_confiscate_list_private_confiscate_list_component__WEBPACK_IMPORTED_MODULE_70__["PrivateConfiscateListComponent"],
            _private_release_list_private_release_list_component__WEBPACK_IMPORTED_MODULE_71__["PrivateReleaseListComponent"],
            _workflow_select_modal_workflow_select_modal_component__WEBPACK_IMPORTED_MODULE_72__["WorkflowSelectModalComponent"],
            _government_amendment_list_government_amendment_list_component__WEBPACK_IMPORTED_MODULE_73__["GovernmentAmendmentListComponent"],
            _government_confiscate_list_government_confiscate_list_component__WEBPACK_IMPORTED_MODULE_74__["GovernmentConfiscateListComponent"],
            _government_release_list_government_release_list_component__WEBPACK_IMPORTED_MODULE_75__["GovernmentReleaseListComponent"],
            _govement_user_reset_password_modal_govement_user_reset_password_modal_component__WEBPACK_IMPORTED_MODULE_76__["GovementUserResetPasswordModalComponent"]
        ],
        imports: [
            _angular_platform_browser__WEBPACK_IMPORTED_MODULE_1__["BrowserModule"],
            _angular_platform_browser_animations__WEBPACK_IMPORTED_MODULE_7__["BrowserAnimationsModule"],
            _app_app_routing_module__WEBPACK_IMPORTED_MODULE_6__["AppRoutingModule"],
            _angular_forms__WEBPACK_IMPORTED_MODULE_3__["FormsModule"],
            _angular_forms__WEBPACK_IMPORTED_MODULE_3__["ReactiveFormsModule"],
            _angular_common_http__WEBPACK_IMPORTED_MODULE_4__["HttpClientModule"],
            primeng_button__WEBPACK_IMPORTED_MODULE_33__["ButtonModule"],
            primeng_calendar__WEBPACK_IMPORTED_MODULE_32__["CalendarModule"],
            primeng_messages__WEBPACK_IMPORTED_MODULE_34__["MessagesModule"],
            primeng_message__WEBPACK_IMPORTED_MODULE_35__["MessageModule"],
            primeng_confirmdialog__WEBPACK_IMPORTED_MODULE_36__["ConfirmDialogModule"],
            primeng_table__WEBPACK_IMPORTED_MODULE_38__["TableModule"],
            primeng_paginator__WEBPACK_IMPORTED_MODULE_39__["PaginatorModule"],
            _angular_material__WEBPACK_IMPORTED_MODULE_41__["MatDialogModule"],
            _angular_material__WEBPACK_IMPORTED_MODULE_41__["MatButtonModule"],
            _angular_material__WEBPACK_IMPORTED_MODULE_41__["MatFormFieldModule"],
            _angular_material__WEBPACK_IMPORTED_MODULE_41__["MatInputModule"],
            _angular_material__WEBPACK_IMPORTED_MODULE_41__["MatRippleModule"],
            _angular_material__WEBPACK_IMPORTED_MODULE_41__["MatSelectModule"],
            angular_datatables__WEBPACK_IMPORTED_MODULE_8__["DataTablesModule"],
            ng2_charts__WEBPACK_IMPORTED_MODULE_9__["ChartsModule"],
            ng2_search_filter__WEBPACK_IMPORTED_MODULE_52__["Ng2SearchPipeModule"],
            _ngx_translate_core__WEBPACK_IMPORTED_MODULE_10__["TranslateModule"].forRoot({
                loader: {
                    provide: _ngx_translate_core__WEBPACK_IMPORTED_MODULE_10__["TranslateLoader"],
                    useFactory: HttpLoaderFactory,
                    deps: [_angular_common_http__WEBPACK_IMPORTED_MODULE_4__["HttpClient"]]
                }
            }),
            ng_multiselect_dropdown__WEBPACK_IMPORTED_MODULE_29__["NgMultiSelectDropDownModule"].forRoot(),
            ngx_treeview__WEBPACK_IMPORTED_MODULE_30__["TreeviewModule"].forRoot(),
        ],
        providers: [
            primeng_api__WEBPACK_IMPORTED_MODULE_37__["MessageService"],
            primeng_api__WEBPACK_IMPORTED_MODULE_37__["ConfirmationService"]
        ],
        entryComponents: [
            _login_dialog_component_login_dialog_component_component__WEBPACK_IMPORTED_MODULE_40__["LoginDialogComponentComponent"],
            _otp_dialog_otp_dialog_component__WEBPACK_IMPORTED_MODULE_42__["OtpDialogComponent"],
            _general_modal_general_modal_component__WEBPACK_IMPORTED_MODULE_45__["GeneralModalComponent"],
            _add_new_user_modal_add_new_user_modal_component__WEBPACK_IMPORTED_MODULE_59__["AddNewUserModalComponent"],
            _user_reset_password_modal_user_reset_password_modal_component__WEBPACK_IMPORTED_MODULE_62__["UserResetPasswordModalComponent"],
            _goverment_add_new_user_modal_goverment_add_new_user_modal_component__WEBPACK_IMPORTED_MODULE_66__["GovermentAddNewUserModalComponent"],
            _user_reset_password_modal_user_reset_password_modal_component__WEBPACK_IMPORTED_MODULE_62__["UserResetPasswordModalComponent"],
            _workflow_select_modal_workflow_select_modal_component__WEBPACK_IMPORTED_MODULE_72__["WorkflowSelectModalComponent"],
            _govement_user_reset_password_modal_govement_user_reset_password_modal_component__WEBPACK_IMPORTED_MODULE_76__["GovementUserResetPasswordModalComponent"]
        ],
        exports: [
            _angular_material__WEBPACK_IMPORTED_MODULE_41__["MatButtonModule"],
            _angular_material__WEBPACK_IMPORTED_MODULE_41__["MatFormFieldModule"],
            _angular_material__WEBPACK_IMPORTED_MODULE_41__["MatInputModule"],
            _angular_material__WEBPACK_IMPORTED_MODULE_41__["MatRippleModule"],
            _angular_material__WEBPACK_IMPORTED_MODULE_41__["MatSelectModule"],
        ],
        bootstrap: [_app_component__WEBPACK_IMPORTED_MODULE_5__["AppComponent"]]
    })
], AppModule);



/***/ }),

/***/ "./src/app/dash-board/dash-board.component.css":
/*!*****************************************************!*\
  !*** ./src/app/dash-board/dash-board.component.css ***!
  \*****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Rhc2gtYm9hcmQvZGFzaC1ib2FyZC5jb21wb25lbnQuY3NzIn0= */");

/***/ }),

/***/ "./src/app/dash-board/dash-board.component.ts":
/*!****************************************************!*\
  !*** ./src/app/dash-board/dash-board.component.ts ***!
  \****************************************************/
/*! exports provided: DashBoardComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DashBoardComponent", function() { return DashBoardComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm2015/router.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm2015/forms.js");
/* harmony import */ var _services_common_service_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../services/common-service.service */ "./src/app/services/common-service.service.ts");
/* harmony import */ var ng2_charts__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ng2-charts */ "./node_modules/ng2-charts/fesm2015/ng2-charts.js");
/* harmony import */ var _ngx_translate_core__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @ngx-translate/core */ "./node_modules/@ngx-translate/core/fesm2015/ngx-translate-core.js");







let DashBoardComponent = class DashBoardComponent {
    constructor(router, formBuilder, commonService, translate) {
        this.router = router;
        this.formBuilder = formBuilder;
        this.commonService = commonService;
        this.translate = translate;
        this.isLGClicked = true;
        this.picolor = ['#008077', '#02282b', '#0f7ff5', '#02423d', '#3bbcf3', '#78f1b5', '#0b8d4d', '#02264c', '#0064ca', '#012b28'];
        this.i = 0;
        this.dtOptions = {};
        this.dtOptionsAR = {};
        this.isBankVerification = true;
        this.pieChartOptions = {
            responsive: true,
            legend: { position: 'bottom',
                labels: {
                    fontSize: 8
                }
            }
        };
        this.pieChartLabels = [];
        this.pieChartData = [];
        this.pieChartType = 'pie';
        this.pieChartLegend = true;
        this.pieChartPlugins = [];
        this.doughnutposition = 'top';
        this.pieChartColors = [
            {
                backgroundColor: []
            },
        ];
        Object(ng2_charts__WEBPACK_IMPORTED_MODULE_5__["monkeyPatchChartJsTooltip"])();
        Object(ng2_charts__WEBPACK_IMPORTED_MODULE_5__["monkeyPatchChartJsLegend"])();
    }
    ngOnInit() {
        this.userId = localStorage.getItem('userId');
        console.log("this.userId::::" + this.userId);
        this.userName = localStorage.getItem('userName');
        console.log("this.userName::::" + this.userName);
        this.roleId = localStorage.getItem('roleId');
        console.log("this.role_ID::::" + this.roleId);
        this.crNoOrUidNo = localStorage.getItem('crNoOrUidNo');
        console.log("crNoOrUidNo::::" + this.crNoOrUidNo);
        /*************************************************** */
        this.commonService.checkSessionExpired(this.userId)
            .then((data) => {
            if (data == 0) {
                this.commonService.showGeneralMessage(this.translate.instant('HOME.Session_Expired'), this.translate.instant('HOME.logged_out'), false);
                this.commonService.logout(this.userId);
                return;
            }
            else {
            }
        });
        /* Bank Verification Pending */
        console.log("RegistrationFinal " + this.commonService.alertMsgforRegistrationFinal);
        if (this.commonService.alertMsgforRegistrationFinal != undefined && this.commonService.alertMsgforRegistrationFinal == "Sorry! Your bank verification is pending.") {
            this.isBankVerification = false;
        }
        else {
            this.isBankVerification = true;
        }
        /************************************************** */
        this.dtOptionsAR = {
            pageLength: 10,
            processing: true,
            language: {
                processing: "جارٍ التحميل...",
                search: "ابحث:",
                lengthMenu: "أظهر _MENU_ مدخلات",
                info: "إظهار _START_ إلى _END_ من أصل _TOTAL_ مدخل",
                infoEmpty: "يعرض 0 إلى 0 من أصل 0 سجل",
                infoFiltered: "(منتقاة من مجموع _MAX_ مُدخل)",
                infoPostFix: "",
                loadingRecords: "جارٍ التحميل...",
                zeroRecords: "لم يعثر على أية سجلات",
                emptyTable: "ليست هناك بيانات متاحة في الجدول",
                paginate: {
                    first: "الأول",
                    previous: "السابق",
                    next: "التالي",
                    last: "الأخير"
                },
                aria: {
                    sortAscending: ": تفعيل لترتيب العمود تصاعدياً",
                    sortDescending: ": تفعيل لترتيب العمود تنازلياً"
                }
            }
        };
        this.dtOptions = {
            pageLength: 10,
            processing: true,
        };
        this.commonService.privateGetGraphData(this.crNoOrUidNo)
            .subscribe(res => {
            console.log(res);
            for (var val of res.userObject) {
                this.pieChartLabels.push(val.lg_type);
                this.pieChartData.push(val.no_of_count);
                this.pieChartColors[0].backgroundColor.push(this.picolor[this.i]);
                this.i++;
            }
        });
        //To get pending list
        this.commonService.getAllLgVerifiedBeneficiarySpecific(this.crNoOrUidNo)
            .subscribe(res => {
            console.log("AllLGRequestBeneficiarySpecific list::::" + JSON.stringify(res));
            this.LGLists = res.userObject;
            console.log("pending list is::::" + JSON.stringify(this.LGLists));
        });
        this.commonService.privateCountOfActive(this.crNoOrUidNo)
            .subscribe(res => {
            console.log(res);
            this.ActiveLG = res;
        });
        this.commonService.privateCountOfPending(this.crNoOrUidNo)
            .subscribe(res => {
            console.log(res);
            this.PendingLG = res;
        });
        this.commonService.privateCountOfExpired(this.crNoOrUidNo)
            .subscribe(res => {
            console.log(res);
            this.ExpiredLG = res;
            //console.log("CountOfNotPending::::" + JSON.stringify(this.ActiveLG));
        });
        this.commonService.privateCountOfNotPending(this.crNoOrUidNo)
            .subscribe(res => {
            console.log(res);
            this.PendingApprovalLG = res;
            //console.log("CountOfNotPending::::" + JSON.stringify(this.ActiveLG));
        });
    }
};
DashBoardComponent.ctorParameters = () => [
    { type: _angular_router__WEBPACK_IMPORTED_MODULE_2__["Router"] },
    { type: _angular_forms__WEBPACK_IMPORTED_MODULE_3__["FormBuilder"] },
    { type: _services_common_service_service__WEBPACK_IMPORTED_MODULE_4__["CommonService"] },
    { type: _ngx_translate_core__WEBPACK_IMPORTED_MODULE_6__["TranslateService"] }
];
DashBoardComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-dash-board',
        template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! raw-loader!./dash-board.component.html */ "./node_modules/raw-loader/dist/cjs.js!./src/app/dash-board/dash-board.component.html")).default,
        styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! ./dash-board.component.css */ "./src/app/dash-board/dash-board.component.css")).default]
    }),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_angular_router__WEBPACK_IMPORTED_MODULE_2__["Router"], _angular_forms__WEBPACK_IMPORTED_MODULE_3__["FormBuilder"], _services_common_service_service__WEBPACK_IMPORTED_MODULE_4__["CommonService"], _ngx_translate_core__WEBPACK_IMPORTED_MODULE_6__["TranslateService"]])
], DashBoardComponent);



/***/ }),

/***/ "./src/app/edit-user-details/edit-user-details.component.css":
/*!*******************************************************************!*\
  !*** ./src/app/edit-user-details/edit-user-details.component.css ***!
  \*******************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (".add-more-item{\n\tdisplay: -webkit-inline-box;\n\tdisplay: inline-flex;\n\twidth: 100%;\n}\n\n.addmore-btn {\n  background-color: DodgerBlue; \n  border: none; /* Remove borders */\n  color: white; /* White text */\n  padding: 8px;\n  padding-right: 12px;\n  padding-bottom: 10px;\n  font-size: 5px; /* Set a font size */\n  cursor: pointer; /* Mouse pointer on hover */\n  margin-left: 3px;\n  padding-left: 5px;\n}\n\n.addmore-btn.remove{\n  background-color: red; \n}\n\n.addmore-btn i{\n  font-size: 12px !important;\n}\n\n\n\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZWRpdC11c2VyLWRldGFpbHMvZWRpdC11c2VyLWRldGFpbHMuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtDQUNDLDJCQUFvQjtDQUFwQixvQkFBb0I7Q0FDcEIsV0FBVztBQUNaOztBQUVBO0VBQ0UsNEJBQTRCO0VBQzVCLFlBQVksRUFBRSxtQkFBbUI7RUFDakMsWUFBWSxFQUFFLGVBQWU7RUFDN0IsWUFBWTtFQUNaLG1CQUFtQjtFQUNuQixvQkFBb0I7RUFDcEIsY0FBYyxFQUFFLG9CQUFvQjtFQUNwQyxlQUFlLEVBQUUsMkJBQTJCO0VBQzVDLGdCQUFnQjtFQUNoQixpQkFBaUI7QUFDbkI7O0FBQ0E7RUFDRSxxQkFBcUI7QUFDdkI7O0FBQ0E7RUFDRSwwQkFBMEI7QUFDNUIiLCJmaWxlIjoic3JjL2FwcC9lZGl0LXVzZXItZGV0YWlscy9lZGl0LXVzZXItZGV0YWlscy5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmFkZC1tb3JlLWl0ZW17XG5cdGRpc3BsYXk6IGlubGluZS1mbGV4O1xuXHR3aWR0aDogMTAwJTtcbn1cblxuLmFkZG1vcmUtYnRuIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogRG9kZ2VyQmx1ZTsgXG4gIGJvcmRlcjogbm9uZTsgLyogUmVtb3ZlIGJvcmRlcnMgKi9cbiAgY29sb3I6IHdoaXRlOyAvKiBXaGl0ZSB0ZXh0ICovXG4gIHBhZGRpbmc6IDhweDtcbiAgcGFkZGluZy1yaWdodDogMTJweDtcbiAgcGFkZGluZy1ib3R0b206IDEwcHg7XG4gIGZvbnQtc2l6ZTogNXB4OyAvKiBTZXQgYSBmb250IHNpemUgKi9cbiAgY3Vyc29yOiBwb2ludGVyOyAvKiBNb3VzZSBwb2ludGVyIG9uIGhvdmVyICovXG4gIG1hcmdpbi1sZWZ0OiAzcHg7XG4gIHBhZGRpbmctbGVmdDogNXB4O1xufVxuLmFkZG1vcmUtYnRuLnJlbW92ZXtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmVkOyBcbn1cbi5hZGRtb3JlLWJ0biBpe1xuICBmb250LXNpemU6IDEycHggIWltcG9ydGFudDtcbn1cblxuXG4iXX0= */");

/***/ }),

/***/ "./src/app/edit-user-details/edit-user-details.component.ts":
/*!******************************************************************!*\
  !*** ./src/app/edit-user-details/edit-user-details.component.ts ***!
  \******************************************************************/
/*! exports provided: EditUserDetailsComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EditUserDetailsComponent", function() { return EditUserDetailsComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/material */ "./node_modules/@angular/material/esm2015/material.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm2015/forms.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm2015/router.js");
/* harmony import */ var _ngx_translate_core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @ngx-translate/core */ "./node_modules/@ngx-translate/core/fesm2015/ngx-translate-core.js");
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/common/http */ "./node_modules/@angular/common/fesm2015/http.js");
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! moment */ "./node_modules/moment/moment.js");
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(moment__WEBPACK_IMPORTED_MODULE_7__);
/* harmony import */ var _services_common_service_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../services/common-service.service */ "./src/app/services/common-service.service.ts");
/* harmony import */ var _user_reset_password_modal_user_reset_password_modal_component__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../user-reset-password-modal/user-reset-password-modal.component */ "./src/app/user-reset-password-modal/user-reset-password-modal.component.ts");










let EditUserDetailsComponent = class EditUserDetailsComponent {
    constructor(http, zone, commonService, router, activatedRoute, fb, dialog, translate) {
        this.http = http;
        this.zone = zone;
        this.commonService = commonService;
        this.router = router;
        this.activatedRoute = activatedRoute;
        this.fb = fb;
        this.dialog = dialog;
        this.translate = translate;
        this.dropdownSettings = {};
        this.bankNamesList = [];
        this.noPattern = '^(0|[1-9][0-9]*)$';
        this.emailPattern = "^[a-z0-9._%+-]+@[a-z0-9.-]+.[a-z]{2,4}$";
        this.notSelected = "Not selected";
        this.isSelectedrniFile = false;
        this.isSelectedlalFile = false;
        this.isSelectedcrFile = false;
        this.isSelectedlaglFile = false;
        this.myArraytree = [];
        this.allowedExtensions = ['jpg', 'gif', 'pdf', 'png'];
        this.validation_messages = {
            NationalId: [
                { type: "required", message: "This is a required field." },
                {
                    type: "pattern",
                    message: "National identification number should be composed of digits."
                },
                /* {
                  type: "maxlength",
                  message: "National identification number should be 10 digits."
                }, */
                {
                    type: "minlength",
                    message: "National identification number should be 10 digits."
                }
            ],
            dateOfBirth: [
                { type: "required", message: "This is a required field." }
            ],
            FirstName: [
                { type: "required", message: "This is a required field." }
            ],
            LastName: [
                { type: "required", message: "This is a required field." }
            ],
            mobileNo: [
                { type: "required", message: "This is a required field." },
                {
                    type: "pattern",
                    message: "Enter valid Mobile Number"
                },
                {
                    type: "minlength",
                    message: "Minimum length should be 10."
                }
            ],
            Email: [
                { type: "required", message: "This is a required field." },
                {
                    type: "pattern",
                    message: "Enter valid email."
                }
            ],
            OnboardResolution: [
                { type: "required", message: "This is a required field." }
            ],
            lalFile: [
                { type: "required", message: "This is a required field." }
            ],
            rniFile: [
                { type: "required", message: "This is a required field." }
            ],
            laglFile: [
                { type: "required", message: "This is a required field." }
            ],
            bankName: [
                { type: "required", message: "This is a required field." }
            ],
            iban: [
                { type: "required", message: "This is a required field." }
            ],
            activeDeactive: [
                { type: "required", message: "This is a required field." }
            ],
        };
        this.dropdownListBank = [];
        this.dropdownList = [];
        this.formSendModel = {};
        // not needed
        /*getContactsFormGroup(index): FormGroup {
          this.contactList = this.submitUser.get('contacts') as FormArray;
          const formGroup = this.contactList.controls[index] as FormGroup;
          return formGroup;
        }
      
        changedContactType(index) {
          let validators = null;
      
          if (this.getContactsFormGroup(index).controls['type'].value === 'email') {
              validators = Validators.compose([Validators.required, Validators.email]);
            } else {
              validators = Validators.compose([
                Validators.required,
                Validators.pattern(new RegExp('^\\\+[0-9]?()[0-9](\d[0-9]{9})\$')) // pattern for validating international phone number
              ]);
            }
      
          this.getContactsFormGroup(index).controls['value'].setValidators(validators);
      
          // re-validate the inputs of the form control based on new validation
          this.getContactsFormGroup(index).controls['value'].updateValueAndValidity();
        }*/
        // ----------- destroy subscription ---------
        this.resetIban = false;
    }
    ngOnInit() {
        console.log('<<<<<<<<<<< --- ngOnInit --- >>>>>>>>>>>');
        let today = new Date();
        let yesterday = new Date(today);
        yesterday.setDate(today.getDate() - 1);
        let month = today.getMonth();
        let year = today.getFullYear();
        this.maxDate = yesterday;
        this.maxDate.setMonth(month);
        this.maxDate.setFullYear(year);
        this.submitUser = this.fb.group({
            NationalId: ["", [_angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].pattern(this.noPattern), _angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].minLength(10)]],
            dateOfBirth: [null, [_angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].required]],
            FirstName: ["", [_angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].required]],
            LastName: ["", [_angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].required]],
            mobileNo: ["", [_angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].pattern(this.noPattern), _angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].minLength(10)]],
            Email: ["", [_angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].pattern(this.emailPattern)]],
            activeDeactive: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].required]],
            contacts: this.fb.array([this.createContact()])
        });
        // set contactlist to the form control containing contacts
        // this.contactList = this.submitUser.get('contacts') as FormArray;
        this.dropdownSettings = {
            singleSelection: false,
            idField: 'ibanNo',
            textField: 'ibanNo',
            selectAllText: 'Select All',
            unSelectAllText: 'UnSelect All',
            itemsShowLimit: 2,
            allowSearchFilter: true
        };
    }
    ngAfterViewInit() {
        this.getUserItemFormStroage = JSON.parse(localStorage.getItem('editUserItem'));
        console.log('this.getUserItemFormStroage >>>>>>>@@@@>>>', this.getUserItemFormStroage);
        //  this.parms_action_id = this.activatedRoute.snapshot.paramMap.get('id');
        // this.parms_action_iban = this.activatedRoute.snapshot.paramMap.get('iban');
        this.parms_action_id = this.getUserItemFormStroage.login_id;
        this.parms_action_iban = this.getUserItemFormStroage.iban_no;
        console.log('<<<<<<<<<<<  params id >>>>>>>>>>>', this.parms_action_id);
        console.log('<<<<<<<<<<< params iban >>>>>>>>>>>', this.parms_action_iban);
        this.roleId = localStorage.getItem('roleId');
        console.log("this.roleId::::" + this.roleId);
        this.loginId = localStorage.getItem('userId');
        console.log("this.loginId::::" + this.loginId);
        this.userId = localStorage.getItem('userId');
        this.stroageCrNoOrUidNo = localStorage.getItem('crNoOrUidNo');
        console.log("this.stroageCrNoOrUidNo::::" + this.stroageCrNoOrUidNo);
        console.log("this.userId::::" + this.userId);
        this.dataSubscribe = this.commonService.getListData('getUserDetail', this.parms_action_id, this.parms_action_iban)
            .subscribe(res => {
            console.log("getUserDeatils >>>>>", res);
            this.getUserDeatils = res.userObject;
            /*this.submitUser.controls["FirstName"].setValue(res.userObject.rep_name);
            this.submitUser.controls["LastName"].setValue(res.userObject.rep_last_name);
            this.submitUser.controls["Email"].setValue(res.userObject.rep_email);
            this.submitUser.controls["NationalId"].setValue(res.userObject.national_id);
            this.submitUser.controls["dateOfBirth"].setValue(moment(res.userObject.date_of_birth).format('DD/MM/YYYY'));
            this.submitUser.controls["mobileNo"].setValue(res.userObject.contact_info);*/
            /*let startTestArray = [{bank_code:"ALB",iban:["SA7620000000000999999999"]},{"bank_code":"ALR","iban":["SA7620000000000333333333"]}]
            console.log('startTestArray  >>', startTestArray);*/
            this.submitUser.patchValue({
                FirstName: res.userObject.rep_name,
                LastName: res.userObject.rep_last_name,
                Email: res.userObject.rep_email,
                NationalId: res.userObject.national_id,
                dateOfBirth: moment__WEBPACK_IMPORTED_MODULE_7__(res.userObject.date_of_birth).format('DD/MM/YYYY'),
                mobileNo: res.userObject.contact_info,
                activeDeactive: res.userObject.is_active
                // activeDeactive:'Y'
            });
            let ibanFormatArray = [];
            if (res.userObject.ibanList && res.userObject.ibanList.length > 0) {
                res.userObject.ibanList.forEach((val, ind) => {
                    val.bank_code = val.bankName;
                    ibanFormatArray.push(val);
                });
                console.log('ibanFormatArray @@@@@@ >', ibanFormatArray);
            }
            // this.submitUser.setControl('contacts', this.exsistingBankIbans(res.userObject.bank_code)) //setControl use for multiple add more  value shows
            this.submitUser.setControl('contacts', this.exsistingBankIbans(ibanFormatArray)); //setControl use for multiple add more  value shows
        });
        // get dropdown data
        this.dropdownListBank = [];
        this.dataSubscribe = this.commonService.getIBANListByBankName(this.userId)
            .subscribe(res => {
            console.log("get bank  by IBAN list::::" + res);
            this.bankNamesList = res;
            /*for(let item of res){
             this.dropdownListBank.push({'name':item.tBankmaster.bankName});
             console.log('this.dropdownListBank >', this.dropdownListBank);
            }*/
        });
    }
    // add more field  data pre populate
    exsistingBankIbans(_valueSet) {
        console.log('exsistingBankIbans _valueSet >>', _valueSet);
        const formArray = new _angular_forms__WEBPACK_IMPORTED_MODULE_3__["FormArray"]([]);
        _valueSet.forEach((item, index) => {
            console.log('index ########>>', index);
            /*this.bankNamesList.forEach((val, ind) => {
              item.bankNamesList = val.Iban_no;
              console.log('val.bankNamesList >', item.bankNamesList);
            })*/
            // this.onSelectBank(item, item.bank_code);
            formArray.push(this.fb.group({
                bankName: [item.bank_code, [_angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].required]],
                iban: [item.iban, [_angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].required]]
            }));
            /* const contactsFormArrayitem = (<FormArray>this.submitUser.get('contacts')).at(index);
             console.log('@@@@@@@ itemarray @@@@@@@@@@@@ >', contactsFormArrayitem);
       
              this.onSelectBank(contactsFormArrayitem, item.bank_code);*/
            // item.iban = [
            //    {ibanNo:"SA7630000000000222222222"}
            //  ];
        });
        /*const contactsFormArrayitem = (<FormArray>this.submitUser.get('contacts'));
    
        contactsFormArrayitem.controls.forEach(itemval =>{
         console.log('mygetval @@@@@@@@@@@@@@@@@@@@ >', itemval)
      
        })*/
        // access item
        formArray.controls.forEach(item2 => {
            console.log('exsistingBankIbans formArray @@@@@@ >>', item2);
            this.onSelectBank(item2, item2.value.bankName);
        });
        console.log('exsistingBankIbans formArray >>', formArray);
        return formArray;
    }
    openResetPasswordModal() {
        console.log("openResetPasswordModal valid >", this.submitUser.valid);
        console.log("openResetPasswordModal value >", this.submitUser.value);
        this.getUserDeatils.login_id = this.parms_action_id;
        this.getUserDeatils.iban_no = this.parms_action_iban;
        this.getUserDeatils.activeDeactive = this.submitUser.controls['activeDeactive'].value;
        this.getUserDeatils.Email = this.submitUser.controls['Email'].value;
        if (this.getUserDeatils.contact_info && this.getUserDeatils.Email) {
            //this.commonService.showGeneralMessage("", "Alert shows", false);
            const dialogConfig = new _angular_material__WEBPACK_IMPORTED_MODULE_2__["MatDialogConfig"]();
            dialogConfig.disableClose = true;
            dialogConfig.autoFocus = true;
            dialogConfig.panelClass = 'custom-modalbox';
            dialogConfig.data = {
                modalData: this.getUserDeatils
            };
            this.dialogRef = this.dialog.open(_user_reset_password_modal_user_reset_password_modal_component__WEBPACK_IMPORTED_MODULE_9__["UserResetPasswordModalComponent"], dialogConfig);
            this.dialogRef.afterClosed().subscribe(result => {
                console.log('reset password modal close data >>>>', result);
            });
        }
        else {
            console.log('in valid form');
            Object.keys(this.submitUser.controls).forEach(field => {
                const control = this.submitUser.get(field);
                control.markAsTouched({ onlySelf: true });
            });
        }
    }
    close() {
        this.dialogRef.close();
    }
    editUserSubmit() {
        // console.log("this.getMciValideDataAll >>>>>>", this.getMciValideDataAll);
        console.log("editUserSubmit() called valid >", this.submitUser.valid);
        let formValJson = JSON.stringify(this.submitUser.value);
        console.log("editUserSubmit() All" + this.submitUser);
        console.log("editUserSubmit() value" + formValJson);
        console.log('add more get value contacts >>', this.submitUser.controls['contacts'].value);
        /*if (this.submitUser.valid) {
         this.dialogRef.close(this.submitUser.value);
       }*/
        if (this.submitUser.valid) {
            /*let params = new FormData();
      
            params.append('rep_national_id', this.submitUser.controls['NationalId'].value);
            params.append('dob', this.submitUser.controls['dateOfBirth'].value);
            params.append('name', this.submitUser.controls['FirstName'].value);
            params.append('rep_last_name', this.submitUser.controls['LastName'].value);
            params.append('mobileNo', this.submitUser.controls['mobileNo'].value);
            params.append('Email', this.submitUser.controls['Email'].value);
            params.append('activeDeactive', this.submitUser.controls['activeDeactive'].value);
            params.append('contacts', JSON.stringify(this.submitUser.controls['contacts'].value));*/
            let editUserDataObj = {
                "rep_national_id": JSON.stringify(this.submitUser.controls['NationalId'].value),
                "login_id": this.parms_action_id,
                "modify_by": this.loginId,
                "dob": this.submitUser.controls['dateOfBirth'].value,
                "name": this.submitUser.controls['FirstName'].value,
                "delete_flag": "N",
                "rep_last_name": this.submitUser.controls['LastName'].value,
                "mobileNo": this.submitUser.controls['mobileNo'].value,
                "email": this.submitUser.controls['Email'].value,
                "is_active": this.submitUser.controls['activeDeactive'].value,
                "bankCodeIbanList": this.submitUser.controls['contacts'].value
            };
            this.dataSubscribe = this.commonService.submitFormDataJson('updateUserDetail', editUserDataObj)
                .subscribe(res => {
                console.log("Gov Reg final page Response is::::" + JSON.stringify(res));
                // if (res.responseCode == 107) {
                //if (res.responseCode == 1) {
                // this.submitUser.reset();
                // this.dialogRef.close(this.submitUser.value);
                this.commonService.showGeneralMessage("", res.responseMessage, false);
                // this.commonService.showGeneralMessage("", "User form is submitted successfully.", false);
                //this.router.navigate(['login']);
                //}
            });
            //this.commonService.isGovPart2Completed = true;
            //this.router.navigate(['governmentEntityReg3']);
        }
        else {
            console.log('in valid form');
            // this.isOpenValidationAlert = true;
            Object.keys(this.submitUser.controls).forEach(field => {
                // console.log('field >', field);
                const control = this.submitUser.get(field);
                // console.log('control >', control);
                control.markAsTouched({ onlySelf: true });
            });
        }
    }
    closeAddUserButton() {
        this.dialogRef.close();
        this.router.navigate(['privateaccountmanagement']);
    }
    // --------------- add dynamic form  start -------------------
    // returns all form groups under contacts
    /*get contactFormGroup() {
      return this.submitUser.get('contacts') as FormArray;
    }*/
    createContact() {
        return this.fb.group({
            bankName: [null, [_angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].required]],
            iban: [null, [_angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].required]]
        });
    }
    // add more a contact form group
    addMore(contoLName) {
        this.submitUser.get(contoLName).push(this.createContact());
        // (<FormArray>this.submitUser.get('contacts')).push(this.createContact());
        // this.contactList.push(this.createContact());
    }
    // remove contact from group
    removeMoreItem(contoLName, index) {
        const contactsFormArray = this.submitUser.get(contoLName);
        contactsFormArray.removeAt(index);
        contactsFormArray.markAsDirty();
        contactsFormArray.markAsTouched();
        // this.contactList.removeAt(index);
    }
    onSelectBank(_item, value, resetValIndex) {
        if (resetValIndex) {
            this.resetIban = true;
            this.submitUser.get('contacts').controls.forEach(group => {
                if (group.value.bankName == _item.value.bankName) {
                    // console.log('group >>', group);
                    // group.get('iban').setValue('');
                    group.get('iban').reset();
                    // (<FormArray>group).controls["iban"].setValue('');
                }
            });
            /*let contactsFormArrayitem = (<FormArray>this.submitUser.get('contacts')).at(resetValIndex);
            contactsFormArrayitem.get('iban').reset();*/
            // (<FormArray>contactsFormArrayitem).controls["iban"].reset();
        }
        this.resetIban = false;
        let valNumber = value;
        console.log('onSelectBank _item >', _item);
        console.log('onSelectBank value >', valNumber);
        this.bankNamesList.forEach((val, ind) => {
            console.log('selected bank for iban @@ >', val.bank_code);
            if (val.bank_code == valNumber) {
                _item.bankNamesList = val.Iban_no;
                console.log('selected bank for _item.bankNamesList >', _item.bankNamesList);
                console.log('selected bank for iban >', val);
                // console.log('selected bank for iban >', val.Iban_no);
            }
        });
        // this.dataSubscribe = this.commonService.getListData('getUserDetail', value)
        // .subscribe(res => {
        //   console.log("onSelectBank response  >>>>>",  res);
        // });
    }
    goCancel() {
        this.router.navigate(['privateaccountmanagement']);
    }
    ngOnDestroy() {
        console.log('<<<<<<<<<<< --- ngOnDestroy --- >>>>>>>>>>>');
        if (this.dataSubscribe !== undefined) {
            this.dataSubscribe.unsubscribe();
        }
    }
};
EditUserDetailsComponent.ctorParameters = () => [
    { type: _angular_common_http__WEBPACK_IMPORTED_MODULE_6__["HttpClient"] },
    { type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["NgZone"] },
    { type: _services_common_service_service__WEBPACK_IMPORTED_MODULE_8__["CommonService"] },
    { type: _angular_router__WEBPACK_IMPORTED_MODULE_4__["Router"] },
    { type: _angular_router__WEBPACK_IMPORTED_MODULE_4__["ActivatedRoute"] },
    { type: _angular_forms__WEBPACK_IMPORTED_MODULE_3__["FormBuilder"] },
    { type: _angular_material__WEBPACK_IMPORTED_MODULE_2__["MatDialog"] },
    { type: _ngx_translate_core__WEBPACK_IMPORTED_MODULE_5__["TranslateService"] }
];
EditUserDetailsComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-edit-user-details',
        template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! raw-loader!./edit-user-details.component.html */ "./node_modules/raw-loader/dist/cjs.js!./src/app/edit-user-details/edit-user-details.component.html")).default,
        styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! ./edit-user-details.component.css */ "./src/app/edit-user-details/edit-user-details.component.css")).default]
    }),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_angular_common_http__WEBPACK_IMPORTED_MODULE_6__["HttpClient"],
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["NgZone"],
        _services_common_service_service__WEBPACK_IMPORTED_MODULE_8__["CommonService"],
        _angular_router__WEBPACK_IMPORTED_MODULE_4__["Router"],
        _angular_router__WEBPACK_IMPORTED_MODULE_4__["ActivatedRoute"],
        _angular_forms__WEBPACK_IMPORTED_MODULE_3__["FormBuilder"],
        _angular_material__WEBPACK_IMPORTED_MODULE_2__["MatDialog"],
        _ngx_translate_core__WEBPACK_IMPORTED_MODULE_5__["TranslateService"]])
], EditUserDetailsComponent);



/***/ }),

/***/ "./src/app/footer/footer.component.css":
/*!*********************************************!*\
  !*** ./src/app/footer/footer.component.css ***!
  \*********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Zvb3Rlci9mb290ZXIuY29tcG9uZW50LmNzcyJ9 */");

/***/ }),

/***/ "./src/app/footer/footer.component.ts":
/*!********************************************!*\
  !*** ./src/app/footer/footer.component.ts ***!
  \********************************************/
/*! exports provided: FooterComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FooterComponent", function() { return FooterComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm2015/router.js");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/common */ "./node_modules/@angular/common/fesm2015/common.js");




let FooterComponent = class FooterComponent {
    constructor(location, router) {
        this.router = router;
        this.requestedUrl = "";
        router.events.subscribe((val) => {
            // this.routefooter = location.path();
            if (location.path() != undefined && location.path() != '' && location.path() != '/') {
                this.routefooter = location.path();
                //alert("constructor: "+this.routefooter);
            } /*else {
              this.routefooter = '/home'
            }*/
        });
    }
    ngOnInit() {
    }
};
FooterComponent.ctorParameters = () => [
    { type: _angular_common__WEBPACK_IMPORTED_MODULE_3__["Location"] },
    { type: _angular_router__WEBPACK_IMPORTED_MODULE_2__["Router"] }
];
FooterComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-footer',
        template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! raw-loader!./footer.component.html */ "./node_modules/raw-loader/dist/cjs.js!./src/app/footer/footer.component.html")).default,
        styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! ./footer.component.css */ "./src/app/footer/footer.component.css")).default]
    }),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_angular_common__WEBPACK_IMPORTED_MODULE_3__["Location"], _angular_router__WEBPACK_IMPORTED_MODULE_2__["Router"]])
], FooterComponent);



/***/ }),

/***/ "./src/app/forgot-password/forgot-password.component.css":
/*!***************************************************************!*\
  !*** ./src/app/forgot-password/forgot-password.component.css ***!
  \***************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2ZvcmdvdC1wYXNzd29yZC9mb3Jnb3QtcGFzc3dvcmQuY29tcG9uZW50LmNzcyJ9 */");

/***/ }),

/***/ "./src/app/forgot-password/forgot-password.component.ts":
/*!**************************************************************!*\
  !*** ./src/app/forgot-password/forgot-password.component.ts ***!
  \**************************************************************/
/*! exports provided: ForgotPasswordComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ForgotPasswordComponent", function() { return ForgotPasswordComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm2015/forms.js");
/* harmony import */ var _services_common_service_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../services/common-service.service */ "./src/app/services/common-service.service.ts");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm2015/router.js");





let ForgotPasswordComponent = class ForgotPasswordComponent {
    constructor(formBuilder, commonService, router) {
        this.formBuilder = formBuilder;
        this.commonService = commonService;
        this.router = router;
        this.textPattern = "^[A-Za-z ]*$";
        this.isOpenAlert = false;
        this.alertMsg = '';
        this.validation_messages = {
            userIdForgotPass: [
                { type: "required", message: "This is a required field and should be exactly 10 digits only!" },
                {
                    type: "pattern",
                    message: "National Id should be composed of digits only."
                },
                /* {
                  type: "maxlength",
                  message: "National Id must be 10 digits only!."
                }, */
                {
                    type: "minlength",
                    message: "National Id must be 10 digits only!."
                }
                // { type: "required", message: "This is a required field." },
                // {
                //   type: "pattern",
                //   message: "National Id should be composed of characters."
                // },
                // {
                //   type: "maxlength",
                //   message: "Maximum length should be 20."
                // }
            ]
            // mobileNo: [
            //   { type: "required", message: "This is a required field." }
            // ],
            // otp: [
            //   { type: "required", message: "This is a required field." }
            // ]
        };
    }
    ngOnInit() {
        this.submitForgotPassword = this.formBuilder.group({
            userIdForgotPass: [
                "",
                [
                    _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required,
                    _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].pattern("^[0-9]*$"),
                    //Validators.pattern(this.textPattern),
                    //Validators.maxLength(20)
                    _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].minLength(10)
                ]
            ]
            // mobileNo: [
            //   "",
            //   [
            //     Validators.required
            //   ]
            // ],
            // otp: [
            //   "",
            //   [
            //     Validators.required
            //   ]
            // ]
        });
    }
    onSubmit() {
        console.log("Forgot password data:::" + JSON.stringify(this.submitForgotPassword.value));
        if (this.submitForgotPassword.valid) {
            console.log("Forgot password data:::");
            this.commonService.postForgotPasswordDetails(this.submitForgotPassword.value.userIdForgotPass)
                .subscribe(res => {
                console.log("Forgot password Response is::::" + JSON.stringify(res));
                if (res.responseCode === 1) {
                    this.isOpenAlert = true;
                    this.alertMsg = res.responseMessage;
                    this.submitForgotPassword.reset();
                }
            });
        }
    }
    resetForm() {
        if (this.submitForgotPassword.valid) {
            console.log("Form Submitted!");
            this.submitForgotPassword.reset();
        }
        this.router.navigate(['login']);
    }
};
ForgotPasswordComponent.ctorParameters = () => [
    { type: _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormBuilder"] },
    { type: _services_common_service_service__WEBPACK_IMPORTED_MODULE_3__["CommonService"] },
    { type: _angular_router__WEBPACK_IMPORTED_MODULE_4__["Router"] }
];
ForgotPasswordComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-forgot-password',
        template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! raw-loader!./forgot-password.component.html */ "./node_modules/raw-loader/dist/cjs.js!./src/app/forgot-password/forgot-password.component.html")).default,
        styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! ./forgot-password.component.css */ "./src/app/forgot-password/forgot-password.component.css")).default]
    }),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormBuilder"], _services_common_service_service__WEBPACK_IMPORTED_MODULE_3__["CommonService"], _angular_router__WEBPACK_IMPORTED_MODULE_4__["Router"]])
], ForgotPasswordComponent);



/***/ }),

/***/ "./src/app/general-modal/general-modal.component.css":
/*!***********************************************************!*\
  !*** ./src/app/general-modal/general-modal.component.css ***!
  \***********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2dlbmVyYWwtbW9kYWwvZ2VuZXJhbC1tb2RhbC5jb21wb25lbnQuY3NzIn0= */");

/***/ }),

/***/ "./src/app/general-modal/general-modal.component.ts":
/*!**********************************************************!*\
  !*** ./src/app/general-modal/general-modal.component.ts ***!
  \**********************************************************/
/*! exports provided: GeneralModalComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GeneralModalComponent", function() { return GeneralModalComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/material */ "./node_modules/@angular/material/esm2015/material.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm2015/router.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm2015/forms.js");





let GeneralModalComponent = class GeneralModalComponent {
    constructor(dialog, formBuilder, router, dialogRef, data, route) {
        this.dialog = dialog;
        this.formBuilder = formBuilder;
        this.router = router;
        this.dialogRef = dialogRef;
        this.bankNamesList = [];
        this.emailPattern = "^[a-z0-9._%+-]+@[a-z0-9.-]+.[a-z]{2,4}$";
        this.amountPattern = "^[+]?([0-9]+(?:[\.][0-9]*)?|\.[0-9]+)$";
        this.writeUpTypeEditable = true;
        this.partialConfiscation = false;
        this.partialRelease = false;
        this.isReadonly = true;
        this.isconfiscationAmountOk = true;
        this.isReleaseAmountOk = true;
        this.confiscationInvalid = false;
        this.amendInvalid = false;
        this.isAmendAmountOk = true;
        this.bankIbanList = [];
        this.IBANList = [];
        //@Input() privateLg: PrivateLgDetailsComponent;
        this.validation_messages = {
            email: [
                { type: "required", message: "This is a required field." },
                {
                    type: "pattern",
                    message: "Please enter a valid emailid."
                }
            ],
            amendmentAmount: [
                { type: "required", message: "This is a required field." },
                {
                    type: "pattern",
                    message: "Amount should be composed of digits. It accepts only positive numbers."
                }
            ],
            lgEndDate: [
                { type: "required", message: "This is a required field." }
            ],
            bankName: [
                { type: "required", message: "This is a required field." }
            ],
            IBAN: [
                { type: "required", message: "This is a required field." }
            ],
            reason: [
                { type: "required", message: "This is a required field." }
            ],
            confiscationAmount: [
                { type: "required", message: "This is a required field." },
                {
                    type: "pattern",
                    message: "Amount should be composed of digits. It accepts only positive numbers."
                }
            ],
            releaseReason: [
                { type: "required", message: "This is a required field." }
            ],
            releaseAmount: [
                { type: "required", message: "This is a required field." },
                {
                    type: "pattern",
                    message: "Amount should be composed of digits. It accepts only positive numbers."
                }
            ],
            writeUp: [
                { type: "required", message: "This is a required field." }
            ],
        };
        this.pageData = data.modelData;
        this.loginid = data.modelData.loginid;
        this.otddr = data.modelData.dialogRef;
        this.pageData = data.modelData;
        this.loginreference = data.modelData.dialogRef;
        console.log("this.loginId::::" + localStorage.getItem('userId'));
        /* this.bankNamesList = JSON.parse(localStorage.getItem('bankNamesList'));
        console.log("this.bankNamesList::::" +JSON.stringify(this.bankNamesList));
         */
        this.bankIbanList = JSON.parse(localStorage.getItem('bankIbanList'));
        console.log("this.bankIbanList::::" + JSON.stringify(this.bankIbanList));
    }
    ngOnInit() {
        //console.log(JSON.stringify(this.pageData));
        //console.log(this.pageData.formsdatas.lg_no);
        //console.log(this.pageData.formsdatas.LGEndDate);
        console.log("pageData > :" + JSON.stringify(this.pageData));
        if (localStorage.getItem('userId') == this.pageData.formsdatas.supplierId) {
            this.LGaccessType = 'Supplier';
        }
        else {
            this.LGaccessType = 'Beneficiary';
        }
        if (this.pageData.formsdatas.beneficiary_role_id == '2' && this.pageData.formsdatas.writeUpType.trim() == 'SAMA') {
            //if(this.pageData.formsdatas.beneficiary_role_id == '2'){
            this.writeUpTypeEditable = false;
        }
        if (this.pageData.formsdatas.LGEndDate) {
            var splitted = this.pageData.formsdatas.LGEndDate.split("/");
            var old_lg_date = splitted[2] + "-" + splitted[1] + "-" + splitted[0];
            this.oldlgEndDate = new Date(old_lg_date);
        }
        //this.lgEndDate = this.pageData.formsdatas.LGEndDate;
        this.submitEmail = this.formBuilder.group({
            email: [
                "",
                [
                    _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required,
                    _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].pattern(this.emailPattern),
                ]
            ]
        });
        this.submitAmend = this.formBuilder.group({
            requestId: [
                ""
            ],
            lgNumber: [
                ""
            ],
            lgIssueDate: [
                ""
            ],
            lgStartDate: [
                ""
            ],
            amendmentAmount: ["", [_angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].pattern(this.amountPattern)]],
            lgEndDate: [null, [_angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required]],
            writeUp: [
                ""
            ]
        });
        let today = new Date();
        let month = today.getMonth();
        let year = today.getFullYear();
        this.minDate = new Date();
        this.minDate.setMonth(month);
        this.minDate.setFullYear(year);
        //console.log("this.startDate::::"+this.startDate);
        this.submitAmend.controls["requestId"].setValue(this.pageData.formsdatas.requestId);
        this.submitAmend.controls["lgNumber"].setValue(this.pageData.formsdatas.lg_no);
        this.submitAmend.controls["lgIssueDate"].setValue(this.pageData.formsdatas.LGIssueDate);
        this.submitAmend.controls["lgStartDate"].setValue(this.pageData.formsdatas.LGStartDate);
        this.submitAmend.controls["amendmentAmount"].setValue(this.pageData.formsdatas.Amount);
        this.submitAmend.controls["lgEndDate"].setValue(this.oldlgEndDate);
        this.submitAmend.controls["writeUp"].setValue(this.pageData.formsdatas.termsNconditionsMessage);
        this.submitConfiscate = this.formBuilder.group({
            requestId: [
                ""
            ],
            lgNumber: [
                ""
            ],
            beneficiaryName: [
                ""
            ],
            beneficiaryId: [
                ""
            ],
            amount: [
                ""
            ],
            bankName: ["", [_angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required]],
            IBAN: ["", [_angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required]],
            reason: ["", [_angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required]],
            partialConfiscation: [
                ""
            ],
            confiscationAmount: ["", [_angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].pattern(this.amountPattern)]]
        });
        this.submitConfiscate.controls["requestId"].setValue(this.pageData.formsdatas.requestId);
        this.submitConfiscate.controls["lgNumber"].setValue(this.pageData.formsdatas.lg_no);
        this.submitConfiscate.controls["beneficiaryName"].setValue(this.pageData.formsdatas.beneficiary_name);
        this.submitConfiscate.controls["beneficiaryId"].setValue(this.pageData.formsdatas.beneficiaryId);
        this.submitConfiscate.controls["amount"].setValue(this.pageData.formsdatas.Amount);
        if (this.pageData.formsdatas.confiscate_bankName) {
            this.submitConfiscate.controls["bankName"].setValue(this.pageData.formsdatas.confiscate_bankCode);
            this.onClickBank(this.pageData.formsdatas.confiscate_bankCode);
        }
        if (this.pageData.formsdatas.confiscate_IBAN) {
            this.submitConfiscate.controls["IBAN"].setValue(this.pageData.formsdatas.confiscate_IBAN);
        }
        if (this.pageData.formsdatas.confiscate_reason) {
            this.submitConfiscate.controls["reason"].setValue(this.pageData.formsdatas.confiscate_reason);
        }
        if (this.pageData.formsdatas.partial_confiscation) {
            if (this.pageData.formsdatas.partial_confiscation == 'Y') {
                this.isReadonly = false;
            }
            this.submitConfiscate.controls["partialConfiscation"].setValue(this.pageData.formsdatas.partial_confiscation);
        }
        // this.submitConfiscate.controls["bankName"].setValue(this.pageData.formsdatas.Amount);
        // this.submitConfiscate.controls["IBAN"].setValue(this.pageData.formsdatas.LGEndDate);
        // this.submitConfiscate.controls["reason"].setValue(this.pageData.formsdatas.termsNconditionsMessage);
        // this.submitConfiscate.controls["partialConfiscation"].setValue(this.pageData.formsdatas.termsNconditionsMessage);
        this.submitConfiscate.controls["confiscationAmount"].setValue(this.pageData.formsdatas.confiscate_amount);
        this.submitReleasedLG = this.formBuilder.group({
            requestId: [
                ""
            ],
            lgNumber: [
                ""
            ],
            beneficiaryName: [
                ""
            ],
            beneficiaryId: [
                ""
            ],
            amount: [
                ""
            ],
            releaseReason: ["", [_angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required]],
            partialRelease: [
                ""
            ],
            releaseAmount: ["", [_angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].pattern(this.amountPattern)]]
        });
        this.submitReleasedLG.controls["requestId"].setValue(this.pageData.formsdatas.requestId);
        this.submitReleasedLG.controls["lgNumber"].setValue(this.pageData.formsdatas.lg_no);
        this.submitReleasedLG.controls["beneficiaryName"].setValue(this.pageData.formsdatas.beneficiary_name);
        this.submitReleasedLG.controls["beneficiaryId"].setValue(this.pageData.formsdatas.beneficiaryId);
        //this.submitReleasedLG.controls["lgStartDate"].setValue(this.pageData.formsdatas.LGStartDate);
        this.submitReleasedLG.controls["amount"].setValue(this.pageData.formsdatas.Amount);
        if (this.pageData.formsdatas.releaseAmount) {
            this.submitReleasedLG.controls["releaseAmount"].setValue(this.pageData.formsdatas.releaseAmount);
        }
        if (this.pageData.formsdatas.releaseReason) {
            this.submitReleasedLG.controls["releaseReason"].setValue(this.pageData.formsdatas.releaseReason);
        }
        if (this.pageData.formsdatas.releaseReason) {
            if (this.pageData.formsdatas.partialRelease == 'Y') {
                this.isReadonly = false;
            }
            this.submitReleasedLG.controls["partialRelease"].setValue(this.pageData.formsdatas.releaseReason);
        }
        //this.submitReleasedLG.controls["writeUp"].setValue(this.pageData.formsdatas.termsNconditionsMessage);
        // this.bankNamesList =  this.privateLg.bankNamesList;
        // console.log("this.bankNamesList :::::"+this.bankNamesList);
        this.selectworkflow = this.formBuilder.group({
            workflow_id: [
                "",
                [
                    _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required,
                ]
            ]
        });
    }
    /*getStartDate(startDate) {
      console.log("startDate::::" + startDate);
      this.submitLG.controls['LGEndDate'].setValue(null);
      var d = new Date(startDate);
      var date = d.setDate(d.getDate() + 1);
      var month = d.getMonth(); // Since getMonth() returns month from 0-11 not 1-12
      var year = d.getFullYear();
      this.minDateforEndDate = new Date(d.setDate(d.getDate()));
      this.minDateforEndDate.setMonth(month);
      this.minDateforEndDate.setFullYear(year);
  
    }*/
    /* onClickBank(event) {
      console.log("Selected bank::::" + event);
      if (event === 'Select Bank') {
        this.submitConfiscate.controls['IBAN'].setValue("Select IBAN");
        this.submitConfiscate.get('IBAN').disable();
      }
      else {
        this.submitConfiscate.get('IBAN').enable();
      }
  
      for (let b of this.bankNamesList) {
        if (b.tBankmaster.bankName === event) {
          this.bankCode = b.tBankmaster.bankCode;
          break;
        }
      }
    } */
    onClickBank(event) {
        console.log("Selected bank::::" + event);
        if (event === '') {
            this.submitConfiscate.controls['IBAN'].setValue("Select IBAN");
            this.submitConfiscate.get('IBAN').disable();
        }
        else {
            this.submitConfiscate.get('IBAN').enable();
        }
        this.iban_no = "";
        let dropDownData = this.bankIbanList.find((data) => data.bank_code === event);
        if (dropDownData) {
            console.log(dropDownData);
            this.IBANList = dropDownData.Iban_no;
        }
    }
    close() {
        this.dialogRef.close();
    }
    closeAndRedirect() {
        this.dialogRef.close();
        this.router.navigate([this.pageData.redirectURL]);
    }
    closeOnly() {
        this.dialogRef.close();
    }
    emailSubmit() {
        if (this.submitEmail.valid) {
            this.dialogRef.close(this.submitEmail.value.email);
        }
    }
    amendSubmit() {
        //this.confiscationInvalid = false;
        /* if (this.submitAmend.valid) {
          this.dialogRef.close(this.submitAmend.value);
        } */
        this.amendInvalid = false;
        console.log("isAmendAmountOk" + this.isAmendAmountOk);
        if (this.isAmendAmountOk) {
            if (this.submitAmend.valid) {
                this.dialogRef.close(this.submitAmend.value);
            }
            else {
                this.amendInvalid = true;
                console.log("amendInvalid" + this.amendInvalid);
            }
        }
    }
    confiscateSubmit() {
        // alert("confiscateSubmit() called" + JSON.stringify(this.submitConfiscate.value));
        this.confiscationInvalid = false;
        if (this.isconfiscationAmountOk) {
            if (this.submitConfiscate.valid) {
                this.dialogRef.close(this.submitConfiscate.value);
            }
            else {
                this.confiscationInvalid = true;
            }
        }
    }
    releaseSubmit() {
        //alert("releaseSubmit() called" + JSON.stringify(this.submitReleasedLG.value));
        this.confiscationInvalid = false;
        if (this.isReleaseAmountOk) {
            if (this.submitReleasedLG.valid) {
                this.dialogRef.close(this.submitReleasedLG.value);
            }
            else {
                console.log(this.confiscationInvalid);
                this.confiscationInvalid = true;
            }
        }
    }
    confirmlogout() {
        this.dialogRef.close();
        this.otddr.close();
        this.router.navigate(['logout']);
    }
    closebutton() {
        this.dialogRef.close();
        this.loginreference.close();
        this.router.navigate(['logout']);
    }
    closePrivateLgModalButton() {
        this.dialogRef.close();
        this.router.navigate(['privateLgDetails']);
    }
    closeGovLgModalButton() {
        this.dialogRef.close();
        this.router.navigate(['govLgDetails']);
    }
    styleObject() {
        return { background: '#efefef', border: '1px solid #c3c3c3' };
    }
    readonlyOnj() {
        if (this.isReadonly) {
            return { background: '#efefef', border: '1px solid #c3c3c3' };
        }
        else {
            return { background: '#fff', border: '1px solid #c3c3c3' };
        }
    }
    partialConfiscationchange(e) {
        this.isconfiscationAmountOk = true;
        if (e.target.checked) {
            this.partialConfiscation = true;
            this.isReadonly = false;
            this.submitConfiscate.controls['confiscationAmount'].setValue('');
        }
        else {
            this.partialConfiscation = false;
            this.isReadonly = true;
            this.submitConfiscate.controls['confiscationAmount'].setValue(this.pageData.formsdatas.Amount);
            // this.submitConfiscate.controls['partialConfiscation'].setValue(this.partialConfiscation);
        }
        this.submitConfiscate.controls['partialConfiscation'].setValue(this.partialConfiscation);
    }
    confiscationAmountKeyup(num) {
        console.log("confiscation amount and priceLimit::::" + num + ">>" + this.pageData.priceLimit);
        console.log("Selected amount::::" + num + ">>" + this.pageData.formsdatas.Amount);
        if (parseFloat(num) < parseFloat(this.pageData.formsdatas.Amount)) {
            this.isconfiscationAmountOk = true;
        }
        else {
            this.isconfiscationAmountOk = false;
        }
    }
    partialReleasechange(e) {
        if (e.target.checked) {
            this.partialRelease = true;
            this.isReadonly = false;
            this.submitReleasedLG.controls["releaseAmount"].setValue('');
        }
        else {
            this.partialRelease = false;
            this.isReadonly = true;
            this.submitReleasedLG.controls["releaseAmount"].setValue(this.pageData.formsdatas.Amount);
            // this.submitReleasedLG.controls['partialConfiscation'].setValue(this.partialConfiscation);
        }
        this.submitReleasedLG.controls['partialRelease'].setValue(this.partialRelease);
    }
    releaseAmountKeyup(num) {
        console.log("confiscation amount and priceLimit::::" + num + ">>" + this.pageData.priceLimit);
        console.log("Selected amount::::" + num + ">>" + this.pageData.formsdatas.Amount);
        if (parseFloat(num) < parseFloat(this.pageData.formsdatas.Amount)) {
            this.isReleaseAmountOk = true;
        }
        else {
            this.isReleaseAmountOk = false;
        }
    }
    amendConfirmOk() {
        this.dialogRef.close('Ok');
    }
    amendConfirmCancel() {
        this.dialogRef.close('Cancel');
        //this.router.navigate(['privateLgDetails']);
    }
    closeValidationAlert() {
        this.confiscationInvalid = false;
    }
    amendAmountKeyup(num) {
        let lower_limit;
        let upper_limit;
        console.log("Amend Selected amount::::" + num + ">>" + this.pageData.priceLimit);
        if (parseFloat(num) <= 0) {
            this.isAmendAmountOk = false;
        }
        else {
            if ((parseFloat(this.pageData.priceLimit) >= parseFloat(this.pageData.formsdatas.Amount))) {
                lower_limit = 0;
            }
            else {
                lower_limit = parseFloat(this.pageData.formsdatas.Amount) - parseFloat(this.pageData.priceLimit);
            }
            upper_limit = parseFloat(this.pageData.formsdatas.Amount) + parseFloat(this.pageData.priceLimit);
            console.log(lower_limit);
            console.log(upper_limit);
            if ((parseFloat(num) >= lower_limit) && parseFloat(num) <= upper_limit) {
                this.isAmendAmountOk = true;
                console.log(this.isAmendAmountOk);
            }
            else {
                this.isAmendAmountOk = false;
                console.log(this.isAmendAmountOk);
            }
            /* if(parseFloat(num) <= (parseFloat(this.pageData.formsdatas.Amount) + parseFloat(this.pageData.priceLimit))){
              this.isAmendAmountOk = true;
              console.log(this.isAmendAmountOk);
            }else{
              this.isAmendAmountOk = false;
              console.log(this.isAmendAmountOk);
            } */
        }
    }
};
GeneralModalComponent.ctorParameters = () => [
    { type: _angular_material__WEBPACK_IMPORTED_MODULE_2__["MatDialog"] },
    { type: _angular_forms__WEBPACK_IMPORTED_MODULE_4__["FormBuilder"] },
    { type: _angular_router__WEBPACK_IMPORTED_MODULE_3__["Router"] },
    { type: _angular_material__WEBPACK_IMPORTED_MODULE_2__["MatDialogRef"] },
    { type: undefined, decorators: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"], args: [_angular_material__WEBPACK_IMPORTED_MODULE_2__["MAT_DIALOG_DATA"],] }] },
    { type: _angular_router__WEBPACK_IMPORTED_MODULE_3__["ActivatedRoute"] }
];
GeneralModalComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-general-modal',
        template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! raw-loader!./general-modal.component.html */ "./node_modules/raw-loader/dist/cjs.js!./src/app/general-modal/general-modal.component.html")).default,
        styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! ./general-modal.component.css */ "./src/app/general-modal/general-modal.component.css")).default]
    }),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__param"](4, Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"])(_angular_material__WEBPACK_IMPORTED_MODULE_2__["MAT_DIALOG_DATA"])),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_angular_material__WEBPACK_IMPORTED_MODULE_2__["MatDialog"], _angular_forms__WEBPACK_IMPORTED_MODULE_4__["FormBuilder"], _angular_router__WEBPACK_IMPORTED_MODULE_3__["Router"],
        _angular_material__WEBPACK_IMPORTED_MODULE_2__["MatDialogRef"], Object, _angular_router__WEBPACK_IMPORTED_MODULE_3__["ActivatedRoute"]])
], GeneralModalComponent);



/***/ }),

/***/ "./src/app/gov-entity-dashboard/gov-entity-dashboard.component.css":
/*!*************************************************************************!*\
  !*** ./src/app/gov-entity-dashboard/gov-entity-dashboard.component.css ***!
  \*************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2dvdi1lbnRpdHktZGFzaGJvYXJkL2dvdi1lbnRpdHktZGFzaGJvYXJkLmNvbXBvbmVudC5jc3MifQ== */");

/***/ }),

/***/ "./src/app/gov-entity-dashboard/gov-entity-dashboard.component.ts":
/*!************************************************************************!*\
  !*** ./src/app/gov-entity-dashboard/gov-entity-dashboard.component.ts ***!
  \************************************************************************/
/*! exports provided: GovEntityDashboardComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GovEntityDashboardComponent", function() { return GovEntityDashboardComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm2015/router.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm2015/forms.js");
/* harmony import */ var _services_common_service_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../services/common-service.service */ "./src/app/services/common-service.service.ts");
/* harmony import */ var ng2_charts__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ng2-charts */ "./node_modules/ng2-charts/fesm2015/ng2-charts.js");
/* harmony import */ var _ngx_translate_core__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @ngx-translate/core */ "./node_modules/@ngx-translate/core/fesm2015/ngx-translate-core.js");







let GovEntityDashboardComponent = class GovEntityDashboardComponent {
    constructor(translate, router, formBuilder, commonService) {
        this.translate = translate;
        this.router = router;
        this.formBuilder = formBuilder;
        this.commonService = commonService;
        this.isLGClicked = true;
        this.picolor = ['#008077', '#02282b', '#0f7ff5', '#02423d', '#3bbcf3', '#78f1b5', '#0b8d4d', '#02264c', '#0064ca', '#012b28'];
        this.i = 0;
        this.dtOptions = {};
        this.dtOptionsAR = {};
        this.pieChartOptions = {
            responsive: true,
            legend: { position: 'bottom',
                labels: {
                    fontSize: 8
                }
            }
        };
        this.pieChartLabels = [];
        this.pieChartData = [];
        this.pieChartType = 'pie';
        this.pieChartLegend = true;
        this.pieChartPlugins = [];
        this.doughnutposition = 'top';
        this.pieChartColors = [
            {
                backgroundColor: []
            },
        ];
        Object(ng2_charts__WEBPACK_IMPORTED_MODULE_5__["monkeyPatchChartJsTooltip"])();
        Object(ng2_charts__WEBPACK_IMPORTED_MODULE_5__["monkeyPatchChartJsLegend"])();
    }
    ngOnInit() {
        this.userId = localStorage.getItem('userId');
        console.log("this.userId::::" + this.userId);
        this.userName = localStorage.getItem('userName');
        console.log("this.userName::::" + this.userName);
        this.roleId = localStorage.getItem('roleId');
        console.log("this.role_ID::::" + this.roleId);
        this.crNoOrUidNo = localStorage.getItem('crNoOrUidNo');
        console.log("crNoOrUidNo::::" + this.crNoOrUidNo);
        /*************************************************** */
        this.dtOptionsAR = {
            pageLength: 10,
            processing: true,
            language: {
                processing: "جارٍ التحميل...",
                search: "ابحث:",
                lengthMenu: "أظهر _MENU_ مدخلات",
                info: "إظهار _START_ إلى _END_ من أصل _TOTAL_ مدخل",
                infoEmpty: "يعرض 0 إلى 0 من أصل 0 سجل",
                infoFiltered: "(منتقاة من مجموع _MAX_ مُدخل)",
                infoPostFix: "",
                loadingRecords: "جارٍ التحميل...",
                zeroRecords: "لم يعثر على أية سجلات",
                emptyTable: "ليست هناك بيانات متاحة في الجدول",
                paginate: {
                    first: "الأول",
                    previous: "السابق",
                    next: "التالي",
                    last: "الأخير"
                },
                aria: {
                    sortAscending: ": تفعيل لترتيب العمود تصاعدياً",
                    sortDescending: ": تفعيل لترتيب العمود تنازلياً"
                }
            }
        };
        this.dtOptions = {
            pageLength: 10,
            processing: true,
        };
        this.commonService.checkSessionExpired(this.userId)
            .then((data) => {
            if (data == 0) {
                this.commonService.showGeneralMessage(this.translate.instant('HOME.Session_Expired'), this.translate.instant('HOME.logged_out'), false);
                this.commonService.logout(this.userId);
                return;
            }
            else {
            }
        });
        /************************************************** */
        this.commonService.govGetGraphData(this.crNoOrUidNo)
            .subscribe(res => {
            console.log(res);
            for (var val of res.userObject) {
                this.pieChartLabels.push(val.lg_type);
                this.pieChartData.push(val.no_of_count);
                this.pieChartColors[0].backgroundColor.push(this.picolor[this.i]);
                this.i++;
            }
        });
        //To get pending list
        this.commonService.getGovtEntityActiveLGList(this.crNoOrUidNo)
            .subscribe(res => {
            console.log("AllLGRequestBeneficiarySpecific list::::" + JSON.stringify(res));
            this.LGLists = res.userObject;
            console.log("pending list is::::" + JSON.stringify(this.LGLists));
        });
        this.commonService.govCountOfActive(this.crNoOrUidNo)
            .subscribe(res => {
            console.log(res);
            this.ActiveLG = res;
        });
        this.commonService.govCountOfPending(this.crNoOrUidNo)
            .subscribe(res => {
            console.log(res);
            this.PendingLG = res;
        });
        this.commonService.govCountOfExpired(this.crNoOrUidNo)
            .subscribe(res => {
            console.log(res);
            this.ExpiredLG = res;
            //console.log("CountOfNotPending::::" + JSON.stringify(this.ActiveLG));
        });
        this.commonService.govCountOfPendingApproval(this.crNoOrUidNo)
            .subscribe(res => {
            console.log(res);
            this.PendingApprovalLG = res;
            //console.log("CountOfNotPending::::" + JSON.stringify(this.ActiveLG));
        });
    }
};
GovEntityDashboardComponent.ctorParameters = () => [
    { type: _ngx_translate_core__WEBPACK_IMPORTED_MODULE_6__["TranslateService"] },
    { type: _angular_router__WEBPACK_IMPORTED_MODULE_2__["Router"] },
    { type: _angular_forms__WEBPACK_IMPORTED_MODULE_3__["FormBuilder"] },
    { type: _services_common_service_service__WEBPACK_IMPORTED_MODULE_4__["CommonService"] }
];
GovEntityDashboardComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-gov-entity-dashboard',
        template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! raw-loader!./gov-entity-dashboard.component.html */ "./node_modules/raw-loader/dist/cjs.js!./src/app/gov-entity-dashboard/gov-entity-dashboard.component.html")).default,
        styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! ./gov-entity-dashboard.component.css */ "./src/app/gov-entity-dashboard/gov-entity-dashboard.component.css")).default]
    }),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_ngx_translate_core__WEBPACK_IMPORTED_MODULE_6__["TranslateService"], _angular_router__WEBPACK_IMPORTED_MODULE_2__["Router"], _angular_forms__WEBPACK_IMPORTED_MODULE_3__["FormBuilder"], _services_common_service_service__WEBPACK_IMPORTED_MODULE_4__["CommonService"]])
], GovEntityDashboardComponent);



/***/ }),

/***/ "./src/app/gov-lg-details/gov-lg-details.component.css":
/*!*************************************************************!*\
  !*** ./src/app/gov-lg-details/gov-lg-details.component.css ***!
  \*************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2dvdi1sZy1kZXRhaWxzL2dvdi1sZy1kZXRhaWxzLmNvbXBvbmVudC5jc3MifQ== */");

/***/ }),

/***/ "./src/app/gov-lg-details/gov-lg-details.component.ts":
/*!************************************************************!*\
  !*** ./src/app/gov-lg-details/gov-lg-details.component.ts ***!
  \************************************************************/
/*! exports provided: GovLgDetailsComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GovLgDetailsComponent", function() { return GovLgDetailsComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm2015/router.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm2015/forms.js");
/* harmony import */ var _services_common_service_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../services/common-service.service */ "./src/app/services/common-service.service.ts");
/* harmony import */ var _ngx_translate_core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @ngx-translate/core */ "./node_modules/@ngx-translate/core/fesm2015/ngx-translate-core.js");
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/material */ "./node_modules/@angular/material/esm2015/material.js");
/* harmony import */ var _general_modal_general_modal_component__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../general-modal/general-modal.component */ "./src/app/general-modal/general-modal.component.ts");








let GovLgDetailsComponent = class GovLgDetailsComponent {
    constructor(translate, router, formBuilder, commonService, dialog) {
        this.translate = translate;
        this.router = router;
        this.formBuilder = formBuilder;
        this.commonService = commonService;
        this.dialog = dialog;
        this.isDisableApprove = true;
        this.tncCheckbox = false;
        this.checkBox = false;
        this.ac_of_contract = false;
        this.agree_tag = false;
        this.isEnableButtons = false;
        this.dtOptions = {};
        this.dtOptionsAR = {};
        /******** */
        this.isEnableGovButtons = false;
        this.isDisablesendBackButton = true;
        this.isDisabledApprovedButton = false;
        this.isAllowToApprove = false;
        this.isEditTnC = false;
        this.nsAcceptButton = false;
        this.bankNamesList = [];
        this.isIssuedLetterOfGuarantee = false;
        this.applicantIfo = [];
        this.LG_History = [];
        this.amendmentApproval = false;
        this.amendmentAmountApproval = false;
        this.amendmentWriteUpApproval = false;
        this.amendmentLGEndDateApproval = false;
        this.isalertMsgforAmendmentStatus = false;
        this.isACREnableButtons = true;
        this.isACRpending = false;
        this.isAmendApprove = false;
        this.isReleaseApprove = false;
        this.isConfiscateApprove = false;
        this.partialConfiscation = false;
        this.partialRelease = false;
        this.aclAmendCreate = false;
        this.aclAmendReview = false;
        this.aclAmendApprove = false;
        this.aclConfiscateCreate = false;
        this.aclConfiscateReview = false;
        this.aclConfiscateApprove = false;
        this.aclReleaseCreate = false;
        this.aclReleaseReview = false;
        this.aclReleaseApprove = false;
        this.bankIbanList = [];
        this.IBANList = [];
        this.ispriceLimitOk = true;
        this.lgTypeList = [];
        this.isInternalPending = false;
        this.isAmendmentUpdate = false;
        this.isConfiscateUpdate = false;
        this.isReleaseUpdate = false;
        this.roleId = localStorage.getItem('roleId');
        console.log("this.roleId::::" + this.roleId);
        this.loginId = localStorage.getItem('userId');
        console.log("this.loginId::::" + this.loginId);
        this.userId = localStorage.getItem('userId');
        console.log("this.userId::::" + this.userId);
        this.crNoOrUidNo = localStorage.getItem('crNoOrUidNo');
        console.log("crNoOrUidNo::::" + this.crNoOrUidNo);
        this.acl = JSON.parse(localStorage.getItem('acl'));
        this.onBoardResolution = localStorage.getItem('onBoardResolution');
        /* console.log("currentWorkflowID >>"+localStorage.getItem('currentWorkflowID'));
        this.currentWorkflowID = localStorage.getItem('currentWorkflowID'); */
        this.currentmenuType = localStorage.getItem('currentmenuType');
        console.log("currentmenuType >>" + localStorage.getItem('currentmenuType'));
        console.log("this.supplier_entity_id::::" + this.commonService.lgIssuanceApproval.supplier_entity_id);
        console.log("this.beneficiary_entity_id::::" + this.commonService.lgIssuanceApproval.beneficiary_entity_id);
        this.commonService.currentWFIDObservable.subscribe((WFID) => {
            if (WFID) {
                this.currentWorkflowID = WFID;
                if (this.currentmenuType == 'Amendment') {
                    localStorage.removeItem('currentmenuType');
                    if (this.acl.Amendment !== undefined) {
                        console.log("Amendment workflow_id :" + this.currentWorkflowID);
                        if (localStorage.getItem('update_amendment') == 'update_amendment') {
                            localStorage.removeItem('update_amendment');
                            this.isAmendmentUpdate = true;
                        }
                        this.commonService.getBondTypeFromWorkFlow(this.currentWorkflowID, this.userId)
                            .subscribe(res => {
                            console.log("FromWorkFlow LG list::::" + JSON.stringify(res));
                            this.lgTypeList = res;
                            console.log("LGType " + this.commonService.lgIssuanceApproval.LGType);
                            var hasMatch = false;
                            for (var ind = 0; ind < this.lgTypeList.length; ++ind) {
                                var bondtype = this.lgTypeList[ind];
                                if (bondtype.bond == this.commonService.lgIssuanceApproval.LGType) {
                                    hasMatch = true;
                                    break;
                                }
                            }
                            if (hasMatch) {
                                for (let actions of this.acl.Amendment['subMenu']) {
                                    console.log(actions.action_nm);
                                    if (actions.action_nm === 'Create') {
                                        this.aclAmendCreate = true;
                                        this.commonService.getPriceLimitFromWorkFlow(this.currentWorkflowID, this.userId)
                                            .subscribe(res => {
                                            console.log("priceLimit::::" + JSON.stringify(res));
                                            this.amendPriceLimit = res[0].price_limit;
                                            console.log("priceLimit is::::" + JSON.stringify(this.priceLimit));
                                        });
                                    }
                                    if (actions.action_nm === 'Review') {
                                        this.aclAmendReview = true;
                                    }
                                    if (actions.action_nm === 'Approve') {
                                        this.aclAmendApprove = true;
                                    }
                                }
                            }
                        });
                    }
                }
                if (this.currentmenuType == 'Confiscate') {
                    localStorage.removeItem('currentmenuType');
                    if (this.acl.Confiscate !== undefined) {
                        console.log("Confiscate workflow_id :" + this.currentWorkflowID);
                        if (localStorage.getItem('update_confiscate') == 'update_confiscate') {
                            localStorage.removeItem('update_confiscate');
                            this.isConfiscateUpdate = true;
                        }
                        this.commonService.getBondTypeFromWorkFlow(this.currentWorkflowID, this.userId)
                            .subscribe(res => {
                            console.log("FromWorkFlow LGType Confiscate::::" + JSON.stringify(res));
                            this.lgTypeList = res;
                            console.log("LGType Confiscate" + this.commonService.lgIssuanceApproval.LGType);
                            var hasMatch = false;
                            for (var ind = 0; ind < this.lgTypeList.length; ++ind) {
                                var bondtype = this.lgTypeList[ind];
                                if (bondtype.bond == this.commonService.lgIssuanceApproval.LGType) {
                                    hasMatch = true;
                                    break;
                                }
                            }
                            if (hasMatch) {
                                for (let actions of this.acl.Confiscate['subMenu']) {
                                    console.log(actions.action_nm);
                                    if (actions.action_nm === 'Create') {
                                        this.aclConfiscateCreate = true;
                                        this.commonService.getPriceLimitFromWorkFlow(this.currentWorkflowID, this.userId)
                                            .subscribe(res => {
                                            console.log("priceLimit::::" + JSON.stringify(res));
                                            this.confiscatePriceLimit = res[0].price_limit;
                                        });
                                    }
                                    if (actions.action_nm === 'Review') {
                                        this.aclConfiscateReview = true;
                                    }
                                    if (actions.action_nm === 'Approve') {
                                        this.aclConfiscateApprove = true;
                                    }
                                }
                                this.commonService.getBankIbanListFromWorkFlow(this.currentWorkflowID, this.userId)
                                    .subscribe(res => {
                                    console.log("BankIbanList ::::" + JSON.stringify(res));
                                    this.bankIbanList = res;
                                    localStorage.setItem('bankIbanList', JSON.stringify(res));
                                    console.log("BankIbanList is::::" + JSON.stringify(this.bankIbanList));
                                });
                            }
                        });
                    }
                }
                if (this.currentmenuType == 'Release') {
                    localStorage.removeItem('currentmenuType');
                    if (this.acl.Release !== undefined) {
                        console.log("Release workflow_id :" + this.currentWorkflowID);
                        if (localStorage.getItem('update_release') == 'update_release') {
                            localStorage.removeItem('update_release');
                            this.isReleaseUpdate = true;
                        }
                        this.commonService.getBondTypeFromWorkFlow(this.currentWorkflowID, this.userId)
                            .subscribe(res => {
                            console.log("FromWorkFlow LGType Release::::" + JSON.stringify(res));
                            this.lgTypeList = res;
                            console.log("LGType Release" + this.commonService.lgIssuanceApproval.LGType);
                            var hasMatch = false;
                            for (var ind = 0; ind < this.lgTypeList.length; ++ind) {
                                var bondtype = this.lgTypeList[ind];
                                if (bondtype.bond == this.commonService.lgIssuanceApproval.LGType) {
                                    hasMatch = true;
                                    break;
                                }
                            }
                            if (hasMatch) {
                                for (let actions of this.acl.Release['subMenu']) {
                                    console.log(actions.action_nm);
                                    if (actions.action_nm === 'Create') {
                                        this.aclReleaseCreate = true;
                                        this.commonService.getPriceLimitFromWorkFlow(this.currentWorkflowID, this.userId)
                                            .subscribe(res => {
                                            console.log("priceLimit::::" + JSON.stringify(res));
                                            this.releasePriceLimit = res[0].price_limit;
                                        });
                                    }
                                    if (actions.action_nm === 'Review') {
                                        this.aclReleaseReview = true;
                                    }
                                    if (actions.action_nm === 'Approve') {
                                        this.aclReleaseApprove = true;
                                    }
                                }
                            }
                        });
                    }
                }
            }
        });
        //To get IBAN
        this.commonService.getIBANList(this.userId)
            .subscribe(res => {
            console.log("IBAN list::::" + JSON.stringify(res));
            this.bankNamesList = res;
            console.log(this.bankNamesList);
        });
        this.commonService.getBeneficiaryInfoAndApplicatInfo(this.commonService.lgIssuanceApproval.requestId)
            .subscribe(res => {
            console.log("applicantIfo::::" + JSON.stringify(res));
            // console.log(res.userObject.applicatInfo[0].cr_no);
            this.Applicant_CRN = res.userObject.applicatInfo[0].cr_no;
            this.Applicant_Entity_name_Arabic = res.userObject.applicatInfo[0].supplier_name;
            this.Applicant_Selected_Bank = res.userObject.applicatInfo[0].bank_code;
            this.Applicant_Selected_IBAN = res.userObject.applicatInfo[0].iban_no;
            this.Applicant_CR_type = res.userObject.applicatInfo[0].cr_type;
            this.Applicant_CR_status = res.userObject.applicatInfo[0].cr_status;
            this.Applicant_CR_Issue_Date = res.userObject.applicatInfo[0].cr_issue_date;
            this.Applicant_CR_expiry_Date = res.userObject.applicatInfo[0].cr_expiry_date;
            this.Applicant_Address = res.userObject.applicatInfo[0].addr;
            this.Applicant_City = res.userObject.applicatInfo[0].city;
        });
        this.commonService.getLgHistory(this.commonService.lgIssuanceApproval.lg_no)
            .subscribe(res => {
            console.log("Gov lgHistoryList::::" + JSON.stringify(res));
            this.LG_History = res.userObject.lgHistorylis;
        });
        this.commonService.checkSessionExpired(this.loginId)
            .then((data) => {
            if (data == 0) {
                this.commonService.showGeneralMessage(this.translate.instant('HOME.Session_Expired'), this.translate.instant('HOME.logged_out'), false);
                this.commonService.logout(this.loginId);
                return;
            }
            else {
            }
        });
        console.log("this.commonService.lgIssuanceApproval in Details page*****" + JSON.stringify(this.commonService.lgIssuanceApproval));
        if (this.commonService.lgIssuanceApproval !== undefined || this.commonService.lgIssuanceApproval !== null) {
            if (this.commonService.lgIssuanceApproval.requestId !== undefined || this.commonService.lgIssuanceApproval.requestId !== null) {
                this.request_id = this.commonService.lgIssuanceApproval.requestId;
            }
            console.log("this.commonService.lgIssuanceApproval.create_by in private::::" + this.commonService.lgIssuanceApproval.create_by);
        }
        if (this.roleId !== null || this.roleId !== undefined) {
            //This is for amend/release/confiscate
            if (this.commonService.lgIssuanceApproval.pendingtype !== null || this.commonService.lgIssuanceApproval.pendingtype !== undefined) {
                if (this.commonService.lgIssuanceApproval.pendingtype == 'amend' || this.commonService.lgIssuanceApproval.pendingtype == 'release' || this.commonService.lgIssuanceApproval.pendingtype == 'confiscate') {
                    this.isACRpending = true;
                    this.isACREnableButtons = false;
                    this.ACRpendingtype = this.commonService.lgIssuanceApproval.pendingtype;
                }
                if (this.commonService.lgIssuanceApproval.pendingtype == 'amendment_review' || this.commonService.lgIssuanceApproval.pendingtype == 'confiscate_review' || this.commonService.lgIssuanceApproval.pendingtype == 'release_review') {
                    if (this.commonService.lgIssuanceApproval.workflow_status == 'P') {
                        this.isInternalPending = true;
                        this.isACREnableButtons = false;
                        this.internalPendingType = this.commonService.lgIssuanceApproval.pendingtype;
                        this.isalertMsgforAmendmentStatus = true;
                        //this.alertMsgforPrivateLGApproval = "This case request requires internal review";
                        this.alertMsgforPrivateLGApproval = this.commonService.lgIssuanceApproval.notification_message;
                    }
                    else {
                        this.isInternalPending = false;
                        this.isACREnableButtons = false;
                        this.isalertMsgforAmendmentStatus = true;
                        //this.alertMsgforPrivateLGApproval = "This case request has been "+this.commonService.lgIssuanceApproval.workflow_state.toLowerCase( );
                        this.alertMsgforPrivateLGApproval = this.commonService.lgIssuanceApproval.notification_message;
                    }
                }
                if (this.commonService.lgIssuanceApproval.pendingtype == 'amendment_approve' || this.commonService.lgIssuanceApproval.pendingtype == 'confiscate_approve' || this.commonService.lgIssuanceApproval.pendingtype == 'release_approve') {
                    if (this.commonService.lgIssuanceApproval.workflow_status == 'P') {
                        this.isInternalPending = true;
                        this.isACREnableButtons = false;
                        this.internalPendingType = this.commonService.lgIssuanceApproval.pendingtype;
                        this.isalertMsgforAmendmentStatus = true;
                        //this.alertMsgforPrivateLGApproval = "This case request requires internal approval";
                        this.alertMsgforPrivateLGApproval = this.commonService.lgIssuanceApproval.notification_message;
                    }
                    else {
                        this.isInternalPending = false;
                        this.isACREnableButtons = false;
                        this.isalertMsgforAmendmentStatus = true;
                        //this.alertMsgforPrivateLGApproval = "This case request has been "+this.commonService.lgIssuanceApproval.workflow_state.toLowerCase( );
                        this.alertMsgforPrivateLGApproval = this.commonService.lgIssuanceApproval.notification_message;
                    }
                }
            }
            console.log("This is for pendingtype ::" + this.commonService.lgIssuanceApproval.pendingtype);
            console.log("This is for amend/release/confiscate ::" + this.isACRpending);
            //if(this.roleId == 1){
            // if (this.loginId == this.commonService.lgIssuanceApproval.create_by) {
            if (this.crNoOrUidNo == this.commonService.lgIssuanceApproval.supplier_entity_id) {
                console.log("this.roleId in this.commonService.lgIssuanceApproval:::::" + this.roleId);
                //PENDING
                //if(this.commonService.lgIssuanceApproval.status != null || this.commonService.lgIssuanceApproval.status != undefined){
                if (this.commonService.lgIssuanceApproval.response_code == '120') {
                    this.isEnableButtons = false;
                    this.isEnableGovButtons = false;
                    this.nsAcceptButton = false;
                    //this.alertMsgforPrivateLGApproval = "The case request has been sent to bank for further processing";
                    this.alertMsgforPrivateLGApproval = this.commonService.lgIssuanceApproval.notification_message;
                }
                // NS-CHANGE
                else if (this.commonService.lgIssuanceApproval.response_code == '121') {
                    this.isEnableButtons = true;
                    this.isEnableGovButtons = false;
                    this.nsAcceptButton = false;
                    //this.alertMsgforPrivateLGApproval = "Your case request has been modified by the Beneficiary. Please accept for further processing.";
                    this.alertMsgforPrivateLGApproval = this.commonService.lgIssuanceApproval.notification_message;
                }
                //NS-PENDING
                else if (this.commonService.lgIssuanceApproval.response_code == '124') {
                    this.isEnableButtons = false;
                    this.isEnableGovButtons = false;
                    this.nsAcceptButton = false;
                    //this.alertMsgforPrivateLGApproval = "Your case request has been sent to Beneficiary. Please contact them for approving the Request.";
                    this.alertMsgforPrivateLGApproval = this.commonService.lgIssuanceApproval.notification_message;
                }
                //NS-ACCEPT
                else if (this.commonService.lgIssuanceApproval.response_code == '122') {
                    this.isEnableButtons = false;
                    this.isEnableGovButtons = false;
                    this.nsAcceptButton = false;
                    //this.alertMsgforPrivateLGApproval = "Your case request has been sent to beneficiary. You will be notified once approved.";
                    this.alertMsgforPrivateLGApproval = this.commonService.lgIssuanceApproval.notification_message;
                }
                //CANCELLED
                else if (this.commonService.lgIssuanceApproval.response_code == '123') {
                    this.isEnableButtons = false;
                    this.isEnableGovButtons = false;
                    this.nsAcceptButton = false;
                    this.alertMsgforPrivateLGApproval = "Cancelled by private entity";
                }
                /* //AMENDMENT-PENDING
                else if (this.commonService.lgIssuanceApproval.response_code == '3001') {
                  this.isAmendApprove = false;
                  this.isalertMsgforAmendmentStatus = true;
                  this.alertMsgforPrivateLGApproval = "This case request requires beneficiary approval";
                }
                //AMENDMENT-PENDING-BANK
                else if (this.commonService.lgIssuanceApproval.response_code == '3002') {
                  this.isAmendApprove = false;
                  this.isalertMsgforAmendmentStatus = true;
                  this.alertMsgforPrivateLGApproval = "This case request requires bank approval";
                } */
                //AMENDMENT-PENDING
                else if (this.commonService.lgIssuanceApproval.response_code == '3001') {
                    this.isAmendApprove = false;
                    this.isalertMsgforAmendmentStatus = true;
                    //this.alertMsgforPrivateLGApproval = "This Amendment case request requires supplier approval";
                    this.alertMsgforPrivateLGApproval = this.commonService.lgIssuanceApproval.notification_message;
                }
                //AMENDMENT-PENDING-BANK
                else if (this.commonService.lgIssuanceApproval.response_code == '3002') {
                    this.isAmendApprove = false;
                    this.isalertMsgforAmendmentStatus = true;
                    //this.alertMsgforPrivateLGApproval = "This Amendment case request requires bank approval";
                    this.alertMsgforPrivateLGApproval = this.commonService.lgIssuanceApproval.notification_message;
                }
                //AMENDMENT-REJECTED
                else if (this.commonService.lgIssuanceApproval.response_code == '3003') {
                    this.isAmendApprove = false;
                    this.isalertMsgforAmendmentStatus = true;
                    //this.alertMsgforPrivateLGApproval = "This Amendment case request is Rejected";
                    this.alertMsgforPrivateLGApproval = this.commonService.lgIssuanceApproval.notification_message;
                }
                //AMENDMENT-APPROVED
                else if (this.commonService.lgIssuanceApproval.response_code == '3004') {
                    this.isAmendApprove = false;
                    this.isalertMsgforAmendmentStatus = true;
                    //this.alertMsgforPrivateLGApproval = "This Amendment case request is Approved";
                    this.alertMsgforPrivateLGApproval = this.commonService.lgIssuanceApproval.notification_message;
                }
                //AMENDMENT-PENDING-SUPP
                else if (this.commonService.lgIssuanceApproval.response_code == '3005') {
                    this.isAmendApprove = true;
                    this.isalertMsgforAmendmentStatus = true;
                    // this.alertMsgforPrivateLGApproval = "This Amendment case request requires beneficiary approval";
                    this.alertMsgforPrivateLGApproval = this.commonService.lgIssuanceApproval.notification_message;
                }
                //CONF-PENDING
                else if (this.commonService.lgIssuanceApproval.response_code == '4001') {
                    this.isAmendApprove = false;
                    //this.alertMsgforPrivateLGApproval = "This confiscation Case Request Requires Bank Approval";
                    this.alertMsgforPrivateLGApproval = this.commonService.lgIssuanceApproval.notification_message;
                }
                //CONF-PENDING-BANK
                else if (this.commonService.lgIssuanceApproval.response_code == '4002') {
                    this.isAmendApprove = false;
                    // this.alertMsgforPrivateLGApproval = "This confiscation Case Request Requires Bank Approval";
                    this.alertMsgforPrivateLGApproval = this.commonService.lgIssuanceApproval.notification_message;
                }
                //REL-PENDING
                else if (this.commonService.lgIssuanceApproval.response_code == '5001') {
                    this.isAmendApprove = false;
                    //this.alertMsgforPrivateLGApproval = "This Release Case Request Requires Bank Approval";
                    this.alertMsgforPrivateLGApproval = this.commonService.lgIssuanceApproval.notification_message;
                }
                //REL-PENDING-BANK
                else if (this.commonService.lgIssuanceApproval.response_code == '5002') {
                    this.isAmendApprove = false;
                    //this.alertMsgforPrivateLGApproval = "This Release Case Request Requires Bank Approval";
                    this.alertMsgforPrivateLGApproval = this.commonService.lgIssuanceApproval.notification_message;
                }
                //}
            }
            if (this.crNoOrUidNo == this.commonService.lgIssuanceApproval.beneficiary_entity_id) {
                console.log('Hi this is BENE');
                //if(this.roleId == 2 ){
                //PENDING
                //if(this.commonService.lgIssuanceApproval.status != null || this.commonService.lgIssuanceApproval.status != undefined){
                if (this.commonService.lgIssuanceApproval.response_code == '120') {
                    this.isEnableGovButtons = false;
                    this.isEnableButtons = false;
                    this.nsAcceptButton = false;
                    this.isalertMsgforAmendmentStatus = true;
                    //this.alertMsgforGovLGApproval = "Your case request has been sent to bank. You will be notified once approved.";
                    //this.alertMsgforPrivateLGApproval = "The case request has been sent to bank for further processing";
                    this.alertMsgforPrivateLGApproval = this.commonService.lgIssuanceApproval.notification_message;
                }
                // NS-CHANGE
                else if (this.commonService.lgIssuanceApproval.response_code == '121') {
                    this.isEnableGovButtons = true;
                    this.isEnableButtons = false;
                    this.nsAcceptButton = false;
                    this.isalertMsgforAmendmentStatus = true;
                    // this.alertMsgforPrivateLGApproval = "The case request is waiting to be accepted by the supplier.";
                    this.alertMsgforPrivateLGApproval = this.commonService.lgIssuanceApproval.notification_message;
                }
                //NS-PENDING
                else if (this.commonService.lgIssuanceApproval.response_code == '124') {
                    console.log("this.isEnableButtons for response_code == '124'::::" + this.isEnableButtons);
                    this.isEnableGovButtons = true;
                    this.isEnableButtons = false;
                    this.nsAcceptButton = false;
                    this.isalertMsgforAmendmentStatus = true;
                    //this.alertMsgforPrivateLGApproval = "The case request is waiting for your approval.";
                    this.alertMsgforPrivateLGApproval = this.commonService.lgIssuanceApproval.notification_message;
                }
                //NS-ACCEPT
                else if (this.commonService.lgIssuanceApproval.response_code == '122') {
                    this.isEnableGovButtons = false;
                    this.isEnableButtons = false;
                    this.nsAcceptButton = true;
                    this.isalertMsgforAmendmentStatus = true;
                    //this.alertMsgforPrivateLGApproval = "The case request has been accepted by the supplier. Please approve.";
                    this.alertMsgforPrivateLGApproval = this.commonService.lgIssuanceApproval.notification_message;
                }
                //  //CANCELLED
                //  else if(this.commonService.lgIssuanceApproval.response_code == '123'){
                //   this.isEnableGovButtons = false;
                //   this.isEnableButtons = false;
                //   this.alertMsgforPrivateLGApproval = "Cancelled by private entity";
                //  }
                //}
                /* //AMENDMENT-PENDING
               else if (this.commonService.lgIssuanceApproval.response_code == '3001') {
                 this.isAmendApprove = true;
                 this.isalertMsgforAmendmentStatus = true;
                 this.alertMsgforPrivateLGApproval = "This case request requires beneficiary approval";
               }
               //AMENDMENT-PENDING-BANK
               else if (this.commonService.lgIssuanceApproval.response_code == '3002') {
                 this.isAmendApprove = false;
                 this.isalertMsgforAmendmentStatus = true;
                 this.alertMsgforPrivateLGApproval = "This case request requires bank approval";
               } */
                //AMENDMENT-PENDING
                else if (this.commonService.lgIssuanceApproval.response_code == '3001') {
                    this.isAmendApprove = false;
                    this.isalertMsgforAmendmentStatus = true;
                    //this.alertMsgforPrivateLGApproval = "This Amendment case request requires supplier approval";
                    this.alertMsgforPrivateLGApproval = this.commonService.lgIssuanceApproval.notification_message;
                }
                //AMENDMENT-PENDING-BANK
                else if (this.commonService.lgIssuanceApproval.response_code == '3002') {
                    this.isAmendApprove = false;
                    this.isalertMsgforAmendmentStatus = true;
                    //this.alertMsgforPrivateLGApproval = "This Amendment case request requires bank approval";
                    this.alertMsgforPrivateLGApproval = this.commonService.lgIssuanceApproval.notification_message;
                }
                //AMENDMENT-REJECTED
                else if (this.commonService.lgIssuanceApproval.response_code == '3003') {
                    this.isAmendApprove = false;
                    this.isalertMsgforAmendmentStatus = true;
                    //this.alertMsgforPrivateLGApproval = "This Amendment case request is Rejected";
                    this.alertMsgforPrivateLGApproval = this.commonService.lgIssuanceApproval.notification_message;
                }
                //AMENDMENT-APPROVED
                else if (this.commonService.lgIssuanceApproval.response_code == '3004') {
                    this.isAmendApprove = false;
                    this.isalertMsgforAmendmentStatus = true;
                    //this.alertMsgforPrivateLGApproval = "This Amendment case request is Approved";
                    this.alertMsgforPrivateLGApproval = this.commonService.lgIssuanceApproval.notification_message;
                }
                //AMENDMENT-PENDING-SUPP
                else if (this.commonService.lgIssuanceApproval.response_code == '3005') {
                    this.isAmendApprove = true;
                    this.isalertMsgforAmendmentStatus = true;
                    //this.alertMsgforPrivateLGApproval = "This Amendment case request requires beneficiary approval";
                    this.alertMsgforPrivateLGApproval = this.commonService.lgIssuanceApproval.notification_message;
                }
                //CONF-PENDING
                else if (this.commonService.lgIssuanceApproval.response_code == '4001') {
                    this.isAmendApprove = false;
                    this.isalertMsgforAmendmentStatus = true;
                    //this.alertMsgforPrivateLGApproval = "This confiscation Case Request Requires Bank Approval";
                    this.alertMsgforPrivateLGApproval = this.commonService.lgIssuanceApproval.notification_message;
                }
                //CONF-PENDING-BANK
                else if (this.commonService.lgIssuanceApproval.response_code == '4002') {
                    this.isAmendApprove = false;
                    this.isalertMsgforAmendmentStatus = true;
                    // this.alertMsgforPrivateLGApproval = "This confiscation Case Request Requires Bank Approval";
                    this.alertMsgforPrivateLGApproval = this.commonService.lgIssuanceApproval.notification_message;
                }
                //REL-PENDING
                else if (this.commonService.lgIssuanceApproval.response_code == '5001') {
                    this.isAmendApprove = false;
                    this.isalertMsgforAmendmentStatus = true;
                    //this.alertMsgforPrivateLGApproval = "This Release Case Request Requires Bank Approval";
                    this.alertMsgforPrivateLGApproval = this.commonService.lgIssuanceApproval.notification_message;
                }
                //REL-PENDING-BANK
                else if (this.commonService.lgIssuanceApproval.response_code == '5002') {
                    this.isAmendApprove = false;
                    this.isalertMsgforAmendmentStatus = true;
                    //this.alertMsgforPrivateLGApproval = "This Release Case Request Requires Bank Approval";
                    this.alertMsgforPrivateLGApproval = this.commonService.lgIssuanceApproval.notification_message;
                }
            }
        }
    }
    ngOnInit() {
        //To get IBAN
        this.commonService.getIBANList(this.userId)
            .subscribe(res => {
            console.log("IBAN list::::" + JSON.stringify(res));
            this.bankNamesList = res;
            localStorage.setItem('bankNamesList', JSON.stringify(res));
            console.log(this.bankNamesList);
        });
        this.submitLGIssuanceApproval = this.formBuilder.group({
            LGType: [
                ""
            ],
            Amount: [
                ""
            ],
            currency: [
                ""
            ],
            LGStartDate: [
                ""
            ],
            LGEndDate: [
                ""
            ],
            checkBox: [
                false
            ],
            ac_of_contract: [
                false
            ],
            agree_tag: [
                false
            ],
            TermsAndCondContent: [
                ""
            ],
            activeStatus: [
                ""
            ],
            requestId: [
                ""
            ],
            LGNumber: [
                ""
            ],
            writeUpType: [
                ""
            ],
            amountInText: [
                ""
            ],
            LGValidityDate: [
                ""
            ],
            zakatStartDate: [
                ""
            ],
            zakatEndDate: [
                ""
            ],
            projectName: [
                ""
            ],
            projectId: [
                ""
            ],
            purposeOfBond: [
                ""
            ],
            LGIssueDate: [
                ""
            ],
            byanNo: [
                ""
            ],
            Applicant_CRN: [
                ""
            ],
            Applicant_Entity_name_Arabic: [
                ""
            ],
            Applicant_Selected_Bank: [
                ""
            ],
            Applicant_Selected_IBAN: [
                ""
            ],
            Applicant_CR_type: [
                ""
            ],
            Applicant_CR_status: [
                ""
            ],
            Applicant_CR_Issue_Date: [
                ""
            ],
            Applicant_CR_expiry_Date: [
                ""
            ],
            Applicant_Address: [
                ""
            ],
            Applicant_City: [
                ""
            ],
            Beneficiary_Name: [
                ""
            ],
            Beneficiary_UID_or_CRN: [
                ""
            ],
            Represantitive_Name: [
                ""
            ],
            Represantitive_Mobile_number: [
                ""
            ],
            Represantitive_Email: [
                ""
            ],
            Represantitive_Address: [
                ""
            ],
            Amendmend_request_id: [
                ""
            ],
            amendAmount: [
                ""
            ],
            amendLGenddate: [
                ""
            ],
            amendWriteup: [
                ""
            ],
            confiscate_request_id: [
                ""
            ],
            confiscatebankName: [
                ""
            ],
            confiscateIBAN: [
                ""
            ],
            confiscateReason: [
                ""
            ],
            partialConfiscation: [
                false
            ],
            confiscateAmount: [
                ""
            ],
            release_request_id: [
                ""
            ],
            releaseReason: [
                ""
            ],
            partialRelease: [
                false
            ],
            releaseAmount: [
                ""
            ]
        });
        console.log("this.commonService.lgIssuanceApproval::::" + JSON.stringify(this.commonService.lgIssuanceApproval));
        var getLGEndDateSplit = this.commonService.lgIssuanceApproval.LGEndDate.split("/");
        var getLGEndDate = getLGEndDateSplit[2] + "-" + getLGEndDateSplit[1] + "-" + getLGEndDateSplit[0];
        this.new_getLGEndDate = new Date(getLGEndDate);
        this.today_date = new Date();
        if (this.new_getLGEndDate < this.today_date) {
            this.isACREnableButtons = false;
        }
        this.submitLGIssuanceApproval.controls["LGType"].setValue(this.commonService.lgIssuanceApproval.LGType);
        this.submitLGIssuanceApproval.controls["LGNumber"].setValue(this.commonService.lgIssuanceApproval.lg_no);
        this.submitLGIssuanceApproval.controls["Amount"].setValue(this.commonService.lgIssuanceApproval.Amount);
        if (this.commonService.lgIssuanceApproval.LGType != null || this.commonService.lgIssuanceApproval.LGType != undefined) {
        }
        if (this.commonService.lgIssuanceApproval.status != null || this.commonService.lgIssuanceApproval.status != undefined) {
            this.submitLGIssuanceApproval.controls["activeStatus"].setValue(this.commonService.lgIssuanceApproval.status);
        }
        if (this.commonService.lgIssuanceApproval.requestId != null || this.commonService.lgIssuanceApproval.requestId != undefined) {
            this.submitLGIssuanceApproval.controls["requestId"].setValue(this.commonService.lgIssuanceApproval.requestId);
        }
        if (this.commonService.lgIssuanceApproval.writeUpType != null || this.commonService.lgIssuanceApproval.writeUpType != undefined) {
            this.submitLGIssuanceApproval.controls["writeUpType"].setValue(this.commonService.lgIssuanceApproval.writeUpType);
        }
        // if (this.commonService.lgIssuanceApproval.bankName != null || this.commonService.lgIssuanceApproval.bankName != undefined) {
        //   this.submitLGIssuanceApproval.controls["bankName"].setValue(this.commonService.lgIssuanceApproval.bankName);
        // }
        if (this.commonService.lgIssuanceApproval.LGStartDate != null || this.commonService.lgIssuanceApproval.LGStartDate != undefined) {
            this.submitLGIssuanceApproval.controls["LGStartDate"].setValue(this.commonService.lgIssuanceApproval.LGStartDate);
        }
        if (this.commonService.lgIssuanceApproval.LGEndDate != null || this.commonService.lgIssuanceApproval.LGEndDate != undefined) {
            this.submitLGIssuanceApproval.controls["LGEndDate"].setValue(this.commonService.lgIssuanceApproval.LGEndDate);
        }
        if (this.commonService.lgIssuanceApproval.Amount != null || this.commonService.lgIssuanceApproval.Amount != undefined) {
        }
        if (this.commonService.lgIssuanceApproval.currency != null || this.commonService.lgIssuanceApproval.currency != undefined) {
            this.submitLGIssuanceApproval.controls["currency"].setValue(this.commonService.lgIssuanceApproval.currency);
        }
        if (this.commonService.lgIssuanceApproval.amountInNumber != null || this.commonService.lgIssuanceApproval.amountInNumber != undefined) {
            var converter = __webpack_require__(/*! number-to-words */ "./node_modules/number-to-words/numberToWords.min.js");
            this.submitLGIssuanceApproval.controls["amountInText"].setValue(converter.toWords(this.commonService.lgIssuanceApproval.Amount));
        }
        if (this.commonService.lgIssuanceApproval.ZakatPeriodStartDate != null || this.commonService.lgIssuanceApproval.ZakatPeriodStartDate != undefined) {
            this.submitLGIssuanceApproval.controls["zakatStartDate"].setValue(this.commonService.lgIssuanceApproval.ZakatPeriodStartDate);
        }
        if (this.commonService.lgIssuanceApproval.ZakatPeriodEndDate != null || this.commonService.lgIssuanceApproval.ZakatPeriodEndDate != undefined) {
            this.submitLGIssuanceApproval.controls["zakatEndDate"].setValue(this.commonService.lgIssuanceApproval.ZakatPeriodEndDate);
        }
        if (this.commonService.lgIssuanceApproval.projectName != null || this.commonService.lgIssuanceApproval.projectName != undefined) {
            this.submitLGIssuanceApproval.controls["projectName"].setValue(this.commonService.lgIssuanceApproval.projectName);
        }
        if (this.commonService.lgIssuanceApproval.projectNumber != null || this.commonService.lgIssuanceApproval.projectNumber != undefined) {
            this.submitLGIssuanceApproval.controls["projectId"].setValue(this.commonService.lgIssuanceApproval.projectNumber);
        }
        if (this.commonService.lgIssuanceApproval.puroseOfBond != null || this.commonService.lgIssuanceApproval.puroseOfBond != undefined) {
            this.submitLGIssuanceApproval.controls["purposeOfBond"].setValue(this.commonService.lgIssuanceApproval.puroseOfBond);
        }
        if (this.commonService.lgIssuanceApproval.bayanNuymber != null || this.commonService.lgIssuanceApproval.bayanNuymber != undefined) {
            this.submitLGIssuanceApproval.controls["byanNo"].setValue(this.commonService.lgIssuanceApproval.bayanNuymber);
        }
        if (this.commonService.lgIssuanceApproval.checkBox != null || this.commonService.lgIssuanceApproval.checkBox != undefined) {
            if (this.commonService.lgIssuanceApproval.checkBox === 'y') {
                this.checkBox = true;
                this.submitLGIssuanceApproval.controls["checkBox"].setValue(this.checkBox);
                this.isAllowToApprove = true;
            }
            else {
                this.checkBox = false;
                this.submitLGIssuanceApproval.controls["checkBox"].setValue(this.checkBox);
                this.isAllowToApprove = false;
            }
        }
        if (this.commonService.lgIssuanceApproval.ac_of_contract != null || this.commonService.lgIssuanceApproval.ac_of_contract != undefined) {
            if (this.commonService.lgIssuanceApproval.ac_of_contract === 'y') {
                this.ac_of_contract = true;
                this.submitLGIssuanceApproval.controls["ac_of_contract"].setValue(this.ac_of_contract);
            }
            else {
                this.ac_of_contract = false;
                this.submitLGIssuanceApproval.controls["ac_of_contract"].setValue(this.ac_of_contract);
            }
        }
        if (this.commonService.lgIssuanceApproval.agree_tag != null || this.commonService.lgIssuanceApproval.agree_tag != undefined) {
            if (this.commonService.lgIssuanceApproval.agree_tag === 'y') {
                this.agree_tag = true;
                this.submitLGIssuanceApproval.controls["agree_tag"].setValue(this.agree_tag);
                this.isAllowToApprove = true;
            }
            else {
                this.agree_tag = false;
                this.submitLGIssuanceApproval.controls["agree_tag"].setValue(this.agree_tag);
                this.isAllowToApprove = false;
            }
        }
        if (this.commonService.lgIssuanceApproval.termsNconditionsMessage != null && this.commonService.lgIssuanceApproval.termsNconditionsMessage != undefined) {
            this.submitLGIssuanceApproval.controls["TermsAndCondContent"].setValue(this.commonService.lgIssuanceApproval.termsNconditionsMessage);
        }
        if (this.commonService.lgIssuanceApproval.lg_validity_date != null && this.commonService.lgIssuanceApproval.lg_validity_date != undefined) {
            this.submitLGIssuanceApproval.controls["LGValidityDate"].setValue(this.commonService.lgIssuanceApproval.lg_validity_date);
        }
        if (this.commonService.lgIssuanceApproval.LGIssueDate != null && this.commonService.lgIssuanceApproval.LGIssueDate != undefined) {
            this.submitLGIssuanceApproval.controls["LGIssueDate"].setValue(this.commonService.lgIssuanceApproval.LGIssueDate);
        }
        this.submitLGIssuanceApproval.controls["Beneficiary_Name"].setValue(localStorage.getItem('crNoOrUidNo'));
        this.submitLGIssuanceApproval.controls["Beneficiary_UID_or_CRN"].setValue(this.commonService.lgIssuanceApproval.beneficiary_UID);
        this.submitLGIssuanceApproval.controls["Represantitive_Name"].setValue(localStorage.getItem('crNoOrUidNo'));
        this.submitLGIssuanceApproval.controls["Represantitive_Mobile_number"].setValue(localStorage.getItem('crNoOrUidNo'));
        this.submitLGIssuanceApproval.controls["Represantitive_Email"].setValue(localStorage.getItem('crNoOrUidNo'));
        this.submitLGIssuanceApproval.controls["Represantitive_Address"].setValue(localStorage.getItem('crNoOrUidNo'));
        if (this.commonService.lgIssuanceApproval.Amendmend_request_id != null || this.commonService.lgIssuanceApproval.Amendmend_request_id != undefined) {
            this.submitLGIssuanceApproval.controls["Amendmend_request_id"].setValue(this.commonService.lgIssuanceApproval.Amendmend_request_id);
        }
        if (this.commonService.lgIssuanceApproval.amendment_amount != null || this.commonService.lgIssuanceApproval.amendment_amount != undefined) {
            this.submitLGIssuanceApproval.controls["amendAmount"].setValue(this.commonService.lgIssuanceApproval.amendment_amount);
        }
        if (this.commonService.lgIssuanceApproval.amendment_lg_end_date != null || this.commonService.lgIssuanceApproval.amendment_lg_end_date != undefined) {
            this.submitLGIssuanceApproval.controls["amendLGenddate"].setValue(this.commonService.lgIssuanceApproval.amendment_lg_end_date);
        }
        if (this.commonService.lgIssuanceApproval.amendment_writeup_mesg != null || this.commonService.lgIssuanceApproval.amendment_writeup_mesg != undefined) {
            this.submitLGIssuanceApproval.controls["amendWriteup"].setValue(this.commonService.lgIssuanceApproval.amendment_writeup_mesg);
        }
        if (this.commonService.lgIssuanceApproval.confiscate_request_id != null || this.commonService.lgIssuanceApproval.confiscate_request_id != undefined) {
            this.submitLGIssuanceApproval.controls["confiscate_request_id"].setValue(this.commonService.lgIssuanceApproval.confiscate_request_id);
        }
        if (this.commonService.lgIssuanceApproval.confiscate_bankName != null || this.commonService.lgIssuanceApproval.confiscate_bankName != undefined) {
            this.submitLGIssuanceApproval.controls["confiscatebankName"].setValue(this.commonService.lgIssuanceApproval.confiscate_bankName);
        }
        if (this.commonService.lgIssuanceApproval.confiscate_IBAN != null || this.commonService.lgIssuanceApproval.confiscate_IBAN != undefined) {
            this.submitLGIssuanceApproval.controls["confiscateIBAN"].setValue(this.commonService.lgIssuanceApproval.confiscate_IBAN);
        }
        if (this.commonService.lgIssuanceApproval.confiscate_reason != null || this.commonService.lgIssuanceApproval.confiscate_reason != undefined) {
            this.submitLGIssuanceApproval.controls["confiscateReason"].setValue(this.commonService.lgIssuanceApproval.confiscate_reason);
        }
        if (this.commonService.lgIssuanceApproval.partial_confiscation != null || this.commonService.lgIssuanceApproval.partial_confiscation != undefined) {
            if (this.commonService.lgIssuanceApproval.partial_confiscation === 'Y') {
                this.partialConfiscation = true;
                this.submitLGIssuanceApproval.controls["partialConfiscation"].setValue(this.partialConfiscation);
            }
            else {
                this.partialConfiscation = false;
                this.submitLGIssuanceApproval.controls["partialConfiscation"].setValue(this.partialConfiscation);
            }
            this.submitLGIssuanceApproval.get('partialConfiscation').disable();
        }
        if (this.commonService.lgIssuanceApproval.confiscate_amount != null || this.commonService.lgIssuanceApproval.confiscate_amount != undefined) {
            this.submitLGIssuanceApproval.controls["confiscateAmount"].setValue(this.commonService.lgIssuanceApproval.confiscate_amount);
        }
        if (this.commonService.lgIssuanceApproval.release_request_id != null || this.commonService.lgIssuanceApproval.release_request_id != undefined) {
            this.submitLGIssuanceApproval.controls["release_request_id"].setValue(this.commonService.lgIssuanceApproval.release_request_id);
        }
        if (this.commonService.lgIssuanceApproval.release_reason != null || this.commonService.lgIssuanceApproval.release_reason != undefined) {
            this.submitLGIssuanceApproval.controls["releaseReason"].setValue(this.commonService.lgIssuanceApproval.release_reason);
        }
        if (this.commonService.lgIssuanceApproval.partial_release != null || this.commonService.lgIssuanceApproval.partial_release != undefined) {
            if (this.commonService.lgIssuanceApproval.partial_release === 'Y') {
                this.partialRelease = true;
                this.submitLGIssuanceApproval.controls["partialRelease"].setValue(this.partialRelease);
            }
            else {
                this.partialRelease = false;
                this.submitLGIssuanceApproval.controls["partialRelease"].setValue(this.partialRelease);
            }
            this.submitLGIssuanceApproval.get('partialRelease').disable();
        }
        if (this.commonService.lgIssuanceApproval.release_amount != null || this.commonService.lgIssuanceApproval.release_amount != undefined) {
            this.submitLGIssuanceApproval.controls["releaseAmount"].setValue(this.commonService.lgIssuanceApproval.release_amount);
        }
    }
    rejectLGIssuanceApprovalData() {
        console.log("this.request_id::::" + this.request_id);
        this.commonService.CancellingLgRequestFromSupplier(this.request_id)
            .subscribe(res => {
            console.log("rejectLGIssuanceApprovalData response::::" + JSON.stringify(res));
        });
    }
    acceptLGIssuanceApprovalData() {
        console.log("this.request_id::::" + this.request_id);
        this.commonService.AcceptingLgRequestFromSupplier(this.request_id)
            .subscribe(res => {
            console.log("AcceptingLgRequestFromSupplier response::::" + JSON.stringify(res));
        });
    }
    /* ************************************************************** */
    resetData() {
        this.isDisablesendBackButton = true;
        this.isDisabledApprovedButton = false;
        if (this.commonService.lgIssuanceApproval.termsNconditionsMessage != null || this.commonService.lgIssuanceApproval.termsNconditionsMessage != undefined) {
            this.submitLGIssuanceApproval.controls["TermsAndCondContent"].setValue(this.commonService.lgIssuanceApproval.termsNconditionsMessage);
            this.TermsAndCondContent = this.commonService.lgIssuanceApproval.termsNconditionsMessage;
        }
    }
    sendBackLGIssuanceApprovalData() {
        //if(this.isEditTnC === true){
        this.commonService.postChangeedTnCOfLgRequestBeneficiary(this.commonService.lgIssuanceApproval.requestId, this.submitLGIssuanceApproval.value.TermsAndCondContent)
            .subscribe(res => {
            console.log("LG approval Response is::::" + JSON.stringify(res));
            if (res.responseCode === 121) {
                //alert("responce code"+res.responseCode);
                this.alertMsgforPrivateLGApproval = res.responseMessage;
                //localStorage.setItem('responseCode', res.responseCode);
            }
        });
        // }
    }
    editLGIssuanceApprovalData() {
        this.isEditTnC = true;
        this.isDisablesendBackButton = false;
        this.isDisabledApprovedButton = true;
        if (this.commonService.lgIssuanceApproval.termsNconditionsMessage != null || this.commonService.lgIssuanceApproval.termsNconditionsMessage != undefined) {
            this.TermsAndCondContent = this.commonService.lgIssuanceApproval.termsNconditionsMessage;
            this.submitLGIssuanceApproval.controls["TermsAndCondContent"].setValue(this.commonService.lgIssuanceApproval.termsNconditionsMessage);
        }
        console.log("I'm in editLGIssuanceApprovalData::::" + this.isEditTnC);
    }
    submitLGIssuanceApprovalData() {
        if (this.isAllowToApprove === true) {
            this.commonService.postTnCOfLgRequestBeneficiary(this.commonService.lgIssuanceApproval.requestId)
                .subscribe(res => {
                console.log("LG approval Response is::::" + JSON.stringify(res));
                if (res.responseCode === 120) {
                    this.alertMsgforPrivateLGApproval = res.responseMessage;
                    this.commonService.responseCode = res.responseCode;
                    //localStorage.setItem('responseCode', res.responseCode);
                }
            });
        }
    }
    styleObject() {
        if (this.isEditTnC) {
            return { background: '#fff', border: '1px solid #c3c3c3' };
        }
        else {
            return { background: '#efefef', border: '1px solid #c3c3c3' };
        }
    }
    updateTnC() {
        this.isEditTnC = false;
    }
    amendClicked() {
        console.log("amendClicked()");
        const dialogConfig = new _angular_material__WEBPACK_IMPORTED_MODULE_6__["MatDialogConfig"]();
        dialogConfig.disableClose = true;
        dialogConfig.autoFocus = true;
        dialogConfig.panelClass = 'custom-modalbox';
        // dialogConfig.height = "550px";
        // dialogConfig.width = "600px";
        if (this.isAmendmentUpdate) {
            // Update Amend
            console.log('Update Amend');
            this.amendmendData = {
                requestId: this.commonService.lgIssuanceApproval.Amendmend_request_id,
                lg_no: this.commonService.lgIssuanceApproval.lg_no,
                LGIssueDate: this.commonService.lgIssuanceApproval.LGIssueDate,
                LGStartDate: this.commonService.lgIssuanceApproval.LGStartDate,
                Amount: this.commonService.lgIssuanceApproval.amendment_amount,
                LGEndDate: this.commonService.lgIssuanceApproval.amendment_lg_end_date,
                termsNconditionsMessage: this.commonService.lgIssuanceApproval.amendment_writeup_mesg
            };
        }
        else {
            //Create Amend
            console.log('Create Amend');
            this.amendmendData = {
                requestId: this.commonService.lgIssuanceApproval.requestId,
                lg_no: this.commonService.lgIssuanceApproval.lg_no,
                LGIssueDate: this.commonService.lgIssuanceApproval.LGIssueDate,
                LGStartDate: this.commonService.lgIssuanceApproval.LGStartDate,
                Amount: this.commonService.lgIssuanceApproval.Amount,
                LGEndDate: this.commonService.lgIssuanceApproval.LGEndDate,
                termsNconditionsMessage: this.commonService.lgIssuanceApproval.termsNconditionsMessage
            };
        }
        dialogConfig.data = {
            description: 'description',
            modelData: { callerModule: 'LG_AMEND', formsdatas: this.amendmendData, entity_type: 'GOV', priceLimit: this.amendPriceLimit }
        };
        this.dialogRef = this.dialog.open(_general_modal_general_modal_component__WEBPACK_IMPORTED_MODULE_7__["GeneralModalComponent"], dialogConfig);
        this.dialogRef.afterClosed().subscribe(result => {
            //console.log("New result : "+result);
            //console.log("New result : "+JSON.stringify(result));
            //console.log("New result : "+JSON.parse(result));
            //console.log("New result lgNumber : "+JSON.stringify(result.lgNumber));
            //console.log("New result : "+JSON.parse(result.lgNumber));
            //console.log("New result : "+result.lgNumber);
            if (result != null && result != undefined) {
                /* if (this.acl.Amendment.workflow_id != undefined) {
        
                  var workflow_id = this.acl.Amendment.workflow_id;
                } */
                if (this.currentWorkflowID != undefined) {
                    var workflow_id = this.currentWorkflowID;
                }
                if (this.crNoOrUidNo == this.commonService.lgIssuanceApproval.beneficiary_entity_id) { // If beneficiary amend
                    this.amendmentAmountApproval = false;
                    this.amendmentLGEndDateApproval = false;
                    this.amendmentWriteUpApproval = false;
                    this.amendmentApproval = false;
                    this.amendmentBy = 'Beneficiary';
                    if (parseFloat(result.amendmentAmount) > parseFloat(this.commonService.lgIssuanceApproval.Amount)) {
                        this.amendmentAmountApproval = true;
                        this.amendmentApproval = true;
                    }
                    if (result.writeUp.trim() != this.commonService.lgIssuanceApproval.termsNconditionsMessage.trim()) {
                        this.amendmentWriteUpApproval = true;
                        this.amendmentApproval = true;
                    }
                }
                this.commonService.saveLGAmendment(result.requestId, result.lgNumber, result.lgIssueDate, result.lgStartDate, result.amendmentAmount, result.lgEndDate, result.writeUp, this.amendmentAmountApproval, this.amendmentLGEndDateApproval, this.amendmentWriteUpApproval, this.amendmentApproval, this.amendmentBy, workflow_id, this.isAmendmentUpdate)
                    .subscribe(res => {
                    console.log("rejectLGIssuanceApprovalData response::::" + JSON.stringify(res));
                    this.commonService.showGeneralMessage("", res.responseMessage, false);
                    this.alertMsgforPrivateLGApproval = res.responseMessage;
                    this.isalertMsgforAmendmentStatus = true;
                    this.isACREnableButtons = false;
                });
                //alert(`Dialog result: ${result}`); // Pizza!
                // let r = result;
                // alert(JSON.stringify(r));
            }
        });
    }
    confiscateClicked() {
        //this.commonService.showGeneralMessage("", "Alert shows", false);
        if (this.isConfiscateUpdate) {
            // Update confiscate
            this.confiscateData = {
                requestId: this.commonService.lgIssuanceApproval.confiscate_request_id,
                lg_no: this.commonService.lgIssuanceApproval.lg_no,
                beneficiary_name: this.commonService.lgIssuanceApproval.beneficiary_name,
                beneficiaryId: this.commonService.lgIssuanceApproval.beneficiaryId,
                Amount: this.commonService.lgIssuanceApproval.Amount,
                confiscate_amount: this.commonService.lgIssuanceApproval.confiscate_amount,
                confiscate_bankName: this.commonService.lgIssuanceApproval.confiscate_bankName,
                confiscate_bankCode: this.commonService.lgIssuanceApproval.confiscate_bankCode,
                confiscate_IBAN: this.commonService.lgIssuanceApproval.confiscate_IBAN,
                confiscate_reason: this.commonService.lgIssuanceApproval.confiscate_reason,
                partial_confiscation: this.commonService.lgIssuanceApproval.partial_confiscation
            };
        }
        else {
            //Create confiscate
            this.confiscateData = {
                requestId: this.commonService.lgIssuanceApproval.requestId,
                lg_no: this.commonService.lgIssuanceApproval.lg_no,
                beneficiary_name: this.commonService.lgIssuanceApproval.beneficiary_name,
                beneficiaryId: this.commonService.lgIssuanceApproval.beneficiaryId,
                Amount: this.commonService.lgIssuanceApproval.Amount,
                confiscate_amount: this.commonService.lgIssuanceApproval.Amount
            };
        }
        const dialogConfig = new _angular_material__WEBPACK_IMPORTED_MODULE_6__["MatDialogConfig"]();
        dialogConfig.disableClose = true;
        dialogConfig.autoFocus = true;
        dialogConfig.panelClass = 'custom-modalbox';
        dialogConfig.data = {
            description: 'description',
            modelData: { callerModule: 'LG_CONFISCATE', formsdatas: this.confiscateData, entity_type: 'GOV', priceLimit: this.confiscatePriceLimit }
        };
        this.dialogRef = this.dialog.open(_general_modal_general_modal_component__WEBPACK_IMPORTED_MODULE_7__["GeneralModalComponent"], dialogConfig);
        this.dialogRef.afterClosed().subscribe(result => {
            //alert(`Dialog result: ${result}`); // Pizza!
            // let r = result;
            // alert(JSON.stringify(r));
            if (result != null && result != undefined) {
                /* if (this.currentWorkflowID != undefined) {
                var workflow_id = this.currentWorkflowID;
                } */
                if (this.currentWorkflowID != undefined) {
                    var workflow_id = this.currentWorkflowID;
                }
                console.log("New result : " + JSON.stringify(result));
                this.commonService.saveLGConfiscate(result.requestId, result.lgNumber, result.beneficiaryId, result.amount, result.bankName, result.IBAN, result.reason, result.partialConfiscation, result.confiscationAmount, workflow_id, this.isConfiscateUpdate)
                    .subscribe(res => {
                    console.log("saveLGConfiscate response::::" + JSON.stringify(res));
                    this.commonService.showGeneralMessage("", res.responseMessage, false);
                    this.alertMsgforPrivateLGApproval = res.responseMessage;
                    this.isalertMsgforAmendmentStatus = true;
                    this.isACREnableButtons = false;
                });
            }
        });
    }
    releaselicked() {
        //this.commonService.showGeneralMessage("", "Alert shows", false);
        if (this.isReleaseUpdate) {
            // Update release
            this.releaseData = {
                requestId: this.commonService.lgIssuanceApproval.release_request_id,
                lg_no: this.commonService.lgIssuanceApproval.lg_no,
                beneficiary_name: this.commonService.lgIssuanceApproval.beneficiary_name,
                beneficiaryId: this.commonService.lgIssuanceApproval.beneficiaryId,
                Amount: this.commonService.lgIssuanceApproval.Amount,
                releaseAmount: this.commonService.lgIssuanceApproval.release_amount,
                partialRelease: this.commonService.lgIssuanceApproval.partial_release,
                releaseReason: this.commonService.lgIssuanceApproval.release_reason
            };
        }
        else {
            //Create release
            this.releaseData = {
                requestId: this.commonService.lgIssuanceApproval.requestId,
                lg_no: this.commonService.lgIssuanceApproval.lg_no,
                beneficiary_name: this.commonService.lgIssuanceApproval.beneficiary_name,
                beneficiaryId: this.commonService.lgIssuanceApproval.beneficiaryId,
                Amount: this.commonService.lgIssuanceApproval.Amount,
                releaseAmount: this.commonService.lgIssuanceApproval.Amount
            };
        }
        const dialogConfig = new _angular_material__WEBPACK_IMPORTED_MODULE_6__["MatDialogConfig"]();
        dialogConfig.disableClose = true;
        dialogConfig.autoFocus = true;
        dialogConfig.panelClass = 'custom-modalbox';
        dialogConfig.data = {
            description: 'description',
            modelData: { callerModule: 'LG_RELEASE', formsdatas: this.releaseData, entity_type: 'GOV', priceLimit: this.releasePriceLimit }
        };
        this.dialogRef = this.dialog.open(_general_modal_general_modal_component__WEBPACK_IMPORTED_MODULE_7__["GeneralModalComponent"], dialogConfig);
        this.dialogRef.afterClosed().subscribe(result => {
            // alert(`Dialog result: ${result}`); // Pizza!
            //  let r = result;
            //   alert(JSON.stringify(r));
            if (result != null && result != undefined) {
                /* if (this.acl.Release.workflow_id != undefined) {
                  var workflow_id = this.acl.Release.workflow_id;
                } */
                if (this.currentWorkflowID != undefined) {
                    var workflow_id = this.currentWorkflowID;
                }
                this.commonService.saveLGRelease(result.requestId, result.lgNumber, result.beneficiaryId, result.amount, result.releaseReason, result.partialRelease, result.releaseAmount, workflow_id, this.isReleaseUpdate)
                    .subscribe(res => {
                    console.log("saveLGRelease response::::" + JSON.stringify(res));
                    this.commonService.showGeneralMessage("", res.responseMessage, false);
                    this.alertMsgforPrivateLGApproval = res.responseMessage;
                    this.isalertMsgforAmendmentStatus = true;
                    this.isACREnableButtons = false;
                });
            }
        });
    }
    /* This is External reject */
    rejectAmendApprovalData() {
        console.log("rejectAmendApprovalData this.Amendmend_request_id::::" + this.commonService.lgIssuanceApproval.Amendmend_request_id);
        const dialogConfig = new _angular_material__WEBPACK_IMPORTED_MODULE_6__["MatDialogConfig"]();
        dialogConfig.disableClose = true;
        dialogConfig.autoFocus = true;
        dialogConfig.panelClass = 'custom-modalbox';
        dialogConfig.data = {
            description: 'description',
            modelData: { callerModule: 'ACRconfirm', entity_type: 'GOV', headerTitle: this.translate.instant('HOME.warning'), bodyLabel: this.translate.instant('Are you sure to reject this amendment!') }
        };
        this.dialogRef = this.dialog.open(_general_modal_general_modal_component__WEBPACK_IMPORTED_MODULE_7__["GeneralModalComponent"], dialogConfig);
        this.dialogRef.afterClosed().subscribe(result => {
            console.log("New result : " + result);
            if (result != null && result != undefined) {
                if (result == 'Ok') {
                    console.log('Clicked on OK');
                    var message = 'AMENDMENT-REJECTED';
                    this.commonService.updateLGAmendmentForApproveOrReject(this.commonService.lgIssuanceApproval.Amendmend_request_id, this.commonService.lgIssuanceApproval.pendingtype, message)
                        .subscribe(res => {
                        console.log("rejectAmendApprovalData response::::" + JSON.stringify(res));
                        this.commonService.showGeneralMessage("", res.responseMessage, false);
                        this.alertMsgforPrivateLGApproval = res.responseMessage;
                        this.isalertMsgforAmendmentStatus = true;
                        this.isAmendApprove = false;
                    });
                }
            }
        });
    }
    /* This is External reject */
    /* This is External Approve */
    acceptAmendApprovalData() {
        console.log("acceptAmendApprovalData this.Amendmend_request_id::::" + this.commonService.lgIssuanceApproval.Amendmend_request_id);
        const dialogConfig = new _angular_material__WEBPACK_IMPORTED_MODULE_6__["MatDialogConfig"]();
        dialogConfig.disableClose = true;
        dialogConfig.autoFocus = true;
        dialogConfig.panelClass = 'custom-modalbox';
        dialogConfig.data = {
            description: 'description',
            modelData: { callerModule: 'ACRconfirm', entity_type: 'GOV', headerTitle: this.translate.instant('HOME.warning'), bodyLabel: this.translate.instant('Are you sure to approve this amendment!') }
        };
        this.dialogRef = this.dialog.open(_general_modal_general_modal_component__WEBPACK_IMPORTED_MODULE_7__["GeneralModalComponent"], dialogConfig);
        this.dialogRef.afterClosed().subscribe(result => {
            console.log("New result : " + result);
            if (result != null && result != undefined) {
                if (result == 'Ok') {
                    console.log('Clicked on OK');
                    var message = 'AMENDMENT-PENDING-BANK';
                    this.commonService.updateLGAmendmentForApproveOrReject(this.commonService.lgIssuanceApproval.Amendmend_request_id, this.commonService.lgIssuanceApproval.pendingtype, message)
                        .subscribe(res => {
                        console.log("acceptAmendApprovalData response::::" + JSON.stringify(res));
                        this.commonService.showGeneralMessage("", res.responseMessage, false);
                        this.alertMsgforPrivateLGApproval = res.responseMessage;
                        this.isalertMsgforAmendmentStatus = true;
                        this.isAmendApprove = false;
                    });
                }
            }
        });
    }
    /* This is External Approve */
    cancelACRApproval() {
        this.router.navigate(['governmentpendingtasks']);
    }
    /* This is Internal reject */
    rejectInternalApproval() {
        console.log("rejectAmendApprovalData this.Amendmend_request_id::::" + this.commonService.lgIssuanceApproval.Amendmend_request_id);
        if (this.commonService.lgIssuanceApproval.pendingtype == 'issuance_review') {
            var confirm_msg = 'This issuance request will be rejected for further reassessment. Continue?';
        }
        if (this.commonService.lgIssuanceApproval.pendingtype == 'issuance_approve') {
            var confirm_msg = 'This issuance request will be rejected for further reassessment. Continue?';
        }
        if (this.commonService.lgIssuanceApproval.pendingtype == 'amendment_review') {
            var confirm_msg = 'This amendment request will be rejected for further reassessment. Continue?';
        }
        if (this.commonService.lgIssuanceApproval.pendingtype == 'amendment_approve') {
            var confirm_msg = 'This amendment request will be rejected for further reassessment. Continue?';
        }
        if (this.commonService.lgIssuanceApproval.pendingtype == 'confiscate_review') {
            var confirm_msg = 'This confiscate request will be rejected for further reassessment. Continue?';
        }
        if (this.commonService.lgIssuanceApproval.pendingtype == 'confiscate_approve') {
            var confirm_msg = 'This confiscate request will be rejected for further reassessment. Continue?';
        }
        if (this.commonService.lgIssuanceApproval.pendingtype == 'release_review') {
            var confirm_msg = 'This release request will be rejected for further reassessment. Continue?';
        }
        if (this.commonService.lgIssuanceApproval.pendingtype == 'release_approve') {
            var confirm_msg = 'This release request will be rejected for further reassessment. Continue?';
        }
        const dialogConfig = new _angular_material__WEBPACK_IMPORTED_MODULE_6__["MatDialogConfig"]();
        dialogConfig.disableClose = true;
        dialogConfig.autoFocus = true;
        dialogConfig.panelClass = 'custom-modalbox';
        dialogConfig.data = {
            description: 'description',
            modelData: { callerModule: 'ACRconfirm', entity_type: 'PRIVATE', headerTitle: this.translate.instant('HOME.warning'), bodyLabel: this.translate.instant(confirm_msg) }
        };
        this.dialogRef = this.dialog.open(_general_modal_general_modal_component__WEBPACK_IMPORTED_MODULE_7__["GeneralModalComponent"], dialogConfig);
        this.dialogRef.afterClosed().subscribe(result => {
            console.log("New result : " + result);
            if (result != null && result != undefined) {
                if (result == 'Ok') {
                    console.log('Clicked on OK');
                    if (this.commonService.lgIssuanceApproval.pendingtype == 'issuance_review') {
                        var requestId = this.commonService.lgIssuanceApproval.requestId;
                        var activity = 'Issuance';
                        var message = 'Rejected';
                    }
                    if (this.commonService.lgIssuanceApproval.pendingtype == 'issuance_approve') {
                        var requestId = this.commonService.lgIssuanceApproval.requestId;
                        var activity = 'Issuance';
                        var message = 'Rejected';
                    }
                    if (this.commonService.lgIssuanceApproval.pendingtype == 'amendment_review') {
                        var requestId = this.commonService.lgIssuanceApproval.Amendmend_request_id;
                        var activity = 'Amendment';
                        var message = 'Rejected';
                    }
                    if (this.commonService.lgIssuanceApproval.pendingtype == 'amendment_approve') {
                        var requestId = this.commonService.lgIssuanceApproval.Amendmend_request_id;
                        var activity = 'Amendment';
                        var message = 'Rejected';
                    }
                    if (this.commonService.lgIssuanceApproval.pendingtype == 'confiscate_review') {
                        var requestId = this.commonService.lgIssuanceApproval.confiscate_request_id;
                        var activity = 'Confiscate';
                        var message = 'Rejected';
                    }
                    if (this.commonService.lgIssuanceApproval.pendingtype == 'confiscate_approve') {
                        var requestId = this.commonService.lgIssuanceApproval.confiscate_request_id;
                        var activity = 'Confiscate';
                        var message = 'Rejected';
                    }
                    if (this.commonService.lgIssuanceApproval.pendingtype == 'release_review') {
                        var requestId = this.commonService.lgIssuanceApproval.release_request_id;
                        var activity = 'Release';
                        var message = 'Rejected';
                    }
                    if (this.commonService.lgIssuanceApproval.pendingtype == 'release_approve') {
                        var requestId = this.commonService.lgIssuanceApproval.release_request_id;
                        var activity = 'Release';
                        var message = 'Rejected';
                    }
                    var step = this.commonService.lgIssuanceApproval.workflow_step;
                    this.commonService.updateInternalWorkflowApproveOrReject(this.loginId, requestId, step, message, activity)
                        .subscribe(res => {
                        console.log("InternalApproveOrReject response::::" + JSON.stringify(res));
                        this.commonService.showGeneralMessage("", res.responseMessage, false);
                        this.alertMsgforPrivateLGApproval = res.responseMessage;
                        this.isInternalPending = false;
                        this.isalertMsgforAmendmentStatus = true;
                    });
                }
            }
        });
    }
    /* This is Internal Approval */
    acceptInternalApproval() {
        console.log("acceptInternalApproval ::::" + this.commonService.lgIssuanceApproval.pendingtype);
        if (this.commonService.lgIssuanceApproval.pendingtype == 'issuance_review') {
            var confirm_msg = 'This issuance request will be reviewed successfully. Continue?';
        }
        if (this.commonService.lgIssuanceApproval.pendingtype == 'issuance_approve') {
            var confirm_msg = 'This issuance request will be approved successfully. Continue?';
        }
        if (this.commonService.lgIssuanceApproval.pendingtype == 'amendment_review') {
            var confirm_msg = 'This amendment request will be reviewed successfully. Continue?';
        }
        if (this.commonService.lgIssuanceApproval.pendingtype == 'amendment_approve') {
            var confirm_msg = 'This amendment request will be approved successfully. Continue?';
        }
        if (this.commonService.lgIssuanceApproval.pendingtype == 'confiscate_review') {
            var confirm_msg = 'This confiscate request will be reviewed successfully. Continue?';
        }
        if (this.commonService.lgIssuanceApproval.pendingtype == 'confiscate_approve') {
            var confirm_msg = 'This confiscate request will be approved successfully. Continue?';
        }
        if (this.commonService.lgIssuanceApproval.pendingtype == 'release_review') {
            var confirm_msg = 'This release request will be reviewed successfully. Continue?';
        }
        if (this.commonService.lgIssuanceApproval.pendingtype == 'release_approve') {
            var confirm_msg = 'This release request will be approved successfully. Continue?';
        }
        const dialogConfig = new _angular_material__WEBPACK_IMPORTED_MODULE_6__["MatDialogConfig"]();
        dialogConfig.disableClose = true;
        dialogConfig.autoFocus = true;
        dialogConfig.panelClass = 'custom-modalbox';
        dialogConfig.data = {
            description: 'description',
            modelData: { callerModule: 'ACRconfirm', entity_type: 'PRIVATE', headerTitle: this.translate.instant('HOME.warning'), bodyLabel: this.translate.instant(confirm_msg) }
        };
        this.dialogRef = this.dialog.open(_general_modal_general_modal_component__WEBPACK_IMPORTED_MODULE_7__["GeneralModalComponent"], dialogConfig);
        this.dialogRef.afterClosed().subscribe(result => {
            console.log("New result : " + result);
            if (result != null && result != undefined) {
                if (result == 'Ok') {
                    console.log('Clicked on OK');
                    if (this.commonService.lgIssuanceApproval.pendingtype == 'issuance_review') {
                        var requestId = this.commonService.lgIssuanceApproval.requestId;
                        var activity = 'Issuance';
                        var message = 'Reviewed';
                    }
                    if (this.commonService.lgIssuanceApproval.pendingtype == 'issuance_approve') {
                        var requestId = this.commonService.lgIssuanceApproval.requestId;
                        var activity = 'Issuance';
                        var message = 'Approved';
                    }
                    if (this.commonService.lgIssuanceApproval.pendingtype == 'amendment_review') {
                        var requestId = this.commonService.lgIssuanceApproval.Amendmend_request_id;
                        var activity = 'Amendment';
                        var message = 'Reviewed';
                    }
                    if (this.commonService.lgIssuanceApproval.pendingtype == 'amendment_approve') {
                        var requestId = this.commonService.lgIssuanceApproval.Amendmend_request_id;
                        var activity = 'Amendment';
                        var message = 'Approved';
                    }
                    if (this.commonService.lgIssuanceApproval.pendingtype == 'confiscate_review') {
                        var requestId = this.commonService.lgIssuanceApproval.confiscate_request_id;
                        var activity = 'Confiscate';
                        var message = 'Reviewed';
                    }
                    if (this.commonService.lgIssuanceApproval.pendingtype == 'confiscate_approve') {
                        var requestId = this.commonService.lgIssuanceApproval.confiscate_request_id;
                        var activity = 'Confiscate';
                        var message = 'Approved';
                    }
                    if (this.commonService.lgIssuanceApproval.pendingtype == 'release_review') {
                        var requestId = this.commonService.lgIssuanceApproval.release_request_id;
                        var activity = 'Release';
                        var message = 'Reviewed';
                    }
                    if (this.commonService.lgIssuanceApproval.pendingtype == 'release_approve') {
                        var requestId = this.commonService.lgIssuanceApproval.release_request_id;
                        var activity = 'Release';
                        var message = 'Approved';
                    }
                    var step = this.commonService.lgIssuanceApproval.workflow_step;
                    this.commonService.updateInternalWorkflowApproveOrReject(this.loginId, requestId, step, message, activity)
                        .subscribe(res => {
                        console.log("InternalApproveOrReject response::::" + JSON.stringify(res));
                        this.commonService.showGeneralMessage("", res.responseMessage, false);
                        this.alertMsgforPrivateLGApproval = res.responseMessage;
                        this.isalertMsgforAmendmentStatus = true;
                        this.isInternalPending = false;
                        if (res.responseCode === 999) {
                            if (activity == 'Issuance') {
                                //this.router.navigate(['/requestLgIssuancePayment']);
                            }
                        }
                    });
                }
            }
        });
    }
    cancelInternalApproval() {
        this.router.navigate(['governmentpendingtasks']);
    }
};
GovLgDetailsComponent.ctorParameters = () => [
    { type: _ngx_translate_core__WEBPACK_IMPORTED_MODULE_5__["TranslateService"] },
    { type: _angular_router__WEBPACK_IMPORTED_MODULE_2__["Router"] },
    { type: _angular_forms__WEBPACK_IMPORTED_MODULE_3__["FormBuilder"] },
    { type: _services_common_service_service__WEBPACK_IMPORTED_MODULE_4__["CommonService"] },
    { type: _angular_material__WEBPACK_IMPORTED_MODULE_6__["MatDialog"] }
];
GovLgDetailsComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-gov-lg-details',
        template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! raw-loader!./gov-lg-details.component.html */ "./node_modules/raw-loader/dist/cjs.js!./src/app/gov-lg-details/gov-lg-details.component.html")).default,
        styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! ./gov-lg-details.component.css */ "./src/app/gov-lg-details/gov-lg-details.component.css")).default]
    }),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_ngx_translate_core__WEBPACK_IMPORTED_MODULE_5__["TranslateService"], _angular_router__WEBPACK_IMPORTED_MODULE_2__["Router"], _angular_forms__WEBPACK_IMPORTED_MODULE_3__["FormBuilder"], _services_common_service_service__WEBPACK_IMPORTED_MODULE_4__["CommonService"], _angular_material__WEBPACK_IMPORTED_MODULE_6__["MatDialog"]])
], GovLgDetailsComponent);



/***/ }),

/***/ "./src/app/gov-lg-management/gov-lg-management.component.css":
/*!*******************************************************************!*\
  !*** ./src/app/gov-lg-management/gov-lg-management.component.css ***!
  \*******************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2dvdi1sZy1tYW5hZ2VtZW50L2dvdi1sZy1tYW5hZ2VtZW50LmNvbXBvbmVudC5jc3MifQ== */");

/***/ }),

/***/ "./src/app/gov-lg-management/gov-lg-management.component.ts":
/*!******************************************************************!*\
  !*** ./src/app/gov-lg-management/gov-lg-management.component.ts ***!
  \******************************************************************/
/*! exports provided: GovLgManagementComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GovLgManagementComponent", function() { return GovLgManagementComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm2015/forms.js");
/* harmony import */ var _services_common_service_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../services/common-service.service */ "./src/app/services/common-service.service.ts");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm2015/router.js");
/* harmony import */ var _models_lgIssuance_model__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../models/lgIssuance.model */ "./src/app/models/lgIssuance.model.ts");
/* harmony import */ var _ngx_translate_core__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @ngx-translate/core */ "./node_modules/@ngx-translate/core/fesm2015/ngx-translate-core.js");







let GovLgManagementComponent = class GovLgManagementComponent {
    constructor(commonService, router, fb, translate) {
        this.commonService = commonService;
        this.router = router;
        this.fb = fb;
        this.translate = translate;
        this.isOpenMyIssuedLGList = false;
        this.isOpenLgIssuedMeList = true;
        this.isMyIssuedLGClicked = false;
        this.isLgIssuedMeClicked = true;
        this.dtOptions = {};
        this.dtOptionsAR = {};
        this.userObject = {};
    }
    ngOnInit() {
        this.userId = localStorage.getItem('userId');
        console.log("this.userId::::" + this.userId);
        this.userName = localStorage.getItem('userName');
        console.log("this.userName::::" + this.userName);
        this.roleId = localStorage.getItem('roleId');
        console.log("this.role_ID::::" + this.roleId);
        this.crNoOrUidNo = localStorage.getItem('crNoOrUidNo');
        console.log("crNoOrUidNo::::" + this.crNoOrUidNo);
        /*************************************************** */
        this.commonService.checkSessionExpired(this.userId)
            .then((data) => {
            if (data == 0) {
                this.commonService.showGeneralMessage(this.translate.instant('HOME.Session_Expired'), this.translate.instant('HOME.logged_out'), false);
                this.commonService.logout(this.userId);
                return;
            }
            else {
            }
        });
        /************************************************** */
        /* this.commonService.getAllLgVerifiedBeneficiarySpecific(this.userId)
        .subscribe(res => {
          console.log("AllLGRequestBeneficiarySpecific list::::" + JSON.stringify(res));
          this.myActiveLgLists = res;
          console.log("pending list is::::" + JSON.stringify(this.myActiveLgLists));
    
        });
    
        this.commonService.getAllInactiveLGforPrivateEntityList(this.userId)
        .subscribe(res => {
          console.log("AllLGRequestBeneficiarySpecific list::::" + JSON.stringify(res));
          this.myInactiveLgLists = res;
          console.log("pending list is::::" + JSON.stringify(this.myInactiveLgLists));
    
        }); */
        this.dtOptionsAR = {
            pageLength: 10,
            processing: true,
            language: {
                processing: "جارٍ التحميل...",
                search: "ابحث:",
                lengthMenu: "أظهر _MENU_ مدخلات",
                info: "إظهار _START_ إلى _END_ من أصل _TOTAL_ مدخل",
                infoEmpty: "يعرض 0 إلى 0 من أصل 0 سجل",
                infoFiltered: "(منتقاة من مجموع _MAX_ مُدخل)",
                infoPostFix: "",
                loadingRecords: "جارٍ التحميل...",
                zeroRecords: "لم يعثر على أية سجلات",
                emptyTable: "ليست هناك بيانات متاحة في الجدول",
                paginate: {
                    first: "الأول",
                    previous: "السابق",
                    next: "التالي",
                    last: "الأخير"
                },
                aria: {
                    sortAscending: ": تفعيل لترتيب العمود تصاعدياً",
                    sortDescending: ": تفعيل لترتيب العمود تنازلياً"
                }
            }
        };
        this.dtOptions = {
            pageLength: 10,
            processing: true,
        };
        this.commonService.getGovtEntityActiveLGList(this.crNoOrUidNo)
            .subscribe(res => {
            console.log("activeLgForMeLists");
            console.log(res);
            this.activeLgForMeLists = res;
        });
        this.commonService.getGovtEntityInActiveLGList(this.crNoOrUidNo)
            .subscribe(res => {
            console.log("InactiveLgForMeLists");
            console.log(res);
            this.inactiveLgForMeLists = res;
        });
    }
    RowSelected(pendingData) {
        this.commonService.isPrivateLgPending1Completed = true;
        console.log("private entity pending list::::" + JSON.stringify(pendingData));
        console.log("testy122" + pendingData.beneficiary_name);
        this.commonService.lgIssuanceApproval = new _models_lgIssuance_model__WEBPACK_IMPORTED_MODULE_5__["LGIssuanceModel"]();
        this.commonService.lgIssuanceApproval.lg_no = pendingData.lg_no;
        if (pendingData.lg_type !== null || pendingData.lg_type !== undefined) {
            this.commonService.lgIssuanceApproval.LGType = pendingData.lg_type;
        }
        if (pendingData.beneficiary_name !== null || pendingData.beneficiary_name !== undefined) {
            console.log("test beneficiary_name" + pendingData.beneficiary_name);
            this.commonService.lgIssuanceApproval.beneficiary_name = pendingData.beneficiary_name;
        }
        if (pendingData.bank_name !== null || pendingData.bank_name !== undefined) {
            console.log("bank_name" + pendingData.bank_name);
            this.commonService.lgIssuanceApproval.bankName = pendingData.bank_name;
        }
        if (pendingData.project_name !== null || pendingData.project_name !== undefined) {
            console.log("bank_name" + pendingData.project_name);
            this.commonService.lgIssuanceApproval.project_name = pendingData.project_name;
        }
        if (pendingData.request_date !== null || pendingData.request_date !== undefined) {
            console.log("bank_name" + pendingData.request_date);
            this.commonService.lgIssuanceApproval.request_date = pendingData.request_date;
        }
        if (pendingData.request_status_flag !== null || pendingData.request_status_flag !== undefined) {
            console.log("bank_name" + pendingData.request_status_flag);
            this.commonService.lgIssuanceApproval.status = pendingData.request_status_flag;
        }
        if (pendingData.start_date !== null || pendingData.start_date !== undefined) {
            this.commonService.lgIssuanceApproval.LGStartDate = pendingData.start_date;
        }
        if (pendingData.end_date !== null || pendingData.end_date !== undefined) {
            this.commonService.lgIssuanceApproval.LGEndDate = pendingData.end_date;
        }
        if (pendingData.contract_value !== null || pendingData.contract_value !== undefined) {
            this.commonService.lgIssuanceApproval.Amount = pendingData.lG_amount;
            //var converter = require('number-to-words');
            this.commonService.lgIssuanceApproval.amountInNumber = this.commonService.lgIssuanceApproval.Amount;
        }
        if (pendingData.currency !== null || pendingData.currency !== undefined) {
            this.commonService.lgIssuanceApproval.currency = pendingData.currency;
        }
        if (pendingData.termsNConditions !== null || pendingData.termsNConditions !== undefined) {
            this.commonService.lgIssuanceApproval.termsNconditionsMessage = pendingData.termsNConditions;
        }
        if (pendingData.status !== null || pendingData.status !== undefined) {
            this.commonService.lgIssuanceApproval.status = pendingData.status;
        }
        if (pendingData.response_code !== null || pendingData.response_code !== undefined) {
            this.commonService.lgIssuanceApproval.response_code = pendingData.response_code;
            console.log("............................pendingData.response_code" + pendingData.response_code);
        }
        if (pendingData.terms_condition_message !== null || pendingData.terms_condition_message !== undefined) {
            this.commonService.lgIssuanceApproval.terms_condition_message = pendingData.terms_condition_message;
            console.log("........................pendingData.terms_condition_message" + pendingData.terms_condition_message);
        }
        if (pendingData.request_id !== null || pendingData.request_id !== undefined) {
            this.commonService.lgIssuanceApproval.requestId = pendingData.request_id;
            console.log("........................pendingData.request_id" + pendingData.request_id);
        }
        if (pendingData.create_by !== null || pendingData.create_by !== undefined) {
            this.commonService.lgIssuanceApproval.create_by = pendingData.create_by;
        }
        /* if(pendingData.request_status_flag !== null || pendingData.request_status_flag !== undefined){
         this.commonService.lgIssuanceApproval.status = pendingData.request_status_flag;
        } */
        if (pendingData.write_up !== null || pendingData.write_up !== undefined) {
            this.commonService.lgIssuanceApproval.writeUpType = pendingData.write_up;
        }
        if (pendingData.project_name !== null || pendingData.project_name !== undefined) {
            this.commonService.lgIssuanceApproval.projectName = pendingData.project_name;
        }
        if (pendingData.project_no !== null || pendingData.project_no !== undefined) {
            this.commonService.lgIssuanceApproval.projectNumber = pendingData.project_no;
        }
        if (pendingData.purpose_of_bond !== null || pendingData.purpose_of_bond !== undefined) {
            this.commonService.lgIssuanceApproval.puroseOfBond = pendingData.purpose_of_bond;
        }
        if (pendingData.byan_no !== null || pendingData.byan_no !== undefined) {
            this.commonService.lgIssuanceApproval.bayanNuymber = pendingData.byan_no;
        }
        if (pendingData.zakat_start_date !== null || pendingData.zakat_start_date !== undefined) {
            this.commonService.lgIssuanceApproval.ZakatPeriodStartDate = pendingData.zakat_start_date;
        }
        if (pendingData.zakat_end_date !== null || pendingData.zakat_end_date !== undefined) {
            this.commonService.lgIssuanceApproval.ZakatPeriodEndDate = pendingData.zakat_end_date;
        }
        if (pendingData.lg_validity_date !== null || pendingData.lg_validity_date !== undefined) {
            this.commonService.lgIssuanceApproval.lg_validity_date = pendingData.validDt;
        }
        if (pendingData.account_of_contract_processed !== null || pendingData.account_of_contract_processed !== undefined) {
            this.commonService.lgIssuanceApproval.ac_of_contract = pendingData.account_of_contract_processed;
        }
        if (pendingData.agree_tag !== null || pendingData.agree_tag !== undefined) {
            this.commonService.lgIssuanceApproval.agree_tag = pendingData.agree_tag;
        }
        if (pendingData.beneficiary_id !== null || pendingData.beneficiary_id !== undefined) {
            this.commonService.lgIssuanceApproval.beneficiaryId = pendingData.beneficiary_id;
        }
        if (pendingData.supplier_id !== null || pendingData.supplier_id !== undefined) {
            this.commonService.lgIssuanceApproval.supplierId = pendingData.supplier_id;
            console.log("........................pendingData.terms_condition_message" + pendingData.supplier_id);
        }
        if (pendingData.lg_issue_date !== null || pendingData.lg_issue_date !== undefined) {
            this.commonService.lgIssuanceApproval.LGIssueDate = pendingData.lg_issue_date;
        }
        if (pendingData.beneficiary_UID !== null || pendingData.beneficiary_UID !== undefined) {
            this.commonService.lgIssuanceApproval.beneficiary_UID = pendingData.beneficiary_UID;
        }
        if (pendingData.role_id !== null || pendingData.role_id !== undefined) {
            this.commonService.lgIssuanceApproval.beneficiary_role_id = pendingData.role_id;
        }
        if (pendingData.supplier_entity_id !== null || pendingData.supplier_entity_id !== undefined) {
            this.commonService.lgIssuanceApproval.supplier_entity_id = pendingData.supplier_entity_id;
        }
        if (pendingData.beneficiary_entity_id !== null || pendingData.beneficiary_entity_id !== undefined) {
            this.commonService.lgIssuanceApproval.beneficiary_entity_id = pendingData.beneficiary_entity_id;
        }
        console.log("Before");
        console.log(pendingData);
        console.log("After");
        console.log(this.commonService.lgIssuanceApproval);
        this.router.navigate(['govLgDetails']);
        //this.lgIssuance.
    }
};
GovLgManagementComponent.ctorParameters = () => [
    { type: _services_common_service_service__WEBPACK_IMPORTED_MODULE_3__["CommonService"] },
    { type: _angular_router__WEBPACK_IMPORTED_MODULE_4__["Router"] },
    { type: _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormBuilder"] },
    { type: _ngx_translate_core__WEBPACK_IMPORTED_MODULE_6__["TranslateService"] }
];
GovLgManagementComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-gov-lg-management',
        template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! raw-loader!./gov-lg-management.component.html */ "./node_modules/raw-loader/dist/cjs.js!./src/app/gov-lg-management/gov-lg-management.component.html")).default,
        styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! ./gov-lg-management.component.css */ "./src/app/gov-lg-management/gov-lg-management.component.css")).default]
    }),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_services_common_service_service__WEBPACK_IMPORTED_MODULE_3__["CommonService"], _angular_router__WEBPACK_IMPORTED_MODULE_4__["Router"], _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormBuilder"], _ngx_translate_core__WEBPACK_IMPORTED_MODULE_6__["TranslateService"]])
], GovLgManagementComponent);



/***/ }),

/***/ "./src/app/gov-pending-action/gov-pending-action.component.css":
/*!*********************************************************************!*\
  !*** ./src/app/gov-pending-action/gov-pending-action.component.css ***!
  \*********************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2dvdi1wZW5kaW5nLWFjdGlvbi9nb3YtcGVuZGluZy1hY3Rpb24uY29tcG9uZW50LmNzcyJ9 */");

/***/ }),

/***/ "./src/app/gov-pending-action/gov-pending-action.component.ts":
/*!********************************************************************!*\
  !*** ./src/app/gov-pending-action/gov-pending-action.component.ts ***!
  \********************************************************************/
/*! exports provided: GovPendingActionComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GovPendingActionComponent", function() { return GovPendingActionComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");


let GovPendingActionComponent = class GovPendingActionComponent {
    constructor() { }
    ngOnInit() {
    }
};
GovPendingActionComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-gov-pending-action',
        template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! raw-loader!./gov-pending-action.component.html */ "./node_modules/raw-loader/dist/cjs.js!./src/app/gov-pending-action/gov-pending-action.component.html")).default,
        styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! ./gov-pending-action.component.css */ "./src/app/gov-pending-action/gov-pending-action.component.css")).default]
    }),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [])
], GovPendingActionComponent);



/***/ }),

/***/ "./src/app/govement-user-reset-password-modal/govement-user-reset-password-modal.component.css":
/*!*****************************************************************************************************!*\
  !*** ./src/app/govement-user-reset-password-modal/govement-user-reset-password-modal.component.css ***!
  \*****************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2dvdmVtZW50LXVzZXItcmVzZXQtcGFzc3dvcmQtbW9kYWwvZ292ZW1lbnQtdXNlci1yZXNldC1wYXNzd29yZC1tb2RhbC5jb21wb25lbnQuY3NzIn0= */");

/***/ }),

/***/ "./src/app/govement-user-reset-password-modal/govement-user-reset-password-modal.component.ts":
/*!****************************************************************************************************!*\
  !*** ./src/app/govement-user-reset-password-modal/govement-user-reset-password-modal.component.ts ***!
  \****************************************************************************************************/
/*! exports provided: GovementUserResetPasswordModalComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GovementUserResetPasswordModalComponent", function() { return GovementUserResetPasswordModalComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/material */ "./node_modules/@angular/material/esm2015/material.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm2015/forms.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm2015/router.js");
/* harmony import */ var _ngx_translate_core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @ngx-translate/core */ "./node_modules/@ngx-translate/core/fesm2015/ngx-translate-core.js");
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/common/http */ "./node_modules/@angular/common/fesm2015/http.js");
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! moment */ "./node_modules/moment/moment.js");
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(moment__WEBPACK_IMPORTED_MODULE_7__);
/* harmony import */ var _services_common_service_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../services/common-service.service */ "./src/app/services/common-service.service.ts");









let GovementUserResetPasswordModalComponent = class GovementUserResetPasswordModalComponent {
    constructor(http, zone, commonService, router, fb, dialogRef, data, translate) {
        this.http = http;
        this.zone = zone;
        this.commonService = commonService;
        this.router = router;
        this.fb = fb;
        this.dialogRef = dialogRef;
        this.translate = translate;
        this.bankNamesList = [];
        this.noPattern = '^(0|[1-9][0-9]*)$';
        this.emailPattern = "^[a-z0-9._%+-]+@[a-z0-9.-]+.[a-z]{2,4}$";
        this.notSelected = "Not selected";
        this.isSelectedrniFile = false;
        this.isSelectedlalFile = false;
        this.isSelectedcrFile = false;
        this.isSelectedlaglFile = false;
        this.allowedExtensions = ['jpg', 'gif', 'pdf', 'png'];
        this.validation_messages = {
            password: [
                { type: "required", message: "This is a required field." }
            ],
            confirmPassword: [
                { type: "required", message: "This is a required field." }
            ],
        };
        this.dropdownListBank = [];
        this.isNotPasswordMatch = false;
        this.formSendModel = {};
        console.log('modal data >', data.modalData);
        this.getComponentData = data.modalData;
    }
    ngOnInit() {
        console.log('<<<<<<<<<<< --- ngOnInit --- >>>>>>>>>>>');
        let today = new Date();
        let yesterday = new Date(today);
        yesterday.setDate(today.getDate() - 1);
        let month = today.getMonth();
        let year = today.getFullYear();
        this.maxDate = yesterday;
        this.maxDate.setMonth(month);
        this.maxDate.setFullYear(year);
        this.roleId = localStorage.getItem('roleId');
        console.log("this.roleId::::" + this.roleId);
        this.loginId = localStorage.getItem('userId');
        console.log("this.loginId::::" + this.loginId);
        this.userId = localStorage.getItem('userId');
        this.stroageCrNoOrUidNo = localStorage.getItem('crNoOrUidNo');
        console.log("this.stroageCrNoOrUidNo::::" + this.stroageCrNoOrUidNo);
        console.log("this.userId::::" + this.userId);
        this.submitUser = this.fb.group({
            password: [
                "",
                [
                    _angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].required
                ]
            ],
            confirmPassword: [
                "",
                [
                    _angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].required
                ]
            ],
        });
    }
    ngAfterViewInit() {
        console.log('<<<<<<<<<<< ngAfterViewInit >>>>>>>>>>>');
        /*
        this.roleId = localStorage.getItem('roleId');
        console.log("this.roleId::::" + this.roleId);
        this.loginId = localStorage.getItem('userId');
        console.log("this.loginId::::" + this.loginId);
        this.userId = localStorage.getItem('userId');
        this.stroageCrNoOrUidNo = localStorage.getItem('crNoOrUidNo');
    
        console.log("this.stroageCrNoOrUidNo::::" + this.stroageCrNoOrUidNo);
        console.log("this.userId::::" + this.userId);*/
        /*this.dropdownListBank = [];
        this.dataSubscribe = this.commonService.getIBANList(this.userId)
        .subscribe(res => {
          console.log("IBAN list::::" + res);
          this.bankNamesList = res;
    
          // this.zone.run(() => {
            for(let item of res){
             this.dropdownListBank.push({'name':item.tBankmaster.bankName});
             console.log('this.dropdownListBank >', this.dropdownListBank);
            }
          // });
        });*/
    }
    onBlurPasswordMatch(confirmPassword) {
        console.log("confirmPassword >>" + confirmPassword);
        var index = this.submitUser.value.password.localeCompare(confirmPassword);
        if (index !== 0) {
            // alert("Passwords must match");
            this.isNotPasswordMatch = true;
            // this.commonService.showGeneralMessage("", "Password must match", false);
            this.submitUser.controls["confirmPassword"].setValue(null);
        }
        else {
            this.isNotPasswordMatch = false;
        }
    }
    onBlurPasswordMatchkeyup(confirmPassword) {
        this.isNotPasswordMatch = false;
    }
    getDOB(_getDAte) {
        this.dobFormat = moment__WEBPACK_IMPORTED_MODULE_7__(_getDAte).format('DD/MM/YYYY');
        console.log('getDOB >', _getDAte);
        console.log('formatDate >', this.dobFormat);
    }
    onBlurMobile(mobile) {
        console.log("mobile[0] and type" + mobile[0] + ' ' + typeof (mobile[0]));
        /*if(mobile[0] !== '0' && mobile.length === 11){
          this.submitUser.controls["mobileNo"].setValue(null);
        }*/
    }
    close() {
        this.dialogRef.close();
    }
    addUserSubmit() {
        console.log("amenaddUserSubmitdSubmit() called valid >", this.submitUser.valid);
        // console.log("amendSubmit() called" + JSON.stringify(this.submitUser.value));
        /*if (this.submitUser.valid) {
         this.dialogRef.close(this.submitUser.value);
       }*/
        if (this.submitUser.valid) {
            // let params = new FormData();
            // params.append('login_id', this.getComponentData.login_id);
            // params.append('password', this.submitUser.controls['password'].value);
            let parmsData = {
                login_id: this.getComponentData.login_id,
                password: this.submitUser.controls['password'].value,
            };
            // params.append('confirmPassword', this.submitUser.controls['confirmPassword'].value);         
            this.dataSubscribe = this.commonService.submitFormDataJson('updatePassword', parmsData)
                .subscribe(res => {
                console.log("reset password form submit Response is::::" + JSON.stringify(res));
                // if (res.responseCode == 107) {
                //if (res.responseCode == 1) {
                // this.submitUser.reset();
                this.dialogRef.close(this.submitUser.value);
                this.commonService.showGeneralMessage("", res.responseMessage, false);
                // this.commonService.showGeneralMessage("", "User form is submitted successfully.", false);
                //this.router.navigate(['login']);
                //}
            });
            //this.commonService.isGovPart2Completed = true;
            //this.router.navigate(['governmentEntityReg3']);
        }
        else {
            console.log('in valid form');
            // this.isOpenValidationAlert = true;
            Object.keys(this.submitUser.controls).forEach(field => {
                // console.log('field >', field);
                const control = this.submitUser.get(field);
                // console.log('control >', control);
                control.markAsTouched({ onlySelf: true });
            });
        }
    }
    closeAddUserButton() {
        this.dialogRef.close();
        // this.router.navigate(['editUserDetails/1494']);
    }
    onBlurNationalIdentity(_val) {
        console.log('onBlurNationalIdentity val >', _val);
        this.dataSubscribe = this.commonService.getNationalIdentyData(_val, this.stroageCrNoOrUidNo).subscribe(res => {
            this.getMciValideDataAll = res.userObject;
            console.log("onBlurNationalIdentity ::::" + JSON.stringify(res));
            this.submitUser.controls["FirstName"].setValue(res.userObject.fname);
            this.submitUser.controls["LastName"].setValue(res.userObject.lname);
        });
    }
    // ----------- destroy subscription ---------
    ngOnDestroy() {
        console.log('<<<<<<<<<<< --- ngOnDestroy --- >>>>>>>>>>>');
        if (this.dataSubscribe !== undefined) {
            this.dataSubscribe.unsubscribe();
        }
    }
};
GovementUserResetPasswordModalComponent.ctorParameters = () => [
    { type: _angular_common_http__WEBPACK_IMPORTED_MODULE_6__["HttpClient"] },
    { type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["NgZone"] },
    { type: _services_common_service_service__WEBPACK_IMPORTED_MODULE_8__["CommonService"] },
    { type: _angular_router__WEBPACK_IMPORTED_MODULE_4__["Router"] },
    { type: _angular_forms__WEBPACK_IMPORTED_MODULE_3__["FormBuilder"] },
    { type: _angular_material__WEBPACK_IMPORTED_MODULE_2__["MatDialogRef"] },
    { type: undefined, decorators: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"], args: [_angular_material__WEBPACK_IMPORTED_MODULE_2__["MAT_DIALOG_DATA"],] }] },
    { type: _ngx_translate_core__WEBPACK_IMPORTED_MODULE_5__["TranslateService"] }
];
GovementUserResetPasswordModalComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-govement-user-reset-password-modal',
        template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! raw-loader!./govement-user-reset-password-modal.component.html */ "./node_modules/raw-loader/dist/cjs.js!./src/app/govement-user-reset-password-modal/govement-user-reset-password-modal.component.html")).default,
        styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! ./govement-user-reset-password-modal.component.css */ "./src/app/govement-user-reset-password-modal/govement-user-reset-password-modal.component.css")).default]
    }),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__param"](6, Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"])(_angular_material__WEBPACK_IMPORTED_MODULE_2__["MAT_DIALOG_DATA"])),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_angular_common_http__WEBPACK_IMPORTED_MODULE_6__["HttpClient"],
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["NgZone"],
        _services_common_service_service__WEBPACK_IMPORTED_MODULE_8__["CommonService"],
        _angular_router__WEBPACK_IMPORTED_MODULE_4__["Router"],
        _angular_forms__WEBPACK_IMPORTED_MODULE_3__["FormBuilder"],
        _angular_material__WEBPACK_IMPORTED_MODULE_2__["MatDialogRef"], Object, _ngx_translate_core__WEBPACK_IMPORTED_MODULE_5__["TranslateService"]])
], GovementUserResetPasswordModalComponent);



/***/ }),

/***/ "./src/app/goverment-add-new-user-modal/goverment-add-new-user-modal.component.css":
/*!*****************************************************************************************!*\
  !*** ./src/app/goverment-add-new-user-modal/goverment-add-new-user-modal.component.css ***!
  \*****************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2dvdmVybWVudC1hZGQtbmV3LXVzZXItbW9kYWwvZ292ZXJtZW50LWFkZC1uZXctdXNlci1tb2RhbC5jb21wb25lbnQuY3NzIn0= */");

/***/ }),

/***/ "./src/app/goverment-add-new-user-modal/goverment-add-new-user-modal.component.ts":
/*!****************************************************************************************!*\
  !*** ./src/app/goverment-add-new-user-modal/goverment-add-new-user-modal.component.ts ***!
  \****************************************************************************************/
/*! exports provided: GovermentAddNewUserModalComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GovermentAddNewUserModalComponent", function() { return GovermentAddNewUserModalComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/material */ "./node_modules/@angular/material/esm2015/material.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm2015/forms.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm2015/router.js");
/* harmony import */ var _ngx_translate_core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @ngx-translate/core */ "./node_modules/@ngx-translate/core/fesm2015/ngx-translate-core.js");
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/common/http */ "./node_modules/@angular/common/fesm2015/http.js");
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! moment */ "./node_modules/moment/moment.js");
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(moment__WEBPACK_IMPORTED_MODULE_7__);
/* harmony import */ var _services_common_service_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../services/common-service.service */ "./src/app/services/common-service.service.ts");









let GovermentAddNewUserModalComponent = class GovermentAddNewUserModalComponent {
    constructor(http, zone, commonService, router, fb, dialogRef, data, translate) {
        this.http = http;
        this.zone = zone;
        this.commonService = commonService;
        this.router = router;
        this.fb = fb;
        this.dialogRef = dialogRef;
        this.translate = translate;
        this.bankNamesList = [];
        this.noPattern = '^(0|[1-9][0-9]*)$';
        this.emailPattern = "^[a-z0-9._%+-]+@[a-z0-9.-]+.[a-z]{2,4}$";
        this.notSelected = "Not selected";
        this.isSelectedrniFile = false;
        this.isSelectedlalFile = false;
        this.isSelectedcrFile = false;
        this.isSelectedlaglFile = false;
        this.allowedExtensions = ['jpg', 'gif', 'pdf', 'png'];
        this.validation_messages = {
            NationalId: [
                { type: "required", message: "This is a required field." },
                {
                    type: "pattern",
                    message: "National identification number should be composed of digits."
                },
                /* {
                  type: "maxlength",
                  message: "National identification number should be 10 digits."
                }, */
                {
                    type: "minlength",
                    message: "National identification number should be 10 digits."
                }
            ],
            dateOfBirth: [
                { type: "required", message: "This is a required field." }
            ],
            FirstName: [
                { type: "required", message: "This is a required field." }
            ],
            LastName: [
                { type: "required", message: "This is a required field." }
            ],
            mobileNo: [
                { type: "required", message: "This is a required field." },
                {
                    type: "pattern",
                    message: "Enter valid Mobile Number"
                },
                {
                    type: "minlength",
                    message: "Minimum length should be 10."
                }
            ],
            Email: [
                { type: "required", message: "This is a required field." },
                {
                    type: "pattern",
                    message: "Enter valid email."
                }
            ],
            OnboardResolution: [
                { type: "required", message: "This is a required field." }
            ],
            lalFile: [
                { type: "required", message: "This is a required field." }
            ],
            rniFile: [
                { type: "required", message: "This is a required field." },
            ],
            laglFile: [
                { type: "required", message: "This is a required field." }
            ],
            bankName: [
                { type: "required", message: "This is a required field." }
            ],
            IBAN: [
                { type: "required", message: "This is a required field." }
            ]
        };
        this.dropdownListBank = [];
        this.formSendModel = {};
        this.isSubmitLoading = false;
        this.isNotValidNationalId = false;
        // ng-multiselect-dropdown
        this.dropdownList = [];
        this.selectedItems = [];
        this.dropdownSettings = {};
        this.dropdownSettingsBank = {};
    }
    ngOnInit() {
        console.log('<<<<<<<<<<< --- ngOnInit --- >>>>>>>>>>>');
        let today = new Date();
        let yesterday = new Date(today);
        yesterday.setDate(today.getDate() - 1);
        let month = today.getMonth();
        let year = today.getFullYear();
        this.maxDate = yesterday;
        this.maxDate.setMonth(month);
        this.maxDate.setFullYear(year);
        this.submitUser = this.fb.group({
            NationalId: ["", [_angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].pattern(this.noPattern), _angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].minLength(10)]],
            dateOfBirth: [null, [_angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].required]],
            FirstName: ["", [_angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].required]],
            LastName: ["", [_angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].required]],
            mobileNo: ["", [_angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].pattern(this.noPattern), _angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].minLength(10)]],
            Email: ["", [_angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].pattern(this.emailPattern)]],
            OnboardResolution: [""],
            lalFile: [null, this.OnboardResolutionCheckingValidate],
            rniFile: ["", [_angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].required]],
            laglFile: ["", [_angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].required]],
            bankName: ["", [_angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].required]],
            IBAN: ["", [_angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].required]]
        });
        // multiselct dropdownList
        /*this.dropdownList = [
          { item_id: 1, item_text: 'Mumbai' },
          { item_id: 2, item_text: 'Bangaluru' },
          { item_id: 3, item_text: 'Pune' },
          { item_id: 4, item_text: 'Navsari' },
          { item_id: 5, item_text: 'New Delhi' }
        ];
        this.selectedItems = [
          { item_id: 3, item_text: 'Pune' },
          { item_id: 4, item_text: 'Navsari' }
        ];
        this.dropdownSettings = {
          singleSelection: false,
          idField: 'item_id',
          textField: 'item_text',
          selectAllText: 'Select All',
          unSelectAllText: 'UnSelect All',
          itemsShowLimit: 3,
          allowSearchFilter: true
        };*/
        /*this.dropdownList = [
          { item_id: 1, item_text: 'Mumbai' },
          { item_id: 2, item_text: 'Bangaluru' },
          { item_id: 3, item_text: 'Pune' },
          { item_id: 4, item_text: 'Navsari' },
          { item_id: 5, item_text: 'New Delhi' }
        ];*/
        this.dropdownSettings = {
            singleSelection: false,
            idField: 'ibanNo',
            textField: 'ibanNo',
            selectAllText: 'Select All',
            unSelectAllText: 'UnSelect All',
            itemsShowLimit: 2,
            allowSearchFilter: true
        };
        this.dropdownSettingsBank = {
            singleSelection: false,
            idField: 'name',
            textField: 'name',
            selectAllText: 'Select All',
            unSelectAllText: 'UnSelect All',
            itemsShowLimit: 2,
            allowSearchFilter: true
        };
    }
    ngAfterViewInit() {
        console.log('<<<<<<<<<<< ngAfterViewInit >>>>>>>>>>>');
        this.roleId = localStorage.getItem('roleId');
        console.log("this.roleId::::" + this.roleId);
        this.loginId = localStorage.getItem('userId');
        console.log("this.loginId::::" + this.loginId);
        this.userId = localStorage.getItem('userId');
        this.stroageCrNoOrUidNo = localStorage.getItem('crNoOrUidNo');
        this.stroageEntityName = localStorage.getItem('entityName');
        console.log("this.stroageCrNoOrUidNo::::" + this.stroageCrNoOrUidNo);
        console.log("this.userId::::" + this.userId);
        console.log("this.stroageEntityName::::" + this.stroageEntityName);
        this.dropdownListBank = [];
        this.dataSubscribe = this.commonService.getIBANList(this.userId)
            //this.dataSubscribe = this.commonService.getselectBankNameList(this.userId)
            .subscribe(res => {
            console.log("IBAN list::::" + res);
            this.bankNamesList = res;
            // this.zone.run(() => { 
            for (let item of res) {
                this.dropdownListBank.push({ 'name': item.tBankmaster.bankName });
                console.log('this.dropdownListBank >', this.dropdownListBank);
            }
            // });
            /*this.bankNamesList = [
            {listOfBankNames:{
              tBankmaster:{
                bankName:'sudin'
              }
            }}
            ]*/
        });
    }
    // on change rasulation
    onCaangeResolution(event) {
        this.submitUser.controls['lalFile'].updateValueAndValidity();
        // this.lalFile.updateValueAndValidity();
    }
    // custom validation code
    OnboardResolutionCheckingValidate(control) {
        const fileFiledArea = control.root.get('OnboardResolution');
        if (fileFiledArea) {
            console.log('getResolutionValue >', fileFiledArea.value);
            if (fileFiledArea.value == true) {
                if (control.value === null || control.value === undefined || control.value === '') {
                    return { 'date_error': 'This is a required field' };
                }
                else {
                    return null;
                }
            }
            else {
                // this.removeResolutionFile.nativeElement.value = "";
                // this.submitUser.controls["lalFile"].setValue('');
                // this.lalFile = null;
                // this.lalFile = '';
            }
        }
    }
    getDOB(_getDAte) {
        this.dobFormat = moment__WEBPACK_IMPORTED_MODULE_7__(_getDAte).format('DD/MM/YYYY');
        console.log('getDOB >', _getDAte);
        console.log('formatDate >', this.dobFormat);
    }
    onBlurMobile(mobile) {
        console.log("mobile[0] and type" + mobile[0] + ' ' + typeof (mobile[0]));
        /*if(mobile[0] !== '0' && mobile.length === 11){
          this.submitUser.controls["mobileNo"].setValue(null);
        }*/
    }
    fileProgress(event, fileCat) {
        console.log(fileCat);
        if (fileCat === 'rni') {
            let fileData = event.target.files[0];
            if (fileData === undefined) {
                this.rniFile = null;
                this.isSelectedrniFile = false;
            }
            if (fileData.size > 500000) {
                this.commonService.showGeneralMessage("", "Please upload < 500KB", false);
                // alert("Please upload < 500KB");
                fileData = undefined;
                this.rniFile = null;
                this.isSelectedrniFile = false;
            }
            let fname = fileData.name.split('.');
            this.rniFileName = fname[0];
            this.rniFileExtension = fname[1];
            console.log("rni fname::::" + fname[0]);
            if (!this.allowedExtensions.some((item) => item == (fname[fname.length - 1]).toLowerCase())) {
                //this.commonService.showGeneralMessage("",fname[fname.length - 1] + " file format is not allowed. Please upload recommended file types.",false);
                alert(fname[fname.length - 1] + " file format is not allowed. Please upload recommended file types.");
                //return this.isValidationOK=false;
            }
            else {
                this.rniFile = fileData;
                this.isSelectedrniFile = true;
                this.commonService.userDetails.rniFile = fileData;
            }
        }
        else if (fileCat === 'lal') {
            let fileData = event.target.files[0];
            if (fileData === undefined) {
                this.lalFile = null;
                this.isSelectedlalFile = false;
            }
            if (fileData.size > 500000) {
                //this.commonService.showGeneralMessage("","Please upload < 500KB",false);
                alert("Please upload < 500KB");
                fileData = undefined;
                this.lalFile = null;
                this.isSelectedlalFile = false;
            }
            let fname = fileData.name.split('.');
            this.lalFileName = fname[0];
            this.lalFileExtension = fname[1];
            console.log("lal fname::::" + fname);
            if (!this.allowedExtensions.some((item) => item == (fname[fname.length - 1]).toLowerCase())) {
                //this.commonService.showGeneralMessage("",fname[fname.length - 1] + " file format is not allowed. Please upload recommended file types.",false);
                alert(fname[fname.length - 1] + " file format is not allowed. Please upload recommended file types.");
                //  return this.isValidationOK=false;
            }
            else {
                console.log('fileData  >>', fileData);
                this.lalFile = fileData;
                this.isSelectedlalFile = true;
                this.commonService.userDetails.lalFile = fileData;
            }
        }
        else if (fileCat === 'lagl') {
            let fileData = event.target.files[0];
            if (fileData === undefined) {
                this.laglFile = null;
                this.isSelectedlaglFile = false;
            }
            if (fileData.size > 500000) {
                //this.commonService.showGeneralMessage("","Please upload < 500KB",false);
                alert("Please upload < 500KB");
                fileData = undefined;
                this.laglFile = null;
                this.isSelectedlaglFile = false;
            }
            let fname = fileData.name.split('.');
            this.laglFileName = fname[0];
            this.laglFileExtension = fname[1];
            console.log("lagl fname::::" + fname);
            if (!this.allowedExtensions.some((item) => item == (fname[fname.length - 1]).toLowerCase())) {
                //this.commonService.showGeneralMessage("",fname[fname.length - 1] + " file format is not allowed. Please upload recommended file types.",false);
                alert(fname[fname.length - 1] + " file format is not allowed. Please upload recommended file types.");
                //  return this.isValidationOK=false;
            }
            else {
                this.laglFile = fileData;
                this.isSelectedlaglFile = true;
                this.commonService.userDetails.laglFile = fileData;
            }
        }
        else if (fileCat === 'cr') {
            let fileData = event.target.files[0];
            if (fileData === undefined) {
                this.crFile = null;
                this.isSelectedcrFile = false;
            }
            if (fileData.size > 500000) {
                //this.commonService.showGeneralMessage("","Please upload < 500KB",false);
                alert("Please upload < 500KB");
                fileData = undefined;
                this.crFile = null;
                this.isSelectedcrFile = false;
            }
            let fname = fileData.name.split('.');
            this.crFileName = fname[0];
            this.crFileExtension = fname[1];
            console.log("cr fname::::" + fname);
            if (!this.allowedExtensions.some((item) => item == (fname[fname.length - 1]).toLowerCase())) {
                //this.commonService.showGeneralMessage("",fname[fname.length - 1] + " file format is not allowed. Please upload recommended file types.",false);
                alert(fname[fname.length - 1] + " file format is not allowed. Please upload recommended file types.");
                //  return this.isValidationOK=false;
            }
            else {
                this.crFile = fileData;
                this.isSelectedcrFile = true;
                this.commonService.userDetails.crFile = fileData;
            }
        }
        // if((this.rniFileName === this.lalFileName) || (this.rniFileName === this.laglFileExtension) || (this.rniFileName === this.crFileName)) {
        //   alert("Attachment file should not be same");
        // }
    }
    close() {
        this.dialogRef.close();
    }
    addUserSubmit() {
        console.log("this.getMciValideDataAll >>>>>>", this.getMciValideDataAll);
        console.log("amenaddUserSubmitdSubmit() called valid >", this.submitUser.valid);
        console.log("addUserSubmit VALUE >>" + JSON.stringify(this.submitUser.value));
        /*if (this.submitUser.valid) {
         this.dialogRef.close(this.submitUser.value);
       }*/
        if (this.submitUser.valid) {
            this.isSubmitLoading = true;
            /*this.formSendModel.commRegNo = this.getMciValideDataAll.cr_no;
            this.formSendModel.commRegNoMCI = this.getMciValideDataAll.cr_no;
            this.formSendModel.commRegNo = this.getMciValideDataAll.cr_no;
            this.formSendModel.cr_type = this.getMciValideDataAll.cr_type;
            this.formSendModel.cr_status = this.getMciValideDataAll.cr_status;
            this.formSendModel.cr_issue_dt = this.getMciValideDataAll.cr_issue_dt;
            this.formSendModel.cr_expiry_dt = this.getMciValideDataAll.cr_expiry_dt;
            this.formSendModel.EntityName = this.getMciValideDataAll.entity_name;
            this.formSendModel.address = this.getMciValideDataAll.address;
            this.formSendModel.city = this.getMciValideDataAll.city;
      
            this.formSendModel.FirstName = this.submitUser.controls['FirstName'].value;
            this.formSendModel.LastName = this.submitUser.controls['LastName'].value;
            this.formSendModel.NationalId = this.submitUser.controls['NationalId'].value;
            this.formSendModel.dateOfBirth = this.submitUser.controls['dateOfBirth'].value;
            this.formSendModel.mobileNo = this.submitUser.controls['mobileNo'].value;
            this.formSendModel.Email = this.submitUser.controls['Email'].value;
      
            this.formSendModel.laglFile = this.laglFile;
            this.formSendModel.rniFile = this.rniFile;
            this.formSendModel.lalFile = this.lalFile;
            this.formSendModel.OnboardResolution = this.submitUser.controls['OnboardResolution'].value;
      
            this.formSendModel.IBAN = this.submitUser.controls['IBAN'].value;
            this.formSendModel.bankName = this.submitUser.controls['bankName'].value;
            this.formSendModel.userId = this.userId;
            console.log(JSON.stringify('form modal data >', this.formSendModel));*/
            let params = new FormData();
            let on_board_resolutionvalue = 'N';
            if (this.submitUser.controls['OnboardResolution'].value == true) {
                on_board_resolutionvalue = 'Y';
                params.append('lalFileContent', this.lalFile);
            }
            else {
                on_board_resolutionvalue = 'N';
                // params.append('lalFileContent', "");
            }
            params.append('entityUID', this.stroageCrNoOrUidNo);
            params.append('entityname', this.stroageEntityName);
            params.append('entityNationalID', this.submitUser.controls['NationalId'].value);
            params.append('entityMobNo', this.submitUser.controls['mobileNo'].value);
            params.append('entityEmail', this.submitUser.controls['Email'].value);
            params.append('Name', '');
            params.append('address1', '');
            params.append('address2', '');
            params.append('country', '');
            params.append('city', '');
            params.append('entityTnC', '');
            // params.append('city', this.getMciValideDataAll.city);
            params.append('userId', this.loginId);
            params.append('checkedGovEntity', '');
            // params.append('rep_national_id', this.submitUser.controls['NationalId'].value);
            // params.append('mobileNo', this.submitUser.controls['mobileNo'].value);
            // params.append('Email', this.submitUser.controls['Email'].value);
            params.append('on_board_resolution', on_board_resolutionvalue);
            params.append('laglFileContent', this.laglFile);
            params.append('rniFileContent', this.rniFile);
            params.append('firstName', this.submitUser.controls['FirstName'].value);
            params.append('lastName', this.submitUser.controls['LastName'].value);
            params.append('rep_dob', this.dobFormat);
            // params.append('regType', 'A');
            params.append('bi', this.submitUser.controls['IBAN'].value);
            params.append('bankName', this.submitUser.controls['bankName'].value);
            // params.append('OfficeMobileNumber', this.submitUser.controls['mobileNo'].value); 
            params.append('createdBy', this.loginId);
            this.dataSubscribe = this.commonService.submitFormData('govtEntitySave', params)
                .subscribe(res => {
                this.isSubmitLoading = false;
                console.log("Gov Reg final page Response is::::" + JSON.stringify(res));
                // if (res.responseCode == 107) {
                if (res.responseCode == 1) {
                    // this.submitUser.reset();
                    this.dialogRef.close(this.submitUser.value);
                    this.commonService.showGeneralMessage("", res.responseMessage, false);
                    this.commonService.showGeneralMessage("", 'Government entity registration form is submitted successfully', false);
                    // this.commonService.showGeneralMessage("", "User form is submitted successfully.", false);
                    //this.router.navigate(['login']);
                }
            });
        }
        else {
            console.log('in valid form');
            // this.isOpenValidationAlert = true;
            Object.keys(this.submitUser.controls).forEach(field => {
                // console.log('field >', field);
                const control = this.submitUser.get(field);
                // console.log('control >', control);
                control.markAsTouched({ onlySelf: true });
            });
        }
    }
    closeAddUserButton() {
        this.dialogRef.close();
        this.router.navigate(['governmentaccountmanagement']);
    }
    onBlurNationalIdentity(_val) {
        this.isNotValidNationalId = false;
        console.log('onBlurNationalIdentity val >', _val);
        this.dataSubscribe = this.commonService.getNationalIdentyDatagov(_val, this.stroageCrNoOrUidNo, this.stroageEntityName).subscribe(res => {
            this.getMciValideDataAll = res.userObject;
            console.log("onBlurNationalIdentity ::::" + JSON.stringify(res));
            console.log('open modal >>>>>>>>>>>>>>>.>>');
            // this.commonService.showGeneralMessage("", "User form is submitted successfully.", false);
            if (res.responseCode == 1) {
                this.submitUser.controls["FirstName"].setValue(res.userObject.firstName);
                this.submitUser.controls["LastName"].setValue(res.userObject.lastName);
            }
            else {
                this.submitUser.controls["FirstName"].setValue('');
                this.submitUser.controls["LastName"].setValue('');
                this.isNotValidNationalId = true;
                this.ninresponseMessage = res.responseMessage;
            }
        });
    }
    onBlurNationalIdentitykeyup(_val) {
        console.log('onBlurNationalIdentitykeyup val >', _val);
        this.isNotValidNationalId = false;
    }
    onItemSelect(item) {
        console.log(item);
    }
    onSelectAll(items) {
        console.log(items);
    }
    viewPageData() {
        this.viewLoadData = true;
        this.dataSubscribe = this.http.get('Attachment')
            .subscribe((res) => {
            this.viewLoadData = false;
            console.log(" view data  res -------------------->", res);
            if (res.return_status > 0) {
                // this.viewData = res.return_data;
            }
        }, errRes => {
            this.viewLoadData = false;
        });
    }
    // view data fetch end
    // ----------- destroy subscription ---------
    ngOnDestroy() {
        console.log('<<<<<<<<<<< --- ngOnDestroy --- >>>>>>>>>>>');
        if (this.dataSubscribe !== undefined) {
            this.dataSubscribe.unsubscribe();
        }
    }
};
GovermentAddNewUserModalComponent.ctorParameters = () => [
    { type: _angular_common_http__WEBPACK_IMPORTED_MODULE_6__["HttpClient"] },
    { type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["NgZone"] },
    { type: _services_common_service_service__WEBPACK_IMPORTED_MODULE_8__["CommonService"] },
    { type: _angular_router__WEBPACK_IMPORTED_MODULE_4__["Router"] },
    { type: _angular_forms__WEBPACK_IMPORTED_MODULE_3__["FormBuilder"] },
    { type: _angular_material__WEBPACK_IMPORTED_MODULE_2__["MatDialogRef"] },
    { type: undefined, decorators: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"], args: [_angular_material__WEBPACK_IMPORTED_MODULE_2__["MAT_DIALOG_DATA"],] }] },
    { type: _ngx_translate_core__WEBPACK_IMPORTED_MODULE_5__["TranslateService"] }
];
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewChild"])('resolutionFile', { static: false }),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", Object)
], GovermentAddNewUserModalComponent.prototype, "removeResolutionFile", void 0);
GovermentAddNewUserModalComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-goverment-add-new-user-modal',
        template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! raw-loader!./goverment-add-new-user-modal.component.html */ "./node_modules/raw-loader/dist/cjs.js!./src/app/goverment-add-new-user-modal/goverment-add-new-user-modal.component.html")).default,
        styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! ./goverment-add-new-user-modal.component.css */ "./src/app/goverment-add-new-user-modal/goverment-add-new-user-modal.component.css")).default]
    }),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__param"](6, Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"])(_angular_material__WEBPACK_IMPORTED_MODULE_2__["MAT_DIALOG_DATA"])),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_angular_common_http__WEBPACK_IMPORTED_MODULE_6__["HttpClient"],
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["NgZone"],
        _services_common_service_service__WEBPACK_IMPORTED_MODULE_8__["CommonService"],
        _angular_router__WEBPACK_IMPORTED_MODULE_4__["Router"],
        _angular_forms__WEBPACK_IMPORTED_MODULE_3__["FormBuilder"],
        _angular_material__WEBPACK_IMPORTED_MODULE_2__["MatDialogRef"], Object, _ngx_translate_core__WEBPACK_IMPORTED_MODULE_5__["TranslateService"]])
], GovermentAddNewUserModalComponent);



/***/ }),

/***/ "./src/app/goverment-edit-user-details/goverment-edit-user-details.component.css":
/*!***************************************************************************************!*\
  !*** ./src/app/goverment-edit-user-details/goverment-edit-user-details.component.css ***!
  \***************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2dvdmVybWVudC1lZGl0LXVzZXItZGV0YWlscy9nb3Zlcm1lbnQtZWRpdC11c2VyLWRldGFpbHMuY29tcG9uZW50LmNzcyJ9 */");

/***/ }),

/***/ "./src/app/goverment-edit-user-details/goverment-edit-user-details.component.ts":
/*!**************************************************************************************!*\
  !*** ./src/app/goverment-edit-user-details/goverment-edit-user-details.component.ts ***!
  \**************************************************************************************/
/*! exports provided: GovermentEditUserDetailsComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GovermentEditUserDetailsComponent", function() { return GovermentEditUserDetailsComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/material */ "./node_modules/@angular/material/esm2015/material.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm2015/forms.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm2015/router.js");
/* harmony import */ var _ngx_translate_core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @ngx-translate/core */ "./node_modules/@ngx-translate/core/fesm2015/ngx-translate-core.js");
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/common/http */ "./node_modules/@angular/common/fesm2015/http.js");
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! moment */ "./node_modules/moment/moment.js");
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(moment__WEBPACK_IMPORTED_MODULE_7__);
/* harmony import */ var _services_common_service_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../services/common-service.service */ "./src/app/services/common-service.service.ts");
/* harmony import */ var _govement_user_reset_password_modal_govement_user_reset_password_modal_component__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../govement-user-reset-password-modal/govement-user-reset-password-modal.component */ "./src/app/govement-user-reset-password-modal/govement-user-reset-password-modal.component.ts");









// import { UserResetPasswordModalComponent } from '../user-reset-password-modal/user-reset-password-modal.component';

let GovermentEditUserDetailsComponent = class GovermentEditUserDetailsComponent {
    constructor(http, zone, commonService, router, activatedRoute, fb, dialog, translate) {
        this.http = http;
        this.zone = zone;
        this.commonService = commonService;
        this.router = router;
        this.activatedRoute = activatedRoute;
        this.fb = fb;
        this.dialog = dialog;
        this.translate = translate;
        this.dropdownSettings = {};
        this.bankNamesList = [];
        this.noPattern = '^(0|[1-9][0-9]*)$';
        this.emailPattern = "^[a-z0-9._%+-]+@[a-z0-9.-]+.[a-z]{2,4}$";
        this.notSelected = "Not selected";
        this.isSelectedrniFile = false;
        this.isSelectedlalFile = false;
        this.isSelectedcrFile = false;
        this.isSelectedlaglFile = false;
        this.myArraytree = [];
        this.allowedExtensions = ['jpg', 'gif', 'pdf', 'png'];
        this.validation_messages = {
            NationalId: [
                { type: "required", message: "This is a required field." },
                {
                    type: "pattern",
                    message: "National identification number should be composed of digits."
                },
                /* {
                  type: "maxlength",
                  message: "National identification number should be 10 digits."
                }, */
                {
                    type: "minlength",
                    message: "National identification number should be 10 digits."
                }
            ],
            dateOfBirth: [
                { type: "required", message: "This is a required field." }
            ],
            FirstName: [
                { type: "required", message: "This is a required field." }
            ],
            LastName: [
                { type: "required", message: "This is a required field." }
            ],
            mobileNo: [
                { type: "required", message: "This is a required field." },
                {
                    type: "pattern",
                    message: "Enter valid Mobile Number"
                },
                {
                    type: "minlength",
                    message: "Minimum length should be 10."
                }
            ],
            Email: [
                { type: "required", message: "This is a required field." },
                {
                    type: "pattern",
                    message: "Enter valid email."
                }
            ],
            OnboardResolution: [
                { type: "required", message: "This is a required field." }
            ],
            lalFile: [
                { type: "required", message: "This is a required field." }
            ],
            rniFile: [
                { type: "required", message: "This is a required field." }
            ],
            laglFile: [
                { type: "required", message: "This is a required field." }
            ],
            bankName: [
                { type: "required", message: "This is a required field." }
            ],
            iban: [
                { type: "required", message: "This is a required field." }
            ],
            activeDeactive: [
                { type: "required", message: "This is a required field." }
            ],
        };
        this.dropdownListBank = [];
        this.dropdownList = [];
        this.formSendModel = {};
        // not needed
        /*getContactsFormGroup(index): FormGroup {
          this.contactList = this.submitUser.get('contacts') as FormArray;
          const formGroup = this.contactList.controls[index] as FormGroup;
          return formGroup;
        }
      
        changedContactType(index) {
          let validators = null;
      
          if (this.getContactsFormGroup(index).controls['type'].value === 'email') {
              validators = Validators.compose([Validators.required, Validators.email]);
            } else {
              validators = Validators.compose([
                Validators.required,
                Validators.pattern(new RegExp('^\\\+[0-9]?()[0-9](\d[0-9]{9})\$')) // pattern for validating international phone number
              ]);
            }
      
          this.getContactsFormGroup(index).controls['value'].setValidators(validators);
      
          // re-validate the inputs of the form control based on new validation
          this.getContactsFormGroup(index).controls['value'].updateValueAndValidity();
        }*/
        // ----------- destroy subscription ---------
        this.resetIban = false;
    }
    ngOnInit() {
        console.log('<<<<<<<<<<< --- ngOnInit --- >>>>>>>>>>>');
        let today = new Date();
        let yesterday = new Date(today);
        yesterday.setDate(today.getDate() - 1);
        let month = today.getMonth();
        let year = today.getFullYear();
        this.maxDate = yesterday;
        this.maxDate.setMonth(month);
        this.maxDate.setFullYear(year);
        this.submitUser = this.fb.group({
            NationalId: ["", [_angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].pattern(this.noPattern), _angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].minLength(10)]],
            dateOfBirth: [null, [_angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].required]],
            FirstName: ["", [_angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].required]],
            LastName: ["", [_angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].required]],
            mobileNo: ["", [_angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].pattern(this.noPattern), _angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].minLength(10)]],
            Email: ["", [_angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].pattern(this.emailPattern)]],
            activeDeactive: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].required]],
            contacts: this.fb.array([this.createContact()])
        });
        // set contactlist to the form control containing contacts
        // this.contactList = this.submitUser.get('contacts') as FormArray;
        this.dropdownSettings = {
            singleSelection: false,
            idField: 'ibanNo',
            textField: 'ibanNo',
            selectAllText: 'Select All',
            unSelectAllText: 'UnSelect All',
            itemsShowLimit: 2,
            allowSearchFilter: true
        };
    }
    ngAfterViewInit() {
        this.getUserItemFormStroage = JSON.parse(localStorage.getItem('govEditUserItem'));
        console.log('this.getUserItemFormStroage >>>>>>>@@@@>>>', this.getUserItemFormStroage);
        //  this.parms_action_id = this.activatedRoute.snapshot.paramMap.get('id');
        // this.parms_action_iban = this.activatedRoute.snapshot.paramMap.get('iban');
        this.parms_action_id = this.getUserItemFormStroage.login_id;
        this.parms_action_iban = this.getUserItemFormStroage.iban_no;
        console.log('<<<<<<<<<<<  params id >>>>>>>>>>>', this.parms_action_id);
        console.log('<<<<<<<<<<< params iban >>>>>>>>>>>', this.parms_action_iban);
        this.roleId = localStorage.getItem('roleId');
        console.log("this.roleId::::" + this.roleId);
        this.loginId = localStorage.getItem('userId');
        console.log("this.loginId::::" + this.loginId);
        this.userId = localStorage.getItem('userId');
        this.stroageCrNoOrUidNo = localStorage.getItem('crNoOrUidNo');
        console.log("this.stroageCrNoOrUidNo::::" + this.stroageCrNoOrUidNo);
        console.log("this.userId::::" + this.userId);
        this.dataSubscribe = this.commonService.getListData('getGovEntityDetail', this.parms_action_id, this.parms_action_iban)
            .subscribe(res => {
            console.log("getUserDeatils >>>>>", res);
            this.getUserDeatils = res.userObject;
            /*this.submitUser.controls["FirstName"].setValue(res.userObject.rep_name);
            this.submitUser.controls["LastName"].setValue(res.userObject.rep_last_name);
            this.submitUser.controls["Email"].setValue(res.userObject.rep_email);
            this.submitUser.controls["NationalId"].setValue(res.userObject.national_id);
            this.submitUser.controls["dateOfBirth"].setValue(moment(res.userObject.date_of_birth).format('DD/MM/YYYY'));
            this.submitUser.controls["mobileNo"].setValue(res.userObject.contact_info);*/
            /*let startTestArray = [{bank_code:"ALB",iban:["SA7620000000000999999999"]},{"bank_code":"ALR","iban":["SA7620000000000333333333"]}]
            console.log('startTestArray  >>', startTestArray);*/
            this.submitUser.patchValue({
                FirstName: res.userObject.rep_name,
                LastName: res.userObject.rep_last_name,
                Email: res.userObject.rep_email,
                NationalId: res.userObject.national_id,
                dateOfBirth: moment__WEBPACK_IMPORTED_MODULE_7__(res.userObject.date_of_birth).format('DD/MM/YYYY'),
                mobileNo: res.userObject.contact_info,
                activeDeactive: res.userObject.is_active
                // activeDeactive:'Y'
            });
            let ibanFormatArray = [];
            if (res.userObject.ibanList && res.userObject.ibanList.length > 0) {
                res.userObject.ibanList.forEach((val, ind) => {
                    val.bank_code = val.bankName;
                    ibanFormatArray.push(val);
                });
                console.log('ibanFormatArray @@@@@@ >', ibanFormatArray);
            }
            // this.submitUser.setControl('contacts', this.exsistingBankIbans(res.userObject.bank_code)) //setControl use for multiple add more  value shows
            this.submitUser.setControl('contacts', this.exsistingBankIbans(ibanFormatArray)); //setControl use for multiple add more  value shows
        });
        // get dropdown data
        this.dropdownListBank = [];
        this.dataSubscribe = this.commonService.getIBANListByBankName(this.userId)
            .subscribe(res => {
            console.log("get bank  by IBAN list::::" + res);
            this.bankNamesList = res;
            /*for(let item of res){
             this.dropdownListBank.push({'name':item.tBankmaster.bankName});
             console.log('this.dropdownListBank >', this.dropdownListBank);
            }*/
        });
    }
    // add more field  data pre populate
    exsistingBankIbans(_valueSet) {
        console.log('exsistingBankIbans _valueSet >>', _valueSet);
        const formArray = new _angular_forms__WEBPACK_IMPORTED_MODULE_3__["FormArray"]([]);
        _valueSet.forEach((item, index) => {
            console.log('index ########>>', index);
            /*this.bankNamesList.forEach((val, ind) => {
              item.bankNamesList = val.Iban_no;
              console.log('val.bankNamesList >', item.bankNamesList);
            })*/
            // this.onSelectBank(item, item.bank_code);
            formArray.push(this.fb.group({
                bankName: [item.bank_code, [_angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].required]],
                iban: [item.iban, [_angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].required]]
            }));
            /* const contactsFormArrayitem = (<FormArray>this.submitUser.get('contacts')).at(index);
             console.log('@@@@@@@ itemarray @@@@@@@@@@@@ >', contactsFormArrayitem);
       
              this.onSelectBank(contactsFormArrayitem, item.bank_code);*/
            // item.iban = [
            //    {ibanNo:"SA7630000000000222222222"}
            //  ];
        });
        /*const contactsFormArrayitem = (<FormArray>this.submitUser.get('contacts'));
    
        contactsFormArrayitem.controls.forEach(itemval =>{
         console.log('mygetval @@@@@@@@@@@@@@@@@@@@ >', itemval)
      
        })*/
        // access item
        formArray.controls.forEach(item2 => {
            console.log('exsistingBankIbans formArray @@@@@@ >>', item2);
            this.onSelectBank(item2, item2.value.bankName);
        });
        console.log('exsistingBankIbans formArray >>', formArray);
        return formArray;
    }
    openResetPasswordModal() {
        console.log("openResetPasswordModal valid >", this.submitUser.valid);
        console.log("openResetPasswordModal value >", this.submitUser.value);
        this.getUserDeatils.login_id = this.parms_action_id;
        this.getUserDeatils.iban_no = this.parms_action_iban;
        this.getUserDeatils.activeDeactive = this.submitUser.controls['activeDeactive'].value;
        this.getUserDeatils.Email = this.submitUser.controls['Email'].value;
        if (this.getUserDeatils.contact_info && this.getUserDeatils.Email) {
            //this.commonService.showGeneralMessage("", "Alert shows", false);
            const dialogConfig = new _angular_material__WEBPACK_IMPORTED_MODULE_2__["MatDialogConfig"]();
            dialogConfig.disableClose = true;
            dialogConfig.autoFocus = true;
            dialogConfig.panelClass = 'custom-modalbox';
            dialogConfig.data = {
                modalData: this.getUserDeatils
            };
            this.dialogRef = this.dialog.open(_govement_user_reset_password_modal_govement_user_reset_password_modal_component__WEBPACK_IMPORTED_MODULE_9__["GovementUserResetPasswordModalComponent"], dialogConfig);
            this.dialogRef.afterClosed().subscribe(result => {
                console.log('reset password modal close data >>>>', result);
            });
        }
        else {
            console.log('in valid form');
            Object.keys(this.submitUser.controls).forEach(field => {
                const control = this.submitUser.get(field);
                control.markAsTouched({ onlySelf: true });
            });
        }
    }
    close() {
        this.dialogRef.close();
    }
    editUserSubmit() {
        // console.log("this.getMciValideDataAll >>>>>>", this.getMciValideDataAll);
        console.log("editUserSubmit() called valid >", this.submitUser.valid);
        let formValJson = JSON.stringify(this.submitUser.value);
        console.log("editUserSubmit() All" + this.submitUser);
        console.log("editUserSubmit() value" + formValJson);
        console.log('add more get value contacts >>', this.submitUser.controls['contacts'].value);
        /*if (this.submitUser.valid) {
         this.dialogRef.close(this.submitUser.value);
       }*/
        if (this.submitUser.valid) {
            /*let params = new FormData();
      
            params.append('rep_national_id', this.submitUser.controls['NationalId'].value);
            params.append('dob', this.submitUser.controls['dateOfBirth'].value);
            params.append('name', this.submitUser.controls['FirstName'].value);
            params.append('rep_last_name', this.submitUser.controls['LastName'].value);
            params.append('mobileNo', this.submitUser.controls['mobileNo'].value);
            params.append('Email', this.submitUser.controls['Email'].value);
            params.append('activeDeactive', this.submitUser.controls['activeDeactive'].value);
            params.append('contacts', JSON.stringify(this.submitUser.controls['contacts'].value));*/
            let editUserDataObj = {
                "rep_national_id": this.submitUser.controls['NationalId'].value,
                "login_id": this.parms_action_id,
                "modify_by": this.loginId,
                "dob": this.submitUser.controls['dateOfBirth'].value,
                "name": this.submitUser.controls['FirstName'].value,
                "delete_flag": "N",
                "rep_last_name": this.submitUser.controls['LastName'].value,
                "mobileNo": this.submitUser.controls['mobileNo'].value,
                "email": this.submitUser.controls['Email'].value,
                "is_active": this.submitUser.controls['activeDeactive'].value,
                "bankCodeIbanList": this.submitUser.controls['contacts'].value
            };
            this.dataSubscribe = this.commonService.submitFormDataJson('updateGovEntityDetail', editUserDataObj)
                .subscribe(res => {
                console.log("Gov Reg final page Response is::::" + JSON.stringify(res));
                // if (res.responseCode == 107) {
                //if (res.responseCode == 1) {
                // this.submitUser.reset();
                // this.dialogRef.close(this.submitUser.value);
                this.commonService.showGeneralMessage("", res.responseMessage, false);
                // this.commonService.showGeneralMessage("", "User form is submitted successfully.", false);
                //this.router.navigate(['login']);
                //}
            });
            //this.commonService.isGovPart2Completed = true;
            //this.router.navigate(['governmentEntityReg3']);
        }
        else {
            console.log('in valid form');
            // this.isOpenValidationAlert = true;
            Object.keys(this.submitUser.controls).forEach(field => {
                // console.log('field >', field);
                const control = this.submitUser.get(field);
                // console.log('control >', control);
                control.markAsTouched({ onlySelf: true });
            });
        }
    }
    closeAddUserButton() {
        this.dialogRef.close();
        this.router.navigate(['privateaccountmanagement']);
    }
    // --------------- add dynamic form  start -------------------
    // returns all form groups under contacts
    /*get contactFormGroup() {
      return this.submitUser.get('contacts') as FormArray;
    }*/
    createContact() {
        return this.fb.group({
            bankName: [null, [_angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].required]],
            iban: [null, [_angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].required]]
        });
    }
    // add more a contact form group
    addMore(contoLName) {
        this.submitUser.get(contoLName).push(this.createContact());
        // (<FormArray>this.submitUser.get('contacts')).push(this.createContact());
        // this.contactList.push(this.createContact());
    }
    // remove contact from group
    removeMoreItem(contoLName, index) {
        const contactsFormArray = this.submitUser.get(contoLName);
        contactsFormArray.removeAt(index);
        contactsFormArray.markAsDirty();
        contactsFormArray.markAsTouched();
        // this.contactList.removeAt(index);
    }
    onSelectBank(_item, value, resetValIndex) {
        if (resetValIndex) {
            this.resetIban = true;
            this.submitUser.get('contacts').controls.forEach(group => {
                if (group.value.bankName == _item.value.bankName) {
                    // console.log('group >>', group);
                    // group.get('iban').setValue('');
                    group.get('iban').reset();
                    // (<FormArray>group).controls["iban"].setValue('');
                }
            });
            /*let contactsFormArrayitem = (<FormArray>this.submitUser.get('contacts')).at(resetValIndex);
            contactsFormArrayitem.get('iban').reset();*/
            // (<FormArray>contactsFormArrayitem).controls["iban"].reset();
        }
        this.resetIban = false;
        let valNumber = value;
        console.log('onSelectBank _item >', _item);
        console.log('onSelectBank value >', valNumber);
        this.bankNamesList.forEach((val, ind) => {
            console.log('selected bank for iban @@ >', val.bank_code);
            if (val.bank_code == valNumber) {
                _item.bankNamesList = val.Iban_no;
                console.log('selected bank for _item.bankNamesList >', _item.bankNamesList);
                console.log('selected bank for iban >', val);
                // console.log('selected bank for iban >', val.Iban_no);
            }
        });
        // this.dataSubscribe = this.commonService.getListData('getUserDetail', value)
        // .subscribe(res => {
        //   console.log("onSelectBank response  >>>>>",  res);
        // });
    }
    goCancel() {
        this.router.navigate(['governmentaccountmanagement']);
    }
    ngOnDestroy() {
        console.log('<<<<<<<<<<< --- ngOnDestroy --- >>>>>>>>>>>');
        if (this.dataSubscribe !== undefined) {
            this.dataSubscribe.unsubscribe();
        }
    }
};
GovermentEditUserDetailsComponent.ctorParameters = () => [
    { type: _angular_common_http__WEBPACK_IMPORTED_MODULE_6__["HttpClient"] },
    { type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["NgZone"] },
    { type: _services_common_service_service__WEBPACK_IMPORTED_MODULE_8__["CommonService"] },
    { type: _angular_router__WEBPACK_IMPORTED_MODULE_4__["Router"] },
    { type: _angular_router__WEBPACK_IMPORTED_MODULE_4__["ActivatedRoute"] },
    { type: _angular_forms__WEBPACK_IMPORTED_MODULE_3__["FormBuilder"] },
    { type: _angular_material__WEBPACK_IMPORTED_MODULE_2__["MatDialog"] },
    { type: _ngx_translate_core__WEBPACK_IMPORTED_MODULE_5__["TranslateService"] }
];
GovermentEditUserDetailsComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-goverment-edit-user-details',
        template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! raw-loader!./goverment-edit-user-details.component.html */ "./node_modules/raw-loader/dist/cjs.js!./src/app/goverment-edit-user-details/goverment-edit-user-details.component.html")).default,
        styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! ./goverment-edit-user-details.component.css */ "./src/app/goverment-edit-user-details/goverment-edit-user-details.component.css")).default]
    }),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_angular_common_http__WEBPACK_IMPORTED_MODULE_6__["HttpClient"],
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["NgZone"],
        _services_common_service_service__WEBPACK_IMPORTED_MODULE_8__["CommonService"],
        _angular_router__WEBPACK_IMPORTED_MODULE_4__["Router"],
        _angular_router__WEBPACK_IMPORTED_MODULE_4__["ActivatedRoute"],
        _angular_forms__WEBPACK_IMPORTED_MODULE_3__["FormBuilder"],
        _angular_material__WEBPACK_IMPORTED_MODULE_2__["MatDialog"],
        _ngx_translate_core__WEBPACK_IMPORTED_MODULE_5__["TranslateService"]])
], GovermentEditUserDetailsComponent);



/***/ }),

/***/ "./src/app/government-account-management/government-account-management.component.css":
/*!*******************************************************************************************!*\
  !*** ./src/app/government-account-management/government-account-management.component.css ***!
  \*******************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2dvdmVybm1lbnQtYWNjb3VudC1tYW5hZ2VtZW50L2dvdmVybm1lbnQtYWNjb3VudC1tYW5hZ2VtZW50LmNvbXBvbmVudC5jc3MifQ== */");

/***/ }),

/***/ "./src/app/government-account-management/government-account-management.component.ts":
/*!******************************************************************************************!*\
  !*** ./src/app/government-account-management/government-account-management.component.ts ***!
  \******************************************************************************************/
/*! exports provided: GovernmentAccountManagementComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GovernmentAccountManagementComponent", function() { return GovernmentAccountManagementComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm2015/router.js");
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/material */ "./node_modules/@angular/material/esm2015/material.js");
/* harmony import */ var _services_common_service_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../services/common-service.service */ "./src/app/services/common-service.service.ts");
/* harmony import */ var _goverment_add_new_user_modal_goverment_add_new_user_modal_component__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../goverment-add-new-user-modal/goverment-add-new-user-modal.component */ "./src/app/goverment-add-new-user-modal/goverment-add-new-user-modal.component.ts");





//import { GeneralModalComponent } from '../general-modal/general-modal.component';

let GovernmentAccountManagementComponent = class GovernmentAccountManagementComponent {
    constructor(router, commonService, dialog) {
        this.router = router;
        this.commonService = commonService;
        this.dialog = dialog;
        this.dtOptions = {};
        this.dtOptionsAR = {};
    }
    ngOnInit() {
        this.userId = localStorage.getItem('userId');
        console.log("this.userId::::" + this.userId);
        this.userName = localStorage.getItem('userName');
        console.log("this.userName::::" + this.userName);
        this.roleId = localStorage.getItem('roleId');
        console.log("this.role_ID::::" + this.roleId);
        this.onBoardResolution = localStorage.getItem('onBoardResolution');
        this.dtOptionsAR = {
            pageLength: 10,
            processing: true,
            language: {
                processing: "جارٍ التحميل...",
                search: "ابحث:",
                lengthMenu: "أظهر _MENU_ مدخلات",
                info: "إظهار _START_ إلى _END_ من أصل _TOTAL_ مدخل",
                infoEmpty: "يعرض 0 إلى 0 من أصل 0 سجل",
                infoFiltered: "(منتقاة من مجموع _MAX_ مُدخل)",
                infoPostFix: "",
                loadingRecords: "جارٍ التحميل...",
                zeroRecords: "لم يعثر على أية سجلات",
                emptyTable: "ليست هناك بيانات متاحة في الجدول",
                paginate: {
                    first: "الأول",
                    previous: "السابق",
                    next: "التالي",
                    last: "الأخير"
                },
                aria: {
                    sortAscending: ": تفعيل لترتيب العمود تصاعدياً",
                    sortDescending: ": تفعيل لترتيب العمود تنازلياً"
                }
            }
        };
        this.dtOptions = {
            pageLength: 10,
            processing: true,
        };
        this.commonService.getAciveUserListGov(this.userId)
            .subscribe(res => {
            for (let item in res.userObject) {
                res.userObject[item].id = item + 100;
            }
            this.AciveUsers = res.userObject;
            console.log("Acive User List :::: >>>>>>" + JSON.stringify(this.AciveUsers));
        });
        this.commonService.getWorkFlowListByLoginId(this.userId)
            .subscribe(res => {
            this.Aciveworkflows = res;
            console.log("Acive workflow List :::: >>>>>>" + JSON.stringify(this.Aciveworkflows));
        });
    }
    addnewworkflow() {
        this.commonService.seteditworkflowIdService('');
        this.router.navigate(['/governmentworkflow']);
    }
    workflowDetails(details) {
        console.log('workflowDetails');
        this.commonService.seteditworkflowIdService(details.workflow_id);
        /* localStorage.setItem('editworkflowId', JSON.stringify(details.workflow_id)); */
        this.router.navigate(['/governmentworkflow']);
        /* this.commonService.workflowDetails(this.userId,details.workflow_id)
        .subscribe(res => {
          this.Aciveworkflows = res;
          console.log("Acive workflow List :::: >>>>>>" + JSON.stringify(this.Aciveworkflows));
        }); */
    }
    addnewuser() {
        //this.commonService.showGeneralMessage("", "Alert shows", false);
        const dialogConfig = new _angular_material__WEBPACK_IMPORTED_MODULE_3__["MatDialogConfig"]();
        dialogConfig.disableClose = true;
        dialogConfig.autoFocus = true;
        dialogConfig.panelClass = 'custom-modalbox';
        dialogConfig.data = {
            description: 'description'
        };
        this.dialogRef = this.dialog.open(_goverment_add_new_user_modal_goverment_add_new_user_modal_component__WEBPACK_IMPORTED_MODULE_5__["GovermentAddNewUserModalComponent"], dialogConfig);
        this.dialogRef.afterClosed().subscribe(result => {
            console.log('Dialog result: ${result} >>', result); // Pizza!
            if (result) {
                this.commonService.getAciveUserListGov(this.userId)
                    .subscribe(res => {
                    for (let item in res.userObject) {
                        res.userObject[item].id = item + 100;
                    }
                    this.AciveUsers = res.userObject;
                    console.log("Acive User List :::: >>>>>>" + JSON.stringify(this.AciveUsers));
                });
            }
        });
    }
    goLocationChange(_item) {
        console.log('goLocationChange _item >', _item);
        localStorage.setItem('govEditUserItem', JSON.stringify(_item));
        this.router.navigate(['/goveditUserDetails']);
    }
};
GovernmentAccountManagementComponent.ctorParameters = () => [
    { type: _angular_router__WEBPACK_IMPORTED_MODULE_2__["Router"] },
    { type: _services_common_service_service__WEBPACK_IMPORTED_MODULE_4__["CommonService"] },
    { type: _angular_material__WEBPACK_IMPORTED_MODULE_3__["MatDialog"] }
];
GovernmentAccountManagementComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-government-account-management',
        template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! raw-loader!./government-account-management.component.html */ "./node_modules/raw-loader/dist/cjs.js!./src/app/government-account-management/government-account-management.component.html")).default,
        styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! ./government-account-management.component.css */ "./src/app/government-account-management/government-account-management.component.css")).default]
    }),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_angular_router__WEBPACK_IMPORTED_MODULE_2__["Router"],
        _services_common_service_service__WEBPACK_IMPORTED_MODULE_4__["CommonService"],
        _angular_material__WEBPACK_IMPORTED_MODULE_3__["MatDialog"]])
], GovernmentAccountManagementComponent);



/***/ }),

/***/ "./src/app/government-amendment-list/government-amendment-list.component.css":
/*!***********************************************************************************!*\
  !*** ./src/app/government-amendment-list/government-amendment-list.component.css ***!
  \***********************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2dvdmVybm1lbnQtYW1lbmRtZW50LWxpc3QvZ292ZXJubWVudC1hbWVuZG1lbnQtbGlzdC5jb21wb25lbnQuY3NzIn0= */");

/***/ }),

/***/ "./src/app/government-amendment-list/government-amendment-list.component.ts":
/*!**********************************************************************************!*\
  !*** ./src/app/government-amendment-list/government-amendment-list.component.ts ***!
  \**********************************************************************************/
/*! exports provided: GovernmentAmendmentListComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GovernmentAmendmentListComponent", function() { return GovernmentAmendmentListComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm2015/forms.js");
/* harmony import */ var _services_common_service_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../services/common-service.service */ "./src/app/services/common-service.service.ts");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm2015/router.js");
/* harmony import */ var _models_lgIssuance_model__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../models/lgIssuance.model */ "./src/app/models/lgIssuance.model.ts");
/* harmony import */ var _ngx_translate_core__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @ngx-translate/core */ "./node_modules/@ngx-translate/core/fesm2015/ngx-translate-core.js");







let GovernmentAmendmentListComponent = class GovernmentAmendmentListComponent {
    constructor(commonService, router, fb, translate) {
        this.commonService = commonService;
        this.router = router;
        this.fb = fb;
        this.translate = translate;
        this.isOpenMyIssuedLGList = false;
        this.isOpenLgIssuedMeList = true;
        this.isMyIssuedLGClicked = false;
        this.isLgIssuedMeClicked = true;
        this.dtOptions = {};
        this.dtOptionsAR = {};
        this.userObject = {};
    }
    ngOnInit() {
        this.userId = localStorage.getItem('userId');
        console.log("this.userId::::" + this.userId);
        this.userName = localStorage.getItem('userName');
        console.log("this.userName::::" + this.userName);
        this.roleId = localStorage.getItem('roleId');
        console.log("this.role_ID::::" + this.roleId);
        this.crNoOrUidNo = localStorage.getItem('crNoOrUidNo');
        console.log("crNoOrUidNo::::" + this.crNoOrUidNo);
        console.log("currentWorkflowID >>" + localStorage.getItem('currentWorkflowID'));
        this.currentWorkflowID = localStorage.getItem('currentWorkflowID');
        /*************************************************** */
        this.commonService.checkSessionExpired(this.userId)
            .then((data) => {
            if (data == 0) {
                this.commonService.showGeneralMessage(this.translate.instant('HOME.Session_Expired'), this.translate.instant('HOME.logged_out'), false);
                this.commonService.logout(this.userId);
                return;
            }
            else {
            }
        });
        /************************************************** */
        this.dtOptionsAR = {
            pageLength: 10,
            processing: true,
            language: {
                processing: "جارٍ التحميل...",
                search: "ابحث:",
                lengthMenu: "أظهر _MENU_ مدخلات",
                info: "إظهار _START_ إلى _END_ من أصل _TOTAL_ مدخل",
                infoEmpty: "يعرض 0 إلى 0 من أصل 0 سجل",
                infoFiltered: "(منتقاة من مجموع _MAX_ مُدخل)",
                infoPostFix: "",
                loadingRecords: "جارٍ التحميل...",
                zeroRecords: "لم يعثر على أية سجلات",
                emptyTable: "ليست هناك بيانات متاحة في الجدول",
                paginate: {
                    first: "الأول",
                    previous: "السابق",
                    next: "التالي",
                    last: "الأخير"
                },
                aria: {
                    sortAscending: ": تفعيل لترتيب العمود تصاعدياً",
                    sortDescending: ": تفعيل لترتيب العمود تنازلياً"
                }
            }
        };
        this.dtOptions = {
            pageLength: 10,
            processing: true,
        };
        this.commonService.amendmentReleaseAndconfiscateCreationLgListIssueForMe(this.crNoOrUidNo, this.currentWorkflowID)
            .subscribe(res => {
            console.log("AllLGRequestBeneficiarySpecific list::::" + JSON.stringify(res));
            this.activeLgForMeLists = res;
            console.log("pending list is::::" + JSON.stringify(this.myActiveLgLists));
        });
    }
    RowSelected(pendingData) {
        this.commonService.isPrivateLgPending1Completed = true;
        console.log("private entity pending list::::" + JSON.stringify(pendingData));
        console.log("testy122" + pendingData.beneficiary_name);
        this.commonService.lgIssuanceApproval = new _models_lgIssuance_model__WEBPACK_IMPORTED_MODULE_5__["LGIssuanceModel"]();
        this.commonService.lgIssuanceApproval.lg_no = pendingData.lg_no;
        if (pendingData.lg_type !== null || pendingData.lg_type !== undefined) {
            this.commonService.lgIssuanceApproval.LGType = pendingData.lg_type;
        }
        if (pendingData.beneficiary_name !== null || pendingData.beneficiary_name !== undefined) {
            console.log("test beneficiary_name" + pendingData.beneficiary_name);
            this.commonService.lgIssuanceApproval.beneficiary_name = pendingData.beneficiary_name;
        }
        if (pendingData.bank_name !== null || pendingData.bank_name !== undefined) {
            console.log("bank_name" + pendingData.bank_name);
            this.commonService.lgIssuanceApproval.bankName = pendingData.bank_name;
        }
        if (pendingData.project_name !== null || pendingData.project_name !== undefined) {
            console.log("bank_name" + pendingData.project_name);
            this.commonService.lgIssuanceApproval.project_name = pendingData.project_name;
        }
        if (pendingData.request_date !== null || pendingData.request_date !== undefined) {
            console.log("bank_name" + pendingData.request_date);
            this.commonService.lgIssuanceApproval.request_date = pendingData.request_date;
        }
        if (pendingData.request_status_flag !== null || pendingData.request_status_flag !== undefined) {
            console.log("bank_name" + pendingData.request_status_flag);
            this.commonService.lgIssuanceApproval.status = pendingData.request_status_flag;
        }
        if (pendingData.start_date !== null || pendingData.start_date !== undefined) {
            this.commonService.lgIssuanceApproval.LGStartDate = pendingData.start_date;
        }
        if (pendingData.end_date !== null || pendingData.end_date !== undefined) {
            this.commonService.lgIssuanceApproval.LGEndDate = pendingData.end_date;
        }
        if (pendingData.contract_value !== null || pendingData.contract_value !== undefined) {
            this.commonService.lgIssuanceApproval.Amount = pendingData.lG_amount;
            //var converter = require('number-to-words');
            this.commonService.lgIssuanceApproval.amountInNumber = this.commonService.lgIssuanceApproval.Amount;
        }
        if (pendingData.currency !== null || pendingData.currency !== undefined) {
            this.commonService.lgIssuanceApproval.currency = pendingData.currency;
        }
        if (pendingData.termsNConditions !== null || pendingData.termsNConditions !== undefined) {
            this.commonService.lgIssuanceApproval.termsNconditionsMessage = pendingData.termsNConditions;
        }
        if (pendingData.status !== null || pendingData.status !== undefined) {
            this.commonService.lgIssuanceApproval.status = pendingData.status;
        }
        if (pendingData.response_code !== null || pendingData.response_code !== undefined) {
            this.commonService.lgIssuanceApproval.response_code = pendingData.response_code;
            console.log("............................pendingData.response_code" + pendingData.response_code);
        }
        if (pendingData.terms_condition_message !== null || pendingData.terms_condition_message !== undefined) {
            this.commonService.lgIssuanceApproval.terms_condition_message = pendingData.terms_condition_message;
            console.log("........................pendingData.terms_condition_message" + pendingData.terms_condition_message);
        }
        if (pendingData.request_id !== null || pendingData.request_id !== undefined) {
            this.commonService.lgIssuanceApproval.requestId = pendingData.request_id;
            console.log("........................pendingData.request_id" + pendingData.request_id);
        }
        if (pendingData.create_by !== null || pendingData.create_by !== undefined) {
            this.commonService.lgIssuanceApproval.create_by = pendingData.create_by;
        }
        /* if(pendingData.request_status_flag !== null || pendingData.request_status_flag !== undefined){
         this.commonService.lgIssuanceApproval.status = pendingData.request_status_flag;
        } */
        if (pendingData.write_up !== null || pendingData.write_up !== undefined) {
            this.commonService.lgIssuanceApproval.writeUpType = pendingData.write_up;
        }
        if (pendingData.project_name !== null || pendingData.project_name !== undefined) {
            this.commonService.lgIssuanceApproval.projectName = pendingData.project_name;
        }
        if (pendingData.project_no !== null || pendingData.project_no !== undefined) {
            this.commonService.lgIssuanceApproval.projectNumber = pendingData.project_no;
        }
        if (pendingData.purpose_of_bond !== null || pendingData.purpose_of_bond !== undefined) {
            this.commonService.lgIssuanceApproval.puroseOfBond = pendingData.purpose_of_bond;
        }
        if (pendingData.byan_no !== null || pendingData.byan_no !== undefined) {
            this.commonService.lgIssuanceApproval.bayanNuymber = pendingData.byan_no;
        }
        if (pendingData.zakat_start_date !== null || pendingData.zakat_start_date !== undefined) {
            this.commonService.lgIssuanceApproval.ZakatPeriodStartDate = pendingData.zakat_start_date;
        }
        if (pendingData.zakat_end_date !== null || pendingData.zakat_end_date !== undefined) {
            this.commonService.lgIssuanceApproval.ZakatPeriodEndDate = pendingData.zakat_end_date;
        }
        if (pendingData.lg_validity_date !== null || pendingData.lg_validity_date !== undefined) {
            this.commonService.lgIssuanceApproval.lg_validity_date = pendingData.validDt;
        }
        if (pendingData.account_of_contract_processed !== null || pendingData.account_of_contract_processed !== undefined) {
            this.commonService.lgIssuanceApproval.ac_of_contract = pendingData.account_of_contract_processed;
        }
        if (pendingData.agree_tag !== null || pendingData.agree_tag !== undefined) {
            this.commonService.lgIssuanceApproval.agree_tag = pendingData.agree_tag;
        }
        if (pendingData.beneficiary_id !== null || pendingData.beneficiary_id !== undefined) {
            this.commonService.lgIssuanceApproval.beneficiaryId = pendingData.beneficiary_id;
        }
        if (pendingData.supplier_id !== null || pendingData.supplier_id !== undefined) {
            this.commonService.lgIssuanceApproval.supplierId = pendingData.supplier_id;
            console.log("........................pendingData.terms_condition_message" + pendingData.supplier_id);
        }
        if (pendingData.lg_issue_date !== null || pendingData.lg_issue_date !== undefined) {
            this.commonService.lgIssuanceApproval.LGIssueDate = pendingData.lg_issue_date;
        }
        if (pendingData.beneficiary_UID !== null || pendingData.beneficiary_UID !== undefined) {
            this.commonService.lgIssuanceApproval.beneficiary_UID = pendingData.beneficiary_UID;
        }
        if (pendingData.role_id !== null || pendingData.role_id !== undefined) {
            this.commonService.lgIssuanceApproval.beneficiary_role_id = pendingData.role_id;
        }
        if (pendingData.supplier_entity_id !== null || pendingData.supplier_entity_id !== undefined) {
            this.commonService.lgIssuanceApproval.supplier_entity_id = pendingData.supplier_entity_id;
        }
        if (pendingData.beneficiary_entity_id !== null || pendingData.beneficiary_entity_id !== undefined) {
            this.commonService.lgIssuanceApproval.beneficiary_entity_id = pendingData.beneficiary_entity_id;
        }
        console.log("Before");
        console.log(pendingData);
        console.log("After");
        console.log(this.commonService.lgIssuanceApproval);
        this.router.navigate(['govLgDetails']);
        //this.lgIssuance.
    }
};
GovernmentAmendmentListComponent.ctorParameters = () => [
    { type: _services_common_service_service__WEBPACK_IMPORTED_MODULE_3__["CommonService"] },
    { type: _angular_router__WEBPACK_IMPORTED_MODULE_4__["Router"] },
    { type: _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormBuilder"] },
    { type: _ngx_translate_core__WEBPACK_IMPORTED_MODULE_6__["TranslateService"] }
];
GovernmentAmendmentListComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-government-amendment-list',
        template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! raw-loader!./government-amendment-list.component.html */ "./node_modules/raw-loader/dist/cjs.js!./src/app/government-amendment-list/government-amendment-list.component.html")).default,
        styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! ./government-amendment-list.component.css */ "./src/app/government-amendment-list/government-amendment-list.component.css")).default]
    }),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_services_common_service_service__WEBPACK_IMPORTED_MODULE_3__["CommonService"], _angular_router__WEBPACK_IMPORTED_MODULE_4__["Router"], _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormBuilder"], _ngx_translate_core__WEBPACK_IMPORTED_MODULE_6__["TranslateService"]])
], GovernmentAmendmentListComponent);



/***/ }),

/***/ "./src/app/government-confiscate-list/government-confiscate-list.component.css":
/*!*************************************************************************************!*\
  !*** ./src/app/government-confiscate-list/government-confiscate-list.component.css ***!
  \*************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2dvdmVybm1lbnQtY29uZmlzY2F0ZS1saXN0L2dvdmVybm1lbnQtY29uZmlzY2F0ZS1saXN0LmNvbXBvbmVudC5jc3MifQ== */");

/***/ }),

/***/ "./src/app/government-confiscate-list/government-confiscate-list.component.ts":
/*!************************************************************************************!*\
  !*** ./src/app/government-confiscate-list/government-confiscate-list.component.ts ***!
  \************************************************************************************/
/*! exports provided: GovernmentConfiscateListComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GovernmentConfiscateListComponent", function() { return GovernmentConfiscateListComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm2015/forms.js");
/* harmony import */ var _services_common_service_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../services/common-service.service */ "./src/app/services/common-service.service.ts");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm2015/router.js");
/* harmony import */ var _models_lgIssuance_model__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../models/lgIssuance.model */ "./src/app/models/lgIssuance.model.ts");
/* harmony import */ var _ngx_translate_core__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @ngx-translate/core */ "./node_modules/@ngx-translate/core/fesm2015/ngx-translate-core.js");







let GovernmentConfiscateListComponent = class GovernmentConfiscateListComponent {
    constructor(commonService, router, fb, translate) {
        this.commonService = commonService;
        this.router = router;
        this.fb = fb;
        this.translate = translate;
        this.isOpenMyIssuedLGList = false;
        this.isOpenLgIssuedMeList = true;
        this.isMyIssuedLGClicked = false;
        this.isLgIssuedMeClicked = true;
        this.dtOptions = {};
        this.dtOptionsAR = {};
        this.userObject = {};
    }
    ngOnInit() {
        this.userId = localStorage.getItem('userId');
        console.log("this.userId::::" + this.userId);
        this.userName = localStorage.getItem('userName');
        console.log("this.userName::::" + this.userName);
        this.roleId = localStorage.getItem('roleId');
        console.log("this.role_ID::::" + this.roleId);
        this.crNoOrUidNo = localStorage.getItem('crNoOrUidNo');
        console.log("crNoOrUidNo::::" + this.crNoOrUidNo);
        console.log("currentWorkflowID >>" + localStorage.getItem('currentWorkflowID'));
        this.currentWorkflowID = localStorage.getItem('currentWorkflowID');
        /*************************************************** */
        this.commonService.checkSessionExpired(this.userId)
            .then((data) => {
            if (data == 0) {
                this.commonService.showGeneralMessage(this.translate.instant('HOME.Session_Expired'), this.translate.instant('HOME.logged_out'), false);
                this.commonService.logout(this.userId);
                return;
            }
            else {
            }
        });
        /************************************************** */
        this.dtOptionsAR = {
            pageLength: 10,
            processing: true,
            language: {
                processing: "جارٍ التحميل...",
                search: "ابحث:",
                lengthMenu: "أظهر _MENU_ مدخلات",
                info: "إظهار _START_ إلى _END_ من أصل _TOTAL_ مدخل",
                infoEmpty: "يعرض 0 إلى 0 من أصل 0 سجل",
                infoFiltered: "(منتقاة من مجموع _MAX_ مُدخل)",
                infoPostFix: "",
                loadingRecords: "جارٍ التحميل...",
                zeroRecords: "لم يعثر على أية سجلات",
                emptyTable: "ليست هناك بيانات متاحة في الجدول",
                paginate: {
                    first: "الأول",
                    previous: "السابق",
                    next: "التالي",
                    last: "الأخير"
                },
                aria: {
                    sortAscending: ": تفعيل لترتيب العمود تصاعدياً",
                    sortDescending: ": تفعيل لترتيب العمود تنازلياً"
                }
            }
        };
        this.dtOptions = {
            pageLength: 10,
            processing: true,
        };
        this.commonService.amendmentReleaseAndconfiscateCreationLgListIssueForMe(this.crNoOrUidNo, this.currentWorkflowID)
            .subscribe(res => {
            console.log("AllLGRequestBeneficiarySpecific list::::" + JSON.stringify(res));
            this.activeLgForMeLists = res;
            console.log("pending list is::::" + JSON.stringify(this.myActiveLgLists));
        });
    }
    RowSelected(pendingData) {
        this.commonService.isPrivateLgPending1Completed = true;
        console.log("private entity pending list::::" + JSON.stringify(pendingData));
        console.log("testy122" + pendingData.beneficiary_name);
        this.commonService.lgIssuanceApproval = new _models_lgIssuance_model__WEBPACK_IMPORTED_MODULE_5__["LGIssuanceModel"]();
        this.commonService.lgIssuanceApproval.lg_no = pendingData.lg_no;
        if (pendingData.lg_type !== null || pendingData.lg_type !== undefined) {
            this.commonService.lgIssuanceApproval.LGType = pendingData.lg_type;
        }
        if (pendingData.beneficiary_name !== null || pendingData.beneficiary_name !== undefined) {
            console.log("test beneficiary_name" + pendingData.beneficiary_name);
            this.commonService.lgIssuanceApproval.beneficiary_name = pendingData.beneficiary_name;
        }
        if (pendingData.bank_name !== null || pendingData.bank_name !== undefined) {
            console.log("bank_name" + pendingData.bank_name);
            this.commonService.lgIssuanceApproval.bankName = pendingData.bank_name;
        }
        if (pendingData.project_name !== null || pendingData.project_name !== undefined) {
            console.log("bank_name" + pendingData.project_name);
            this.commonService.lgIssuanceApproval.project_name = pendingData.project_name;
        }
        if (pendingData.request_date !== null || pendingData.request_date !== undefined) {
            console.log("bank_name" + pendingData.request_date);
            this.commonService.lgIssuanceApproval.request_date = pendingData.request_date;
        }
        if (pendingData.request_status_flag !== null || pendingData.request_status_flag !== undefined) {
            console.log("bank_name" + pendingData.request_status_flag);
            this.commonService.lgIssuanceApproval.status = pendingData.request_status_flag;
        }
        if (pendingData.start_date !== null || pendingData.start_date !== undefined) {
            this.commonService.lgIssuanceApproval.LGStartDate = pendingData.start_date;
        }
        if (pendingData.end_date !== null || pendingData.end_date !== undefined) {
            this.commonService.lgIssuanceApproval.LGEndDate = pendingData.end_date;
        }
        if (pendingData.contract_value !== null || pendingData.contract_value !== undefined) {
            this.commonService.lgIssuanceApproval.Amount = pendingData.lG_amount;
            //var converter = require('number-to-words');
            this.commonService.lgIssuanceApproval.amountInNumber = this.commonService.lgIssuanceApproval.Amount;
        }
        if (pendingData.currency !== null || pendingData.currency !== undefined) {
            this.commonService.lgIssuanceApproval.currency = pendingData.currency;
        }
        if (pendingData.termsNConditions !== null || pendingData.termsNConditions !== undefined) {
            this.commonService.lgIssuanceApproval.termsNconditionsMessage = pendingData.termsNConditions;
        }
        if (pendingData.status !== null || pendingData.status !== undefined) {
            this.commonService.lgIssuanceApproval.status = pendingData.status;
        }
        if (pendingData.response_code !== null || pendingData.response_code !== undefined) {
            this.commonService.lgIssuanceApproval.response_code = pendingData.response_code;
            console.log("............................pendingData.response_code" + pendingData.response_code);
        }
        if (pendingData.terms_condition_message !== null || pendingData.terms_condition_message !== undefined) {
            this.commonService.lgIssuanceApproval.terms_condition_message = pendingData.terms_condition_message;
            console.log("........................pendingData.terms_condition_message" + pendingData.terms_condition_message);
        }
        if (pendingData.request_id !== null || pendingData.request_id !== undefined) {
            this.commonService.lgIssuanceApproval.requestId = pendingData.request_id;
            console.log("........................pendingData.request_id" + pendingData.request_id);
        }
        if (pendingData.create_by !== null || pendingData.create_by !== undefined) {
            this.commonService.lgIssuanceApproval.create_by = pendingData.create_by;
        }
        /* if(pendingData.request_status_flag !== null || pendingData.request_status_flag !== undefined){
          this.commonService.lgIssuanceApproval.status = pendingData.request_status_flag;
        } */
        if (pendingData.write_up !== null || pendingData.write_up !== undefined) {
            this.commonService.lgIssuanceApproval.writeUpType = pendingData.write_up;
        }
        if (pendingData.project_name !== null || pendingData.project_name !== undefined) {
            this.commonService.lgIssuanceApproval.projectName = pendingData.project_name;
        }
        if (pendingData.project_no !== null || pendingData.project_no !== undefined) {
            this.commonService.lgIssuanceApproval.projectNumber = pendingData.project_no;
        }
        if (pendingData.purpose_of_bond !== null || pendingData.purpose_of_bond !== undefined) {
            this.commonService.lgIssuanceApproval.puroseOfBond = pendingData.purpose_of_bond;
        }
        if (pendingData.byan_no !== null || pendingData.byan_no !== undefined) {
            this.commonService.lgIssuanceApproval.bayanNuymber = pendingData.byan_no;
        }
        if (pendingData.zakat_start_date !== null || pendingData.zakat_start_date !== undefined) {
            this.commonService.lgIssuanceApproval.ZakatPeriodStartDate = pendingData.zakat_start_date;
        }
        if (pendingData.zakat_end_date !== null || pendingData.zakat_end_date !== undefined) {
            this.commonService.lgIssuanceApproval.ZakatPeriodEndDate = pendingData.zakat_end_date;
        }
        if (pendingData.lg_validity_date !== null || pendingData.lg_validity_date !== undefined) {
            this.commonService.lgIssuanceApproval.lg_validity_date = pendingData.validDt;
        }
        if (pendingData.account_of_contract_processed !== null || pendingData.account_of_contract_processed !== undefined) {
            this.commonService.lgIssuanceApproval.ac_of_contract = pendingData.account_of_contract_processed;
        }
        if (pendingData.agree_tag !== null || pendingData.agree_tag !== undefined) {
            this.commonService.lgIssuanceApproval.agree_tag = pendingData.agree_tag;
        }
        if (pendingData.beneficiary_id !== null || pendingData.beneficiary_id !== undefined) {
            this.commonService.lgIssuanceApproval.beneficiaryId = pendingData.beneficiary_id;
        }
        if (pendingData.supplier_id !== null || pendingData.supplier_id !== undefined) {
            this.commonService.lgIssuanceApproval.supplierId = pendingData.supplier_id;
            console.log("........................pendingData.terms_condition_message" + pendingData.supplier_id);
        }
        if (pendingData.lg_issue_date !== null || pendingData.lg_issue_date !== undefined) {
            this.commonService.lgIssuanceApproval.LGIssueDate = pendingData.lg_issue_date;
        }
        if (pendingData.beneficiary_UID !== null || pendingData.beneficiary_UID !== undefined) {
            this.commonService.lgIssuanceApproval.beneficiary_UID = pendingData.beneficiary_UID;
        }
        if (pendingData.role_id !== null || pendingData.role_id !== undefined) {
            this.commonService.lgIssuanceApproval.beneficiary_role_id = pendingData.role_id;
        }
        if (pendingData.supplier_entity_id !== null || pendingData.supplier_entity_id !== undefined) {
            this.commonService.lgIssuanceApproval.supplier_entity_id = pendingData.supplier_entity_id;
        }
        if (pendingData.beneficiary_entity_id !== null || pendingData.beneficiary_entity_id !== undefined) {
            this.commonService.lgIssuanceApproval.beneficiary_entity_id = pendingData.beneficiary_entity_id;
        }
        console.log("Before");
        console.log(pendingData);
        console.log("After");
        console.log(this.commonService.lgIssuanceApproval);
        this.router.navigate(['govLgDetails']);
        //this.lgIssuance.
    }
};
GovernmentConfiscateListComponent.ctorParameters = () => [
    { type: _services_common_service_service__WEBPACK_IMPORTED_MODULE_3__["CommonService"] },
    { type: _angular_router__WEBPACK_IMPORTED_MODULE_4__["Router"] },
    { type: _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormBuilder"] },
    { type: _ngx_translate_core__WEBPACK_IMPORTED_MODULE_6__["TranslateService"] }
];
GovernmentConfiscateListComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-government-confiscate-list',
        template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! raw-loader!./government-confiscate-list.component.html */ "./node_modules/raw-loader/dist/cjs.js!./src/app/government-confiscate-list/government-confiscate-list.component.html")).default,
        styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! ./government-confiscate-list.component.css */ "./src/app/government-confiscate-list/government-confiscate-list.component.css")).default]
    }),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_services_common_service_service__WEBPACK_IMPORTED_MODULE_3__["CommonService"], _angular_router__WEBPACK_IMPORTED_MODULE_4__["Router"], _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormBuilder"], _ngx_translate_core__WEBPACK_IMPORTED_MODULE_6__["TranslateService"]])
], GovernmentConfiscateListComponent);



/***/ }),

/***/ "./src/app/government-entity-reg-view/government-entity-reg-view.component.css":
/*!*************************************************************************************!*\
  !*** ./src/app/government-entity-reg-view/government-entity-reg-view.component.css ***!
  \*************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2dvdmVybm1lbnQtZW50aXR5LXJlZy12aWV3L2dvdmVybm1lbnQtZW50aXR5LXJlZy12aWV3LmNvbXBvbmVudC5jc3MifQ== */");

/***/ }),

/***/ "./src/app/government-entity-reg-view/government-entity-reg-view.component.ts":
/*!************************************************************************************!*\
  !*** ./src/app/government-entity-reg-view/government-entity-reg-view.component.ts ***!
  \************************************************************************************/
/*! exports provided: GovernmentEntityRegViewComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GovernmentEntityRegViewComponent", function() { return GovernmentEntityRegViewComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm2015/router.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm2015/forms.js");
/* harmony import */ var _services_common_service_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../services/common-service.service */ "./src/app/services/common-service.service.ts");
/* harmony import */ var _ngx_translate_core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @ngx-translate/core */ "./node_modules/@ngx-translate/core/fesm2015/ngx-translate-core.js");






let GovernmentEntityRegViewComponent = class GovernmentEntityRegViewComponent {
    constructor(translate, router, formBuilder, commonService) {
        this.translate = translate;
        this.router = router;
        this.formBuilder = formBuilder;
        this.commonService = commonService;
    }
    ngOnInit() {
        /*************************************************** */
        this.localUserId = localStorage.getItem('userId');
        this.roleId = localStorage.getItem('roleId');
        console.log("this.role_ID::::" + this.roleId);
        this.commonService.checkSessionExpired(this.localUserId)
            .then((data) => {
            if (data == 0) {
                this.commonService.showGeneralMessage(this.translate.instant('HOME.Session_Expired'), this.translate.instant('HOME.logged_out'), false);
                this.commonService.logout(this.localUserId);
                return;
            }
            else {
            }
        });
        /************************************************** */
        this.pending_beneficiary_UID = localStorage.getItem('pending_beneficiary_UID');
        this.pending_national_id = localStorage.getItem('pending_national_id');
        //alert("Hiii::"+this.pending_beneficiary_UID+"==>>"+this.pending_national_id)
        this.viewGovtEntityReg = this.formBuilder.group({
            theCheckbox: [],
            entity: [],
            userId: [],
            UID: [],
            checkedGovEntity: [],
            entityname: [],
            entityUID: [],
            beneficiary_name: [],
            entityNationalID: [],
            entityMobNo: [],
            entityEmail: [],
            entityTnC: [],
            address1: [],
            address2: [],
            city: [],
            country: [],
            lalFile: [],
            rniFile: [],
            laglFile: [],
            leg_auth_doc_name: [],
            leg_agree_doc_name: [],
            national_id_doc_name: [],
            rep_name: []
        });
        this.commonService.getGovtEntryRegistrationData(this.pending_beneficiary_UID, this.pending_national_id)
            .subscribe(res => {
            this.viewGovtEntityReg.controls["entityNationalID"].setValue(this.pending_national_id);
            this.UID = res.beneficiary_UID;
            this.userId = res.national_id;
            this.checkedGovEntity = res.checkedGovEntity;
            this.entityname = res.beneficiary_name;
            this.entityUID = res.beneficiary_UID;
            this.beneficiary_name = res.beneficiary_name;
            this.entityNationalID = res.national_id;
            this.entityMobNo = res.rep_mobile_no;
            this.entityEmail = res.rep_email;
            this.entityTnC = true;
            this.address1 = res.beneficiary_addr1;
            this.address2 = res.beneficiary_addr2;
            this.city = res.city;
            this.country = res.country;
            this.lalFile = res.leg_agree_doc_path;
            this.rniFile = res.national_id_doc_path;
            this.laglFile = res.leg_auth_doc_path;
            this.leg_auth_doc_name = res.leg_auth_doc_name;
            this.leg_agree_doc_name = res.leg_agree_doc_name;
            this.national_id_doc_name = res.national_id_doc_name;
            this.rep_name = res.rep_name;
        });
    }
    rejectForm() {
        console.log("Approve data:::" + JSON.stringify(this.viewGovtEntityReg.value.entityNationalID));
        this.commonService.ApproveGovtEntityReg(this.viewGovtEntityReg.value.entityNationalID, false)
            .subscribe(res => {
            console.log("Response for userId is::::" + JSON.stringify(res));
            if (res.responseCode === 1) {
                this.commonService.showGeneralMessage("", res.responseMessage, false);
                this.router.navigateByUrl('/pendingtasks');
            }
            else if (res.responseCode === 0) {
                this.commonService.showGeneralMessage("", res.responseMessage, false);
                this.router.navigateByUrl('/pendingtasks');
            }
        });
    }
    ApproveGovReg() {
        alert("Approve data:::" + JSON.stringify(this.viewGovtEntityReg.value.entityNationalID));
        this.commonService.ApproveGovtEntityReg(this.viewGovtEntityReg.value.entityNationalID, true)
            .subscribe(res => {
            console.log("Response for userId is::::" + JSON.stringify(res));
            if (res.responseCode === 1) {
                //          alert(res.responseMessage);
                this.commonService.showGeneralMessage("", res.responseMessage, false);
                this.router.navigateByUrl('/pendingtasks');
            }
            else if (res.responseCode === 0) {
                //          alert(res.responseMessage);
                this.commonService.showGeneralMessage("", res.responseMessage, false);
                this.router.navigateByUrl('/pendingtasks');
            }
        });
    }
};
GovernmentEntityRegViewComponent.ctorParameters = () => [
    { type: _ngx_translate_core__WEBPACK_IMPORTED_MODULE_5__["TranslateService"] },
    { type: _angular_router__WEBPACK_IMPORTED_MODULE_2__["Router"] },
    { type: _angular_forms__WEBPACK_IMPORTED_MODULE_3__["FormBuilder"] },
    { type: _services_common_service_service__WEBPACK_IMPORTED_MODULE_4__["CommonService"] }
];
GovernmentEntityRegViewComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-government-entity-reg-view',
        template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! raw-loader!./government-entity-reg-view.component.html */ "./node_modules/raw-loader/dist/cjs.js!./src/app/government-entity-reg-view/government-entity-reg-view.component.html")).default,
        styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! ./government-entity-reg-view.component.css */ "./src/app/government-entity-reg-view/government-entity-reg-view.component.css")).default]
    }),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_ngx_translate_core__WEBPACK_IMPORTED_MODULE_5__["TranslateService"], _angular_router__WEBPACK_IMPORTED_MODULE_2__["Router"], _angular_forms__WEBPACK_IMPORTED_MODULE_3__["FormBuilder"], _services_common_service_service__WEBPACK_IMPORTED_MODULE_4__["CommonService"]])
], GovernmentEntityRegViewComponent);



/***/ }),

/***/ "./src/app/government-entity-reg1/government-entity-reg1.component.css":
/*!*****************************************************************************!*\
  !*** ./src/app/government-entity-reg1/government-entity-reg1.component.css ***!
  \*****************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2dvdmVybm1lbnQtZW50aXR5LXJlZzEvZ292ZXJubWVudC1lbnRpdHktcmVnMS5jb21wb25lbnQuY3NzIn0= */");

/***/ }),

/***/ "./src/app/government-entity-reg1/government-entity-reg1.component.ts":
/*!****************************************************************************!*\
  !*** ./src/app/government-entity-reg1/government-entity-reg1.component.ts ***!
  \****************************************************************************/
/*! exports provided: GovernmentEntityReg1Component */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GovernmentEntityReg1Component", function() { return GovernmentEntityReg1Component; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm2015/router.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm2015/forms.js");
/* harmony import */ var _services_common_service_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../services/common-service.service */ "./src/app/services/common-service.service.ts");
/* harmony import */ var primeng_api__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! primeng/api */ "./node_modules/primeng/fesm2015/primeng-api.js");






let GovernmentEntityReg1Component = class GovernmentEntityReg1Component {
    constructor(router, formBuilder, commonService, messageService) {
        this.router = router;
        this.formBuilder = formBuilder;
        this.commonService = commonService;
        this.messageService = messageService;
        this.checkedGovEntity = false;
        this.theCheckbox = false;
        this.checkboxTermsnCond = false;
        this.isDisableContinue = true;
        this.entityList = [];
        this.msgs = [];
        this.alphanumericPattern = "^[a-zA-Z0-9 ]+$";
        this.noPattern = '^(0|[1-9][0-9]*)$';
        this.emailPattern = "^[a-z0-9._%+-]+@[a-z0-9.-]+.[a-z]{2,4}$";
        this.textPattern = "^[A-Za-z ]*$";
        this.validation_messages = {
            entity: [
                { type: "required", message: "This is a required field." }
            ],
            entityNationalID: [
                { type: "required", message: "This is a required field." },
                {
                    type: "pattern",
                    message: "Representative national ID should be composed of digits."
                },
                {
                    type: "maxlength",
                    message: "Representative national ID should be 10."
                },
                {
                    type: "minlength",
                    message: "Representative national ID should be 10."
                }
            ],
            representativeDateOfBirth: [
                { type: "required", message: "This is a required field." }
            ],
            entityUID: [
                { type: "required", message: "This is a required field." },
                {
                    type: "pattern",
                    message: "Entity UID should be composed of digits."
                },
                {
                    type: "minlength",
                    message: "Entity UId must be 10 digits only."
                }
            ],
            entityname: [
                { type: "required", message: "This is a required field." },
                {
                    type: "pattern",
                    message: "Entity name should be composed of alphanumeric characters."
                },
                {
                    type: "maxlength",
                    message: "Maximum length should be 20."
                }
            ]
        };
    }
    getDOB(representativeDateOfBirth) {
        console.log("dateOfBirth::::" + representativeDateOfBirth);
        console.log(this.dateOfBirth);
    }
    toggleVisibility(e) {
        console.log("this.theCheckbox::::" + e);
        if (e === true) {
            this.isExpandDiv = true;
            this.checkedGovEntity = true;
            this.theCheckbox = true;
            this.submitGovReg1.controls['entity'].setValue('');
            this.submitGovReg1.controls['entityNationalID'].setValue(null);
            this.entityTnC = "y";
        }
        else {
            this.isExpandDiv = false;
            this.checkedGovEntity = false;
            this.theCheckbox = false;
            this.entityTnC = "n";
            this.submitGovReg1.controls['entityUID'].setValue('');
            this.submitGovReg1.controls['entityname'].setValue('');
            this.submitGovReg1.get('entity').enable();
            this.submitGovReg1.get('entityNationalID').enable();
        }
    }
    onCheckedTerms(checkboxTermsnCond) {
        console.log("checkboxTermsnCond:::" + checkboxTermsnCond);
        if (checkboxTermsnCond === true) {
            //this.entityTnC = "y";
            this.isDisableContinue = false;
        }
        else {
            this.isDisableContinue = true;
            //this.entityTnC = "n";
        }
    }
    ngOnInit() {
        // let today = new Date();
        // let month = today.getMonth();
        // let year = today.getFullYear();
        // this.maxDate = new Date();
        // this.maxDate.setMonth(month);
        // this.maxDate.setFullYear(year);
        let today = new Date();
        let yesterday = new Date(today);
        yesterday.setDate(today.getDate() - 1);
        let month = today.getMonth();
        let year = today.getFullYear();
        this.maxDate = yesterday;
        this.maxDate.setMonth(month);
        this.maxDate.setFullYear(year);
        this.buildForm();
        this.setGovEntityValidators();
        console.log("@@@@@" + JSON.stringify(this.commonService.govEntityDEtails));
        console.log("this.commonService.isClickGovernmentEntityReg::::" + this.commonService.isClickGovernmentEntityReg);
        if (this.commonService.isClickGovernmentEntityReg) {
            console.log("I'm in this.commonService.isClickGovernmentEntityReg");
            this.submitGovReg1.controls["entityname"].setValue(null);
            this.submitGovReg1.controls["entityUID"].setValue(null);
            this.submitGovReg1.controls["checkedGovEntity"].setValue(false);
            this.submitGovReg1.controls["entity"].setValue(null);
            this.submitGovReg1.controls["entityNationalID"].setValue(null);
            this.submitGovReg1.controls["representativeDateOfBirth"].setValue(null);
        }
        else {
            console.log("@@@@@" + JSON.stringify(this.commonService.govEntityDEtails));
            if (this.commonService.govEntityDEtails !== undefined || this.commonService.govEntityDEtails !== null) {
                if (this.commonService.govEntityDEtails.checkedGovEntity === true) {
                    if (this.commonService.govEntityDEtails.entityname !== undefined || this.commonService.govEntityDEtails.entityname !== null) {
                        this.submitGovReg1.controls["entityname"].setValue(this.commonService.govEntityDEtails.entityname);
                    }
                    if (this.commonService.govEntityDEtails.entityUID !== undefined || this.commonService.govEntityDEtails.entityUID !== null) {
                        this.submitGovReg1.controls["entityUID"].setValue(this.commonService.govEntityDEtails.entityUID);
                    }
                    this.checkedGovEntity = true;
                    this.submitGovReg1.controls["checkedGovEntity"].setValue(this.checkedGovEntity);
                    this.submitGovReg1.get('entity').disable();
                    this.submitGovReg1.get('entityNationalID').disable();
                    this.isExpandDiv = true;
                }
                else {
                    console.log("I'm in else");
                    if (this.commonService.govEntityDEtails.representativeDateOfBirth != undefined || this.commonService.govEntityDEtails.representativeDateOfBirth != null) {
                        this.dateOfBirth = this.commonService.govEntityDEtails.representativeDateOfBirth;
                        this.submitGovReg1.controls["representativeDateOfBirth"].setValue(this.dateOfBirth);
                    }
                    this.commonService.getEntityList()
                        .subscribe(res => {
                        console.log("Entity list::::" + JSON.stringify(res));
                        this.entityList = res;
                        for (let entity of this.entityList) {
                            if (entity[1] === this.commonService.govEntityDEtails.entityname) {
                                console.log("Entity Id is" + entity[2]);
                                console.log("Entity name is" + entity);
                                this.submitGovReg1.controls["entityNationalID"].setValue(entity[2]);
                                this.entity = entity[1];
                                this.submitGovReg1.controls["entity"].setValue(entity[1]);
                                break;
                            }
                        }
                    });
                    this.submitGovReg1.controls["checkedGovEntity"].setValue(false);
                }
            }
            else {
                this.submitGovReg1.controls["entityname"].setValue(null);
                this.submitGovReg1.controls["entityUID"].setValue(null);
                this.submitGovReg1.controls["checkedGovEntity"].setValue(false);
                this.submitGovReg1.controls["entity"].setValue(null);
                this.submitGovReg1.controls["entityNationalID"].setValue(null);
                this.submitGovReg1.controls["representativeDateOfBirth"].setValue(null);
                // this.submitGovReg1.controls["UID"].setValue(null);
                // this.submitGovReg1.controls["name"].setValue(null);
                // this.submitGovReg1.controls["entityNationalID"].setValue(null);
                // this.submitGovReg1.controls["entityMobNo"].setValue(null);
                // this.submitGovReg1.controls["entityEmail"].setValue(null);
            }
        }
        this.getEntity();
    }
    buildForm() {
        this.submitGovReg1 = this.formBuilder.group({
            entity: [
                ""
            ],
            entityNationalID: [
                ""
            ],
            representativeDateOfBirth: [null],
            disableRepresentativeDateOfBirth: [
                ""
            ],
            checkedGovEntity: [
                ""
            ],
            entityname: [""],
            entityUID: [""]
        });
    }
    setGovEntityValidators() {
        const entityControl = this.submitGovReg1.get('entity');
        const entityNationalIDControl = this.submitGovReg1.get('entityNationalID');
        const representativeDateOfBirthControl = this.submitGovReg1.get('representativeDateOfBirth');
        const entitynameControl = this.submitGovReg1.get('entityname');
        const entityUIDControl = this.submitGovReg1.get('entityUID');
        this.submitGovReg1.get('checkedGovEntity').valueChanges
            .subscribe(govEntityCheckboxValue => {
            console.log("govEntityCheckboxValue:::::" + govEntityCheckboxValue);
            if (govEntityCheckboxValue === true) {
                console.log("i'm in if:::::" + govEntityCheckboxValue);
                entitynameControl.setValidators([_angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].pattern(this.alphanumericPattern), _angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].maxLength(20)]);
                entityUIDControl.setValidators([_angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].pattern(this.noPattern), _angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].minLength(10)]);
                entityControl.setValidators(null);
                entityNationalIDControl.setValidators(null);
                representativeDateOfBirthControl.setValidators(null);
            }
            else {
                entitynameControl.setValidators(null);
                entityUIDControl.setValidators(null);
                entityControl.setValidators([_angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].required]);
                entityNationalIDControl.setValidators([_angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].pattern(this.noPattern), _angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].maxLength(10), _angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].minLength(10)]);
                representativeDateOfBirthControl.setValidators([_angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].required]);
            }
            entitynameControl.updateValueAndValidity();
            entityUIDControl.updateValueAndValidity();
            entityControl.updateValueAndValidity();
            entityNationalIDControl.updateValueAndValidity();
            representativeDateOfBirthControl.updateValueAndValidity();
        });
    }
    getEntity() {
        console.log("i'm in getEntity()");
        this.commonService.getEntityList()
            .subscribe(res => {
            console.log("Entity list::::" + JSON.stringify(res));
            this.entityList = res;
            console.log("Entity list is::::" + JSON.stringify(this.entityList));
        });
    }
    onBlur(entityname) {
        console.log("entityname:::::" + entityname);
        this.checkBenName(entityname);
    }
    checkBenName(entityname) {
        this.commonService.checkBenName(entityname)
            .subscribe(res => {
            console.log("Response for entityname is::::" + JSON.stringify(res));
            if (res.responseCode === 0) {
                // alert(res.responseMessage);
                this.commonService.showGeneralMessage("", res.responseMessage, false);
                this.submitGovReg1.controls["entityname"].setValue(null);
            }
        });
    }
    onClick(e) {
        console.log('entity name' + e);
        for (let entity of this.entityList) {
            if (entity[1] === e) {
                console.log("Entity Id is" + entity[2]);
                //this.entityUID = entity[0];
                this.submitGovReg1.controls['entityNationalID'].setValue(entity[2]);
                break;
            }
        }
    }
    submitGovRegData() {
        this.commonService.isClickGovernmentEntityReg = false;
        console.log("submitGovRegData()::::" + JSON.stringify(this.submitGovReg1.value));
        if (this.submitGovReg1.valid) {
            if (this.checkedGovEntity === true) {
                this.commonService.govEntityDEtails.entityUID = this.submitGovReg1.controls['entityUID'].value;
                this.commonService.govEntityDEtails.entityname = this.submitGovReg1.controls['entityname'].value;
                this.commonService.govEntityDEtails.checkedGovEntity = true;
                this.dateOfBirth = null;
            }
            else {
                this.commonService.govEntityDEtails.entityUID = this.submitGovReg1.controls['entityNationalID'].value;
                this.commonService.govEntityDEtails.entityname = this.submitGovReg1.controls['entity'].value;
                this.commonService.govEntityDEtails.checkedGovEntity = false;
                console.log("this.dateOfBirth::::" + this.dateOfBirth);
                if (typeof (this.dateOfBirth) === 'string') {
                    this.commonService.govEntityDEtails.representativeDateOfBirth = this.dateOfBirth;
                }
                else {
                    this.commonService.govEntityDEtails.representativeDateOfBirth = this.dateOfBirth.toLocaleDateString('en-GB');
                }
            }
            this.commonService.govEntityDEtails.checkedGovEntity = this.checkedGovEntity;
            console.log("this.commonService.govEntityDEtails:::::" + JSON.stringify(this.commonService.govEntityDEtails));
            this.commonService.postMCIGovDetails(this.commonService.govEntityDEtails)
                .subscribe(res => {
                console.log("Response is::::" + JSON.stringify(res));
                this.commonService.userDetails = res;
                if (res.responseCode === 0) {
                    this.commonService.isGovPart1Completed = false;
                    this.submitGovReg1.controls["entityname"].setValue(null);
                    this.submitGovReg1.controls["entityUID"].setValue(null);
                    this.submitGovReg1.controls["representativeDateOfBirth"].setValue(null);
                    this.submitGovReg1.controls["checkedGovEntity"].setValue(false);
                    this.submitGovReg1.controls["entity"].setValue(null);
                    this.submitGovReg1.controls["entityNationalID"].setValue(null);
                    this.isExpandDiv = false;
                    this.checkedGovEntity = false;
                    this.theCheckbox = false;
                    //alert(res.responseMessage);
                    this.commonService.showGeneralMessage("", res.responseMessage, false);
                }
                else {
                    this.commonService.isGovPart1Completed = true;
                    this.router.navigate(['/governmentEntityReg2']);
                }
            });
        }
        else {
            this.msgs = [];
            this.msgs.push({ severity: 'error', summary: 'Error Message', detail: 'Validation failed' });
        }
    }
    // showError() {
    // this.messageService.add({ severity: 'error', summary: 'Error Message', detail: 'Validation failed' });
    // }
    resetForm() {
        if (this.submitGovReg1.valid) {
            console.log("Form Submitted!");
            this.submitGovReg1.reset();
        }
    }
};
GovernmentEntityReg1Component.ctorParameters = () => [
    { type: _angular_router__WEBPACK_IMPORTED_MODULE_2__["Router"] },
    { type: _angular_forms__WEBPACK_IMPORTED_MODULE_3__["FormBuilder"] },
    { type: _services_common_service_service__WEBPACK_IMPORTED_MODULE_4__["CommonService"] },
    { type: primeng_api__WEBPACK_IMPORTED_MODULE_5__["MessageService"] }
];
GovernmentEntityReg1Component = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-government-entity-reg1',
        template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! raw-loader!./government-entity-reg1.component.html */ "./node_modules/raw-loader/dist/cjs.js!./src/app/government-entity-reg1/government-entity-reg1.component.html")).default,
        styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! ./government-entity-reg1.component.css */ "./src/app/government-entity-reg1/government-entity-reg1.component.css")).default]
    }),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_angular_router__WEBPACK_IMPORTED_MODULE_2__["Router"], _angular_forms__WEBPACK_IMPORTED_MODULE_3__["FormBuilder"], _services_common_service_service__WEBPACK_IMPORTED_MODULE_4__["CommonService"],
        primeng_api__WEBPACK_IMPORTED_MODULE_5__["MessageService"]])
], GovernmentEntityReg1Component);



/***/ }),

/***/ "./src/app/government-entity-reg2/government-entity-reg2.component.css":
/*!*****************************************************************************!*\
  !*** ./src/app/government-entity-reg2/government-entity-reg2.component.css ***!
  \*****************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2dvdmVybm1lbnQtZW50aXR5LXJlZzIvZ292ZXJubWVudC1lbnRpdHktcmVnMi5jb21wb25lbnQuY3NzIn0= */");

/***/ }),

/***/ "./src/app/government-entity-reg2/government-entity-reg2.component.ts":
/*!****************************************************************************!*\
  !*** ./src/app/government-entity-reg2/government-entity-reg2.component.ts ***!
  \****************************************************************************/
/*! exports provided: GovernmentEntityReg2Component */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GovernmentEntityReg2Component", function() { return GovernmentEntityReg2Component; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm2015/router.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm2015/forms.js");
/* harmony import */ var _services_common_service_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../services/common-service.service */ "./src/app/services/common-service.service.ts");





let GovernmentEntityReg2Component = class GovernmentEntityReg2Component {
    constructor(router, formBuilder, commonService) {
        this.router = router;
        this.formBuilder = formBuilder;
        this.commonService = commonService;
        this.notSelected = "Not selected";
        this.checkBox = false;
        this.isChecked = 'n';
        //checkedGovEntity: boolean;
        this.isCheckedGovEntity = 'n';
        this.isSelectedrniFile = false;
        this.isSelectedlalFile = false;
        this.isSelectedlaglFile = false;
        this.isOpenValidationAlert = false;
        this.textPattern = "^[A-Za-z ]*$";
        this.addressPattern = "^[A-Za-z]+$";
        this.isSubmited = false;
        this.bankList = [];
        this.allowedExtensions = ['jpg', 'gif', 'pdf', 'png'];
        this.emailPattern = "^[a-z0-9._%+-]+@[a-z0-9.-]+.[a-z]{2,4}$";
        //ibanPattern = "^[A-Z]{2}[0-9]{2}(?:[ ]?[0-9]{4}){4}(?:[ ]?[0-9]{1,2})?$";
        this.ibanPattern = "^[a-zA-Z]{2}[0-9]*$";
        this.validation_messages = {
            email: [
                { type: "required", message: "This is a required field." },
                {
                    type: "pattern",
                    message: "Please enter a valid emailid."
                }
            ],
            password: [
                { type: "required", message: "This is a required field." }
            ],
            confirmPassword: [
                { type: "required", message: "This is a required field." }
            ],
            lalFile: [
                { type: "required", message: "This is a required field." }
            ],
            rniFile: [
                { type: "required", message: "This is a required field." }
            ],
            laglFile: [
                { type: "required", message: "This is a required field." }
            ],
            bi: [
                { type: "required", message: "This is a required field." },
                {
                    type: "pattern",
                    message: "1ST 2 characters should be letter and then digits."
                },
                {
                    type: "maxlength",
                    message: "Maximum length should be 34."
                }
            ],
            bankName: [
                { type: "required", message: "This is a required field." }
            ]
        };
        console.log("in gov page 2:::" + JSON.stringify(this.commonService.userDetails));
    }
    ngOnInit() {
        this.userId = localStorage.getItem('userId');
        console.log("this.userId::::" + this.userId);
        console.log("In government 2::::" + this.commonService.isGovPart1Completed);
        if (this.commonService.isGovPart1Completed === false) {
            this.router.navigate(['/governmentEntityReg']);
        }
        if (this.commonService.isGovPart1Completed === true && this.commonService.isGovPart2Completed === true) {
            this.router.navigate(['/governmentEntityReg2']);
        }
        this.submitGov2 = this.formBuilder.group({
            fname: [
                ""
            ],
            lname: [
                ""
            ],
            nationalId: [
                "",
            ],
            dateofbirth: [
                ""
            ],
            mobile: [
                ""
            ],
            password: [
                "",
                [
                    _angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].required
                ]
            ],
            confirmPassword: [
                "",
                [
                    _angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].required
                ]
            ],
            email: [
                "",
                [
                    _angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].required,
                    _angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].pattern(this.emailPattern),
                ]
            ],
            lalFile: [
                "",
                [
                    _angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].required,
                ]
            ],
            rniFile: [
                "",
                [
                    _angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].required
                ]
            ],
            laglFile: [
                "",
                [
                    _angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].required
                ]
            ],
            checkBox: [
                ""
            ],
            bi: [
                "",
                [
                    _angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].required,
                    _angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].pattern(this.ibanPattern),
                    _angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].maxLength(34)
                ]
            ],
            bankName: [
                "",
                [
                    _angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].required
                ]
            ]
        });
        this.commonService.getBankNameList()
            .subscribe(res => {
            console.log("Bank name list::::" + JSON.stringify(res));
            this.bankList = res;
            //console.log("Bank list is::::"+JSON.stringify(this.bankList));
        });
        console.log("this.commonService.govEntityDEtails in page 2:::::" + JSON.stringify(this.commonService.govEntityDEtails));
        if (this.commonService.govEntityDEtails !== undefined || this.commonService.govEntityDEtails !== null) {
            if (this.commonService.govEntityDEtails.checkedGovEntity) {
                this.isCheckedGovEntity = 'y';
            }
            else {
                this.isCheckedGovEntity = 'n';
            }
            if (this.commonService.govEntityDEtails.isChecked != undefined || this.commonService.govEntityDEtails.isChecked != null) {
                if (this.commonService.govEntityDEtails.isChecked === 'y') {
                    this.checkBox = true;
                    this.submitGov2.controls["checkBox"].setValue(this.checkBox);
                }
                else {
                    this.checkBox = false;
                    this.submitGov2.controls["checkBox"].setValue(this.checkBox);
                }
            }
            if (this.commonService.govEntityDEtails.representativeDateOfBirth !== undefined || this.commonService.govEntityDEtails.representativeDateOfBirth !== null) {
                this.submitGov2.controls["dateofbirth"].setValue(this.commonService.govEntityDEtails.representativeDateOfBirth);
            }
            if (this.commonService.govEntityDEtails.email != undefined || this.commonService.govEntityDEtails.email != null) {
                this.submitGov2.controls["email"].setValue(this.commonService.govEntityDEtails.email);
            }
            if (this.commonService.govEntityDEtails.password != undefined || this.commonService.govEntityDEtails.password != null) {
                this.submitGov2.controls["password"].setValue(this.commonService.govEntityDEtails.password);
            }
            if (this.commonService.govEntityDEtails.password != undefined || this.commonService.govEntityDEtails.password != null) {
                this.submitGov2.controls["confirmPassword"].setValue(this.commonService.govEntityDEtails.password);
            }
            if (this.commonService.govEntityDEtails.lalFileName != undefined || this.commonService.govEntityDEtails.lalFileName != null) {
                this.isSelectedlalFile = false;
                this.notSelected = this.commonService.govEntityDEtails.lalFileName;
            }
            if (this.commonService.govEntityDEtails.rniFileName != undefined || this.commonService.govEntityDEtails.rniFileName != null) {
                this.isSelectedrniFile = false;
                this.notSelected = this.commonService.govEntityDEtails.rniFileName;
            }
            if (this.commonService.govEntityDEtails.laglFileName != undefined || this.commonService.govEntityDEtails.laglFileName != null) {
                this.isSelectedlaglFile = false;
                this.notSelected = this.commonService.govEntityDEtails.laglFileName;
            }
        }
        if (this.commonService.userDetails.userObject !== undefined || this.commonService.userDetails.userObject !== null) {
            if (this.commonService.userDetails.userObject.fname !== undefined || this.commonService.userDetails.userObject.fname !== null) {
                this.submitGov2.controls["fname"].setValue(this.commonService.userDetails.userObject.fname);
            }
            if (this.commonService.userDetails.userObject.lname !== undefined || this.commonService.userDetails.userObject.lname !== null) {
                this.submitGov2.controls["lname"].setValue(this.commonService.userDetails.userObject.lname);
            }
            // if (this.commonService.userDetails.userObject.dob !== undefined || this.commonService.userDetails.userObject.dob !== null) {
            //   this.submitGov2.controls["dateofbirth"].setValue(this.commonService.userDetails.userObject.dob);
            // }
            if (this.commonService.userDetails.userObject.mob_no !== undefined || this.commonService.userDetails.userObject.mob_no !== null) {
                this.submitGov2.controls["mobile"].setValue(this.commonService.userDetails.userObject.mob_no);
            }
            if (this.commonService.userDetails.userObject.nationalId !== undefined || this.commonService.userDetails.userObject.nationalId !== null) {
                this.submitGov2.controls["nationalId"].setValue(this.commonService.userDetails.userObject.nationalId);
            }
        }
        else {
            this.submitGov2.controls["fname"].setValue(null);
            this.submitGov2.controls["lname"].setValue(null);
            this.submitGov2.controls["nationalId"].setValue(null);
            this.submitGov2.controls["dateofbirth"].setValue(null);
            this.submitGov2.controls["mobile"].setValue(null);
            this.submitGov2.controls["email"].setValue(null);
            this.submitGov2.controls["password"].setValue(null);
            this.submitGov2.controls["confirmPassword"].setValue(null);
            this.submitGov2.controls["lalFile"].setValue(null);
            this.submitGov2.controls["rniFile"].setValue(null);
            this.submitGov2.controls["laglFile"].setValue(null);
            this.submitGov2.controls["checkBox"].setValue(null);
        }
    }
    onBlur(confirmPassword) {
        console.log("userId:::::" + confirmPassword);
        var index = this.submitGov2.value.password.localeCompare(confirmPassword);
        if (index !== 0) {
            // alert("Passwords must match");
            this.commonService.showGeneralMessage("", "Password must match", false);
            this.submitGov2.controls["confirmPassword"].setValue(null);
        } //no match
    }
    toggleVisibility(e) {
        if (e.target.checked) {
            this.checkBox = true;
            this.isChecked = 'y';
        }
        else {
            this.checkBox = false;
            this.isChecked = 'n';
        }
        this.submitGov2.controls['checkBox'].setValue(this.checkBox);
    }
    fileProgress(event, fileCat) {
        if (fileCat === 'rni') {
            let fileData = event.target.files[0];
            if (fileData === undefined) {
                this.rniFile = null;
                this.isSelectedrniFile = false;
            }
            if (fileData.size > 500000) {
                //alert("Please upload < 500KB");
                this.commonService.showGeneralMessage("", "Please upload < 500KB", false);
                fileData = undefined;
                this.rniFile = null;
                this.isSelectedrniFile = false;
            }
            let fname = fileData.name.split('.');
            if (!this.allowedExtensions.some((item) => item == (fname[fname.length - 1]).toLowerCase())) {
                //        alert(fname[fname.length - 1] + " file format is not allowed. Please upload recommended file types.");
                this.commonService.showGeneralMessage("", fname[fname.length - 1] + " file format is not allowed. Please upload recommended file types.", false);
            }
            else {
                this.rniFile = fileData;
                this.commonService.govEntityDEtails.rniFileName = fileData.name;
                this.isSelectedrniFile = true;
            }
        }
        else if (fileCat === 'lal') {
            let fileData = event.target.files[0];
            if (fileData === undefined) {
                this.lalFile = null;
                this.isSelectedlalFile = false;
            }
            if (fileData.size > 500000) {
                //        alert("Please upload < 500KB");
                this.commonService.showGeneralMessage("", "Please upload < 500KB", false);
                fileData = undefined;
                this.lalFile = null;
                this.isSelectedlalFile = false;
            }
            let fname = fileData.name.split('.');
            if (!this.allowedExtensions.some((item) => item == (fname[fname.length - 1]).toLowerCase())) {
                //        alert(fname[fname.length - 1] + " file format is not allowed. Please upload recommended file types.");
                this.commonService.showGeneralMessage("", fname[fname.length - 1] + " file format is not allowed. Please upload recommended file types.", false);
            }
            else {
                this.lalFile = fileData;
                this.commonService.govEntityDEtails.lalFileName = fileData.name;
                this.isSelectedlalFile = true;
            }
        }
        else if (fileCat === 'lagl') {
            let fileData = event.target.files[0];
            if (fileData === undefined) {
                this.laglFile = null;
                this.isSelectedlaglFile = false;
            }
            if (fileData.size > 500000) {
                //    alert("Please upload < 500KB");
                this.commonService.showGeneralMessage("", "Please upload < 500KB", false);
                fileData = undefined;
                this.laglFile = null;
                this.isSelectedlaglFile = false;
            }
            let fname = fileData.name.split('.');
            if (!this.allowedExtensions.some((item) => item == (fname[fname.length - 1]).toLowerCase())) {
                //        alert(fname[fname.length - 1] + " file format is not allowed. Please upload recommended file types.");
                this.commonService.showGeneralMessage("", fname[fname.length - 1] + " file format is not allowed. Please upload recommended file types.", false);
            }
            else {
                this.laglFile = fileData;
                this.commonService.govEntityDEtails.laglFileName = fileData.name;
                this.isSelectedlaglFile = true;
            }
        }
    }
    gotoPrevious() {
        this.router.navigate(['/governmentEntityReg']);
    }
    saveReg2() {
        console.log("Reg 2 data:::::" + JSON.stringify(this.submitGov2.value));
        if (this.submitGov2.valid) {
            this.commonService.govEntityDEtails.fname = this.submitGov2.controls['fname'].value;
            this.commonService.govEntityDEtails.lname = this.submitGov2.controls['lname'].value;
            this.commonService.govEntityDEtails.nationalId = this.submitGov2.controls['nationalId'].value;
            this.commonService.govEntityDEtails.dateofbirth = this.submitGov2.controls['dateofbirth'].value;
            this.commonService.govEntityDEtails.mobile = this.submitGov2.controls['mobile'].value;
            this.commonService.govEntityDEtails.email = this.submitGov2.controls['email'].value;
            this.commonService.govEntityDEtails.password = this.submitGov2.controls['password'].value;
            this.commonService.govEntityDEtails.laglFile = this.laglFile;
            this.commonService.govEntityDEtails.rniFile = this.rniFile;
            this.commonService.govEntityDEtails.lalFile = this.lalFile;
            this.commonService.govEntityDEtails.isChecked = this.isChecked;
            this.commonService.govEntityDEtails.bi = this.submitGov2.controls['bi'].value;
            this.commonService.govEntityDEtails.bankName = this.submitGov2.controls['bankName'].value;
            this.commonService.govEntityDEtails.userId = this.userId;
            console.log(JSON.stringify(this.commonService.govEntityDEtails));
            this.commonService.postGovEntityDetails(this.commonService.govEntityDEtails)
                .subscribe(res => {
                console.log("Gov Reg final page Response is::::" + JSON.stringify(res));
                // if (res.responseCode == 107) {
                if (res.responseCode == 1) {
                    this.commonService.isGovPart2Completed = true;
                    //            alert("Government entity registration form is submitted successfully.");
                    this.commonService.showGeneralMessage("", "Government entity registration form is submitted successfully.", false);
                    this.commonService.alertMsgforGovRegistrationFinal = res.responseMessage;
                    this.commonService.responseCodeforGovRegistrationFinal = res.responseCode;
                    this.router.navigate(['governmentEntityReg3']);
                    this.commonService.isGovPart2Completed = true;
                    //this.router.navigate(['login']);
                }
            });
            //this.commonService.isGovPart2Completed = true;
            //this.router.navigate(['governmentEntityReg3']);
        }
        else {
            this.isOpenValidationAlert = true;
        }
    }
    /* resetForm() {
      if (this.submitGov2.valid) {
        console.log("Form Submitted!");
        this.submitGov2.reset();
      }
    } */
    resetForm() {
        // if (this.submitGov2.valid) {
        //   console.log("Form Submitted!");
        //   this.submitGov2.reset();
        // }
        this.submitGov2.controls["bankName"].setValue(null);
        this.submitGov2.controls["bi"].setValue(null);
        this.submitGov2.controls["confirmPassword"].setValue(null);
        this.submitGov2.controls["password"].setValue(null);
        this.submitGov2.controls["checkBox"].setValue(false);
        this.submitGov2.controls["email"].setValue(null);
        this.submitGov2.controls["lalFile"].setValue(null);
        this.submitGov2.controls["laglFile"].setValue(null);
        this.submitGov2.controls["rniFile"].setValue(null);
        this.isSelectedlaglFile = false;
        this.isSelectedlalFile = false;
        this.isSelectedrniFile = false;
    }
    closeAlert() {
        this.isOpenValidationAlert = false;
    }
};
GovernmentEntityReg2Component.ctorParameters = () => [
    { type: _angular_router__WEBPACK_IMPORTED_MODULE_2__["Router"] },
    { type: _angular_forms__WEBPACK_IMPORTED_MODULE_3__["FormBuilder"] },
    { type: _services_common_service_service__WEBPACK_IMPORTED_MODULE_4__["CommonService"] }
];
GovernmentEntityReg2Component = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-government-entity-reg2',
        template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! raw-loader!./government-entity-reg2.component.html */ "./node_modules/raw-loader/dist/cjs.js!./src/app/government-entity-reg2/government-entity-reg2.component.html")).default,
        styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! ./government-entity-reg2.component.css */ "./src/app/government-entity-reg2/government-entity-reg2.component.css")).default]
    }),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_angular_router__WEBPACK_IMPORTED_MODULE_2__["Router"], _angular_forms__WEBPACK_IMPORTED_MODULE_3__["FormBuilder"], _services_common_service_service__WEBPACK_IMPORTED_MODULE_4__["CommonService"]])
], GovernmentEntityReg2Component);



/***/ }),

/***/ "./src/app/government-entity-reg3/government-entity-reg3.component.css":
/*!*****************************************************************************!*\
  !*** ./src/app/government-entity-reg3/government-entity-reg3.component.css ***!
  \*****************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2dvdmVybm1lbnQtZW50aXR5LXJlZzMvZ292ZXJubWVudC1lbnRpdHktcmVnMy5jb21wb25lbnQuY3NzIn0= */");

/***/ }),

/***/ "./src/app/government-entity-reg3/government-entity-reg3.component.ts":
/*!****************************************************************************!*\
  !*** ./src/app/government-entity-reg3/government-entity-reg3.component.ts ***!
  \****************************************************************************/
/*! exports provided: GovernmentEntityReg3Component */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GovernmentEntityReg3Component", function() { return GovernmentEntityReg3Component; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm2015/router.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm2015/forms.js");
/* harmony import */ var _services_common_service_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../services/common-service.service */ "./src/app/services/common-service.service.ts");





let GovernmentEntityReg3Component = class GovernmentEntityReg3Component {
    // validation_messages = {
    //   bi: [
    //     { type: "required", message: "This is a required field." },
    //     {
    //       type: "pattern",
    //       message: "IBAN should be composed of characters."
    //     },
    //     {
    //       type: "maxlength",
    //       message: "Maximum length should be 34."
    //     }
    //   ],
    //   bankName: [
    //     { type: "required", message: "This is a required field." }
    //   ]
    // }
    constructor(router, formBuilder, commonService) {
        this.router = router;
        this.formBuilder = formBuilder;
        this.commonService = commonService;
        this.isOpenValidationAlert = false;
        this.bankList = [];
        this.textPattern = "^[A-Za-z ]*$";
        //ibanPattern = "^[A-Z]{2}\d{2} (?:\d{4} ){3}\d{4}(?: \d\d?)?$";
        this.ibanPattern = "^[A-Z]{2}[0-9]{2}(?:[ ]?[0-9]{4}){4}(?:[ ]?[0-9]{1,2})?$";
        console.log("in gov page 3:::" + JSON.stringify(this.commonService.govEntityDEtails));
    }
    ngOnInit() {
        this.userId = localStorage.getItem('userId');
        console.log("this.userId::::" + this.userId);
        console.log("i'm in gov entity 3:::::" + this.commonService.alertMsgforGovRegistrationFinal);
        // if(this.commonService.responseCodeforGovRegistrationFinal != undefined && this.commonService.alertMsgforGovRegistrationFinal != undefined){
        //     if(this.commonService.responseCodeforGovRegistrationFinal == 107 ){
        //     this.isDisabledSubmitButton = true;
        //     this.isShowAlertDiv = true;
        //   }
        //   else if(this.commonService.responseCodeforGovRegistrationFinal == 106 ){
        //     this.isDisabledSubmitButton = false;
        //     this.isShowAlertDiv = true;
        //   }
        //   else if(this.commonService.responseCodeforGovRegistrationFinal == 108 ){
        //     console.log("this.commonService.responseCodeforGovRegistrationFinal"+ this.commonService.responseCodeforGovRegistrationFinal);
        //     this.isDisabledSubmitButton = false;
        //     this.isShowAlertDiv = true;
        //   }
        // }
        // if(this.commonService.alertMsgforGovRegistrationFinal != undefined){
        //   this.isShowAlertDiv = true;
        //   this.isDisabledSubmitButton = true;
        // }
        // else{
        //   this.isShowAlertDiv = false;
        //   this.isDisabledSubmitButton = false;
        // }
        console.log("In government 3::::" + this.commonService.isGovPart2Completed);
        // if(this.commonService.isGovPart2Completed === false && this.commonService.isGovPart1Completed === true){
        //   this.router.navigate(['/governmentEntityReg2']);
        // }
        // if(this.commonService.isGovPart2Completed === false && this.commonService.isGovPart1Completed === false){
        //   this.router.navigate(['/governmentEntityReg']);
        // }
        // if(this.commonService.isGovPart3Completed === true){
        //   this.router.navigate(['/governmentEntityReg3']);
        // }
        //this.submitGov3 = this.formBuilder.group({
        // bi: [
        //   "",
        //   [
        //     Validators.required,
        //     Validators.pattern(this.ibanPattern),
        //     Validators.maxLength(34)
        //   ]
        // ],
        // bankName: [
        //   "",
        //   [
        //     Validators.required
        //   ]
        // ]
        // });
        // this.commonService.getBankNameList()
        // .subscribe(res => {
        //   console.log("Bank name list::::"+JSON.stringify(res));
        //   this.bankList = res;
        //   //console.log("Bank list is::::"+JSON.stringify(this.bankList));
        // });
    }
    // onBlur(userId){
    //   console.log("userId:::::"+userId);
    //   this.checkValidLoginId(userId);
    // }
    // checkValidLoginId(userId){
    //   this.commonService.checkValidLoginId(userId)
    //     .subscribe(res => {
    //       console.log("Response for userId is::::"+JSON.stringify(res));
    //       if(res.responseCode === 0){
    //  //       alert(res.responseMessage);
    //         this.commonService.showGeneralMessage("",res.responseMessage,false);
    //         this.submitGov3.controls["userId"].setValue(null);
    //       }
    //     })
    // }
    // gotoPrevious() {
    //   this.router.navigate(['/governmentEntityReg2']);
    // }
    // saveReg3() {
    //     console.log("Bank details::::"+JSON.stringify(this.submitGov3.value));
    //     if(this.submitGov3.valid){
    //       this.commonService.postBankDetails(this.submitGov3.value, this.userId)
    //       .subscribe(res => {
    //         console.log("Reg final page Response is::::"+JSON.stringify(res));
    //         if(res.responseCode === 1){
    //           this.router.navigate(['/login']);
    //         }
    //       });
    //       this.commonService.isGovPart3Completed = true;
    //     }
    //     else{
    //       this.isOpenValidationAlert = true;
    //     }
    //   // console.log("Reg 3 data:::::" + JSON.stringify(this.submitGov3.value));
    //   // if (this.submitGov3.valid) {
    //   //   this.commonService.govEntityDEtails.userId = this.submitGov3.controls['userId'].value;
    //   //   console.log("Final reg details::::" + JSON.stringify(this.commonService.govEntityDEtails));
    //   //   this.commonService.postGovEntityDetails(this.commonService.govEntityDEtails)
    //   //     .subscribe(res => {
    //   //       console.log("Gov Reg final page Response is::::" + JSON.stringify(res));
    //   //       if (res.responseCode == 1) {
    //   //         this.router.navigate(['login']);
    //   //       }
    //   //     });
    //   //   //this.router.navigate(['governmentEntityReg3']);
    //   //   this.commonService.isGovPart3Completed = true;
    //   // }
    //   // else {
    //   //   this.isOpenValidationAlert = true;
    //   // }
    // }
    closeAlert() {
        this.isOpenValidationAlert = false;
    }
};
GovernmentEntityReg3Component.ctorParameters = () => [
    { type: _angular_router__WEBPACK_IMPORTED_MODULE_2__["Router"] },
    { type: _angular_forms__WEBPACK_IMPORTED_MODULE_3__["FormBuilder"] },
    { type: _services_common_service_service__WEBPACK_IMPORTED_MODULE_4__["CommonService"] }
];
GovernmentEntityReg3Component = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-government-entity-reg3',
        template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! raw-loader!./government-entity-reg3.component.html */ "./node_modules/raw-loader/dist/cjs.js!./src/app/government-entity-reg3/government-entity-reg3.component.html")).default,
        styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! ./government-entity-reg3.component.css */ "./src/app/government-entity-reg3/government-entity-reg3.component.css")).default]
    }),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_angular_router__WEBPACK_IMPORTED_MODULE_2__["Router"], _angular_forms__WEBPACK_IMPORTED_MODULE_3__["FormBuilder"], _services_common_service_service__WEBPACK_IMPORTED_MODULE_4__["CommonService"]])
], GovernmentEntityReg3Component);



/***/ }),

/***/ "./src/app/government-pending-task/government-pending-task.component.css":
/*!*******************************************************************************!*\
  !*** ./src/app/government-pending-task/government-pending-task.component.css ***!
  \*******************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2dvdmVybm1lbnQtcGVuZGluZy10YXNrL2dvdmVybm1lbnQtcGVuZGluZy10YXNrLmNvbXBvbmVudC5jc3MifQ== */");

/***/ }),

/***/ "./src/app/government-pending-task/government-pending-task.component.ts":
/*!******************************************************************************!*\
  !*** ./src/app/government-pending-task/government-pending-task.component.ts ***!
  \******************************************************************************/
/*! exports provided: GovernmentPendingTaskComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GovernmentPendingTaskComponent", function() { return GovernmentPendingTaskComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm2015/router.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm2015/forms.js");
/* harmony import */ var _services_common_service_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../services/common-service.service */ "./src/app/services/common-service.service.ts");
/* harmony import */ var _models_lgIssuance_model__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../models/lgIssuance.model */ "./src/app/models/lgIssuance.model.ts");
/* harmony import */ var _ngx_translate_core__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @ngx-translate/core */ "./node_modules/@ngx-translate/core/fesm2015/ngx-translate-core.js");







let GovernmentPendingTaskComponent = class GovernmentPendingTaskComponent {
    constructor(router, formBuilder, commonService, translate) {
        this.router = router;
        this.formBuilder = formBuilder;
        this.commonService = commonService;
        this.translate = translate;
        this.isOpenLGAmendList = true;
        this.isOpenPendingList = false;
        this.isLGAmendClicked = true;
        this.isPendingClicked = false;
        this.isOpenInternalList = false;
        this.isInternalClicked = false;
        this.pendingList = [];
        this.amendList = [];
        this.releaseList = [];
        this.confiscateList = [];
        this.dtOptions = {};
        this.dtOptionsAR = {};
        /* aclLGReview: boolean = false;
        aclLGApprove: boolean = false; */
        this.aclAmendCreate = false;
        this.aclAmendReview = false;
        this.aclAmendApprove = false;
        this.aclConfiscateCreate = false;
        this.aclConfiscateReview = false;
        this.aclConfiscateApprove = false;
        this.aclReleaseCreate = false;
        this.aclReleaseReview = false;
        this.aclReleaseApprove = false;
        this.intAmendmentCreateList = [];
        this.intAmendmentRejectList = [];
        this.intAmendmentReviewList = [];
        this.intAmendmentApproveList = [];
        this.intConfiscateCreateList = [];
        this.intConfiscateRejectList = [];
        this.intConfiscateReviewList = [];
        this.intConfiscateApproveList = [];
        this.intReleaseCreateList = [];
        this.intReleaseRejectList = [];
        this.intReleaseReviewList = [];
        this.intReleaseApproveList = [];
    }
    ngOnInit() {
        this.userId = localStorage.getItem('userId');
        console.log("this.userId::::" + this.userId);
        this.userName = localStorage.getItem('userName');
        console.log("this.userName::::" + this.userName);
        this.roleId = localStorage.getItem('roleId');
        console.log("this.role_ID::::" + this.roleId);
        this.crNoOrUidNo = localStorage.getItem('crNoOrUidNo');
        console.log("crNoOrUidNo::::" + this.crNoOrUidNo);
        this.acl = JSON.parse(localStorage.getItem('acl'));
        console.log("ACL ::::" + JSON.stringify(this.acl));
        console.log("ACL Amendment ::::" + this.acl.Amendment);
        if (this.acl.Amendment !== undefined) {
            for (let actions of this.acl.Amendment['subMenu']) {
                console.log(actions.action_nm);
                if (actions.action_nm === 'Create') {
                    this.aclAmendCreate = true;
                }
                if (actions.action_nm === 'Review') {
                    this.aclAmendReview = true;
                }
                if (actions.action_nm === 'Approve') {
                    this.aclAmendApprove = true;
                }
            }
        }
        if (this.acl.Confiscate !== undefined) {
            for (let actions of this.acl.Confiscate['subMenu']) {
                console.log(actions.action_nm);
                if (actions.action_nm === 'Create') {
                    this.aclConfiscateCreate = true;
                }
                if (actions.action_nm === 'Review') {
                    this.aclConfiscateReview = true;
                }
                if (actions.action_nm === 'Approve') {
                    this.aclConfiscateApprove = true;
                }
            }
        }
        if (this.acl.Release !== undefined) {
            for (let actions of this.acl.Release['subMenu']) {
                console.log(actions.action_nm);
                if (actions.action_nm === 'Create') {
                    this.aclReleaseCreate = true;
                }
                if (actions.action_nm === 'Review') {
                    this.aclReleaseReview = true;
                }
                if (actions.action_nm === 'Approve') {
                    this.aclReleaseApprove = true;
                }
            }
        }
        this.dtOptionsAR = {
            pageLength: 10,
            processing: true,
            language: {
                processing: "جارٍ التحميل...",
                search: "ابحث:",
                lengthMenu: "أظهر _MENU_ مدخلات",
                info: "إظهار _START_ إلى _END_ من أصل _TOTAL_ مدخل",
                infoEmpty: "يعرض 0 إلى 0 من أصل 0 سجل",
                infoFiltered: "(منتقاة من مجموع _MAX_ مُدخل)",
                infoPostFix: "",
                loadingRecords: "جارٍ التحميل...",
                zeroRecords: "لم يعثر على أية سجلات",
                emptyTable: "ليست هناك بيانات متاحة في الجدول",
                paginate: {
                    first: "الأول",
                    previous: "السابق",
                    next: "التالي",
                    last: "الأخير"
                },
                aria: {
                    sortAscending: ": تفعيل لترتيب العمود تصاعدياً",
                    sortDescending: ": تفعيل لترتيب العمود تنازلياً"
                }
            }
        };
        this.dtOptions = {
            pageLength: 10,
            processing: true,
        };
        this.commonService.getAmendmentAndReleseAndConfiscationPendingList(this.crNoOrUidNo)
            .subscribe(res => {
            console.log(res);
            this.amendList = res.userObject.amendList;
            this.releaseList = res.userObject.releaseList;
            this.confiscateList = res.userObject.confiscateList;
            console.log("pending Amend list is::::" + JSON.stringify(this.amendList));
            console.log("pending releaseList list is::::" + JSON.stringify(this.releaseList));
            console.log("pending confiscateList list is::::" + JSON.stringify(this.confiscateList));
        });
    }
    goToLGAmendTab() {
        this.isOpenPendingList = false;
        this.isPendingClicked = false;
        this.isOpenLGAmendList = true;
        this.isLGAmendClicked = true;
        this.isOpenInternalList = false;
        this.isInternalClicked = false;
        //To get pending list
        console.log("goToLGAmendTab");
        this.commonService.getAmendmentAndReleseAndConfiscationPendingList(this.crNoOrUidNo)
            .subscribe(res => {
            console.log(res);
            this.amendList = res.userObject.amendList;
            this.releaseList = res.userObject.releaseList;
            this.confiscateList = res.userObject.confiscateList;
            console.log("pending Amend list is::::" + JSON.stringify(this.amendList));
        });
    }
    goToInternalPendingTab() {
        this.isOpenPendingList = false;
        this.isOpenLGAmendList = false;
        this.isOpenInternalList = true;
        this.isPendingClicked = false;
        this.isLGAmendClicked = false;
        this.isInternalClicked = true;
        //To get pending list
        console.log("goToInternalPendingTab");
        /* this.commonService.getInternalPendingIssuanceReviewList(this.userId)
          .subscribe(res => {
            console.log(res);
            console.log("Internal LG Review Pending list::::" + JSON.stringify(res));
            this.intIssuanceReviewList = res.userObject;
          });
    
          this.commonService.getInternalIssuanceApprovalPendingList(this.userId)
          .subscribe(res => {
            console.log(res);
            console.log("Internal LG Approve Pending list::::" + JSON.stringify(res));
            this.intIssuanceApprovalList = res.userObject;
          }); */
        //To get pending list Amendment
        this.commonService.getInternalAmendmentRejectList(this.userId)
            .subscribe(res => {
            console.log(res);
            console.log("Internal Amendment Reject Pending list::::" + JSON.stringify(res));
            this.intAmendmentRejectList = res.userObject;
        });
        this.commonService.getInternalAmendmentPendingCreateList(this.userId)
            .subscribe(res => {
            console.log(res);
            console.log("Internal Amendment Pending Create list::::" + JSON.stringify(res));
            this.intAmendmentCreateList = res.userObject;
        });
        this.commonService.getInternalAmendmentPendingReviewList(this.userId)
            .subscribe(res => {
            console.log(res);
            console.log("Internal Amendment Pending list::::" + JSON.stringify(res));
            this.intAmendmentReviewList = res.userObject;
        });
        this.commonService.getInternalAmendmentApproveList(this.userId)
            .subscribe(res => {
            console.log(res);
            console.log("Internal Amendment Approve Pending list::::" + JSON.stringify(res));
            this.intAmendmentApproveList = res.userObject;
        });
        //To get pending list Confiscate
        this.commonService.getInternalConfiscateRejectPendingList(this.userId)
            .subscribe(res => {
            console.log(res);
            console.log("Internal Confiscate Create Pending list::::" + JSON.stringify(res));
            this.intConfiscateRejectList = res.userObject;
        });
        this.commonService.getInternalConfiscateCreatePendingList(this.userId)
            .subscribe(res => {
            console.log(res);
            console.log("Internal Confiscate Create Pending list::::" + JSON.stringify(res));
            this.intConfiscateCreateList = res.userObject;
        });
        this.commonService.getInternalConfiscateReviewPendingList(this.userId)
            .subscribe(res => {
            console.log(res);
            console.log("Internal Confiscate Review Pending list::::" + JSON.stringify(res));
            this.intConfiscateReviewList = res.userObject;
        });
        this.commonService.getInternalConfiscateApproveList(this.userId)
            .subscribe(res => {
            console.log(res);
            console.log("Internal Confiscate Approve Pending list::::" + JSON.stringify(res));
            this.intConfiscateApproveList = res.userObject;
        });
        //To get pending list Release
        this.commonService.getInternalReleaseRejectPendingList(this.userId)
            .subscribe(res => {
            console.log(res);
            console.log("Internal Release Create Pending list::::" + JSON.stringify(res));
            this.intReleaseRejectList = res.userObject;
        });
        this.commonService.getInternalReleaseCreatePendingList(this.userId)
            .subscribe(res => {
            console.log(res);
            console.log("Internal Release Create Pending list::::" + JSON.stringify(res));
            this.intReleaseCreateList = res.userObject;
        });
        this.commonService.getInternalReleaseReviewPendingList(this.userId)
            .subscribe(res => {
            console.log(res);
            console.log("Internal Release Review Pending list::::" + JSON.stringify(res));
            this.intReleaseReviewList = res.userObject;
        });
        this.commonService.getInternalReleaseApprovePendingList(this.userId)
            .subscribe(res => {
            console.log(res);
            console.log("Internal Release Approve Pending list::::" + JSON.stringify(res));
            this.intReleaseApproveList = res.userObject;
        });
        /*  */
    }
    ACRRowSelected(pendingData, pendingtype) {
        this.commonService.isPrivateLgPending1Completed = true;
        console.log("private entity pending list::::" + JSON.stringify(pendingData));
        console.log("testy122" + pendingData.beneficiary_name);
        console.log("pendingtype" + pendingtype);
        this.commonService.lgIssuanceApproval = new _models_lgIssuance_model__WEBPACK_IMPORTED_MODULE_5__["LGIssuanceModel"]();
        if (pendingData.lg_no !== null || pendingData.lg_no !== undefined) {
            this.commonService.lgIssuanceApproval.lg_no = pendingData.lg_no;
        }
        if (pendingData.lg_type !== null || pendingData.lg_type !== undefined) {
            this.commonService.lgIssuanceApproval.LGType = pendingData.lg_type;
        }
        if (pendingData.beneficiary_name !== null || pendingData.beneficiary_name !== undefined) {
            console.log("test beneficiary_name" + pendingData.beneficiary_name);
            this.commonService.lgIssuanceApproval.beneficiary_name = pendingData.beneficiary_name;
        }
        if (pendingData.bank_name !== null || pendingData.bank_name !== undefined) {
            console.log("bank_name" + pendingData.bank_name);
            this.commonService.lgIssuanceApproval.bankName = pendingData.bank_name;
        }
        if (pendingData.project_name !== null || pendingData.project_name !== undefined) {
            console.log("bank_name" + pendingData.project_name);
            this.commonService.lgIssuanceApproval.project_name = pendingData.project_name;
        }
        if (pendingData.request_date !== null || pendingData.request_date !== undefined) {
            console.log("bank_name" + pendingData.request_date);
            this.commonService.lgIssuanceApproval.request_date = pendingData.request_date;
        }
        /* if(pendingData.request_status_flag !== null || pendingData.request_status_flag !== undefined){
          console.log("bank_name"+pendingData.request_status_flag);
         this.commonService.lgIssuanceApproval.status = pendingData.request_status_flag;
        } */
        if (pendingData.lg_start_date !== null || pendingData.lg_start_date !== undefined) {
            this.commonService.lgIssuanceApproval.LGStartDate = pendingData.lg_start_date;
        }
        if (pendingData.lg_end_date !== null || pendingData.lg_end_date !== undefined) {
            this.commonService.lgIssuanceApproval.LGEndDate = pendingData.lg_end_date;
        }
        if (pendingData.lg_issue_date !== null || pendingData.lg_issue_date !== undefined) {
            this.commonService.lgIssuanceApproval.LGIssueDate = pendingData.lg_issue_date;
        }
        if (pendingData.contract_value !== null || pendingData.contract_value !== undefined) {
            this.commonService.lgIssuanceApproval.Amount = pendingData.contract_value;
            var converter = __webpack_require__(/*! number-to-words */ "./node_modules/number-to-words/numberToWords.min.js");
            this.commonService.lgIssuanceApproval.amountInNumber = converter.toWords(this.commonService.lgIssuanceApproval.Amount);
        }
        if (pendingData.currency !== null || pendingData.currency !== undefined) {
            this.commonService.lgIssuanceApproval.currency = pendingData.currency;
        }
        if (pendingData.terms_condition_message !== null || pendingData.terms_condition_message !== undefined) {
            this.commonService.lgIssuanceApproval.termsNconditionsMessage = pendingData.terms_condition_message;
        }
        if (pendingData.active_status !== null || pendingData.active_status !== undefined) {
            this.commonService.lgIssuanceApproval.status = pendingData.active_status;
        }
        if (pendingData.response_code !== null || pendingData.response_code !== undefined) {
            this.commonService.lgIssuanceApproval.response_code = pendingData.response_code;
            console.log("............................pendingData.response_code" + pendingData.response_code);
        }
        if (pendingData.terms_condition_message !== null || pendingData.terms_condition_message !== undefined) {
            this.commonService.lgIssuanceApproval.terms_condition_message = pendingData.terms_condition_message;
            console.log("........................pendingData.terms_condition_message" + pendingData.terms_condition_message);
        }
        if (pendingData.request_id !== null || pendingData.request_id !== undefined) {
            this.commonService.lgIssuanceApproval.requestId = pendingData.request_id;
            console.log("........................pendingData.request_id" + pendingData.request_id);
        }
        if (pendingData.create_by !== null || pendingData.create_by !== undefined) {
            this.commonService.lgIssuanceApproval.create_by = pendingData.create_by;
        }
        /* if(pendingData.request_status_flag !== null || pendingData.request_status_flag !== undefined){
         this.commonService.lgIssuanceApproval.status = pendingData.request_status_flag;
        } */
        if (pendingData.terms_condition_type !== null || pendingData.terms_condition_type !== undefined) {
            this.commonService.lgIssuanceApproval.writeUpType = pendingData.terms_condition_type;
        }
        if (pendingData.project_name !== null || pendingData.project_name !== undefined) {
            this.commonService.lgIssuanceApproval.projectName = pendingData.project_name;
        }
        if (pendingData.project_id !== null || pendingData.project_id !== undefined) {
            this.commonService.lgIssuanceApproval.projectNumber = pendingData.project_id;
        }
        if (pendingData.purpose_of_bond !== null || pendingData.purpose_of_bond !== undefined) {
            this.commonService.lgIssuanceApproval.puroseOfBond = pendingData.purpose_of_bond;
        }
        if (pendingData.byan_no !== null || pendingData.byan_no !== undefined) {
            this.commonService.lgIssuanceApproval.bayanNuymber = pendingData.byan_no;
        }
        if (pendingData.zakat_start_date !== null || pendingData.zakat_start_date !== undefined) {
            this.commonService.lgIssuanceApproval.ZakatPeriodStartDate = pendingData.zakat_start_date;
        }
        if (pendingData.zakat_end_date !== null || pendingData.zakat_end_date !== undefined) {
            this.commonService.lgIssuanceApproval.ZakatPeriodEndDate = pendingData.zakat_end_date;
        }
        if (pendingData.lg_validity_date !== null || pendingData.lg_validity_date !== undefined) {
            this.commonService.lgIssuanceApproval.lg_validity_date = pendingData.validDt;
        }
        if (pendingData.account_of_contract_processed !== null || pendingData.account_of_contract_processed !== undefined) {
            this.commonService.lgIssuanceApproval.ac_of_contract = pendingData.account_of_contract_processed;
        }
        if (pendingData.agree_tag !== null || pendingData.agree_tag !== undefined) {
            this.commonService.lgIssuanceApproval.agree_tag = pendingData.agree_tag;
        }
        if (pendingData.beneficiary_id !== null || pendingData.beneficiary_id !== undefined) {
            this.commonService.lgIssuanceApproval.beneficiaryId = pendingData.beneficiary_id;
        }
        if (pendingData.supplier_id !== null || pendingData.supplier_id !== undefined) {
            this.commonService.lgIssuanceApproval.supplierId = pendingData.supplier_id;
        }
        if (pendingData.beneficiary_UID !== null || pendingData.beneficiary_UID !== undefined) {
            this.commonService.lgIssuanceApproval.beneficiary_UID = pendingData.beneficiary_UID;
        }
        if (pendingData.Amendmend_request_id !== null || pendingData.Amendmend_request_id !== undefined) {
            this.commonService.lgIssuanceApproval.Amendmend_request_id = pendingData.Amendmend_request_id;
        }
        if (pendingData.lg_amendment_amt !== null || pendingData.lg_amendment_amt !== undefined) {
            this.commonService.lgIssuanceApproval.amendment_amount = pendingData.lg_amendment_amt;
        }
        if (pendingData.amendment_end_date !== null || pendingData.amendment_end_date !== undefined) {
            this.commonService.lgIssuanceApproval.amendment_lg_end_date = pendingData.amendment_end_date;
        }
        if (pendingData.amendment_writeup_mesg !== null || pendingData.amendment_writeup_mesg !== undefined) {
            this.commonService.lgIssuanceApproval.amendment_writeup_mesg = pendingData.amendment_writeup_mesg;
        }
        if (pendingData.conf_request_id !== null || pendingData.conf_request_id !== undefined) {
            this.commonService.lgIssuanceApproval.confiscate_request_id = pendingData.conf_request_id;
        }
        if (pendingData.partial_confiscate_flag !== null || pendingData.partial_confiscate_flag !== undefined) {
            this.commonService.lgIssuanceApproval.partial_confiscation = pendingData.partial_confiscate_flag;
        }
        if (pendingData.confiscate_amt !== null || pendingData.confiscate_amt !== undefined) {
            this.commonService.lgIssuanceApproval.confiscate_amount = pendingData.confiscate_amt;
        }
        if (pendingData.conf_reason !== null || pendingData.conf_reason !== undefined) {
            this.commonService.lgIssuanceApproval.confiscate_reason = pendingData.conf_reason;
        }
        if (pendingData.conf_bank_name !== null || pendingData.conf_bank_name !== undefined) {
            this.commonService.lgIssuanceApproval.confiscate_bankName = pendingData.conf_bank_name;
        }
        if (pendingData.conf_iban_no !== null || pendingData.conf_iban_no !== undefined) {
            this.commonService.lgIssuanceApproval.confiscate_IBAN = pendingData.conf_iban_no;
        }
        if (pendingData.release_request_id !== null || pendingData.release_request_id !== undefined) {
            this.commonService.lgIssuanceApproval.release_request_id = pendingData.release_request_id;
        }
        if (pendingData.rel_release_reason !== null || pendingData.rel_release_reason !== undefined) {
            this.commonService.lgIssuanceApproval.release_reason = pendingData.rel_release_reason;
        }
        if (pendingData.partial_release_flag !== null || pendingData.partial_release_flag !== undefined) {
            this.commonService.lgIssuanceApproval.partial_release = pendingData.partial_release_flag;
        }
        if (pendingData.release_amt !== null || pendingData.release_amt !== undefined) {
            this.commonService.lgIssuanceApproval.release_amount = pendingData.release_amt;
        }
        if (pendingtype !== null || pendingtype !== undefined) {
            this.commonService.lgIssuanceApproval.pendingtype = pendingtype;
        }
        if (pendingData.supplier_entity_id !== null || pendingData.supplier_entity_id !== undefined) {
            this.commonService.lgIssuanceApproval.supplier_entity_id = pendingData.supplier_entity_id;
        }
        if (pendingData.beneficiary_entity_id !== null || pendingData.beneficiary_entity_id !== undefined) {
            this.commonService.lgIssuanceApproval.beneficiary_entity_id = pendingData.beneficiary_entity_id;
        }
        if (pendingData.notification_message !== null || pendingData.notification_message !== undefined) {
            this.commonService.lgIssuanceApproval.notification_message = pendingData.notification_message;
        }
        this.router.navigate(['govLgDetails']);
        //this.lgIssuance.
    }
    internalRowSelected(pendingData, pendingtype) {
        this.commonService.isPrivateLgPending1Completed = true;
        console.log("private entity pending list::::" + JSON.stringify(pendingData));
        console.log("testy122" + pendingData.beneficiary_name);
        console.log("pendingtype" + pendingtype);
        this.commonService.lgIssuanceApproval = new _models_lgIssuance_model__WEBPACK_IMPORTED_MODULE_5__["LGIssuanceModel"]();
        if (pendingData.lg_no !== null || pendingData.lg_no !== undefined) {
            this.commonService.lgIssuanceApproval.lg_no = pendingData.lg_no;
        }
        if (pendingData.lg_type !== null || pendingData.lg_type !== undefined) {
            this.commonService.lgIssuanceApproval.LGType = pendingData.lg_type;
        }
        if (pendingData.beneficiary_name !== null || pendingData.beneficiary_name !== undefined) {
            console.log("test beneficiary_name" + pendingData.beneficiary_name);
            this.commonService.lgIssuanceApproval.beneficiary_name = pendingData.beneficiary_name;
        }
        if (pendingData.bank_name !== null || pendingData.bank_name !== undefined) {
            console.log("bank_name" + pendingData.bank_name);
            this.commonService.lgIssuanceApproval.bankName = pendingData.bank_name;
        }
        if (pendingData.project_name !== null || pendingData.project_name !== undefined) {
            console.log("bank_name" + pendingData.project_name);
            this.commonService.lgIssuanceApproval.project_name = pendingData.project_name;
        }
        if (pendingData.request_date !== null || pendingData.request_date !== undefined) {
            console.log("bank_name" + pendingData.request_date);
            this.commonService.lgIssuanceApproval.request_date = pendingData.request_date;
        }
        /* if(pendingData.request_status_flag !== null || pendingData.request_status_flag !== undefined){
          console.log("bank_name"+pendingData.request_status_flag);
         this.commonService.lgIssuanceApproval.status = pendingData.request_status_flag;
        } */
        if (pendingData.lg_start_date !== null || pendingData.lg_start_date !== undefined) {
            this.commonService.lgIssuanceApproval.LGStartDate = pendingData.lg_start_date;
        }
        if (pendingData.lg_end_date !== null || pendingData.lg_end_date !== undefined) {
            this.commonService.lgIssuanceApproval.LGEndDate = pendingData.lg_end_date;
        }
        if (pendingData.lg_issue_date !== null || pendingData.lg_issue_date !== undefined) {
            this.commonService.lgIssuanceApproval.LGIssueDate = pendingData.lg_issue_date;
        }
        if (pendingData.lg_issue_date !== null || pendingData.lg_issue_date !== undefined) {
            this.commonService.lgIssuanceApproval.lg_validity_date = pendingData.lg_issue_date;
        }
        if (pendingData.contract_value !== null || pendingData.contract_value !== undefined) {
            this.commonService.lgIssuanceApproval.Amount = pendingData.contract_value;
            var converter = __webpack_require__(/*! number-to-words */ "./node_modules/number-to-words/numberToWords.min.js");
            this.commonService.lgIssuanceApproval.amountInNumber = converter.toWords(this.commonService.lgIssuanceApproval.Amount);
        }
        if (pendingData.currency !== null || pendingData.currency !== undefined) {
            this.commonService.lgIssuanceApproval.currency = pendingData.currency;
        }
        if (pendingData.terms_condition_message !== null || pendingData.terms_condition_message !== undefined) {
            this.commonService.lgIssuanceApproval.termsNconditionsMessage = pendingData.terms_condition_message;
        }
        if (pendingData.active_status !== null || pendingData.active_status !== undefined) {
            this.commonService.lgIssuanceApproval.status = pendingData.active_status;
        }
        if (pendingData.response_code !== null || pendingData.response_code !== undefined) {
            this.commonService.lgIssuanceApproval.response_code = pendingData.response_code;
            console.log("............................pendingData.response_code" + pendingData.response_code);
        }
        if (pendingData.terms_condition_message !== null || pendingData.terms_condition_message !== undefined) {
            this.commonService.lgIssuanceApproval.terms_condition_message = pendingData.terms_condition_message;
            console.log("........................pendingData.terms_condition_message" + pendingData.terms_condition_message);
        }
        if (pendingData.request_id !== null || pendingData.request_id !== undefined) {
            this.commonService.lgIssuanceApproval.requestId = pendingData.request_id;
            console.log("........................pendingData.request_id" + pendingData.request_id);
        }
        if (pendingData.create_by !== null || pendingData.create_by !== undefined) {
            this.commonService.lgIssuanceApproval.create_by = pendingData.create_by;
        }
        /* if(pendingData.request_status_flag !== null || pendingData.request_status_flag !== undefined){
         this.commonService.lgIssuanceApproval.status = pendingData.request_status_flag;
        } */
        if (pendingData.terms_condition_type !== null || pendingData.terms_condition_type !== undefined) {
            this.commonService.lgIssuanceApproval.writeUpType = pendingData.terms_condition_type;
        }
        if (pendingData.project_name !== null || pendingData.project_name !== undefined) {
            this.commonService.lgIssuanceApproval.projectName = pendingData.project_name;
        }
        if (pendingData.project_id !== null || pendingData.project_id !== undefined) {
            this.commonService.lgIssuanceApproval.projectNumber = pendingData.project_id;
        }
        if (pendingData.purpose_of_bond !== null || pendingData.purpose_of_bond !== undefined) {
            this.commonService.lgIssuanceApproval.puroseOfBond = pendingData.purpose_of_bond;
        }
        if (pendingData.byan_no !== null || pendingData.byan_no !== undefined) {
            this.commonService.lgIssuanceApproval.bayanNuymber = pendingData.byan_no;
        }
        if (pendingData.zakat_start_date !== null || pendingData.zakat_start_date !== undefined) {
            this.commonService.lgIssuanceApproval.ZakatPeriodStartDate = pendingData.zakat_start_date;
        }
        if (pendingData.zakat_end_date !== null || pendingData.zakat_end_date !== undefined) {
            this.commonService.lgIssuanceApproval.ZakatPeriodEndDate = pendingData.zakat_end_date;
        }
        /* if(pendingData.lg_validity_date !== null || pendingData.lg_validity_date !== undefined){
         this.commonService.lgIssuanceApproval.lg_validity_date = pendingData.validDt;
        } */
        if (pendingData.account_of_contract_processed !== null || pendingData.account_of_contract_processed !== undefined) {
            this.commonService.lgIssuanceApproval.ac_of_contract = pendingData.account_of_contract_processed;
        }
        if (pendingData.agree_tag !== null || pendingData.agree_tag !== undefined) {
            this.commonService.lgIssuanceApproval.checkBox = pendingData.agree_tag;
        }
        if (pendingData.beneficiary_id !== null || pendingData.beneficiary_id !== undefined) {
            this.commonService.lgIssuanceApproval.beneficiaryId = pendingData.beneficiary_id;
        }
        if (pendingData.supplier_id !== null || pendingData.supplier_id !== undefined) {
            this.commonService.lgIssuanceApproval.supplierId = pendingData.supplier_id;
        }
        if (pendingData.beneficiary_UID !== null || pendingData.beneficiary_UID !== undefined) {
            this.commonService.lgIssuanceApproval.beneficiary_UID = pendingData.beneficiary_UID;
        }
        if (pendingData.Amendmend_request_id !== null || pendingData.Amendmend_request_id !== undefined) {
            this.commonService.lgIssuanceApproval.Amendmend_request_id = pendingData.Amendmend_request_id;
        }
        if (pendingData.lg_amendment_amt !== null || pendingData.lg_amendment_amt !== undefined) {
            this.commonService.lgIssuanceApproval.amendment_amount = pendingData.lg_amendment_amt;
        }
        if (pendingData.amendment_end_date !== null || pendingData.amendment_end_date !== undefined) {
            this.commonService.lgIssuanceApproval.amendment_lg_end_date = pendingData.amendment_end_date;
        }
        if (pendingData.amendment_writeup_mesg !== null || pendingData.amendment_writeup_mesg !== undefined) {
            this.commonService.lgIssuanceApproval.amendment_writeup_mesg = pendingData.amendment_writeup_mesg;
        }
        if (pendingData.conf_request_id !== null || pendingData.conf_request_id !== undefined) {
            this.commonService.lgIssuanceApproval.confiscate_request_id = pendingData.conf_request_id;
        }
        if (pendingData.partial_confiscate_flag !== null || pendingData.partial_confiscate_flag !== undefined) {
            this.commonService.lgIssuanceApproval.partial_confiscation = pendingData.partial_confiscate_flag;
        }
        if (pendingData.confiscate_amt !== null || pendingData.confiscate_amt !== undefined) {
            this.commonService.lgIssuanceApproval.confiscate_amount = pendingData.confiscate_amt;
        }
        if (pendingData.conf_reason !== null || pendingData.conf_reason !== undefined) {
            this.commonService.lgIssuanceApproval.confiscate_reason = pendingData.conf_reason;
        }
        if (pendingData.conf_bank_name !== null || pendingData.conf_bank_name !== undefined) {
            this.commonService.lgIssuanceApproval.confiscate_bankName = pendingData.conf_bank_name;
        }
        if (pendingData.conf_iban_no !== null || pendingData.conf_iban_no !== undefined) {
            this.commonService.lgIssuanceApproval.confiscate_IBAN = pendingData.conf_iban_no;
        }
        if (pendingData.release_request_id !== null || pendingData.release_request_id !== undefined) {
            this.commonService.lgIssuanceApproval.release_request_id = pendingData.release_request_id;
        }
        if (pendingData.rel_release_reason !== null || pendingData.rel_release_reason !== undefined) {
            this.commonService.lgIssuanceApproval.release_reason = pendingData.rel_release_reason;
        }
        if (pendingData.partial_release_flag !== null || pendingData.partial_release_flag !== undefined) {
            this.commonService.lgIssuanceApproval.partial_release = pendingData.partial_release_flag;
        }
        if (pendingData.release_amt !== null || pendingData.release_amt !== undefined) {
            this.commonService.lgIssuanceApproval.release_amount = pendingData.release_amt;
        }
        if (pendingData.step !== null || pendingData.step !== undefined) {
            this.commonService.lgIssuanceApproval.workflow_step = pendingData.step;
        }
        if (pendingData.workflow_status !== null || pendingData.workflow_status !== undefined) {
            this.commonService.lgIssuanceApproval.workflow_status = pendingData.workflow_status;
        }
        if (pendingData.workflow_state !== null || pendingData.workflow_state !== undefined) {
            this.commonService.lgIssuanceApproval.workflow_state = pendingData.workflow_state;
        }
        if (pendingtype !== null || pendingtype !== undefined) {
            this.commonService.lgIssuanceApproval.pendingtype = pendingtype;
        }
        if (pendingData.supplier_entity_id !== null || pendingData.supplier_entity_id !== undefined) {
            this.commonService.lgIssuanceApproval.supplier_entity_id = pendingData.supplier_entity_id;
        }
        if (pendingData.beneficiary_entity_id !== null || pendingData.beneficiary_entity_id !== undefined) {
            this.commonService.lgIssuanceApproval.beneficiary_entity_id = pendingData.beneficiary_entity_id;
        }
        if (pendingData.notification_message !== null || pendingData.notification_message !== undefined) {
            this.commonService.lgIssuanceApproval.notification_message = pendingData.notification_message;
        }
        if (pendingData.beneficiary_role !== null || pendingData.beneficiary_role !== undefined) {
            this.commonService.lgIssuanceApproval.beneficiary_role = pendingData.beneficiary_role;
        }
        if (pendingData.currency_code !== null || pendingData.currency_code !== undefined) {
            this.commonService.lgIssuanceApproval.currency_code = pendingData.currency_code;
        }
        if (pendingData.bank_code !== null || pendingData.bank_code !== undefined) {
            this.commonService.lgIssuanceApproval.bank_code = pendingData.bank_code;
        }
        if (pendingData.iban_no !== null || pendingData.iban_no !== undefined) {
            this.commonService.lgIssuanceApproval.iban_no = pendingData.iban_no;
        }
        if (pendingData.percentage_of_value !== null || pendingData.percentage_of_value !== undefined) {
            this.commonService.lgIssuanceApproval.percentage_of_value = pendingData.percentage_of_value;
        }
        if (pendingData.workflow_id !== null || pendingData.workflow_id !== undefined) {
            this.commonService.lgIssuanceApproval.workflow_id = pendingData.workflow_id;
        }
        if (pendingtype !== null || pendingtype !== undefined) {
            if (pendingtype == 'issuance_Reject') {
                this.commonService.setcurrentWFIDService(pendingData.workflow_id);
                localStorage.setItem('update_issuance', 'update_issuance');
                //this.router.navigate(['requestLgIssuance']);
            }
            else if (pendingtype == 'amendment_Reject') {
                this.commonService.setcurrentWFIDService(pendingData.workflow_id);
                localStorage.setItem('update_amendment', 'update_amendment');
                localStorage.setItem('currentmenuType', 'Amendment');
                //this.router.navigate(['privateLgDetails']);
            }
            else if (pendingtype == 'confiscate_Reject') {
                this.commonService.setcurrentWFIDService(pendingData.workflow_id);
                localStorage.setItem('update_confiscate', 'update_confiscate');
                localStorage.setItem('currentmenuType', 'Confiscate');
                //this.router.navigate(['privateLgDetails']);
            }
            else if (pendingtype == 'release_Reject') {
                this.commonService.setcurrentWFIDService(pendingData.workflow_id);
                localStorage.setItem('update_release', 'update_release');
                localStorage.setItem('currentmenuType', 'Release');
                //this.router.navigate(['privateLgDetails']);
            }
            else {
                //this.router.navigate(['requestLgIssuanceApproval']);
            }
        }
        //console.log("lgIssuanceApproval >>>> "+JSON.stringify(this.commonService.lgIssuanceApproval));
        this.router.navigate(['govLgDetails']);
    }
};
GovernmentPendingTaskComponent.ctorParameters = () => [
    { type: _angular_router__WEBPACK_IMPORTED_MODULE_2__["Router"] },
    { type: _angular_forms__WEBPACK_IMPORTED_MODULE_3__["FormBuilder"] },
    { type: _services_common_service_service__WEBPACK_IMPORTED_MODULE_4__["CommonService"] },
    { type: _ngx_translate_core__WEBPACK_IMPORTED_MODULE_6__["TranslateService"] }
];
GovernmentPendingTaskComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-government-pending-task',
        template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! raw-loader!./government-pending-task.component.html */ "./node_modules/raw-loader/dist/cjs.js!./src/app/government-pending-task/government-pending-task.component.html")).default,
        styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! ./government-pending-task.component.css */ "./src/app/government-pending-task/government-pending-task.component.css")).default]
    }),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_angular_router__WEBPACK_IMPORTED_MODULE_2__["Router"], _angular_forms__WEBPACK_IMPORTED_MODULE_3__["FormBuilder"], _services_common_service_service__WEBPACK_IMPORTED_MODULE_4__["CommonService"], _ngx_translate_core__WEBPACK_IMPORTED_MODULE_6__["TranslateService"]])
], GovernmentPendingTaskComponent);



/***/ }),

/***/ "./src/app/government-release-list/government-release-list.component.css":
/*!*******************************************************************************!*\
  !*** ./src/app/government-release-list/government-release-list.component.css ***!
  \*******************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2dvdmVybm1lbnQtcmVsZWFzZS1saXN0L2dvdmVybm1lbnQtcmVsZWFzZS1saXN0LmNvbXBvbmVudC5jc3MifQ== */");

/***/ }),

/***/ "./src/app/government-release-list/government-release-list.component.ts":
/*!******************************************************************************!*\
  !*** ./src/app/government-release-list/government-release-list.component.ts ***!
  \******************************************************************************/
/*! exports provided: GovernmentReleaseListComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GovernmentReleaseListComponent", function() { return GovernmentReleaseListComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm2015/forms.js");
/* harmony import */ var _services_common_service_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../services/common-service.service */ "./src/app/services/common-service.service.ts");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm2015/router.js");
/* harmony import */ var _models_lgIssuance_model__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../models/lgIssuance.model */ "./src/app/models/lgIssuance.model.ts");
/* harmony import */ var _ngx_translate_core__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @ngx-translate/core */ "./node_modules/@ngx-translate/core/fesm2015/ngx-translate-core.js");







let GovernmentReleaseListComponent = class GovernmentReleaseListComponent {
    constructor(commonService, router, fb, translate) {
        this.commonService = commonService;
        this.router = router;
        this.fb = fb;
        this.translate = translate;
        this.isOpenMyIssuedLGList = false;
        this.isOpenLgIssuedMeList = true;
        this.isMyIssuedLGClicked = false;
        this.isLgIssuedMeClicked = true;
        this.dtOptions = {};
        this.dtOptionsAR = {};
        this.userObject = {};
    }
    ngOnInit() {
        this.userId = localStorage.getItem('userId');
        console.log("this.userId::::" + this.userId);
        this.userName = localStorage.getItem('userName');
        console.log("this.userName::::" + this.userName);
        this.roleId = localStorage.getItem('roleId');
        console.log("this.role_ID::::" + this.roleId);
        this.crNoOrUidNo = localStorage.getItem('crNoOrUidNo');
        console.log("crNoOrUidNo::::" + this.crNoOrUidNo);
        console.log("currentWorkflowID >>" + localStorage.getItem('currentWorkflowID'));
        this.currentWorkflowID = localStorage.getItem('currentWorkflowID');
        /*************************************************** */
        this.commonService.checkSessionExpired(this.userId)
            .then((data) => {
            if (data == 0) {
                this.commonService.showGeneralMessage(this.translate.instant('HOME.Session_Expired'), this.translate.instant('HOME.logged_out'), false);
                this.commonService.logout(this.userId);
                return;
            }
            else {
            }
        });
        /************************************************** */
        this.dtOptionsAR = {
            pageLength: 10,
            processing: true,
            language: {
                processing: "جارٍ التحميل...",
                search: "ابحث:",
                lengthMenu: "أظهر _MENU_ مدخلات",
                info: "إظهار _START_ إلى _END_ من أصل _TOTAL_ مدخل",
                infoEmpty: "يعرض 0 إلى 0 من أصل 0 سجل",
                infoFiltered: "(منتقاة من مجموع _MAX_ مُدخل)",
                infoPostFix: "",
                loadingRecords: "جارٍ التحميل...",
                zeroRecords: "لم يعثر على أية سجلات",
                emptyTable: "ليست هناك بيانات متاحة في الجدول",
                paginate: {
                    first: "الأول",
                    previous: "السابق",
                    next: "التالي",
                    last: "الأخير"
                },
                aria: {
                    sortAscending: ": تفعيل لترتيب العمود تصاعدياً",
                    sortDescending: ": تفعيل لترتيب العمود تنازلياً"
                }
            }
        };
        this.dtOptions = {
            pageLength: 10,
            processing: true,
        };
        this.commonService.amendmentReleaseAndconfiscateCreationLgListIssueForMe(this.crNoOrUidNo, this.currentWorkflowID)
            .subscribe(res => {
            console.log("AllLGRequestBeneficiarySpecific list::::" + JSON.stringify(res));
            this.activeLgForMeLists = res;
            console.log("pending list is::::" + JSON.stringify(this.myActiveLgLists));
        });
    }
    RowSelected(pendingData) {
        this.commonService.isPrivateLgPending1Completed = true;
        console.log("private entity pending list::::" + JSON.stringify(pendingData));
        console.log("testy122" + pendingData.beneficiary_name);
        this.commonService.lgIssuanceApproval = new _models_lgIssuance_model__WEBPACK_IMPORTED_MODULE_5__["LGIssuanceModel"]();
        this.commonService.lgIssuanceApproval.lg_no = pendingData.lg_no;
        if (pendingData.lg_type !== null || pendingData.lg_type !== undefined) {
            this.commonService.lgIssuanceApproval.LGType = pendingData.lg_type;
        }
        if (pendingData.beneficiary_name !== null || pendingData.beneficiary_name !== undefined) {
            console.log("test beneficiary_name" + pendingData.beneficiary_name);
            this.commonService.lgIssuanceApproval.beneficiary_name = pendingData.beneficiary_name;
        }
        if (pendingData.bank_name !== null || pendingData.bank_name !== undefined) {
            console.log("bank_name" + pendingData.bank_name);
            this.commonService.lgIssuanceApproval.bankName = pendingData.bank_name;
        }
        if (pendingData.project_name !== null || pendingData.project_name !== undefined) {
            console.log("bank_name" + pendingData.project_name);
            this.commonService.lgIssuanceApproval.project_name = pendingData.project_name;
        }
        if (pendingData.request_date !== null || pendingData.request_date !== undefined) {
            console.log("bank_name" + pendingData.request_date);
            this.commonService.lgIssuanceApproval.request_date = pendingData.request_date;
        }
        if (pendingData.request_status_flag !== null || pendingData.request_status_flag !== undefined) {
            console.log("bank_name" + pendingData.request_status_flag);
            this.commonService.lgIssuanceApproval.status = pendingData.request_status_flag;
        }
        if (pendingData.start_date !== null || pendingData.start_date !== undefined) {
            this.commonService.lgIssuanceApproval.LGStartDate = pendingData.start_date;
        }
        if (pendingData.end_date !== null || pendingData.end_date !== undefined) {
            this.commonService.lgIssuanceApproval.LGEndDate = pendingData.end_date;
        }
        if (pendingData.contract_value !== null || pendingData.contract_value !== undefined) {
            this.commonService.lgIssuanceApproval.Amount = pendingData.lG_amount;
            //var converter = require('number-to-words');
            this.commonService.lgIssuanceApproval.amountInNumber = this.commonService.lgIssuanceApproval.Amount;
        }
        if (pendingData.currency !== null || pendingData.currency !== undefined) {
            this.commonService.lgIssuanceApproval.currency = pendingData.currency;
        }
        if (pendingData.termsNConditions !== null || pendingData.termsNConditions !== undefined) {
            this.commonService.lgIssuanceApproval.termsNconditionsMessage = pendingData.termsNConditions;
        }
        if (pendingData.status !== null || pendingData.status !== undefined) {
            this.commonService.lgIssuanceApproval.status = pendingData.status;
        }
        if (pendingData.response_code !== null || pendingData.response_code !== undefined) {
            this.commonService.lgIssuanceApproval.response_code = pendingData.response_code;
            console.log("............................pendingData.response_code" + pendingData.response_code);
        }
        if (pendingData.terms_condition_message !== null || pendingData.terms_condition_message !== undefined) {
            this.commonService.lgIssuanceApproval.terms_condition_message = pendingData.terms_condition_message;
            console.log("........................pendingData.terms_condition_message" + pendingData.terms_condition_message);
        }
        if (pendingData.request_id !== null || pendingData.request_id !== undefined) {
            this.commonService.lgIssuanceApproval.requestId = pendingData.request_id;
            console.log("........................pendingData.request_id" + pendingData.request_id);
        }
        if (pendingData.create_by !== null || pendingData.create_by !== undefined) {
            this.commonService.lgIssuanceApproval.create_by = pendingData.create_by;
        }
        /* if(pendingData.request_status_flag !== null || pendingData.request_status_flag !== undefined){
          this.commonService.lgIssuanceApproval.status = pendingData.request_status_flag;
        } */
        if (pendingData.write_up !== null || pendingData.write_up !== undefined) {
            this.commonService.lgIssuanceApproval.writeUpType = pendingData.write_up;
        }
        if (pendingData.project_name !== null || pendingData.project_name !== undefined) {
            this.commonService.lgIssuanceApproval.projectName = pendingData.project_name;
        }
        if (pendingData.project_no !== null || pendingData.project_no !== undefined) {
            this.commonService.lgIssuanceApproval.projectNumber = pendingData.project_no;
        }
        if (pendingData.purpose_of_bond !== null || pendingData.purpose_of_bond !== undefined) {
            this.commonService.lgIssuanceApproval.puroseOfBond = pendingData.purpose_of_bond;
        }
        if (pendingData.byan_no !== null || pendingData.byan_no !== undefined) {
            this.commonService.lgIssuanceApproval.bayanNuymber = pendingData.byan_no;
        }
        if (pendingData.zakat_start_date !== null || pendingData.zakat_start_date !== undefined) {
            this.commonService.lgIssuanceApproval.ZakatPeriodStartDate = pendingData.zakat_start_date;
        }
        if (pendingData.zakat_end_date !== null || pendingData.zakat_end_date !== undefined) {
            this.commonService.lgIssuanceApproval.ZakatPeriodEndDate = pendingData.zakat_end_date;
        }
        if (pendingData.lg_validity_date !== null || pendingData.lg_validity_date !== undefined) {
            this.commonService.lgIssuanceApproval.lg_validity_date = pendingData.validDt;
        }
        if (pendingData.account_of_contract_processed !== null || pendingData.account_of_contract_processed !== undefined) {
            this.commonService.lgIssuanceApproval.ac_of_contract = pendingData.account_of_contract_processed;
        }
        if (pendingData.agree_tag !== null || pendingData.agree_tag !== undefined) {
            this.commonService.lgIssuanceApproval.agree_tag = pendingData.agree_tag;
        }
        if (pendingData.beneficiary_id !== null || pendingData.beneficiary_id !== undefined) {
            this.commonService.lgIssuanceApproval.beneficiaryId = pendingData.beneficiary_id;
        }
        if (pendingData.supplier_id !== null || pendingData.supplier_id !== undefined) {
            this.commonService.lgIssuanceApproval.supplierId = pendingData.supplier_id;
            console.log("........................pendingData.terms_condition_message" + pendingData.supplier_id);
        }
        if (pendingData.lg_issue_date !== null || pendingData.lg_issue_date !== undefined) {
            this.commonService.lgIssuanceApproval.LGIssueDate = pendingData.lg_issue_date;
        }
        if (pendingData.beneficiary_UID !== null || pendingData.beneficiary_UID !== undefined) {
            this.commonService.lgIssuanceApproval.beneficiary_UID = pendingData.beneficiary_UID;
        }
        if (pendingData.role_id !== null || pendingData.role_id !== undefined) {
            this.commonService.lgIssuanceApproval.beneficiary_role_id = pendingData.role_id;
        }
        if (pendingData.supplier_entity_id !== null || pendingData.supplier_entity_id !== undefined) {
            this.commonService.lgIssuanceApproval.supplier_entity_id = pendingData.supplier_entity_id;
        }
        if (pendingData.beneficiary_entity_id !== null || pendingData.beneficiary_entity_id !== undefined) {
            this.commonService.lgIssuanceApproval.beneficiary_entity_id = pendingData.beneficiary_entity_id;
        }
        console.log("Before");
        console.log(pendingData);
        console.log("After");
        console.log(this.commonService.lgIssuanceApproval);
        this.router.navigate(['govLgDetails']);
        //this.lgIssuance.
    }
};
GovernmentReleaseListComponent.ctorParameters = () => [
    { type: _services_common_service_service__WEBPACK_IMPORTED_MODULE_3__["CommonService"] },
    { type: _angular_router__WEBPACK_IMPORTED_MODULE_4__["Router"] },
    { type: _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormBuilder"] },
    { type: _ngx_translate_core__WEBPACK_IMPORTED_MODULE_6__["TranslateService"] }
];
GovernmentReleaseListComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-government-release-list',
        template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! raw-loader!./government-release-list.component.html */ "./node_modules/raw-loader/dist/cjs.js!./src/app/government-release-list/government-release-list.component.html")).default,
        styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! ./government-release-list.component.css */ "./src/app/government-release-list/government-release-list.component.css")).default]
    }),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_services_common_service_service__WEBPACK_IMPORTED_MODULE_3__["CommonService"], _angular_router__WEBPACK_IMPORTED_MODULE_4__["Router"], _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormBuilder"], _ngx_translate_core__WEBPACK_IMPORTED_MODULE_6__["TranslateService"]])
], GovernmentReleaseListComponent);



/***/ }),

/***/ "./src/app/government-workflow/government-workflow.component.css":
/*!***********************************************************************!*\
  !*** ./src/app/government-workflow/government-workflow.component.css ***!
  \***********************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2dvdmVybm1lbnQtd29ya2Zsb3cvZ292ZXJubWVudC13b3JrZmxvdy5jb21wb25lbnQuY3NzIn0= */");

/***/ }),

/***/ "./src/app/government-workflow/government-workflow.component.ts":
/*!**********************************************************************!*\
  !*** ./src/app/government-workflow/government-workflow.component.ts ***!
  \**********************************************************************/
/*! exports provided: GovernmentWorkflowComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GovernmentWorkflowComponent", function() { return GovernmentWorkflowComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm2015/forms.js");
/* harmony import */ var _services_common_service_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../services/common-service.service */ "./src/app/services/common-service.service.ts");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm2015/router.js");
/* harmony import */ var _ngx_translate_core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @ngx-translate/core */ "./node_modules/@ngx-translate/core/fesm2015/ngx-translate-core.js");






let GovernmentWorkflowComponent = class GovernmentWorkflowComponent {
    constructor(commonService, router, fb, translate) {
        this.commonService = commonService;
        this.router = router;
        this.fb = fb;
        this.translate = translate;
        this.lgTypeList = [];
        this.bankNamesList = [];
        this.actionList = [];
        this.supplierList = [];
        this.activityList = [];
        this.isworkflowDetails = false;
        this.bankIBANList = [];
        this.IBANList = [];
        this.menuAccess = [];
        this.acl = [];
        this.isworkflowdisable = true; //disable button
        this.roleId = localStorage.getItem('roleId');
        console.log("this.roleId::::" + this.roleId);
        this.loginId = localStorage.getItem('userId');
        console.log("this.loginId::::" + this.loginId);
        this.userId = localStorage.getItem('userId');
        console.log("this.userId::::" + this.userId);
        this.crNoOrUidNo = localStorage.getItem('crNoOrUidNo');
        console.log("this.crNoOrUidNo::::" + this.crNoOrUidNo);
        this.acl = JSON.parse(localStorage.getItem('acl'));
        console.log("ACL ::::" + JSON.stringify(this.acl));
        if (localStorage.getItem('onBoardResolution') == 'Y') {
            this.isnormaluser = false;
        }
        else {
            this.isnormaluser = true;
        }
    }
    ngOnInit() {
        this.commonService.getMenuByLoginId(this.loginId)
            .subscribe(res => {
            this.menuAccess = res[0];
            console.log("getMenuByLoginId :" + JSON.stringify(res));
            //console.log("MenuByLoginId >>> "+JSON.stringify(res[0].Amendment['subMenu'][0].action_nm));
        });
        this.commonService.getLGTypeList()
            .subscribe(res => {
            console.log("LG list::::" + JSON.stringify(res));
            this.lgTypeList = res;
        });
        //To get IBAN
        /* this.commonService.getIBANList(this.userId)
        .subscribe(res => {
          console.log("IBAN list::::" + JSON.stringify(res));
          this.bankNamesList = res;
        }); */
        this.commonService.getIbanListByLoginId(this.userId)
            .subscribe(res => {
            console.log("NEW IBAN list::::" + JSON.stringify(res));
            this.bankIBANList = res;
        });
        this.commonService.getActionList()
            .subscribe(res => {
            console.log("Action list::::" + JSON.stringify(res));
            this.actionList = res;
        });
        this.commonService.getGovUserByCRNo(this.loginId)
            .subscribe(res => {
            console.log("Gov user list::::" + JSON.stringify(res));
            this.supplierList = res;
        });
        this.commonService.getActivityMasterList()
            .subscribe(res => {
            console.log("Activity list::::" + JSON.stringify(res));
            this.activityList = res;
        });
        this.workflowForm = this.fb.group({
            workflow_id: [''],
            menu_id: [1],
            workflow_desc: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required]],
            status: ['A'],
            type: ['E'],
            entity_id: [this.crNoOrUidNo],
            create_by: [this.userId],
            steps: this.fb.array([
                // load first row at start
                this.getStep()
            ])
        });
        this.commonService.editworkflowIdObservable.subscribe((WFID) => {
            if (WFID) {
                this.clearAllSteps();
                console.log('observable data get @=================>', WFID);
                this.commonService.workflowDetails(this.crNoOrUidNo, WFID)
                    .subscribe(res => {
                    if (res) {
                        // this.workflowDetails = res;
                        this.isworkflowDetails = true;
                        console.log("workflowDetails :::: >>>>>>" + JSON.stringify(res));
                        this.workflowForm.patchValue({
                            workflow_id: res[0].workflow_id,
                            menu_id: res[0].menu_id,
                            workflow_desc: res[0].workflow_desc,
                            status: 'A',
                            type: 'E',
                            entity_id: res[0].entity_id,
                            create_by: this.userId,
                        });
                        /*  const stepsArray = [
                           {login_id: '2000000007', bank_code: 'ALR', iban_no: 'SA7630000000000222222222', level: "1", step: 0, action_id: "1", price_limit: "150", lg_type_id: "1", activity_id: "3", create_by: "2000000007", isEditable: true },
                           {login_id: '2000000007', bank_code: 'ALR', iban_no: 'SA7630000000000222222222', level: "1", step: 0, action_id: "2", price_limit: "150", lg_type_id: "1", activity_id: "3", create_by: "2000000007", isEditable: true },
                           
                         ]; */
                        const stepsArray = [];
                        //
                        for (var val of res) {
                            let x = { workflow_step_id: val.workflow_step_id, login_id: val.login_id, bank_code: val.bank_code, iban_no: val.iban_no, level: val.level, step: val.step, action_id: JSON.stringify(val.action_id), price_limit: JSON.stringify(val.price_limit), lg_type_id: val.lg_type_id, activity_id: JSON.stringify(val.activity_id), create_by: this.userId, isEditable: true };
                            stepsArray.push(x);
                        }
                        this.onSelectBank(val.bank_code);
                        this.step_length = stepsArray.length;
                        console.log("stepsArray :::: >>>>>>" + stepsArray);
                        console.log("stepsArray Length :::: >>>>>>" + stepsArray.length);
                        const control = this.workflowForm.controls['steps'];
                        for (let i = 1; i < res.length; i++) {
                            control.push(this.getStep());
                        }
                        this.workflowForm.patchValue({ steps: stepsArray });
                        this.isworkflowdisable = false; //enable button 
                    }
                });
            }
        });
        /* if(localStorage.getItem('editworkflowId')){
          this.editworkflowId = localStorage.getItem('editworkflowId');
          console.log("this.editworkflowId::::" + this.editworkflowId);
          localStorage.removeItem("editworkflowId");
    
          this.commonService.workflowDetails(this.userId,this.editworkflowId)
          .subscribe(res => {
            if(res){
             // this.workflowDetails = res;
              this.isworkflowDetails = true;
              console.log("workflowDetails :::: >>>>>>" + JSON.stringify(res));
    
    
              this.workflowForm.patchValue({
                workflow_id: res[0].workflow_id,
                menu_id: res[0].menu_id,
                workflow_desc: res[0].workflow_desc,
                status: 'A',
                type: 'E',
                entity_id: res[0].entity_id,
                create_by: this.userId,
              });
              const stepsArray =[];
              for (var val of res) {
                let x = {workflow_step_id: val.workflow_step_id, login_id: val.login_id, bank_code: val.bank_code, iban_no: val.iban_no, level: val.level, step: val.step, action_id: JSON.stringify(val.action_id), price_limit: JSON.stringify(val.price_limit), lg_type_id:  val.lg_type_id, activity_id: JSON.stringify(val.activity_id), create_by: this.userId, isEditable: true }
                stepsArray.push(x);
              }
              this.onSelectBank(val.bank_code);
              this.step_length = stepsArray.length;
              console.log("stepsArray :::: >>>>>>"+stepsArray);
              console.log("stepsArray Length :::: >>>>>>"+stepsArray.length);
    
              
    
              const control = <FormArray>this.workflowForm.controls['steps'];
              for (let i = 1; i < res.length; i++) {
                control.push(this.getStep());
              }
              this.workflowForm.patchValue({steps: stepsArray});
              this.isworkflowdisable = false; //enable button
    
            }
    
          });
        } */
    }
    getStep() {
        const numberPatern = '^[0-9.,]+$';
        return this.fb.group({
            workflow_step_id: [''],
            login_id: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
            bank_code: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
            iban_no: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
            level: ['1'],
            step: [''],
            action_id: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
            price_limit: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
            lg_type_id: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
            activity_id: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
            //current_action: ['', [Validators.required, Validators.pattern(numberPatern)]],
            //next_action: ['', [Validators.required, Validators.pattern(numberPatern)]],
            //next_state: ['', [Validators.required, Validators.pattern(numberPatern)]],
            //conditional: [''],
            //condition_value: ['', [Validators.required, Validators.pattern(numberPatern)]],
            create_by: [this.userId],
            isEditable: [true]
        });
    }
    /**
     * Add new step row into form
     */
    addStep(i, last) {
        const control = this.workflowForm.controls['steps'];
        //control.push(this.getStep());
        console.log("I >> " + i);
        console.log("last :" + last);
        control.insert(i + 1, this.getStep());
        this.step_length = control.length;
        console.log("length >>" + control.length);
        //this.isworkflowdisable = false; //enable button 
        if (last) {
            this.isworkflowdisable = true; //disable button 
        }
        console.log(this.isworkflowdisable);
    }
    /**
     * Remove step row from form on click delete button
     */
    removeStep(i) {
        const control = this.workflowForm.controls['steps'];
        control.removeAt(i);
    }
    /**
     * This is one of the way how clear steps fields.
     */
    clearAllSteps() {
        const control = this.workflowForm.controls['steps'];
        while (control.length) {
            control.removeAt(control.length - 1);
        }
        control.clearValidators();
        control.push(this.getStep());
    }
    saveworkflow() {
        console.log(this.workflowForm.value);
        this.commonService.saveworkflow(this.workflowForm.value)
            .subscribe(res => {
            console.log(res);
            this.commonService.showGeneralMessage("", res.responseMessage, false);
            if (res.responseCode == '1') {
                //this.router.navigate(['governmentaccountmanagement']);
            }
        });
    }
    /*   onSelectBank(){
        console.log('onSelectBank value >', this.bank_code);
        
        // this.dataSubscribe = this.commonService.getListData('getUserDetail', value)
        // .subscribe(res => {
        //   console.log("onSelectBank response  >>>>>",  res);
        // });
    
      } */
    onSelectBank(bank_code) {
        this.iban_no = "";
        let dropDownData = this.bankIBANList.find((data) => data.bank_code === bank_code);
        if (dropDownData) {
            console.log(dropDownData);
            this.IBANList = dropDownData.Iban_no;
        }
        /*  if (dropDownData) {
           this.IBANList = dropDownData.Iban_no;
           if(this.IBANList){
             this.iban_no=this.IBANList[0];
           }
           
         } else {
           this.IBANList = [];
         } */
    }
    onSelectAction(action_id, i, last) {
        console.log("action_id :" + action_id);
        console.log("i::" + i);
        console.log("Last " + last);
        if (last && (action_id == 3)) {
            this.isworkflowdisable = false; //enable button 
        }
        if (last && (action_id == 2)) {
            this.isworkflowdisable = true; //enable button 
        }
        console.log(this.isworkflowdisable);
    }
};
GovernmentWorkflowComponent.ctorParameters = () => [
    { type: _services_common_service_service__WEBPACK_IMPORTED_MODULE_3__["CommonService"] },
    { type: _angular_router__WEBPACK_IMPORTED_MODULE_4__["Router"] },
    { type: _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormBuilder"] },
    { type: _ngx_translate_core__WEBPACK_IMPORTED_MODULE_5__["TranslateService"] }
];
GovernmentWorkflowComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-government-workflow',
        template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! raw-loader!./government-workflow.component.html */ "./node_modules/raw-loader/dist/cjs.js!./src/app/government-workflow/government-workflow.component.html")).default,
        styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! ./government-workflow.component.css */ "./src/app/government-workflow/government-workflow.component.css")).default]
    }),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_services_common_service_service__WEBPACK_IMPORTED_MODULE_3__["CommonService"], _angular_router__WEBPACK_IMPORTED_MODULE_4__["Router"], _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormBuilder"], _ngx_translate_core__WEBPACK_IMPORTED_MODULE_5__["TranslateService"]])
], GovernmentWorkflowComponent);



/***/ }),

/***/ "./src/app/govpendingtasks/govpendingtasks.component.css":
/*!***************************************************************!*\
  !*** ./src/app/govpendingtasks/govpendingtasks.component.css ***!
  \***************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2dvdnBlbmRpbmd0YXNrcy9nb3ZwZW5kaW5ndGFza3MuY29tcG9uZW50LmNzcyJ9 */");

/***/ }),

/***/ "./src/app/govpendingtasks/govpendingtasks.component.ts":
/*!**************************************************************!*\
  !*** ./src/app/govpendingtasks/govpendingtasks.component.ts ***!
  \**************************************************************/
/*! exports provided: GovpendingtasksComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GovpendingtasksComponent", function() { return GovpendingtasksComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm2015/forms.js");
/* harmony import */ var _services_common_service_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../services/common-service.service */ "./src/app/services/common-service.service.ts");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm2015/router.js");
/* harmony import */ var _ngx_translate_core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @ngx-translate/core */ "./node_modules/@ngx-translate/core/fesm2015/ngx-translate-core.js");

//import { Component, OnInit } from '@angular/core';





let GovpendingtasksComponent = class GovpendingtasksComponent {
    constructor(commonService, router, fb, translate) {
        this.commonService = commonService;
        this.router = router;
        this.fb = fb;
        this.translate = translate;
        this.isOpenGovList = true;
        this.isOpenPrivateList = false;
        this.isGovClicked = true;
        this.isPrivateClicked = false;
        this.dtOptions = {};
        this.dtOptionsAR = {};
        this.userObject = {};
    }
    ngOnInit() {
        this.userId = localStorage.getItem('userId');
        console.log("this.userId::::" + this.userId);
        this.userName = localStorage.getItem('userName');
        console.log("this.userName::::" + this.userName);
        this.roleId = localStorage.getItem('roleId');
        console.log("this.role_ID::::" + this.roleId);
        /*************************************************** */
        this.commonService.checkSessionExpired(this.userId)
            .then((data) => {
            if (data == 0) {
                this.commonService.showGeneralMessage(this.translate.instant('HOME.Session_Expired'), this.translate.instant('HOME.logged_out'), false);
                this.commonService.logout(this.userId);
                return;
            }
            else {
            }
        });
        /************************************************** */
        this.dtOptionsAR = {
            pageLength: 10,
            processing: true,
            language: {
                processing: "جارٍ التحميل...",
                search: "ابحث:",
                lengthMenu: "أظهر _MENU_ مدخلات",
                info: "إظهار _START_ إلى _END_ من أصل _TOTAL_ مدخل",
                infoEmpty: "يعرض 0 إلى 0 من أصل 0 سجل",
                infoFiltered: "(منتقاة من مجموع _MAX_ مُدخل)",
                infoPostFix: "",
                loadingRecords: "جارٍ التحميل...",
                zeroRecords: "لم يعثر على أية سجلات",
                emptyTable: "ليست هناك بيانات متاحة في الجدول",
                paginate: {
                    first: "الأول",
                    previous: "السابق",
                    next: "التالي",
                    last: "الأخير"
                },
                aria: {
                    sortAscending: ": تفعيل لترتيب العمود تصاعدياً",
                    sortDescending: ": تفعيل لترتيب العمود تنازلياً"
                }
            }
        };
        this.dtOptions = {
            pageLength: 10,
            processing: true,
        };
        this.commonService.getBeneficiaryUnverifiedEntity().subscribe(ul => {
            this.govLists = ul;
            console.log(this.govLists);
        });
        //this.govLists = [];
    }
    goToGovListTab() {
        this.isOpenGovList = true;
        this.isOpenPrivateList = false;
        this.isGovClicked = true;
        this.isPrivateClicked = false;
        //To get pending list
        console.log("test");
        this.commonService.getBeneficiaryUnverifiedEntity().subscribe(ul => {
            this.govLists = ul;
            console.log(this.govLists);
        });
    }
    goToPrivateTab() {
        this.isOpenGovList = false;
        this.isOpenPrivateList = true;
        this.isGovClicked = false;
        this.isPrivateClicked = true;
        //To get pending list
        this.commonService.getSupplierUnverifiedEntity().subscribe(ul => {
            this.privateLists = ul;
            console.log(this.privateLists);
            console.log('Hi');
            console.log(ul.userObject[0].address);
        });
    }
    GovRowSelected(pendingData) {
        console.log(pendingData.beneficiary_UID);
        console.log(pendingData.national_id);
        localStorage.setItem('pending_beneficiary_UID', pendingData.beneficiary_UID);
        localStorage.setItem('pending_national_id', pendingData.national_id);
        //this.router.navigateByUrl('/goventityreginfo');
        this.router.navigateByUrl('/governmentEntityRegistrationView');
    }
    PrivateRowSelected(pendingData) {
        localStorage.setItem('pending_cr_no', pendingData.cr_no);
        localStorage.setItem('pending_national_id', pendingData.national_id);
        /*  this.commonService.getPrivateRowEntitySelect(pendingData.national_id,pendingData.cr_no)(
    
         ); */
        this.router.navigateByUrl('/privateentityreginfo');
        //console.log(pendingData);
        //console.log(pendingData.cr_no);
    }
};
GovpendingtasksComponent.ctorParameters = () => [
    { type: _services_common_service_service__WEBPACK_IMPORTED_MODULE_3__["CommonService"] },
    { type: _angular_router__WEBPACK_IMPORTED_MODULE_4__["Router"] },
    { type: _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormBuilder"] },
    { type: _ngx_translate_core__WEBPACK_IMPORTED_MODULE_5__["TranslateService"] }
];
GovpendingtasksComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-govpendingtasks',
        template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! raw-loader!./govpendingtasks.component.html */ "./node_modules/raw-loader/dist/cjs.js!./src/app/govpendingtasks/govpendingtasks.component.html")).default,
        styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! ./govpendingtasks.component.css */ "./src/app/govpendingtasks/govpendingtasks.component.css")).default]
    }),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_services_common_service_service__WEBPACK_IMPORTED_MODULE_3__["CommonService"], _angular_router__WEBPACK_IMPORTED_MODULE_4__["Router"],
        _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormBuilder"], _ngx_translate_core__WEBPACK_IMPORTED_MODULE_5__["TranslateService"]])
], GovpendingtasksComponent);



/***/ }),

/***/ "./src/app/header/header.component.css":
/*!*********************************************!*\
  !*** ./src/app/header/header.component.css ***!
  \*********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2hlYWRlci9oZWFkZXIuY29tcG9uZW50LmNzcyJ9 */");

/***/ }),

/***/ "./src/app/header/header.component.ts":
/*!********************************************!*\
  !*** ./src/app/header/header.component.ts ***!
  \********************************************/
/*! exports provided: HeaderComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "HeaderComponent", function() { return HeaderComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm2015/router.js");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/common */ "./node_modules/@angular/common/fesm2015/common.js");
/* harmony import */ var _services_common_service_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../services/common-service.service */ "./src/app/services/common-service.service.ts");
/* harmony import */ var _ngx_translate_core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @ngx-translate/core */ "./node_modules/@ngx-translate/core/fesm2015/ngx-translate-core.js");






let HeaderComponent = class HeaderComponent {
    constructor(document, translate, commonService, location, router) {
        this.document = document;
        this.translate = translate;
        this.commonService = commonService;
        this.router = router;
        this.requestedUrl = "";
        this.hideElement = false;
        this.English = true;
        this.notificationList = [];
        this.notificationpopup = false;
        router.events.subscribe((event) => {
            // alert("constructor: "+this.route);
            // this.routefooter = location.path();
            translate.addLangs(['en', 'ar']);
            translate.setDefaultLang('ar');
            const browserLang = translate.getBrowserLang();
            //translate.use(browserLang.match(/en|ar/) ? browserLang : 'ar');
            this.roleId = localStorage.getItem('roleId');
            //tajel
            if (event instanceof _angular_router__WEBPACK_IMPORTED_MODULE_2__["NavigationEnd"]) {
                if (event.url === '/privateEntityReg' || event.url === '/privateEntityReg2' || event.url === '/privateEntityReg3'
                    || event.url === '/privateEntityRegFinal' || event.url === '/governmentEntityReg' ||
                    event.url === '/governmentEntityReg2' || event.url === '/governmentEntityReg3') {
                    this.hideElement = false;
                }
                else {
                    this.hideElement = true;
                }
            }
            if (location.path() != undefined && location.path() != '' && location.path() != '/') {
                this.route = location.path();
                this.routeParms = this.route.split('/')[1];
                // console.log(' this.route >>>>>>>>>>>>>>>>>',  this.route);
                // this.current_url_name = this.route.split('/')[1]
                //alert("constructor: "+this.route);
            } /*else {
              this.route = '/home'
            }*/
        });
    }
    ; // hidden by default
    ngOnInit() {
        this.userId = localStorage.getItem('userId');
        this.crNoOrUidNo = localStorage.getItem('crNoOrUidNo');
        console.log("Header this.userId::::" + this.userId);
        if (this.userId) {
            this.commonService.getNotificationList(this.userId, this.crNoOrUidNo)
                .subscribe(res => {
                this.notificationList = res.userObject;
                console.log("noticationList :::: >>>>>>" + res);
            });
            this.commonService.getNotificationCountByLoginId(this.userId, this.crNoOrUidNo)
                .subscribe(res => {
                console.log("noticationCount :::: >>>>>>" + res);
                this.notificationCount = res.userObject.count;
                this.notification_ids = res.userObject.notification_ids;
            });
        }
    }
    logout() {
        this.commonService.quickLogout();
    }
    changelang() {
        console.log(this.translate.currentLang);
        this.uselang = this.translate.currentLang;
        if (this.translate.currentLang == 'en') {
            this.uselang = 'ar';
            this.styleName = this.uselang;
            this.styleName = "styles-" + this.styleName + ".css";
            this.translate.use(this.uselang);
        }
        else {
            this.uselang = 'en';
            this.styleName = this.uselang;
            this.styleName = "styles-" + this.styleName + ".css";
            this.translate.use(this.uselang);
        }
        /* this.translate.use(this.uselang);
     
     
     
        this.styleName = this.uselang;
        console.log("select lang "+this.styleName);
        this.styleName = "styles-"+this.styleName+".css"; */
        console.log("filelang " + this.styleName);
        const head = this.document.getElementsByTagName('head')[0];
        let themeLink = this.document.getElementById('client-theme');
        if (themeLink) {
            themeLink.href = this.styleName;
        }
        else {
            const style = this.document.createElement('link');
            style.id = 'client-theme';
            style.rel = 'stylesheet';
            style.href = `${this.styleName}`;
            head.appendChild(style);
        }
    }
    clearData() {
        this.commonService.isClickPrivateEntityReg = true;
        this.commonService.isClickGovernmentEntityReg = true;
    }
    getNotification() {
        this.notificationpopup = !this.notificationpopup;
        if (this.notificationCount > 0) {
            this.commonService.updateNewNotificationFlag(this.notification_ids)
                .subscribe(res => {
                console.log("noticationCount :::: >>>>>>" + res);
                if (res.responseMessage == 'success') {
                    this.notificationCount = 0;
                }
            });
        }
    }
};
HeaderComponent.ctorParameters = () => [
    { type: Document, decorators: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"], args: [_angular_common__WEBPACK_IMPORTED_MODULE_3__["DOCUMENT"],] }] },
    { type: _ngx_translate_core__WEBPACK_IMPORTED_MODULE_5__["TranslateService"] },
    { type: _services_common_service_service__WEBPACK_IMPORTED_MODULE_4__["CommonService"] },
    { type: _angular_common__WEBPACK_IMPORTED_MODULE_3__["Location"] },
    { type: _angular_router__WEBPACK_IMPORTED_MODULE_2__["Router"] }
];
HeaderComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-header',
        template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! raw-loader!./header.component.html */ "./node_modules/raw-loader/dist/cjs.js!./src/app/header/header.component.html")).default,
        styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! ./header.component.css */ "./src/app/header/header.component.css")).default]
    }),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__param"](0, Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"])(_angular_common__WEBPACK_IMPORTED_MODULE_3__["DOCUMENT"])),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [Document, _ngx_translate_core__WEBPACK_IMPORTED_MODULE_5__["TranslateService"], _services_common_service_service__WEBPACK_IMPORTED_MODULE_4__["CommonService"], _angular_common__WEBPACK_IMPORTED_MODULE_3__["Location"], _angular_router__WEBPACK_IMPORTED_MODULE_2__["Router"]])
], HeaderComponent);



/***/ }),

/***/ "./src/app/help/help.component.css":
/*!*****************************************!*\
  !*** ./src/app/help/help.component.css ***!
  \*****************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2hlbHAvaGVscC5jb21wb25lbnQuY3NzIn0= */");

/***/ }),

/***/ "./src/app/help/help.component.ts":
/*!****************************************!*\
  !*** ./src/app/help/help.component.ts ***!
  \****************************************/
/*! exports provided: HelpComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "HelpComponent", function() { return HelpComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");


let HelpComponent = class HelpComponent {
    constructor() { }
    ngOnInit() {
    }
};
HelpComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-help',
        template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! raw-loader!./help.component.html */ "./node_modules/raw-loader/dist/cjs.js!./src/app/help/help.component.html")).default,
        styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! ./help.component.css */ "./src/app/help/help.component.css")).default]
    }),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [])
], HelpComponent);



/***/ }),

/***/ "./src/app/landing/landing.component.css":
/*!***********************************************!*\
  !*** ./src/app/landing/landing.component.css ***!
  \***********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xhbmRpbmcvbGFuZGluZy5jb21wb25lbnQuY3NzIn0= */");

/***/ }),

/***/ "./src/app/landing/landing.component.ts":
/*!**********************************************!*\
  !*** ./src/app/landing/landing.component.ts ***!
  \**********************************************/
/*! exports provided: LandingComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LandingComponent", function() { return LandingComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");


let LandingComponent = class LandingComponent {
    constructor() { }
    ngOnInit() {
    }
};
LandingComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-landing',
        template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! raw-loader!./landing.component.html */ "./node_modules/raw-loader/dist/cjs.js!./src/app/landing/landing.component.html")).default,
        styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! ./landing.component.css */ "./src/app/landing/landing.component.css")).default]
    }),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [])
], LandingComponent);



/***/ }),

/***/ "./src/app/login-dialog-component/login-dialog-component.component.css":
/*!*****************************************************************************!*\
  !*** ./src/app/login-dialog-component/login-dialog-component.component.css ***!
  \*****************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xvZ2luLWRpYWxvZy1jb21wb25lbnQvbG9naW4tZGlhbG9nLWNvbXBvbmVudC5jb21wb25lbnQuY3NzIn0= */");

/***/ }),

/***/ "./src/app/login-dialog-component/login-dialog-component.component.ts":
/*!****************************************************************************!*\
  !*** ./src/app/login-dialog-component/login-dialog-component.component.ts ***!
  \****************************************************************************/
/*! exports provided: LoginDialogComponentComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LoginDialogComponentComponent", function() { return LoginDialogComponentComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/material */ "./node_modules/@angular/material/esm2015/material.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm2015/forms.js");
/* harmony import */ var _services_common_service_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../services/common-service.service */ "./src/app/services/common-service.service.ts");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm2015/router.js");
/* harmony import */ var _ngx_translate_core__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @ngx-translate/core */ "./node_modules/@ngx-translate/core/fesm2015/ngx-translate-core.js");







let LoginDialogComponentComponent = class LoginDialogComponentComponent {
    constructor(commonService, router, fb, dialogRef, data, translate) {
        this.commonService = commonService;
        this.router = router;
        this.fb = fb;
        this.dialogRef = dialogRef;
        this.translate = translate;
        this.crnDetailsByNIDpopup = false;
        this.description = data.description;
        this.loginid = data.loginid;
    }
    ngOnInit() {
        // put the code from `ngOnInit` here
        //for checking login status
        this.commonService.checkSessionExpired(this.loginid)
            .then((data) => {
            //alert("checkSessionExpired 1234567890: "+data);
            if (data == 0) {
                this.close();
                this.commonService.showGeneralMessage(this.translate.instant('HOME.Session_Expired'), this.translate.instant('HOME.logged_out'), false);
                this.commonService.logout(this.loginid);
                return;
            }
            else {
                this.commonService.populateTableOfCRNByNID(this.loginid)
                    .subscribe(res => {
                    console.log("legth " + res.userObject);
                    if (res.userObject.length > 0) {
                        this.crnDetailsByNID = res.userObject;
                        this.crnDetailsByNIDpopup = false;
                    }
                    else {
                        this.crnDetailsByNID = res.userObject;
                        this.crnDetailsByNIDpopup = true;
                    }
                });
                this.dialogRef.backdropClick().subscribe(() => { this.close(); });
                this.form = this.fb.group({
                    description: [this.description, []]
                });
            }
        });
    }
    redirectByStatus(crn, responseCode, responseMessage) {
        this.closeOnly();
        //alert(responseCode);
        if (responseCode == this.commonService.CC_PENDING_CODE) {
            this.commonService.responseCodeforRegistrationFinal = responseCode;
            this.commonService.alertMsgforRegistrationFinal = responseMessage;
            this.router.navigate(['privateEntityRegFinal']);
        }
        else if (responseCode == this.commonService.CC_SUCCESS_CODE) {
            this.commonService.responseCodeforRegistrationFinal = responseCode;
            this.commonService.alertMsgforRegistrationFinal = responseMessage;
            this.router.navigate(['privateEntityRegFinal']);
        }
        else if (responseCode == this.commonService.BANK_PENDING_CODE) {
            this.commonService.responseCodeforRegistrationFinal = responseCode;
            this.commonService.alertMsgforRegistrationFinal = responseMessage;
            this.router.navigate(['privateEntityRegFinal']);
        }
        else if (responseCode == this.commonService.BANK_VERIFIED_CODE) {
            this.commonService.responseCodeforRegistrationFinal = responseCode;
            this.commonService.alertMsgforRegistrationFinal = responseMessage;
            //go to private entity's dashboard
            this.router.navigate(['dashboard']);
        }
        else if (responseCode == this.commonService.CC_FAILED_CODE) {
            /*  this.commonService.responseCodeforRegistrationFinal = responseCode;
              this.commonService.alertMsgforRegistrationFinal = responseMessage;
              //go to private entity's dashboard
              this.router.navigate(['dashboard']);*/
        }
        else if (responseCode == this.commonService.BANK_NOT_VERIFIED_CODE) {
            /* this.commonService.responseCodeforRegistrationFinal = responseCode;
             this.commonService.alertMsgforRegistrationFinal = responseMessage;
             //go to private entity's dashboard
             this.router.navigate(['dashboard']);*/
        }
        else if (responseCode == this.commonService.G_CC_SUCCESS) {
            this.router.navigate(['govDashboard']);
        }
        else if (responseCode == this.commonService.GCC_PENDING_CODE) {
            this.router.navigate(['governmentEntityReg3']);
        }
    }
    close() {
        if (confirm("You will be logged out! Do you want to continue?")) {
            this.dialogRef.close();
            this.commonService.logout(this.loginid);
        }
    }
    warnlogout() {
        this.commonService.showGeneralModal({ callerModule: 'close',
            headerTitle: this.translate.instant('HOME.warning'),
            bodyLabel: this.translate.instant('HOME.You_will_be_logged_out'),
            checkSession: true,
            loginid: this.loginid,
            dialogRef: this.dialogRef
        });
    }
    closeOnly() {
        this.dialogRef.close();
    }
    logoutOnNoCRN() {
        this.dialogRef.close();
        this.commonService.logout(this.loginid);
    }
};
LoginDialogComponentComponent.ctorParameters = () => [
    { type: _services_common_service_service__WEBPACK_IMPORTED_MODULE_4__["CommonService"] },
    { type: _angular_router__WEBPACK_IMPORTED_MODULE_5__["Router"] },
    { type: _angular_forms__WEBPACK_IMPORTED_MODULE_3__["FormBuilder"] },
    { type: _angular_material__WEBPACK_IMPORTED_MODULE_2__["MatDialogRef"] },
    { type: undefined, decorators: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"], args: [_angular_material__WEBPACK_IMPORTED_MODULE_2__["MAT_DIALOG_DATA"],] }] },
    { type: _ngx_translate_core__WEBPACK_IMPORTED_MODULE_6__["TranslateService"] }
];
LoginDialogComponentComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-login-dialog-component',
        template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! raw-loader!./login-dialog-component.component.html */ "./node_modules/raw-loader/dist/cjs.js!./src/app/login-dialog-component/login-dialog-component.component.html")).default,
        styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! ./login-dialog-component.component.css */ "./src/app/login-dialog-component/login-dialog-component.component.css")).default]
    }),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__param"](4, Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"])(_angular_material__WEBPACK_IMPORTED_MODULE_2__["MAT_DIALOG_DATA"])),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_services_common_service_service__WEBPACK_IMPORTED_MODULE_4__["CommonService"], _angular_router__WEBPACK_IMPORTED_MODULE_5__["Router"],
        _angular_forms__WEBPACK_IMPORTED_MODULE_3__["FormBuilder"],
        _angular_material__WEBPACK_IMPORTED_MODULE_2__["MatDialogRef"], Object, _ngx_translate_core__WEBPACK_IMPORTED_MODULE_6__["TranslateService"]])
], LoginDialogComponentComponent);



/***/ }),

/***/ "./src/app/login/login.component.css":
/*!*******************************************!*\
  !*** ./src/app/login/login.component.css ***!
  \*******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xvZ2luL2xvZ2luLmNvbXBvbmVudC5jc3MifQ== */");

/***/ }),

/***/ "./src/app/login/login.component.ts":
/*!******************************************!*\
  !*** ./src/app/login/login.component.ts ***!
  \******************************************/
/*! exports provided: LoginComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LoginComponent", function() { return LoginComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm2015/forms.js");
/* harmony import */ var _services_common_service_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../services/common-service.service */ "./src/app/services/common-service.service.ts");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm2015/router.js");
/* harmony import */ var _angular_material_dialog__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/material/dialog */ "./node_modules/@angular/material/esm2015/dialog.js");
/* harmony import */ var _otp_dialog_otp_dialog_component__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../otp-dialog/otp-dialog.component */ "./src/app/otp-dialog/otp-dialog.component.ts");
/* harmony import */ var _ngx_translate_core__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @ngx-translate/core */ "./node_modules/@ngx-translate/core/fesm2015/ngx-translate-core.js");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @angular/common */ "./node_modules/@angular/common/fesm2015/common.js");









let LoginComponent = class LoginComponent {
    constructor(document, translate, dialog, formBuilder, commonService, router) {
        this.document = document;
        this.translate = translate;
        this.dialog = dialog;
        this.formBuilder = formBuilder;
        this.commonService = commonService;
        this.router = router;
        this.togglePassView = false;
        this.textPattern = "^[A-Za-z ]*$";
        this.English = true;
        this.roleId = -1;
        this.validation_messages = {
            userId: [
                { type: "required", message: "This is a required field and should be exactly 10 digits only!" },
                {
                    type: "pattern",
                    message: "National Id should be composed of digits only."
                },
                /* {
                  type: "maxlength",
                  message: "National Id must be 10 digits only!."
                }, */
                {
                    type: "minlength",
                    message: "National Id must be 10 digits only!."
                }
            ],
            password: [
                { type: "required", message: "This is a required field." }
            ]
        };
    }
    ngOnInit() {
        localStorage.clear();
        this.submitLogin = this.formBuilder.group({
            userId: [
                "",
                [
                    _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required,
                    _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].pattern("^[0-9]*$"),
                    /*  Validators.maxLength(10), */
                    _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].minLength(10)
                ]
            ],
            password: [
                "",
                [
                    _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required
                ]
            ]
        });
    }
    onSubmit() {
        console.log("Login data:::" + JSON.stringify(this.submitLogin.value));
        if (this.submitLogin.valid) {
            this.commonService.showGeneralModal({ callerModule: 'LOADER',
                headerTitle: this.translate.instant('HOME.Loading'),
                bodyLabel: this.translate.instant('HOME.Please_retrieve_your_information'),
                checkSession: false,
                imgName: 'loader.gif'
            });
            this.commonService.postLoginDetails(this.submitLogin.value)
                .subscribe(res => {
                this.commonService.hideGeneralModal();
                console.log("Login Response is::::" + JSON.stringify(res));
                if (res.responseCode === 0) {
                    localStorage.clear();
                    this.commonService.hideGeneralModal();
                    this.commonService.showGeneralModal({ callerModule: 'GENERAL_MESSAGE',
                        headerTitle: this.translate.instant('HOME.Error'),
                        description: this.translate.instant('HOME.password_mismatch'),
                        checkSession: false
                    });
                    this.router.navigate(['login']);
                    return;
                }
                if (res.jwtToken !== undefined && res.jwtToken !== null) {
                    localStorage.setItem('jwtToken', res.jwtToken);
                }
                else {
                    this.commonService.hideGeneralModal();
                    this.commonService.showGeneralModal({ callerModule: 'GENERAL_MESSAGE',
                        headerTitle: this.translate.instant('HOME.Error'),
                        description: this.translate.instant("HOME.Received_insufficient_data"),
                        checkSession: false
                    });
                    localStorage.clear();
                    this.router.navigateByUrl('/login');
                    return;
                }
                if (res.userObject.crNoOrUidNo !== undefined && res.userObject.crNoOrUidNo !== null) {
                    localStorage.setItem('crNoOrUidNo', res.userObject.crNoOrUidNo);
                }
                if (res.userObject.on_board_resolution !== undefined && res.userObject.on_board_resolution !== null) {
                    localStorage.setItem('onBoardResolution', res.userObject.on_board_resolution);
                }
                if (res.userObject.entityName !== undefined && res.userObject.entityName !== null) {
                    localStorage.setItem('entityName', res.userObject.entityName);
                }
                if (res.userObject.loginId !== undefined && res.userObject.loginId !== null) {
                    localStorage.setItem('userId', res.userObject.loginId);
                }
                else {
                    this.commonService.hideGeneralModal();
                    this.commonService.showGeneralModal({ callerModule: 'GENERAL_MESSAGE',
                        headerTitle: this.translate.instant('HOME.Error'),
                        description: this.translate.instant("HOME.Received_insufficient_data"),
                        checkSession: false
                    });
                    localStorage.clear();
                    this.router.navigateByUrl('/login');
                    return;
                }
                /* from below on we can logout using loginid   */
                if (res.userObject.roleId !== undefined && res.userObject.roleId !== null) {
                    localStorage.setItem('roleId', res.userObject.roleId);
                }
                else {
                    this.commonService.hideGeneralModal();
                    this.commonService.showGeneralModal({ callerModule: 'GENERAL_MESSAGE',
                        headerTitle: this.translate.instant('HOME.Error'),
                        description: this.translate.instant("HOME.Received_insufficient_data"),
                        checkSession: false
                    });
                    localStorage.clear();
                    //this.router.navigateByUrl('/login');
                    this.commonService.logout(res.userObject.loginid);
                    return;
                }
                /*
                if (res.userObject.userName !== undefined  && res.userObject.userName !== null) {
                  localStorage.setItem('userName', res.userObject.userName);
                }
                else{
                alert("Sorry! We could not log you in. Received insufficient data.");
                localStorage.clear();
                //this.router.navigateByUrl('/login');
                this.commonService.logout(res.userObject.loginid);
                return;
                }
                */
                if (res.userObject.loginId !== undefined && res.userObject.loginId !== null) {
                    this.commonService.getMenuByLoginId(res.userObject.loginId)
                        .subscribe(menures => {
                        console.log("acl :" + JSON.stringify(menures[0]));
                        localStorage.setItem('acl', JSON.stringify(menures[0]));
                        //console.log("MenuByLoginId >>> "+JSON.stringify(res[0].Amendment['subMenu'][0].action_nm));
                    });
                }
                this.roleId = res.userObject.roleId;
                let OTP = 123456;
                let mmobile = '974.....68';
                let uid = res.userObject.loginId;
                //alert("uid "+res.userObject.loginId);
                let OTPNMobile = this.commonService.otpByLoginId(uid).subscribe(res => {
                    //alert("res code "+res.responseCode);
                    if (res.responseCode == 1) {
                        console.log("res123 code " + res.responseCode);
                        OTP = res.userObject.OTP;
                        mmobile = res.userObject.maskedContact;
                        this.otpDialog(uid, OTP, mmobile, this.roleId);
                    }
                    else {
                        this.commonService.hideGeneralModal();
                        this.commonService.showGeneralModal({ callerModule: 'GENERAL_MESSAGE',
                            headerTitle: this.translate.instant('HOME.Error'),
                            description: this.translate.instant("HOME.Error_occurred_while_sending_OTP"),
                            checkSession: false
                        });
                        localStorage.clear();
                        // this.router.navigateByUrl('/login');
                        this.commonService.logout(uid);
                    }
                });
            }, err => {
                this.commonService.hideGeneralModal();
                this.commonService.showGeneralModal({ callerModule: 'LOGIN_SUBMIT_ERROR',
                    headerTitle: this.translate.instant('HOME.Error'),
                    bodyLabel: '',
                    description: '' + err.statusText + '',
                    hint: this.translate.instant('HOME.internet_connection') + (navigator.onLine ? this.translate.instant('HOME.OK') : this.translate.instant('HOME.Not_Available')) + '',
                    checkSession: false,
                    imgName: 'loader.gif'
                });
            });
        }
    }
    resetForm() {
        if (this.submitLogin.valid) {
            console.log("Form Submitted!");
            this.submitLogin.reset();
        }
        this.router.navigateByUrl('/home');
    }
    otpDialog(loginid, otp, userMobile, roleId) {
        const dialogConfig = new _angular_material_dialog__WEBPACK_IMPORTED_MODULE_5__["MatDialogConfig"]();
        dialogConfig.disableClose = true;
        dialogConfig.autoFocus = true;
        dialogConfig.panelClass = 'custom-modalbox';
        dialogConfig.data = {
            description: 'description',
            loginid: loginid,
            otp: otp,
            userMobile: userMobile,
            role: roleId
        };
        this.dialog.open(_otp_dialog_otp_dialog_component__WEBPACK_IMPORTED_MODULE_6__["OtpDialogComponent"], dialogConfig);
    }
    viewPassword() {
        this.togglePassView = !this.togglePassView;
    }
    onClickPrivateEntityReg() {
        console.log("onClickPrivateEntityReg()");
        this.commonService.isClickPrivateEntityReg = true;
    }
    onClickGovernmentEntityReg() {
        this.commonService.isClickGovernmentEntityReg = true;
        console.log("onClickGovernmentEntityReg()" + this.commonService.isClickGovernmentEntityReg);
    }
    changelang() {
        console.log(this.translate.currentLang);
        this.uselang = this.translate.currentLang;
        if (this.translate.currentLang == 'en') {
            this.uselang = 'ar';
        }
        else {
            this.uselang = 'en';
        }
        this.translate.use(this.uselang);
        this.styleName = this.uselang;
        console.log("select lang " + this.styleName);
        this.styleName = "styles-" + this.styleName + ".css";
        console.log("filelang " + this.styleName);
        const head = this.document.getElementsByTagName('head')[0];
        let themeLink = this.document.getElementById('client-theme');
        if (themeLink) {
            themeLink.href = this.styleName;
        }
        else {
            const style = this.document.createElement('link');
            style.id = 'client-theme';
            style.rel = 'stylesheet';
            style.href = `${this.styleName}`;
            head.appendChild(style);
        }
    }
};
LoginComponent.ctorParameters = () => [
    { type: Document, decorators: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"], args: [_angular_common__WEBPACK_IMPORTED_MODULE_8__["DOCUMENT"],] }] },
    { type: _ngx_translate_core__WEBPACK_IMPORTED_MODULE_7__["TranslateService"] },
    { type: _angular_material_dialog__WEBPACK_IMPORTED_MODULE_5__["MatDialog"] },
    { type: _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormBuilder"] },
    { type: _services_common_service_service__WEBPACK_IMPORTED_MODULE_3__["CommonService"] },
    { type: _angular_router__WEBPACK_IMPORTED_MODULE_4__["Router"] }
];
LoginComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-login',
        template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! raw-loader!./login.component.html */ "./node_modules/raw-loader/dist/cjs.js!./src/app/login/login.component.html")).default,
        styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! ./login.component.css */ "./src/app/login/login.component.css")).default]
    }),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__param"](0, Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"])(_angular_common__WEBPACK_IMPORTED_MODULE_8__["DOCUMENT"])),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [Document, _ngx_translate_core__WEBPACK_IMPORTED_MODULE_7__["TranslateService"], _angular_material_dialog__WEBPACK_IMPORTED_MODULE_5__["MatDialog"], _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormBuilder"], _services_common_service_service__WEBPACK_IMPORTED_MODULE_3__["CommonService"], _angular_router__WEBPACK_IMPORTED_MODULE_4__["Router"]])
], LoginComponent);



/***/ }),

/***/ "./src/app/logout/logout.component.css":
/*!*********************************************!*\
  !*** ./src/app/logout/logout.component.css ***!
  \*********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xvZ291dC9sb2dvdXQuY29tcG9uZW50LmNzcyJ9 */");

/***/ }),

/***/ "./src/app/logout/logout.component.ts":
/*!********************************************!*\
  !*** ./src/app/logout/logout.component.ts ***!
  \********************************************/
/*! exports provided: LogoutComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LogoutComponent", function() { return LogoutComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm2015/forms.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm2015/router.js");
/* harmony import */ var _services_common_service_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../services/common-service.service */ "./src/app/services/common-service.service.ts");





let LogoutComponent = class LogoutComponent {
    constructor(router, formBuilder, commonService) {
        this.router = router;
        this.formBuilder = formBuilder;
        this.commonService = commonService;
    }
    ngOnInit() {
        this.commonService.quickLogout();
    }
};
LogoutComponent.ctorParameters = () => [
    { type: _angular_router__WEBPACK_IMPORTED_MODULE_3__["Router"] },
    { type: _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormBuilder"] },
    { type: _services_common_service_service__WEBPACK_IMPORTED_MODULE_4__["CommonService"] }
];
LogoutComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-logout',
        template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! raw-loader!./logout.component.html */ "./node_modules/raw-loader/dist/cjs.js!./src/app/logout/logout.component.html")).default,
        styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! ./logout.component.css */ "./src/app/logout/logout.component.css")).default]
    }),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_angular_router__WEBPACK_IMPORTED_MODULE_3__["Router"], _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormBuilder"], _services_common_service_service__WEBPACK_IMPORTED_MODULE_4__["CommonService"]])
], LogoutComponent);



/***/ }),

/***/ "./src/app/models/govEntity.model.ts":
/*!*******************************************!*\
  !*** ./src/app/models/govEntity.model.ts ***!
  \*******************************************/
/*! exports provided: GovernmentEntityModel */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GovernmentEntityModel", function() { return GovernmentEntityModel; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");

class GovernmentEntityModel {
}


/***/ }),

/***/ "./src/app/models/lgIssuance.model.ts":
/*!********************************************!*\
  !*** ./src/app/models/lgIssuance.model.ts ***!
  \********************************************/
/*! exports provided: LGIssuanceModel */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LGIssuanceModel", function() { return LGIssuanceModel; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");

class LGIssuanceModel {
}


/***/ }),

/***/ "./src/app/models/mci.model.ts":
/*!*************************************!*\
  !*** ./src/app/models/mci.model.ts ***!
  \*************************************/
/*! exports provided: MCIModel */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MCIModel", function() { return MCIModel; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");

class MCIModel {
}


/***/ }),

/***/ "./src/app/otp-dialog/otp-dialog.component.css":
/*!*****************************************************!*\
  !*** ./src/app/otp-dialog/otp-dialog.component.css ***!
  \*****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL290cC1kaWFsb2cvb3RwLWRpYWxvZy5jb21wb25lbnQuY3NzIn0= */");

/***/ }),

/***/ "./src/app/otp-dialog/otp-dialog.component.ts":
/*!****************************************************!*\
  !*** ./src/app/otp-dialog/otp-dialog.component.ts ***!
  \****************************************************/
/*! exports provided: OtpDialogComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "OtpDialogComponent", function() { return OtpDialogComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/material */ "./node_modules/@angular/material/esm2015/material.js");
/* harmony import */ var _services_common_service_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../services/common-service.service */ "./src/app/services/common-service.service.ts");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm2015/router.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm2015/forms.js");
/* harmony import */ var _login_dialog_component_login_dialog_component_component__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../login-dialog-component/login-dialog-component.component */ "./src/app/login-dialog-component/login-dialog-component.component.ts");
/* harmony import */ var _ngx_translate_core__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @ngx-translate/core */ "./node_modules/@ngx-translate/core/fesm2015/ngx-translate-core.js");








let OtpDialogComponent = class OtpDialogComponent {
    constructor(translate, dialog, formBuilder, commonService, router, dialogRef, data, route) {
        this.translate = translate;
        this.dialog = dialog;
        this.formBuilder = formBuilder;
        this.commonService = commonService;
        this.router = router;
        this.dialogRef = dialogRef;
        this.validation_messages = {
            userOTP: [
                { type: "required", message: "This is a required field." },
                {
                    type: "maxlength",
                    message: "Your OTP has only four digits."
                }
            ]
        };
        this.loginid = data.loginid;
        this.otp = data.otp;
        this.userMobile = data.userMobile;
        this.roleId = data.role;
    }
    ngOnInit() {
        // localStorage.clear();
        this.submitOTPLogin = this.formBuilder.group({
            userOTP: [
                "",
                [
                    _angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].required,
                    _angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].maxLength(4),
                ]
            ]
        });
        // put the code from `ngOnInit` here
        //for checking login status
        //alert("otp-dialog ngOnInit "+this.loginid);
        //alert(" call commomn service " +this.commonService.checkSessionExpired(this.loginid));
        this.commonService.checkSessionExpired(this.loginid)
            .then((data) => {
            if (data == 0) {
                this.close();
                this.commonService.showGeneralMessage(this.translate.instant('HOME.Session_Expired'), this.translate.instant('HOME.logged_out'), false);
                this.commonService.logout(this.loginid);
                return;
            }
            else {
                this.submitOTPLogin = this.formBuilder.group({
                    userOTP: [
                        "",
                        [
                            _angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].required,
                            _angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].maxLength(4)
                        ]
                    ]
                });
                this.typedOTP = this.otp;
            }
        });
        /* if(this.commonService.checkSessionExpired(this.loginid)==0){
         alert("otp-dialog ngOnInit checkSessionExpired");
          this.close();
         this.commonService.logout(this.loginid);
         return  ;
        }
        */
    }
    onOTPSubmit() {
        //alert(this.otp+" -  "+this.submitOTPLogin.get('userOTP').value+"  -  "+this.typedOTP);
        if (this.otp == this.typedOTP /*this.submitOTPLogin.get('userOTP').value*/) {
            this.close();
            if (this.roleId == this.commonService.ROLE_ADMIN) {
                this.router.navigate(['pendingtasks']);
                return;
            }
            else if (this.roleId == this.commonService.ROLE_GOVT) {
                this.commonService.getLoginDetailsFromNid(this.loginid)
                    .subscribe(res => {
                    console.log("responsecode for otp-dialog component:::" + JSON.stringify(res));
                    this.LoginDetailsFromNid = res.responseCode;
                    console.log("this.LoginDetailsFromNid::::" + this.LoginDetailsFromNid);
                    if (res.responseCode == this.commonService.GCC_PENDING_CODE) {
                        // alert(res.responseCode);
                        this.commonService.alertMsgforGovRegistrationFinal = res.responseMessage;
                        this.commonService.responseCodeforGovRegistrationFinal = res.responseCode;
                        console.log("this.LoginDetailsFromNid::::" + this.LoginDetailsFromNid);
                        this.router.navigate(['governmentEntityReg3']);
                    }
                    else if (res.responseCode == this.commonService.G_CC_SUCCESS) {
                        this.commonService.alertMsgforGovRegistrationFinal = res.responseMessage;
                        this.commonService.responseCodeforGovRegistrationFinal = res.responseCode;
                        this.router.navigate(['governmentEntityReg3']);
                    }
                    else if (res.responseCode == this.commonService.BANK_PENDING_CODE) {
                        this.commonService.alertMsgforGovRegistrationFinal = res.responseMessage;
                        this.commonService.responseCodeforGovRegistrationFinal = res.responseCode;
                        this.router.navigate(['governmentEntityReg3']);
                    }
                    else if (res.responseCode == this.commonService.BANK_VERIFIED_CODE) {
                        this.commonService.alertMsgforGovRegistrationFinal = res.responseMessage;
                        this.commonService.responseCodeforGovRegistrationFinal = res.responseCode;
                        //this.router.navigate(['governmentEntityReg3']); 
                        this.router.navigate(['govDashboard']);
                    }
                });
                //this.router.navigate(['']);
                return;
            }
            this.openDialog(this.loginid);
        }
        else {
            this.commonService.showGeneralMessage("", this.translate.instant('HOME.correct_OTP'), true);
            // alert("Please type the correct OTP");
        }
    }
    onOTPLogout() {
        this.commonService.showGeneralModal({ callerModule: 'confirm',
            headerTitle: this.translate.instant('HOME.warning'),
            bodyLabel: this.translate.instant('HOME.redirected_login_page'),
            checkSession: true,
            loginid: this.loginid,
            dialogRef: this.dialogRef
        });
    }
    openDialog(loginid) {
        const dialogConfig = new _angular_material__WEBPACK_IMPORTED_MODULE_2__["MatDialogConfig"]();
        dialogConfig.disableClose = true;
        dialogConfig.autoFocus = true;
        dialogConfig.panelClass = 'custom-modalbox';
        dialogConfig.data = {
            id: 1,
            title: 'Angular For Beginners',
            description: 'description',
            loginid: loginid
        };
        this.dialog.open(_login_dialog_component_login_dialog_component_component__WEBPACK_IMPORTED_MODULE_6__["LoginDialogComponentComponent"], dialogConfig);
    }
    close() {
        this.dialogRef.close();
        this.dialogRef.afterClosed().subscribe((result) => {
            if (result === 'closed') {
                this.router.navigate(['login']);
            }
        });
    }
    onOTPResend() {
        //if(this.commonService.checkSessionExpired(this.loginid)==0){return;}
        this.commonService.otpByLoginId(this.loginid)
            .subscribe(res => {
            if (res.responseCode == 0) {
                //alert(res.responseMessage);
                this.commonService.showGeneralMessage("", res.responseMessage, true);
            }
            else {
                this.userMobile = res.maskedContact;
                this.otp = res.userObject.OTP;
                this.typedOTP = res.userObject.OTP; /*  ONLY WHEN BOTH OTP ARE SAME (FOR TEST ONLY) */
                //alert(res.responseMessage);
                this.commonService.showGeneralMessage("", res.responseMessage, true);
            }
        });
    }
};
OtpDialogComponent.ctorParameters = () => [
    { type: _ngx_translate_core__WEBPACK_IMPORTED_MODULE_7__["TranslateService"] },
    { type: _angular_material__WEBPACK_IMPORTED_MODULE_2__["MatDialog"] },
    { type: _angular_forms__WEBPACK_IMPORTED_MODULE_5__["FormBuilder"] },
    { type: _services_common_service_service__WEBPACK_IMPORTED_MODULE_3__["CommonService"] },
    { type: _angular_router__WEBPACK_IMPORTED_MODULE_4__["Router"] },
    { type: _angular_material__WEBPACK_IMPORTED_MODULE_2__["MatDialogRef"] },
    { type: undefined, decorators: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"], args: [_angular_material__WEBPACK_IMPORTED_MODULE_2__["MAT_DIALOG_DATA"],] }] },
    { type: _angular_router__WEBPACK_IMPORTED_MODULE_4__["ActivatedRoute"] }
];
OtpDialogComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-otp-dialog',
        template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! raw-loader!./otp-dialog.component.html */ "./node_modules/raw-loader/dist/cjs.js!./src/app/otp-dialog/otp-dialog.component.html")).default,
        styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! ./otp-dialog.component.css */ "./src/app/otp-dialog/otp-dialog.component.css")).default]
    }),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__param"](6, Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"])(_angular_material__WEBPACK_IMPORTED_MODULE_2__["MAT_DIALOG_DATA"])),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_ngx_translate_core__WEBPACK_IMPORTED_MODULE_7__["TranslateService"], _angular_material__WEBPACK_IMPORTED_MODULE_2__["MatDialog"], _angular_forms__WEBPACK_IMPORTED_MODULE_5__["FormBuilder"], _services_common_service_service__WEBPACK_IMPORTED_MODULE_3__["CommonService"], _angular_router__WEBPACK_IMPORTED_MODULE_4__["Router"],
        _angular_material__WEBPACK_IMPORTED_MODULE_2__["MatDialogRef"], Object, _angular_router__WEBPACK_IMPORTED_MODULE_4__["ActivatedRoute"]])
], OtpDialogComponent);



/***/ }),

/***/ "./src/app/private-account-management/private-account-management.component.css":
/*!*************************************************************************************!*\
  !*** ./src/app/private-account-management/private-account-management.component.css ***!
  \*************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3ByaXZhdGUtYWNjb3VudC1tYW5hZ2VtZW50L3ByaXZhdGUtYWNjb3VudC1tYW5hZ2VtZW50LmNvbXBvbmVudC5jc3MifQ== */");

/***/ }),

/***/ "./src/app/private-account-management/private-account-management.component.ts":
/*!************************************************************************************!*\
  !*** ./src/app/private-account-management/private-account-management.component.ts ***!
  \************************************************************************************/
/*! exports provided: PrivateAccountManagementComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PrivateAccountManagementComponent", function() { return PrivateAccountManagementComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm2015/router.js");
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/material */ "./node_modules/@angular/material/esm2015/material.js");
/* harmony import */ var _services_common_service_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../services/common-service.service */ "./src/app/services/common-service.service.ts");
/* harmony import */ var _add_new_user_modal_add_new_user_modal_component__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../add-new-user-modal/add-new-user-modal.component */ "./src/app/add-new-user-modal/add-new-user-modal.component.ts");





//import { GeneralModalComponent } from '../general-modal/general-modal.component';

let PrivateAccountManagementComponent = class PrivateAccountManagementComponent {
    constructor(router, commonService, dialog) {
        this.router = router;
        this.commonService = commonService;
        this.dialog = dialog;
        this.dtOptions = {};
        this.dtOptionsAR = {};
    }
    ngOnInit() {
        this.userId = localStorage.getItem('userId');
        console.log("this.userId::::" + this.userId);
        this.userName = localStorage.getItem('userName');
        console.log("this.userName::::" + this.userName);
        this.roleId = localStorage.getItem('roleId');
        console.log("this.role_ID::::" + this.roleId);
        this.onBoardResolution = localStorage.getItem('onBoardResolution');
        this.dtOptionsAR = {
            pageLength: 10,
            processing: true,
            language: {
                processing: "جارٍ التحميل...",
                search: "ابحث:",
                lengthMenu: "أظهر _MENU_ مدخلات",
                info: "إظهار _START_ إلى _END_ من أصل _TOTAL_ مدخل",
                infoEmpty: "يعرض 0 إلى 0 من أصل 0 سجل",
                infoFiltered: "(منتقاة من مجموع _MAX_ مُدخل)",
                infoPostFix: "",
                loadingRecords: "جارٍ التحميل...",
                zeroRecords: "لم يعثر على أية سجلات",
                emptyTable: "ليست هناك بيانات متاحة في الجدول",
                paginate: {
                    first: "الأول",
                    previous: "السابق",
                    next: "التالي",
                    last: "الأخير"
                },
                aria: {
                    sortAscending: ": تفعيل لترتيب العمود تصاعدياً",
                    sortDescending: ": تفعيل لترتيب العمود تنازلياً"
                }
            }
        };
        this.dtOptions = {
            pageLength: 10,
            processing: true,
        };
        this.commonService.getAciveUserList(this.userId)
            .subscribe(res => {
            for (let item in res.userObject) {
                res.userObject[item].id = item + 100;
            }
            this.AciveUsers = res.userObject;
            console.log("Acive User List :::: >>>>>>" + JSON.stringify(this.AciveUsers));
        });
        this.commonService.getWorkFlowListByLoginId(this.userId)
            .subscribe(res => {
            this.Aciveworkflows = res;
            console.log("Acive workflow List :::: >>>>>>" + JSON.stringify(this.Aciveworkflows));
        });
    }
    addnewuser() {
        //this.commonService.showGeneralMessage("", "Alert shows", false);
        const dialogConfig = new _angular_material__WEBPACK_IMPORTED_MODULE_3__["MatDialogConfig"]();
        dialogConfig.disableClose = true;
        dialogConfig.autoFocus = true;
        dialogConfig.panelClass = 'custom-modalbox';
        dialogConfig.data = {
            description: 'description'
        };
        this.dialogRef = this.dialog.open(_add_new_user_modal_add_new_user_modal_component__WEBPACK_IMPORTED_MODULE_5__["AddNewUserModalComponent"], dialogConfig);
        this.dialogRef.afterClosed().subscribe(result => {
            console.log('Dialog result: ${result} >>', result); // Pizza!
            if (result) {
                this.commonService.getAciveUserList(this.userId)
                    .subscribe(res => {
                    for (let item in res.userObject) {
                        res.userObject[item].id = item + 100;
                    }
                    this.AciveUsers = res.userObject;
                    console.log("Acive User List :::: >>>>>>" + JSON.stringify(this.AciveUsers));
                });
            }
        });
    }
    /* addnewuser(){
      //this.commonService.showGeneralMessage("", "Alert shows", false);
      const dialogConfig = new MatDialogConfig();
  
      dialogConfig.disableClose = true;
      dialogConfig.autoFocus = true;
      dialogConfig.panelClass = 'custom-modalbox';
      dialogConfig.data = {
        description: 'description',
        modelData: { callerModule: 'ADD_NEW_USER'}
      };
      this.dialogRef = this.dialog.open(GeneralModalComponent,dialogConfig);
  
      this.dialogRef.afterClosed().subscribe(result => {
      
        this.commonService.saveLGRelease(result.requestId,result.lgNumber,result.beneficiaryId,result.amount,result.releaseReason, result.partialRelease,result.releaseAmount)
        .subscribe(res => {
          console.log("rejectLGIssuanceApprovalData response::::" + JSON.stringify(res));
        });
  
      });
    } */
    goLocationChange(_item) {
        console.log('goLocationChange _item >', _item);
        localStorage.setItem('editUserItem', JSON.stringify(_item));
        this.router.navigate(['/editUserDetails']);
    }
    addnewworkflow() {
        this.commonService.seteditworkflowIdService('');
        this.router.navigate(['/addnewworkflow']);
    }
    workflowDetails(details) {
        console.log('workflowDetails');
        this.commonService.seteditworkflowIdService(details.workflow_id);
        /* localStorage.setItem('editworkflowId', JSON.stringify(details.workflow_id)); */
        this.router.navigate(['/addnewworkflow']);
        /* this.commonService.workflowDetails(this.userId,details.workflow_id)
        .subscribe(res => {
          this.Aciveworkflows = res;
          console.log("Acive workflow List :::: >>>>>>" + JSON.stringify(this.Aciveworkflows));
        }); */
    }
};
PrivateAccountManagementComponent.ctorParameters = () => [
    { type: _angular_router__WEBPACK_IMPORTED_MODULE_2__["Router"] },
    { type: _services_common_service_service__WEBPACK_IMPORTED_MODULE_4__["CommonService"] },
    { type: _angular_material__WEBPACK_IMPORTED_MODULE_3__["MatDialog"] }
];
PrivateAccountManagementComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-private-account-management',
        template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! raw-loader!./private-account-management.component.html */ "./node_modules/raw-loader/dist/cjs.js!./src/app/private-account-management/private-account-management.component.html")).default,
        styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! ./private-account-management.component.css */ "./src/app/private-account-management/private-account-management.component.css")).default]
    }),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_angular_router__WEBPACK_IMPORTED_MODULE_2__["Router"],
        _services_common_service_service__WEBPACK_IMPORTED_MODULE_4__["CommonService"],
        _angular_material__WEBPACK_IMPORTED_MODULE_3__["MatDialog"]])
], PrivateAccountManagementComponent);



/***/ }),

/***/ "./src/app/private-amendment-list/private-amendment-list.component.css":
/*!*****************************************************************************!*\
  !*** ./src/app/private-amendment-list/private-amendment-list.component.css ***!
  \*****************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3ByaXZhdGUtYW1lbmRtZW50LWxpc3QvcHJpdmF0ZS1hbWVuZG1lbnQtbGlzdC5jb21wb25lbnQuY3NzIn0= */");

/***/ }),

/***/ "./src/app/private-amendment-list/private-amendment-list.component.ts":
/*!****************************************************************************!*\
  !*** ./src/app/private-amendment-list/private-amendment-list.component.ts ***!
  \****************************************************************************/
/*! exports provided: PrivateAmendmentListComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PrivateAmendmentListComponent", function() { return PrivateAmendmentListComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm2015/forms.js");
/* harmony import */ var _services_common_service_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../services/common-service.service */ "./src/app/services/common-service.service.ts");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm2015/router.js");
/* harmony import */ var _models_lgIssuance_model__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../models/lgIssuance.model */ "./src/app/models/lgIssuance.model.ts");
/* harmony import */ var _ngx_translate_core__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @ngx-translate/core */ "./node_modules/@ngx-translate/core/fesm2015/ngx-translate-core.js");







let PrivateAmendmentListComponent = class PrivateAmendmentListComponent {
    constructor(commonService, router, fb, translate) {
        this.commonService = commonService;
        this.router = router;
        this.fb = fb;
        this.translate = translate;
        this.isOpenMyIssuedLGList = true;
        this.isOpenLgIssuedMeList = false;
        this.isMyIssuedLGClicked = true;
        this.isLgIssuedMeClicked = false;
        this.dtOptions = {};
        this.dtOptionsAR = {};
        this.userObject = {};
    }
    ngOnInit() {
        this.userId = localStorage.getItem('userId');
        console.log("this.userId::::" + this.userId);
        this.userName = localStorage.getItem('userName');
        console.log("this.userName::::" + this.userName);
        this.roleId = localStorage.getItem('roleId');
        console.log("this.role_ID::::" + this.roleId);
        this.crNoOrUidNo = localStorage.getItem('crNoOrUidNo');
        console.log("crNoOrUidNo::::" + this.crNoOrUidNo);
        console.log("currentWorkflowID >>" + localStorage.getItem('currentWorkflowID'));
        this.currentWorkflowID = localStorage.getItem('currentWorkflowID');
        this.commonService.amendmentCreationLgListIssueByMe(this.crNoOrUidNo, this.currentWorkflowID)
            .subscribe(res => {
            console.log("AllLGRequestBeneficiarySpecific list::::" + JSON.stringify(res));
            this.myActiveLgLists = res;
            console.log("pending list is::::" + JSON.stringify(this.myActiveLgLists));
        });
        //this.myActiveLgLists = [];
        this.dtOptionsAR = {
            pageLength: 10,
            processing: true,
            language: {
                processing: "جارٍ التحميل...",
                search: "ابحث:",
                lengthMenu: "أظهر _MENU_ مدخلات",
                info: "إظهار _START_ إلى _END_ من أصل _TOTAL_ مدخل",
                infoEmpty: "يعرض 0 إلى 0 من أصل 0 سجل",
                infoFiltered: "(منتقاة من مجموع _MAX_ مُدخل)",
                infoPostFix: "",
                loadingRecords: "جارٍ التحميل...",
                zeroRecords: "لم يعثر على أية سجلات",
                emptyTable: "ليست هناك بيانات متاحة في الجدول",
                paginate: {
                    first: "الأول",
                    previous: "السابق",
                    next: "التالي",
                    last: "الأخير"
                },
                aria: {
                    sortAscending: ": تفعيل لترتيب العمود تصاعدياً",
                    sortDescending: ": تفعيل لترتيب العمود تنازلياً"
                }
            }
        };
        this.dtOptions = {
            pageLength: 10,
            processing: true,
        };
    }
    goToMyIssuedLGTab() {
        this.isOpenMyIssuedLGList = true;
        this.isOpenLgIssuedMeList = false;
        this.isMyIssuedLGClicked = true;
        this.isLgIssuedMeClicked = false;
        this.commonService.amendmentCreationLgListIssueByMe(this.crNoOrUidNo, this.currentWorkflowID)
            .subscribe(res => {
            console.log("goToMyIssuedLGTab list::::" + JSON.stringify(res));
            this.myActiveLgLists = res;
            console.log("pending list is::::" + JSON.stringify(this.myActiveLgLists));
        });
        this.dtOptionsAR = {
            pageLength: 10,
            processing: true,
            language: {
                processing: "جارٍ التحميل...",
                search: "ابحث:",
                lengthMenu: "أظهر _MENU_ مدخلات",
                info: "إظهار _START_ إلى _END_ من أصل _TOTAL_ مدخل",
                infoEmpty: "يعرض 0 إلى 0 من أصل 0 سجل",
                infoFiltered: "(منتقاة من مجموع _MAX_ مُدخل)",
                infoPostFix: "",
                loadingRecords: "جارٍ التحميل...",
                zeroRecords: "لم يعثر على أية سجلات",
                emptyTable: "ليست هناك بيانات متاحة في الجدول",
                paginate: {
                    first: "الأول",
                    previous: "السابق",
                    next: "التالي",
                    last: "الأخير"
                },
                aria: {
                    sortAscending: ": تفعيل لترتيب العمود تصاعدياً",
                    sortDescending: ": تفعيل لترتيب العمود تنازلياً"
                }
            }
        };
        this.dtOptions = {
            pageLength: 10,
            processing: true,
        };
    }
    goToLgIssuedMeTab() {
        this.isOpenMyIssuedLGList = false;
        this.isOpenLgIssuedMeList = true;
        this.isMyIssuedLGClicked = false;
        this.isLgIssuedMeClicked = true;
        this.commonService.amendmentReleaseAndconfiscateCreationLgListIssueForMe(this.crNoOrUidNo, this.currentWorkflowID)
            .subscribe(res => {
            console.log("activeLgForMeLists");
            console.log(res);
            this.activeLgForMeLists = res;
        });
    }
    RowSelected(pendingData) {
        this.commonService.isPrivateLgPending1Completed = true;
        console.log("private entity pending list::::" + JSON.stringify(pendingData));
        console.log("testy122" + pendingData.beneficiary_name);
        this.commonService.lgIssuanceApproval = new _models_lgIssuance_model__WEBPACK_IMPORTED_MODULE_5__["LGIssuanceModel"]();
        this.commonService.lgIssuanceApproval.lg_no = pendingData.lg_no;
        if (pendingData.lg_type !== null || pendingData.lg_type !== undefined) {
            this.commonService.lgIssuanceApproval.LGType = pendingData.lg_type;
        }
        if (pendingData.beneficiary_name !== null || pendingData.beneficiary_name !== undefined) {
            console.log("test beneficiary_name" + pendingData.beneficiary_name);
            this.commonService.lgIssuanceApproval.beneficiary_name = pendingData.beneficiary_name;
        }
        if (pendingData.bank_name !== null || pendingData.bank_name !== undefined) {
            console.log("bank_name" + pendingData.bank_name);
            this.commonService.lgIssuanceApproval.bankName = pendingData.bank_name;
        }
        if (pendingData.project_name !== null || pendingData.project_name !== undefined) {
            console.log("bank_name" + pendingData.project_name);
            this.commonService.lgIssuanceApproval.project_name = pendingData.project_name;
        }
        if (pendingData.request_date !== null || pendingData.request_date !== undefined) {
            console.log("bank_name" + pendingData.request_date);
            this.commonService.lgIssuanceApproval.request_date = pendingData.request_date;
        }
        if (pendingData.request_status_flag !== null || pendingData.request_status_flag !== undefined) {
            console.log("bank_name" + pendingData.request_status_flag);
            this.commonService.lgIssuanceApproval.status = pendingData.request_status_flag;
        }
        if (pendingData.start_date !== null || pendingData.start_date !== undefined) {
            this.commonService.lgIssuanceApproval.LGStartDate = pendingData.start_date;
        }
        if (pendingData.end_date !== null || pendingData.end_date !== undefined) {
            this.commonService.lgIssuanceApproval.LGEndDate = pendingData.end_date;
        }
        if (pendingData.contract_value !== null || pendingData.contract_value !== undefined) {
            this.commonService.lgIssuanceApproval.Amount = pendingData.lG_amount;
            //var converter = require('number-to-words');
            this.commonService.lgIssuanceApproval.amountInNumber = this.commonService.lgIssuanceApproval.Amount;
        }
        if (pendingData.currency !== null || pendingData.currency !== undefined) {
            this.commonService.lgIssuanceApproval.currency = pendingData.currency;
        }
        if (pendingData.termsNConditions !== null || pendingData.termsNConditions !== undefined) {
            this.commonService.lgIssuanceApproval.termsNconditionsMessage = pendingData.termsNConditions;
        }
        if (pendingData.status !== null || pendingData.status !== undefined) {
            this.commonService.lgIssuanceApproval.status = pendingData.status;
        }
        if (pendingData.response_code !== null || pendingData.response_code !== undefined) {
            this.commonService.lgIssuanceApproval.response_code = pendingData.response_code;
            console.log("............................pendingData.response_code" + pendingData.response_code);
        }
        if (pendingData.terms_condition_message !== null || pendingData.terms_condition_message !== undefined) {
            this.commonService.lgIssuanceApproval.terms_condition_message = pendingData.terms_condition_message;
            console.log("........................pendingData.terms_condition_message" + pendingData.terms_condition_message);
        }
        if (pendingData.request_id !== null || pendingData.request_id !== undefined) {
            this.commonService.lgIssuanceApproval.requestId = pendingData.request_id;
            console.log("........................pendingData.request_id" + pendingData.request_id);
        }
        if (pendingData.create_by !== null || pendingData.create_by !== undefined) {
            this.commonService.lgIssuanceApproval.create_by = pendingData.create_by;
        }
        /* if(pendingData.request_status_flag !== null || pendingData.request_status_flag !== undefined){
         this.commonService.lgIssuanceApproval.status = pendingData.request_status_flag;
        } */
        if (pendingData.write_up !== null || pendingData.write_up !== undefined) {
            this.commonService.lgIssuanceApproval.writeUpType = pendingData.write_up;
        }
        if (pendingData.project_name !== null || pendingData.project_name !== undefined) {
            this.commonService.lgIssuanceApproval.projectName = pendingData.project_name;
        }
        if (pendingData.project_no !== null || pendingData.project_no !== undefined) {
            this.commonService.lgIssuanceApproval.projectNumber = pendingData.project_no;
        }
        if (pendingData.purpose_of_bond !== null || pendingData.purpose_of_bond !== undefined) {
            this.commonService.lgIssuanceApproval.puroseOfBond = pendingData.purpose_of_bond;
        }
        if (pendingData.byan_no !== null || pendingData.byan_no !== undefined) {
            this.commonService.lgIssuanceApproval.bayanNuymber = pendingData.byan_no;
        }
        if (pendingData.zakat_start_date !== null || pendingData.zakat_start_date !== undefined) {
            this.commonService.lgIssuanceApproval.ZakatPeriodStartDate = pendingData.zakat_start_date;
        }
        if (pendingData.zakat_end_date !== null || pendingData.zakat_end_date !== undefined) {
            this.commonService.lgIssuanceApproval.ZakatPeriodEndDate = pendingData.zakat_end_date;
        }
        if (pendingData.lg_validity_date !== null || pendingData.lg_validity_date !== undefined) {
            this.commonService.lgIssuanceApproval.lg_validity_date = pendingData.validDt;
        }
        if (pendingData.account_of_contract_processed !== null || pendingData.account_of_contract_processed !== undefined) {
            this.commonService.lgIssuanceApproval.ac_of_contract = pendingData.account_of_contract_processed;
        }
        if (pendingData.agree_tag !== null || pendingData.agree_tag !== undefined) {
            this.commonService.lgIssuanceApproval.agree_tag = pendingData.agree_tag;
        }
        if (pendingData.beneficiary_id !== null || pendingData.beneficiary_id !== undefined) {
            this.commonService.lgIssuanceApproval.beneficiaryId = pendingData.beneficiary_id;
        }
        if (pendingData.supplier_id !== null || pendingData.supplier_id !== undefined) {
            this.commonService.lgIssuanceApproval.supplierId = pendingData.supplier_id;
            console.log("........................pendingData.terms_condition_message" + pendingData.supplier_id);
        }
        if (pendingData.lg_issue_date !== null || pendingData.lg_issue_date !== undefined) {
            this.commonService.lgIssuanceApproval.LGIssueDate = pendingData.lg_issue_date;
        }
        if (pendingData.beneficiary_UID !== null || pendingData.beneficiary_UID !== undefined) {
            this.commonService.lgIssuanceApproval.beneficiary_UID = pendingData.beneficiary_UID;
        }
        if (pendingData.role_id !== null || pendingData.role_id !== undefined) {
            this.commonService.lgIssuanceApproval.beneficiary_role_id = pendingData.role_id;
        }
        if (pendingData.supplier_entity_id !== null || pendingData.supplier_entity_id !== undefined) {
            this.commonService.lgIssuanceApproval.supplier_entity_id = pendingData.supplier_entity_id;
        }
        if (pendingData.beneficiary_entity_id !== null || pendingData.beneficiary_entity_id !== undefined) {
            this.commonService.lgIssuanceApproval.beneficiary_entity_id = pendingData.beneficiary_entity_id;
        }
        console.log("Before");
        console.log(pendingData);
        console.log("After");
        console.log(this.commonService.lgIssuanceApproval);
        this.router.navigate(['privateLgDetails']);
        //this.lgIssuance.
    }
};
PrivateAmendmentListComponent.ctorParameters = () => [
    { type: _services_common_service_service__WEBPACK_IMPORTED_MODULE_3__["CommonService"] },
    { type: _angular_router__WEBPACK_IMPORTED_MODULE_4__["Router"] },
    { type: _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormBuilder"] },
    { type: _ngx_translate_core__WEBPACK_IMPORTED_MODULE_6__["TranslateService"] }
];
PrivateAmendmentListComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-private-amendment-list',
        template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! raw-loader!./private-amendment-list.component.html */ "./node_modules/raw-loader/dist/cjs.js!./src/app/private-amendment-list/private-amendment-list.component.html")).default,
        styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! ./private-amendment-list.component.css */ "./src/app/private-amendment-list/private-amendment-list.component.css")).default]
    }),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_services_common_service_service__WEBPACK_IMPORTED_MODULE_3__["CommonService"], _angular_router__WEBPACK_IMPORTED_MODULE_4__["Router"], _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormBuilder"], _ngx_translate_core__WEBPACK_IMPORTED_MODULE_6__["TranslateService"]])
], PrivateAmendmentListComponent);



/***/ }),

/***/ "./src/app/private-confiscate-list/private-confiscate-list.component.css":
/*!*******************************************************************************!*\
  !*** ./src/app/private-confiscate-list/private-confiscate-list.component.css ***!
  \*******************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3ByaXZhdGUtY29uZmlzY2F0ZS1saXN0L3ByaXZhdGUtY29uZmlzY2F0ZS1saXN0LmNvbXBvbmVudC5jc3MifQ== */");

/***/ }),

/***/ "./src/app/private-confiscate-list/private-confiscate-list.component.ts":
/*!******************************************************************************!*\
  !*** ./src/app/private-confiscate-list/private-confiscate-list.component.ts ***!
  \******************************************************************************/
/*! exports provided: PrivateConfiscateListComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PrivateConfiscateListComponent", function() { return PrivateConfiscateListComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm2015/forms.js");
/* harmony import */ var _services_common_service_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../services/common-service.service */ "./src/app/services/common-service.service.ts");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm2015/router.js");
/* harmony import */ var _models_lgIssuance_model__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../models/lgIssuance.model */ "./src/app/models/lgIssuance.model.ts");
/* harmony import */ var _ngx_translate_core__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @ngx-translate/core */ "./node_modules/@ngx-translate/core/fesm2015/ngx-translate-core.js");







let PrivateConfiscateListComponent = class PrivateConfiscateListComponent {
    constructor(commonService, router, fb, translate) {
        this.commonService = commonService;
        this.router = router;
        this.fb = fb;
        this.translate = translate;
        this.isOpenMyIssuedLGList = true;
        this.isOpenLgIssuedMeList = false;
        this.isMyIssuedLGClicked = true;
        this.isLgIssuedMeClicked = false;
        this.dtOptions = {};
        this.dtOptionsAR = {};
        this.userObject = {};
    }
    ngOnInit() {
        this.userId = localStorage.getItem('userId');
        console.log("this.userId::::" + this.userId);
        this.userName = localStorage.getItem('userName');
        console.log("this.userName::::" + this.userName);
        this.roleId = localStorage.getItem('roleId');
        console.log("this.role_ID::::" + this.roleId);
        this.crNoOrUidNo = localStorage.getItem('crNoOrUidNo');
        console.log("crNoOrUidNo::::" + this.crNoOrUidNo);
        console.log("currentWorkflowID >>" + localStorage.getItem('currentWorkflowID'));
        this.currentWorkflowID = localStorage.getItem('currentWorkflowID');
        this.commonService.amendmentReleaseAndconfiscateCreationLgListIssueForMe(this.crNoOrUidNo, this.currentWorkflowID)
            .subscribe(res => {
            console.log("AllLGRequestBeneficiarySpecific list::::" + JSON.stringify(res));
            this.myActiveLgLists = res;
            console.log("pending list is::::" + JSON.stringify(this.myActiveLgLists));
        });
        //this.myActiveLgLists = [];
        this.dtOptionsAR = {
            pageLength: 10,
            processing: true,
            language: {
                processing: "جارٍ التحميل...",
                search: "ابحث:",
                lengthMenu: "أظهر _MENU_ مدخلات",
                info: "إظهار _START_ إلى _END_ من أصل _TOTAL_ مدخل",
                infoEmpty: "يعرض 0 إلى 0 من أصل 0 سجل",
                infoFiltered: "(منتقاة من مجموع _MAX_ مُدخل)",
                infoPostFix: "",
                loadingRecords: "جارٍ التحميل...",
                zeroRecords: "لم يعثر على أية سجلات",
                emptyTable: "ليست هناك بيانات متاحة في الجدول",
                paginate: {
                    first: "الأول",
                    previous: "السابق",
                    next: "التالي",
                    last: "الأخير"
                },
                aria: {
                    sortAscending: ": تفعيل لترتيب العمود تصاعدياً",
                    sortDescending: ": تفعيل لترتيب العمود تنازلياً"
                }
            }
        };
        this.dtOptions = {
            pageLength: 10,
            processing: true,
        };
    }
    goToMyIssuedLGTab() {
        this.isOpenMyIssuedLGList = true;
        this.isOpenLgIssuedMeList = false;
        this.isMyIssuedLGClicked = true;
        this.isLgIssuedMeClicked = false;
        this.commonService.amendmentReleaseAndconfiscateCreationLgListIssueForMe(this.crNoOrUidNo, this.currentWorkflowID)
            .subscribe(res => {
            console.log("AllLGRequestBeneficiarySpecific list::::" + JSON.stringify(res));
            this.myActiveLgLists = res;
            console.log("pending list is::::" + JSON.stringify(this.myActiveLgLists));
        });
        this.dtOptionsAR = {
            pageLength: 10,
            processing: true,
            language: {
                processing: "جارٍ التحميل...",
                search: "ابحث:",
                lengthMenu: "أظهر _MENU_ مدخلات",
                info: "إظهار _START_ إلى _END_ من أصل _TOTAL_ مدخل",
                infoEmpty: "يعرض 0 إلى 0 من أصل 0 سجل",
                infoFiltered: "(منتقاة من مجموع _MAX_ مُدخل)",
                infoPostFix: "",
                loadingRecords: "جارٍ التحميل...",
                zeroRecords: "لم يعثر على أية سجلات",
                emptyTable: "ليست هناك بيانات متاحة في الجدول",
                paginate: {
                    first: "الأول",
                    previous: "السابق",
                    next: "التالي",
                    last: "الأخير"
                },
                aria: {
                    sortAscending: ": تفعيل لترتيب العمود تصاعدياً",
                    sortDescending: ": تفعيل لترتيب العمود تنازلياً"
                }
            }
        };
        this.dtOptions = {
            pageLength: 10,
            processing: true,
        };
    }
    /* goToLgIssuedMeTab() {
      this.isOpenMyIssuedLGList = false;
      this.isOpenLgIssuedMeList = true;
      this.isMyIssuedLGClicked = false;
      this.isLgIssuedMeClicked = true;
  
      
      this.commonService.getActiveLgListForGovt(this.crNoOrUidNo)
      .subscribe(res => {
        console.log("activeLgForMeLists");
        console.log(res);
        this.activeLgForMeLists = res;
   
      });
    } */
    RowSelected(pendingData) {
        this.commonService.isPrivateLgPending1Completed = true;
        console.log("private entity pending list::::" + JSON.stringify(pendingData));
        console.log("testy122" + pendingData.beneficiary_name);
        this.commonService.lgIssuanceApproval = new _models_lgIssuance_model__WEBPACK_IMPORTED_MODULE_5__["LGIssuanceModel"]();
        this.commonService.lgIssuanceApproval.lg_no = pendingData.lg_no;
        if (pendingData.lg_type !== null || pendingData.lg_type !== undefined) {
            this.commonService.lgIssuanceApproval.LGType = pendingData.lg_type;
        }
        if (pendingData.beneficiary_name !== null || pendingData.beneficiary_name !== undefined) {
            console.log("test beneficiary_name" + pendingData.beneficiary_name);
            this.commonService.lgIssuanceApproval.beneficiary_name = pendingData.beneficiary_name;
        }
        if (pendingData.bank_name !== null || pendingData.bank_name !== undefined) {
            console.log("bank_name" + pendingData.bank_name);
            this.commonService.lgIssuanceApproval.bankName = pendingData.bank_name;
        }
        if (pendingData.project_name !== null || pendingData.project_name !== undefined) {
            console.log("bank_name" + pendingData.project_name);
            this.commonService.lgIssuanceApproval.project_name = pendingData.project_name;
        }
        if (pendingData.request_date !== null || pendingData.request_date !== undefined) {
            console.log("bank_name" + pendingData.request_date);
            this.commonService.lgIssuanceApproval.request_date = pendingData.request_date;
        }
        if (pendingData.request_status_flag !== null || pendingData.request_status_flag !== undefined) {
            console.log("bank_name" + pendingData.request_status_flag);
            this.commonService.lgIssuanceApproval.status = pendingData.request_status_flag;
        }
        if (pendingData.start_date !== null || pendingData.start_date !== undefined) {
            this.commonService.lgIssuanceApproval.LGStartDate = pendingData.start_date;
        }
        if (pendingData.end_date !== null || pendingData.end_date !== undefined) {
            this.commonService.lgIssuanceApproval.LGEndDate = pendingData.end_date;
        }
        if (pendingData.contract_value !== null || pendingData.contract_value !== undefined) {
            this.commonService.lgIssuanceApproval.Amount = pendingData.lG_amount;
            //var converter = require('number-to-words');
            this.commonService.lgIssuanceApproval.amountInNumber = this.commonService.lgIssuanceApproval.Amount;
        }
        if (pendingData.currency !== null || pendingData.currency !== undefined) {
            this.commonService.lgIssuanceApproval.currency = pendingData.currency;
        }
        if (pendingData.termsNConditions !== null || pendingData.termsNConditions !== undefined) {
            this.commonService.lgIssuanceApproval.termsNconditionsMessage = pendingData.termsNConditions;
        }
        if (pendingData.status !== null || pendingData.status !== undefined) {
            this.commonService.lgIssuanceApproval.status = pendingData.status;
        }
        if (pendingData.response_code !== null || pendingData.response_code !== undefined) {
            this.commonService.lgIssuanceApproval.response_code = pendingData.response_code;
            console.log("............................pendingData.response_code" + pendingData.response_code);
        }
        if (pendingData.terms_condition_message !== null || pendingData.terms_condition_message !== undefined) {
            this.commonService.lgIssuanceApproval.terms_condition_message = pendingData.terms_condition_message;
            console.log("........................pendingData.terms_condition_message" + pendingData.terms_condition_message);
        }
        if (pendingData.request_id !== null || pendingData.request_id !== undefined) {
            this.commonService.lgIssuanceApproval.requestId = pendingData.request_id;
            console.log("........................pendingData.request_id" + pendingData.request_id);
        }
        if (pendingData.create_by !== null || pendingData.create_by !== undefined) {
            this.commonService.lgIssuanceApproval.create_by = pendingData.create_by;
        }
        /* if(pendingData.request_status_flag !== null || pendingData.request_status_flag !== undefined){
         this.commonService.lgIssuanceApproval.status = pendingData.request_status_flag;
        } */
        if (pendingData.write_up !== null || pendingData.write_up !== undefined) {
            this.commonService.lgIssuanceApproval.writeUpType = pendingData.write_up;
        }
        if (pendingData.project_name !== null || pendingData.project_name !== undefined) {
            this.commonService.lgIssuanceApproval.projectName = pendingData.project_name;
        }
        if (pendingData.project_no !== null || pendingData.project_no !== undefined) {
            this.commonService.lgIssuanceApproval.projectNumber = pendingData.project_no;
        }
        if (pendingData.purpose_of_bond !== null || pendingData.purpose_of_bond !== undefined) {
            this.commonService.lgIssuanceApproval.puroseOfBond = pendingData.purpose_of_bond;
        }
        if (pendingData.byan_no !== null || pendingData.byan_no !== undefined) {
            this.commonService.lgIssuanceApproval.bayanNuymber = pendingData.byan_no;
        }
        if (pendingData.zakat_start_date !== null || pendingData.zakat_start_date !== undefined) {
            this.commonService.lgIssuanceApproval.ZakatPeriodStartDate = pendingData.zakat_start_date;
        }
        if (pendingData.zakat_end_date !== null || pendingData.zakat_end_date !== undefined) {
            this.commonService.lgIssuanceApproval.ZakatPeriodEndDate = pendingData.zakat_end_date;
        }
        if (pendingData.lg_validity_date !== null || pendingData.lg_validity_date !== undefined) {
            this.commonService.lgIssuanceApproval.lg_validity_date = pendingData.validDt;
        }
        if (pendingData.account_of_contract_processed !== null || pendingData.account_of_contract_processed !== undefined) {
            this.commonService.lgIssuanceApproval.ac_of_contract = pendingData.account_of_contract_processed;
        }
        if (pendingData.agree_tag !== null || pendingData.agree_tag !== undefined) {
            this.commonService.lgIssuanceApproval.agree_tag = pendingData.agree_tag;
        }
        if (pendingData.beneficiary_id !== null || pendingData.beneficiary_id !== undefined) {
            this.commonService.lgIssuanceApproval.beneficiaryId = pendingData.beneficiary_id;
        }
        if (pendingData.supplier_id !== null || pendingData.supplier_id !== undefined) {
            this.commonService.lgIssuanceApproval.supplierId = pendingData.supplier_id;
            console.log("........................pendingData.terms_condition_message" + pendingData.supplier_id);
        }
        if (pendingData.lg_issue_date !== null || pendingData.lg_issue_date !== undefined) {
            this.commonService.lgIssuanceApproval.LGIssueDate = pendingData.lg_issue_date;
        }
        if (pendingData.beneficiary_UID !== null || pendingData.beneficiary_UID !== undefined) {
            this.commonService.lgIssuanceApproval.beneficiary_UID = pendingData.beneficiary_UID;
        }
        if (pendingData.role_id !== null || pendingData.role_id !== undefined) {
            this.commonService.lgIssuanceApproval.beneficiary_role_id = pendingData.role_id;
        }
        if (pendingData.supplier_entity_id !== null || pendingData.supplier_entity_id !== undefined) {
            this.commonService.lgIssuanceApproval.supplier_entity_id = pendingData.supplier_entity_id;
        }
        if (pendingData.beneficiary_entity_id !== null || pendingData.beneficiary_entity_id !== undefined) {
            this.commonService.lgIssuanceApproval.beneficiary_entity_id = pendingData.beneficiary_entity_id;
        }
        console.log("Before");
        console.log(pendingData);
        console.log("After");
        console.log(this.commonService.lgIssuanceApproval);
        this.router.navigate(['privateLgDetails']);
        //this.lgIssuance.
    }
};
PrivateConfiscateListComponent.ctorParameters = () => [
    { type: _services_common_service_service__WEBPACK_IMPORTED_MODULE_3__["CommonService"] },
    { type: _angular_router__WEBPACK_IMPORTED_MODULE_4__["Router"] },
    { type: _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormBuilder"] },
    { type: _ngx_translate_core__WEBPACK_IMPORTED_MODULE_6__["TranslateService"] }
];
PrivateConfiscateListComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-private-confiscate-list',
        template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! raw-loader!./private-confiscate-list.component.html */ "./node_modules/raw-loader/dist/cjs.js!./src/app/private-confiscate-list/private-confiscate-list.component.html")).default,
        styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! ./private-confiscate-list.component.css */ "./src/app/private-confiscate-list/private-confiscate-list.component.css")).default]
    }),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_services_common_service_service__WEBPACK_IMPORTED_MODULE_3__["CommonService"], _angular_router__WEBPACK_IMPORTED_MODULE_4__["Router"], _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormBuilder"], _ngx_translate_core__WEBPACK_IMPORTED_MODULE_6__["TranslateService"]])
], PrivateConfiscateListComponent);



/***/ }),

/***/ "./src/app/private-entity-reg-final/private-entity-reg-final.component.css":
/*!*********************************************************************************!*\
  !*** ./src/app/private-entity-reg-final/private-entity-reg-final.component.css ***!
  \*********************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3ByaXZhdGUtZW50aXR5LXJlZy1maW5hbC9wcml2YXRlLWVudGl0eS1yZWctZmluYWwuY29tcG9uZW50LmNzcyJ9 */");

/***/ }),

/***/ "./src/app/private-entity-reg-final/private-entity-reg-final.component.ts":
/*!********************************************************************************!*\
  !*** ./src/app/private-entity-reg-final/private-entity-reg-final.component.ts ***!
  \********************************************************************************/
/*! exports provided: PrivateEntityRegFinalComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PrivateEntityRegFinalComponent", function() { return PrivateEntityRegFinalComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _services_common_service_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../services/common-service.service */ "./src/app/services/common-service.service.ts");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm2015/forms.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm2015/router.js");





let PrivateEntityRegFinalComponent = class PrivateEntityRegFinalComponent {
    // ibanPattern = "^[A-Z]{2}\d{2} (?:\d{4} ){3}\d{4}(?: \d\d?)?$";
    // validation_messages = {
    //   // bi: [
    //   //   { type: "required", message: "This is a required field." },
    //   //   {
    //   //     type: "pattern",
    //   //     message: "IBAN should be composed of characters."
    //   //   },
    //   //   {
    //   //     type: "maxlength",
    //   //     message: "Maximum length should be 34."
    //   //   }
    //   // ],
    //   // bankName: [
    //   //   { type: "required", message: "This is a required field." }
    //   // ]
    // }
    constructor(commonService, formBuilder, router) {
        this.commonService = commonService;
        this.formBuilder = formBuilder;
        this.router = router;
        this.isOpenValidationAlert = false;
        if (this.commonService.responseCodeforRegistrationFinal != undefined) {
            //if(this.commonService.responseCodeforRegistrationFinal === 1 || this.commonService.responseCodeforRegistrationFinal === 100 || this.commonService.responseCodeforRegistrationFinal === 104 || this.commonService.responseCodeforRegistrationFinal === 106){
            if (this.commonService.responseCodeforRegistrationFinal === 1 || this.commonService.responseCodeforRegistrationFinal === 100 || this.commonService.responseCodeforRegistrationFinal === 106) {
                this.isDisabledSubmitButton = true;
            }
            else if (this.commonService.responseCodeforRegistrationFinal === 101) {
                this.isDisabledSubmitButton = false;
            }
        }
        console.log(this.commonService.alertMsgforRegistrationFinal);
        if (this.commonService.alertMsgforRegistrationFinal != undefined) {
            this.isShowAlertDiv = true;
        }
        else {
            this.isShowAlertDiv = false;
        }
    }
    ngOnInit() {
        this.userId = localStorage.getItem('userId');
        console.log("this.userId::::" + this.userId);
        //this.submitBankDtl = this.formBuilder.group({
        // bi: [
        //   "",
        //   [
        //     Validators.required,
        //     Validators.pattern(this.ibanPattern),
        //     Validators.maxLength(34)
        //   ]
        // ],
        // bankName: [
        //   "",
        //   [
        //     Validators.required
        //   ]
        // ]
        // })
        // this.commonService.getBankNameList()
        // .subscribe(res => {
        //   console.log("Bank name list::::"+JSON.stringify(res));
        //   this.bankList = res;
        //   //console.log("Bank list is::::"+JSON.stringify(this.bankList));
        // });
    }
    // postBankDetails(){
    //   console.log("Bank details::::"+JSON.stringify(this.submitBankDtl.value));
    //   if(this.submitBankDtl.valid){
    //     this.commonService.postBankDetails(this.submitBankDtl.value, this.userId)
    //     .subscribe(res => {
    //       console.log("Reg final page Response is::::"+JSON.stringify(res));
    //       if(res.responseCode === 1){
    //         this.router.navigate(['/login']);
    //       }
    //     });
    //   }
    //   else{
    //     this.isOpenValidationAlert = true;
    //   }
    // }
    // resetForm(){
    //   if (this.submitBankDtl.valid) {
    //     console.log("Form Submitted!");
    //     this.submitBankDtl.reset();
    //   }
    // }
    closeAlert() {
        this.isOpenValidationAlert = false;
    }
};
PrivateEntityRegFinalComponent.ctorParameters = () => [
    { type: _services_common_service_service__WEBPACK_IMPORTED_MODULE_2__["CommonService"] },
    { type: _angular_forms__WEBPACK_IMPORTED_MODULE_3__["FormBuilder"] },
    { type: _angular_router__WEBPACK_IMPORTED_MODULE_4__["Router"] }
];
PrivateEntityRegFinalComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-private-entity-reg-final',
        template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! raw-loader!./private-entity-reg-final.component.html */ "./node_modules/raw-loader/dist/cjs.js!./src/app/private-entity-reg-final/private-entity-reg-final.component.html")).default,
        styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! ./private-entity-reg-final.component.css */ "./src/app/private-entity-reg-final/private-entity-reg-final.component.css")).default]
    }),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_services_common_service_service__WEBPACK_IMPORTED_MODULE_2__["CommonService"], _angular_forms__WEBPACK_IMPORTED_MODULE_3__["FormBuilder"], _angular_router__WEBPACK_IMPORTED_MODULE_4__["Router"]])
], PrivateEntityRegFinalComponent);



/***/ }),

/***/ "./src/app/private-entity-reg-info/private-entity-reg-info.component.css":
/*!*******************************************************************************!*\
  !*** ./src/app/private-entity-reg-info/private-entity-reg-info.component.css ***!
  \*******************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3ByaXZhdGUtZW50aXR5LXJlZy1pbmZvL3ByaXZhdGUtZW50aXR5LXJlZy1pbmZvLmNvbXBvbmVudC5jc3MifQ== */");

/***/ }),

/***/ "./src/app/private-entity-reg-info/private-entity-reg-info.component.ts":
/*!******************************************************************************!*\
  !*** ./src/app/private-entity-reg-info/private-entity-reg-info.component.ts ***!
  \******************************************************************************/
/*! exports provided: PrivateEntityRegInfoComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PrivateEntityRegInfoComponent", function() { return PrivateEntityRegInfoComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm2015/router.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm2015/forms.js");
/* harmony import */ var _services_common_service_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../services/common-service.service */ "./src/app/services/common-service.service.ts");
/* harmony import */ var _environments_environment__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../environments/environment */ "./src/environments/environment.ts");
/* harmony import */ var _ngx_translate_core__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @ngx-translate/core */ "./node_modules/@ngx-translate/core/fesm2015/ngx-translate-core.js");







let PrivateEntityRegInfoComponent = class PrivateEntityRegInfoComponent {
    constructor(translate, router, commonService, formBuilder) {
        this.translate = translate;
        this.router = router;
        this.commonService = commonService;
        this.formBuilder = formBuilder;
        this.noPattern = '^(0|[1-9][0-9]*)$';
        this.emailPattern = "^[a-z0-9._%+-]+@[a-z0-9.-]+.[a-z]{2,4}$";
        this.hostUrl = _environments_environment__WEBPACK_IMPORTED_MODULE_5__["environment"].hostUrl;
        console.log("I'm in Private Entity Reg Info");
    }
    ngOnInit() {
        this.userId = localStorage.getItem('userId');
        console.log("this.userId::::" + this.userId);
        this.userName = localStorage.getItem('userName');
        console.log("this.userName::::" + this.userName);
        this.roleId = localStorage.getItem('roleId');
        console.log("this.role_ID::::" + this.roleId);
        /*************************************************** */
        this.commonService.checkSessionExpired(this.userId)
            .then((data) => {
            if (data == 0) {
                this.commonService.showGeneralMessage(this.translate.instant('HOME.Session_Expired'), this.translate.instant('HOME.logged_out'), false);
                this.commonService.logout(this.userId);
                return;
            }
            else {
            }
        });
        /************************************************** */
        this.pending_cr_no = localStorage.getItem('pending_cr_no');
        this.pending_national_id = localStorage.getItem('pending_national_id');
        this.privatereginfo = this.formBuilder.group({
            CommercialRegistrationNumber: [
                "",
                [
                    _angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].required,
                ]
            ],
            NationalIdentificationNumber: [
                "",
                [
                    _angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].required,
                ]
            ],
            DateofBirth: [
                "",
                [
                    _angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].required,
                ]
            ],
            crNumber: [
                "",
                [
                    _angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].required,
                ]
            ],
            entityName: [
                "",
                [
                    _angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].required,
                ]
            ],
            CRType: [
                "",
                [
                    _angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].required,
                ]
            ],
            CRStatus: [
                "",
                [
                    _angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].required,
                ]
            ],
            CRIssueDate: [
                "",
                [
                    _angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].required,
                ]
            ],
            CRExpiryDate: [
                "",
                [
                    _angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].required,
                ]
            ],
            Address: [
                "",
                [
                    _angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].required,
                ]
            ],
            City: [
                "",
                [
                    _angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].required,
                ]
            ],
            FirstName: [
                "",
                [
                    _angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].required,
                ]
            ],
            LastName: [
                "",
                [
                    _angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].required,
                ]
            ],
            NIN: [
                "",
                [
                    _angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].required,
                ]
            ],
            DOB: [
                "",
                [
                    _angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].required,
                ]
            ],
            emailAddress: [
                "",
                [
                    _angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].required,
                ]
            ],
            contactNo: [
                "",
                [
                    _angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].required,
                ]
            ]
        });
        this.commonService.getPriEntityDetails(this.pending_national_id, this.pending_cr_no).subscribe(pd => {
            this.privatedata = pd;
            console.log(this.privatedata);
            //console.log(pd.userObject[0].entity_name);
            //console.log(this.privatedata.userObject[0].leg_agree_doc_name);
            this.privatereginfo.controls["CommercialRegistrationNumber"].setValue(pd.userObject[0].cr_no);
            this.privatereginfo.controls["NationalIdentificationNumber"].setValue(pd.userObject[0].national_id);
            this.privatereginfo.controls["DateofBirth"].setValue(pd.userObject[0].rep_dob);
            this.privatereginfo.controls["crNumber"].setValue(pd.userObject[0].cr_no);
            this.privatereginfo.controls["entityName"].setValue(pd.userObject[0].entity_name);
            this.privatereginfo.controls["CRType"].setValue(pd.userObject[0].cr_type);
            this.privatereginfo.controls["CRStatus"].setValue(pd.userObject[0].cr_status);
            this.privatereginfo.controls["CRIssueDate"].setValue(pd.userObject[0].cr_issue_date);
            this.privatereginfo.controls["CRExpiryDate"].setValue(pd.userObject[0].cr_expiry_date);
            this.privatereginfo.controls["Address"].setValue(pd.userObject[0].address);
            this.privatereginfo.controls["City"].setValue(pd.userObject[0].city);
            this.privatereginfo.controls["FirstName"].setValue(pd.userObject[0].first_name);
            this.privatereginfo.controls["LastName"].setValue(pd.userObject[0].last_name);
            this.privatereginfo.controls["NIN"].setValue(pd.userObject[0].rep_national_id);
            this.privatereginfo.controls["DOB"].setValue(pd.userObject[0].rep_dob);
            this.privatereginfo.controls["emailAddress"].setValue(pd.userObject[0].rep_email);
            this.privatereginfo.controls["contactNo"].setValue(pd.userObject[0].rep_mobile_no);
        });
        /* this.commonService.getPrivateRowEntitySelect(national_id,cr_no).subscribe(ul => {
          this.privatedata = ul;
    
          console.log(this.privatedata);
          console.log('Hi');
          }); */
    }
    rejectForm() {
        console.log("Approve data:::" + JSON.stringify(this.privatereginfo.value.nationalId));
        console.log("Approve data:::" + JSON.stringify(this.privatereginfo.value.crNumber));
        this.commonService.ApprovePrivateReg(this.privatereginfo.value.NationalIdentificationNumber, this.privatereginfo.value.crNumber, false)
            .subscribe(res => {
            console.log("Response for userId is::::" + JSON.stringify(res));
            if (res.responseCode === 1) {
                //alert(res.responseMessage);
                this.commonService.showGeneralMessage("", res.responseMessage, true);
                this.router.navigateByUrl('/pendingtasks');
            }
            else if (res.responseCode === 0) {
                //alert(res.responseMessage);
                this.commonService.showGeneralMessage("", res.responseMessage, true);
                this.router.navigateByUrl('/pendingtasks');
            }
        });
    }
    ApprovePrivateReg(userId) {
        console.log("Approve data:::" + JSON.stringify(this.privatereginfo.value.NationalIdentificationNumber));
        console.log("Approve data:::" + JSON.stringify(this.privatereginfo.value.crNumber));
        this.commonService.ApprovePrivateReg(this.privatereginfo.value.NationalIdentificationNumber, this.privatereginfo.value.crNumber, true)
            .subscribe(res => {
            console.log("Response for userId is::::" + JSON.stringify(res));
            if (res.responseCode === 1) {
                this.commonService.showGeneralMessage("", res.responseMessage, true);
                // alert(res.responseMessage);
                this.router.navigateByUrl('/pendingtasks');
            }
            else if (res.responseCode === 0) {
                // alert(res.responseMessage);
                this.commonService.showGeneralMessage("", res.responseMessage, true);
                this.router.navigateByUrl('/pendingtasks');
            }
        });
    }
};
PrivateEntityRegInfoComponent.ctorParameters = () => [
    { type: _ngx_translate_core__WEBPACK_IMPORTED_MODULE_6__["TranslateService"] },
    { type: _angular_router__WEBPACK_IMPORTED_MODULE_2__["Router"] },
    { type: _services_common_service_service__WEBPACK_IMPORTED_MODULE_4__["CommonService"] },
    { type: _angular_forms__WEBPACK_IMPORTED_MODULE_3__["FormBuilder"] }
];
PrivateEntityRegInfoComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-private-entity-reg-info',
        template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! raw-loader!./private-entity-reg-info.component.html */ "./node_modules/raw-loader/dist/cjs.js!./src/app/private-entity-reg-info/private-entity-reg-info.component.html")).default,
        styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! ./private-entity-reg-info.component.css */ "./src/app/private-entity-reg-info/private-entity-reg-info.component.css")).default]
    }),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_ngx_translate_core__WEBPACK_IMPORTED_MODULE_6__["TranslateService"], _angular_router__WEBPACK_IMPORTED_MODULE_2__["Router"], _services_common_service_service__WEBPACK_IMPORTED_MODULE_4__["CommonService"], _angular_forms__WEBPACK_IMPORTED_MODULE_3__["FormBuilder"]])
], PrivateEntityRegInfoComponent);



/***/ }),

/***/ "./src/app/private-entity-reg1/private-entity-reg1.component.css":
/*!***********************************************************************!*\
  !*** ./src/app/private-entity-reg1/private-entity-reg1.component.css ***!
  \***********************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3ByaXZhdGUtZW50aXR5LXJlZzEvcHJpdmF0ZS1lbnRpdHktcmVnMS5jb21wb25lbnQuY3NzIn0= */");

/***/ }),

/***/ "./src/app/private-entity-reg1/private-entity-reg1.component.ts":
/*!**********************************************************************!*\
  !*** ./src/app/private-entity-reg1/private-entity-reg1.component.ts ***!
  \**********************************************************************/
/*! exports provided: PrivateEntityReg1Component */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PrivateEntityReg1Component", function() { return PrivateEntityReg1Component; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm2015/router.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm2015/forms.js");
/* harmony import */ var _services_common_service_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../services/common-service.service */ "./src/app/services/common-service.service.ts");
/* harmony import */ var _models_mci_model__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../models/mci.model */ "./src/app/models/mci.model.ts");






let PrivateEntityReg1Component = class PrivateEntityReg1Component {
    constructor(router, formBuilder, commonService) {
        this.router = router;
        this.formBuilder = formBuilder;
        this.commonService = commonService;
        this.isOpenValidationAlert = false;
        this.noPattern = '^(0|[1-9][0-9]*)$';
        this.textPattern = "^[A-Za-z ]*$";
        this.validation_messages = {
            crn: [
                { type: "required", message: "This is a required field." },
                {
                    type: "pattern",
                    message: "Commercial registration number should be numeric."
                } /* ,
                {
                  type: "maxlength",
                  message: "Commercial registration number should be 15 digits."
                } */,
                {
                    type: "minlength",
                    message: "Commercial registration number should be 15 digits."
                }
            ],
            mno: [
                { type: "required", message: "This is a required field." },
                {
                    type: "pattern",
                    message: "National identification number should be composed of digits."
                },
                /* {
                  type: "maxlength",
                  message: "National identification number should be 10 digits."
                }, */
                {
                    type: "minlength",
                    message: "National identification number should be 10 digits."
                }
            ],
            dateOfBirth: [
                { type: "required", message: "This is a required field." }
            ],
        };
    }
    ngOnInit() {
        let today = new Date();
        let yesterday = new Date(today);
        yesterday.setDate(today.getDate() - 1);
        let month = today.getMonth();
        let year = today.getFullYear();
        this.maxDate = yesterday;
        this.maxDate.setMonth(month);
        this.maxDate.setFullYear(year);
        this.submitReg1 = this.formBuilder.group({
            crn: [
                "",
                [
                    _angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].required,
                    _angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].pattern(this.noPattern),
                    /*  Validators.maxLength(15), */
                    _angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].minLength(15)
                ]
            ],
            mno: [
                "",
                [
                    _angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].required,
                    _angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].pattern(this.noPattern),
                    /*  Validators.maxLength(10), */
                    _angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].minLength(10)
                ]
            ],
            dateOfBirth: [
                null,
                [
                    _angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].required
                ]
            ]
        });
        console.log("@@@@@" + JSON.stringify(this.commonService.userDetails));
        if (this.commonService.isClickPrivateEntityReg) {
            this.submitReg1.controls["crn"].setValue(null);
            this.submitReg1.controls["mno"].setValue(null);
            this.submitReg1.controls["dateOfBirth"].setValue(null);
        }
        else {
            console.log("@@@@@" + JSON.stringify(this.commonService.userDetails));
            if (this.commonService.userDetails != undefined || this.commonService.userDetails != null) {
                if (this.commonService.userDetails.userObject.cr_no != undefined || this.commonService.userDetails.userObject.cr_no != null) {
                    this.submitReg1.controls["crn"].setValue(this.commonService.userDetails.userObject.cr_no);
                }
                if (this.commonService.userDetails.userObject.nin != undefined || this.commonService.userDetails.userObject.nin != null) {
                    this.submitReg1.controls["mno"].setValue(this.commonService.userDetails.userObject.nin);
                }
                if (this.commonService.userDetails.userObject.dob != undefined || this.commonService.userDetails.userObject.dob != null) {
                    this.dateOfBirth = this.commonService.userDetails.userObject.dob;
                    this.submitReg1.controls["dateOfBirth"].setValue(this.dateOfBirth);
                }
            }
            else {
                this.submitReg1.controls["crn"].setValue(null);
                this.submitReg1.controls["mno"].setValue(null);
                this.submitReg1.controls["dateOfBirth"].setValue(null);
            }
        }
    }
    getDOB(dateOfBirth) {
        console.log("dateOfBirth::::" + dateOfBirth);
        console.log(this.dateOfBirth);
    }
    onBlur(crn) {
        console.log("crn:::::" + crn);
        this.checkSupplierCrn(crn);
    }
    checkSupplierCrn(crn) {
        this.commonService.checkSupplierCrn(crn)
            .subscribe(res => {
            console.log("Response for CRN is::::" + JSON.stringify(res));
            if (res.responseCode === 0) {
                this.commonService.showGeneralMessage("", res.responseMessage, false);
                // alert(res.responseMessage);
                this.submitReg1.controls["crn"].setValue(null);
            }
        });
    }
    gotoReg2Page() {
        this.commonService.isClickPrivateEntityReg = false;
        console.log("Reg 1 data:::::" + JSON.stringify(this.submitReg1.value));
        if (this.submitReg1.valid) {
            this.mciModel = new _models_mci_model__WEBPACK_IMPORTED_MODULE_5__["MCIModel"]();
            // this.mciModel = this.submitReg1.value;
            if (typeof (this.dateOfBirth) === 'string') {
                this.mciModel.dateOfBirth = this.dateOfBirth;
            }
            else {
                this.mciModel.dateOfBirth = this.dateOfBirth.toLocaleDateString('en-GB');
            }
            this.mciModel.crn = this.submitReg1.value.crn;
            this.mciModel.mno = this.submitReg1.value.mno;
            this.commonService.postMCIDetails(this.mciModel)
                .subscribe(res => {
                console.log("Response is::::" + JSON.stringify(res));
                this.commonService.userDetails = res;
                //this.router.navigate(['/privateEntityReg2', { state: {mciResponseData: res}}]);
                if (res.responseCode === 0) {
                    this.commonService.isPrivatePart1Completed = false;
                    this.commonService.showGeneralMessage("", res.responseMessage, false);
                    //alert(res.responseMessage);
                }
                else {
                    this.commonService.isPrivatePart1Completed = true;
                    this.router.navigate(['/privateEntityReg2']);
                }
            });
        }
        else {
            this.isOpenValidationAlert = true;
        }
    }
    resetForm() {
        if (this.submitReg1.valid) {
            console.log("Form Submitted!");
            this.submitReg1.reset();
        }
    }
    closeAlert() {
        this.isOpenValidationAlert = false;
    }
};
PrivateEntityReg1Component.ctorParameters = () => [
    { type: _angular_router__WEBPACK_IMPORTED_MODULE_2__["Router"] },
    { type: _angular_forms__WEBPACK_IMPORTED_MODULE_3__["FormBuilder"] },
    { type: _services_common_service_service__WEBPACK_IMPORTED_MODULE_4__["CommonService"] }
];
PrivateEntityReg1Component = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-private-entity-reg1',
        template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! raw-loader!./private-entity-reg1.component.html */ "./node_modules/raw-loader/dist/cjs.js!./src/app/private-entity-reg1/private-entity-reg1.component.html")).default,
        styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! ./private-entity-reg1.component.css */ "./src/app/private-entity-reg1/private-entity-reg1.component.css")).default]
    }),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_angular_router__WEBPACK_IMPORTED_MODULE_2__["Router"], _angular_forms__WEBPACK_IMPORTED_MODULE_3__["FormBuilder"], _services_common_service_service__WEBPACK_IMPORTED_MODULE_4__["CommonService"]])
], PrivateEntityReg1Component);



/***/ }),

/***/ "./src/app/private-entity-reg2/private-entity-reg2.component.css":
/*!***********************************************************************!*\
  !*** ./src/app/private-entity-reg2/private-entity-reg2.component.css ***!
  \***********************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3ByaXZhdGUtZW50aXR5LXJlZzIvcHJpdmF0ZS1lbnRpdHktcmVnMi5jb21wb25lbnQuY3NzIn0= */");

/***/ }),

/***/ "./src/app/private-entity-reg2/private-entity-reg2.component.ts":
/*!**********************************************************************!*\
  !*** ./src/app/private-entity-reg2/private-entity-reg2.component.ts ***!
  \**********************************************************************/
/*! exports provided: PrivateEntityReg2Component */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PrivateEntityReg2Component", function() { return PrivateEntityReg2Component; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm2015/router.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm2015/forms.js");
/* harmony import */ var _services_common_service_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../services/common-service.service */ "./src/app/services/common-service.service.ts");





let PrivateEntityReg2Component = class PrivateEntityReg2Component {
    constructor(router, commonService, formBuilder) {
        this.router = router;
        this.commonService = commonService;
        this.formBuilder = formBuilder;
        this.isOpenValidationAlert = false;
        this.noPattern = '^(0|[1-9][0-9]*)$';
        this.emailPattern = "^[a-z0-9._%+-]+@[a-z0-9.-]+.[a-z]{2,4}$";
    }
    ngOnInit() {
        console.log("In private 2::::" + this.commonService.isPrivatePart1Completed);
        if (this.commonService.isPrivatePart1Completed === false) {
            this.router.navigate(['/privateEntityReg']);
        }
        this.submitReg2 = this.formBuilder.group({
            entityName: [
                "",
            ],
            crNumber: [
                "",
            ],
            cr_type: [
                "",
            ],
            cr_status: [
                "",
            ],
            cr_issue_dt: [
                "",
            ],
            cr_expiry_dt: [
                "",
            ],
            address: [
                "",
            ],
            city: [
                "",
            ]
        });
        console.log('Reg1 response data in page2::::' + JSON.stringify(this.commonService.userDetails));
        if (this.commonService.userDetails.userObject !== undefined || this.commonService.userDetails.userObject !== null) {
            console.log('Reg1 response data in page2 in if::::' + JSON.stringify(this.commonService.userDetails.userObject));
            console.log("this.commonService.userDetails.entity_name::::" + this.commonService.userDetails.userObject.entity_name);
            this.submitReg2.controls["entityName"].setValue(this.commonService.userDetails.userObject.entity_name);
            this.submitReg2.controls["crNumber"].setValue(this.commonService.userDetails.userObject.cr_no);
            this.submitReg2.controls["cr_type"].setValue(this.commonService.userDetails.userObject.cr_type);
            this.submitReg2.controls["cr_status"].setValue(this.commonService.userDetails.userObject.cr_status);
            this.submitReg2.controls["cr_issue_dt"].setValue(this.commonService.userDetails.userObject.cr_issue_dt);
            this.submitReg2.controls["cr_expiry_dt"].setValue(this.commonService.userDetails.userObject.cr_expiry_dt);
            this.submitReg2.controls["address"].setValue(this.commonService.userDetails.userObject.address);
            this.submitReg2.controls["city"].setValue(this.commonService.userDetails.userObject.city);
        }
    }
    gotoPrevious() {
        this.router.navigate(['/privateEntityReg']);
    }
    saveReg2() {
        if (this.commonService.userDetails !== undefined || this.commonService.userDetails !== null) {
            let navigationExtras = {
                queryParams: {
                    "entityName": this.commonService.userDetails.entityName,
                    "crNumber": this.commonService.userDetails.crNumber,
                    "contactNo": this.commonService.userDetails.contactNo,
                    "emailAddress": this.commonService.userDetails.emailAddress,
                    "address1": this.commonService.userDetails.address1,
                    "address2": this.commonService.userDetails.address2
                }
            };
            this.commonService.isPrivatePart2Completed = true;
            this.router.navigate(['/privateEntityReg3']);
            // this.router.navigate(["privateEntityReg3"], navigationExtras);
        }
        //this.router.navigate(['/privateEntityReg3']);
    }
};
PrivateEntityReg2Component.ctorParameters = () => [
    { type: _angular_router__WEBPACK_IMPORTED_MODULE_2__["Router"] },
    { type: _services_common_service_service__WEBPACK_IMPORTED_MODULE_4__["CommonService"] },
    { type: _angular_forms__WEBPACK_IMPORTED_MODULE_3__["FormBuilder"] }
];
PrivateEntityReg2Component = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-private-entity-reg2',
        template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! raw-loader!./private-entity-reg2.component.html */ "./node_modules/raw-loader/dist/cjs.js!./src/app/private-entity-reg2/private-entity-reg2.component.html")).default,
        styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! ./private-entity-reg2.component.css */ "./src/app/private-entity-reg2/private-entity-reg2.component.css")).default]
    }),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_angular_router__WEBPACK_IMPORTED_MODULE_2__["Router"], _services_common_service_service__WEBPACK_IMPORTED_MODULE_4__["CommonService"], _angular_forms__WEBPACK_IMPORTED_MODULE_3__["FormBuilder"]])
], PrivateEntityReg2Component);



/***/ }),

/***/ "./src/app/private-entity-reg3/private-entity-reg3.component.css":
/*!***********************************************************************!*\
  !*** ./src/app/private-entity-reg3/private-entity-reg3.component.css ***!
  \***********************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3ByaXZhdGUtZW50aXR5LXJlZzMvcHJpdmF0ZS1lbnRpdHktcmVnMy5jb21wb25lbnQuY3NzIn0= */");

/***/ }),

/***/ "./src/app/private-entity-reg3/private-entity-reg3.component.ts":
/*!**********************************************************************!*\
  !*** ./src/app/private-entity-reg3/private-entity-reg3.component.ts ***!
  \**********************************************************************/
/*! exports provided: PrivateEntityReg3Component */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PrivateEntityReg3Component", function() { return PrivateEntityReg3Component; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm2015/router.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm2015/forms.js");
/* harmony import */ var _services_common_service_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../services/common-service.service */ "./src/app/services/common-service.service.ts");





let PrivateEntityReg3Component = class PrivateEntityReg3Component {
    constructor(router, commonService, formBuilder) {
        this.router = router;
        this.commonService = commonService;
        this.formBuilder = formBuilder;
        this.notSelected = "Not selected";
        this.isSelectedrniFile = false;
        this.isSelectedlalFile = false;
        this.isSelectedcrFile = false;
        this.isSelectedlaglFile = false;
        this.isOpenValidationAlert = false;
        this.isOpenModal = false;
        this.checkBox = false;
        this.isChecked = 'n';
        this.bankList = [];
        //noPattern: string = '^(0|[1-9][0-9]*)$';
        this.noPattern = '^([0-9][0-9]*)$';
        this.emailPattern = "^[a-z0-9._%+-]+@[a-z0-9.-]+.[a-z]{2,4}$";
        this.textPattern = "^[A-Za-z ]*$";
        this.namePattern = "^[A-Za-z]+$";
        //ibanPattern = "^[A-Z]{2}\d{2} (?:\d{4} ){3}\d{4}(?: \d\d?)?$";
        //ibanPattern = "^[A-Z]{2}[0-9]{2}(?:[ ]?[0-9]{4}){4}(?:[ ]?[0-9]{1,2})?$";
        this.ibanPattern = "^[a-zA-Z]{2}[0-9]*$";
        this.allowedExtensions = ['jpg', 'gif', 'pdf', 'png'];
        this.validation_messages = {
            // name: [
            //   { type: "required", message: "This is a required field." },
            //   {
            //     type: "pattern",
            //     message: "Name should be composed of characters."
            //   },
            //   {
            //     type: "maxlength",
            //     message: "Maximum length should be 20."
            //   }
            // ],
            // userName: [
            //   { type: "required", message: "This is a required field." },
            //   {
            //     type: "pattern",
            //     message: "Name should be composed of characters."
            //   },
            //   {
            //     type: "maxlength",
            //     message: "Maximum length should be 20."
            //   }
            // ],
            email: [
                { type: "required", message: "This is a required field." },
                {
                    type: "pattern",
                    message: "Please enter a valid emailid."
                }
            ],
            password: [
                { type: "required", message: "This is a required field." }
            ],
            confirmPassword: [
                { type: "required", message: "This is a required field." }
            ],
            // nationalId: [
            //   { type: "required", message: "This is a required field." },
            //   {
            //     type: "pattern",
            //     message: "National Id should be composed of digits."
            //   },
            //   {
            //     type: "maxlength",
            //     message: "You can enter national Id of maximum 9 digits."
            //   }
            // ],
            // userId: [
            //   { type: "required", message: "This is a required field." },
            //   {
            //     type: "pattern",
            //     message: "User Id should be composed of characters."
            //   },
            //   {
            //     type: "maxlength",
            //     message: "Maximum length should be 20."
            //   }
            // ],
            mobileNo: [
                { type: "required", message: "This is a required field." },
                {
                    type: "pattern",
                    message: "Mobile number should be composed of digits."
                },
                /* {
                  type: "maxlength",
                  message: "Maximum length should be 10."
                }, */
                {
                    type: "minlength",
                    message: "Minimum length should be 10."
                }
            ],
            rniFile: [
                { type: "required", message: "This is a required field." }
            ],
            crFile: [
                { type: "required", message: "This is a required field." }
            ],
            laglFile: [
                { type: "required", message: "This is a required field." }
            ],
            lalFile: [
                { type: "required", message: "This is a required field." }
            ],
            bi: [
                { type: "required", message: "This is a required field." },
                {
                    type: "pattern",
                    message: "1ST 2 characters should be letter and then digits."
                },
                {
                    type: "maxlength",
                    message: "Maximum length should be 34."
                }
            ],
            bankName: [
                { type: "required", message: "This is a required field." }
            ]
        };
        console.log("I'm in third page" + JSON.stringify(this.commonService.userDetails));
    }
    ngOnInit() {
        this.userId = localStorage.getItem('userId');
        console.log("this.userId::::" + this.userId);
        console.log("In private 3::::" + this.commonService.isPrivatePart2Completed);
        if (this.commonService.isPrivatePart2Completed === false && this.commonService.isPrivatePart1Completed === true) {
            this.router.navigate(['/privateEntityReg2']);
        }
        if (this.commonService.isPrivatePart2Completed === false && this.commonService.isPrivatePart1Completed === false) {
            this.router.navigate(['/privateEntityReg']);
        }
        this.submitReg3 = this.formBuilder.group({
            name: [
                "",
            ],
            userName: [
                "",
            ],
            dob: [
                ""
            ],
            nin: [
                ""
            ],
            password: [
                "",
                [
                    _angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].required
                ]
            ],
            confirmPassword: [
                "",
                [
                    _angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].required
                ]
            ],
            email: [
                "",
                [
                    _angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].required,
                    _angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].pattern(this.emailPattern),
                ]
            ],
            // userId: [
            //   "",
            //   [
            //     Validators.required,
            //     Validators.pattern(this.textPattern),
            //     Validators.maxLength(20)
            //   ]
            // ],
            mobileNo: [
                "",
                [
                    _angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].required,
                    _angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].pattern(this.noPattern),
                    /*  Validators.maxLength(10), */
                    _angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].minLength(10)
                ]
            ],
            // nationalId: [
            //   "",
            //   [
            //     Validators.required,
            //     Validators.pattern(this.noPattern),
            //     Validators.maxLength(9)
            //   ]
            // ],
            rniFile: [
                "",
                [
                    _angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].required
                ]
            ],
            crFile: [
                "",
                [
                    _angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].required
                ]
            ],
            laglFile: [
                "",
                [
                    _angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].required
                ]
            ],
            lalFile: [
                "",
                [
                    _angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].required
                ]
            ],
            checkBox: ["", [_angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].required]],
            bi: [
                "",
                [
                    _angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].required,
                    _angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].pattern(this.ibanPattern),
                    _angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].maxLength(34)
                ]
            ],
            bankName: [
                "",
                [
                    _angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].required
                ]
            ]
        });
        this.commonService.getBankNameList()
            .subscribe(res => {
            console.log("Bank name list::::" + JSON.stringify(res));
            this.bankList = res;
            //console.log("Bank list is::::"+JSON.stringify(this.bankList));
        });
        if (this.commonService.userDetails.userObject != null || this.commonService.userDetails.userObject != undefined) {
            if (this.commonService.userDetails.userObject.fname != null || this.commonService.userDetails.userObject.fname != undefined) {
                this.submitReg3.controls["name"].setValue(this.commonService.userDetails.userObject.fname);
            }
            if (this.commonService.userDetails.userObject.lname != null || this.commonService.userDetails.userObject.lname != undefined) {
                this.submitReg3.controls["userName"].setValue(this.commonService.userDetails.userObject.lname);
            }
            if (this.commonService.userDetails.userObject.dob != null || this.commonService.userDetails.userObject.dob != undefined) {
                this.submitReg3.controls["dob"].setValue(this.commonService.userDetails.userObject.dob);
            }
            if (this.commonService.userDetails.userObject.nin != null || this.commonService.userDetails.userObject.nin != undefined) {
                this.submitReg3.controls["nin"].setValue(this.commonService.userDetails.userObject.nin);
            }
        }
    }
    onBlurMobile(mobile) {
        console.log("mobile[0] and type" + mobile[0] + ' ' + typeof (mobile[0]));
        if (mobile[0] !== '0' && mobile.length === 11) {
            this.submitReg3.controls["mobileNo"].setValue(null);
        }
    }
    onBlur(confirmPassword) {
        console.log("userId:::::" + confirmPassword);
        var index = this.submitReg3.value.password.localeCompare(confirmPassword);
        if (index !== 0) {
            this.commonService.showGeneralMessage("", "Passwords must match", false);
            //alert("Passwords must match");
            this.submitReg3.controls["confirmPassword"].setValue(null);
        } //no match
        //this.checkValidLoginId(userId);
    }
    checkValidLoginId(userId) {
        this.commonService.checkValidLoginId(userId)
            .subscribe(res => {
            console.log("Response for userId is::::" + JSON.stringify(res));
            if (res.responseCode === 0) {
                // alert(res.responseMessage);
                this.commonService.showGeneralMessage("", res.responseMessage, false);
                this.submitReg3.controls["userId"].setValue(null);
            }
        });
    }
    toggleVisibility(e) {
        if (e.target.checked) {
            this.checkBox = true;
            this.isChecked = 'y';
        }
        else {
            this.checkBox = false;
            this.isChecked = 'n';
        }
        this.submitReg3.controls['checkBox'].setValue(this.checkBox);
    }
    fileProgress(event, fileCat) {
        if (fileCat === 'rni') {
            let fileData = event.target.files[0];
            if (fileData === undefined) {
                this.rniFile = null;
                this.isSelectedrniFile = false;
            }
            if (fileData.size > 500000) {
                this.commonService.showGeneralMessage("", "Please upload < 500KB", false);
                // alert("Please upload < 500KB");
                fileData = undefined;
                this.rniFile = null;
                this.isSelectedrniFile = false;
            }
            let fname = fileData.name.split('.');
            this.rniFileName = fname[0];
            this.rniFileExtension = fname[1];
            console.log("rni fname::::" + fname[0]);
            if (!this.allowedExtensions.some((item) => item == (fname[fname.length - 1]).toLowerCase())) {
                this.commonService.showGeneralMessage("", fname[fname.length - 1] + " file format is not allowed. Please upload recommended file types.", false);
                //alert(fname[fname.length - 1] + " file format is not allowed. Please upload recommended file types.");
                //  return this.isValidationOK=false;
            }
            else {
                this.rniFile = fileData;
                this.isSelectedrniFile = true;
                this.commonService.userDetails.rniFile = fileData;
            }
        }
        else if (fileCat === 'lal') {
            let fileData = event.target.files[0];
            if (fileData === undefined) {
                this.lalFile = null;
                this.isSelectedlalFile = false;
            }
            if (fileData.size > 500000) {
                this.commonService.showGeneralMessage("", "Please upload < 500KB", false);
                // alert("Please upload < 500KB");
                fileData = undefined;
                this.lalFile = null;
                this.isSelectedlalFile = false;
            }
            let fname = fileData.name.split('.');
            this.lalFileName = fname[0];
            this.lalFileExtension = fname[1];
            console.log("lal fname::::" + fname);
            if (!this.allowedExtensions.some((item) => item == (fname[fname.length - 1]).toLowerCase())) {
                this.commonService.showGeneralMessage("", fname[fname.length - 1] + " file format is not allowed. Please upload recommended file types.", false);
                //alert(fname[fname.length - 1] + " file format is not allowed. Please upload recommended file types.");
                //  return this.isValidationOK=false;
            }
            else {
                this.lalFile = fileData;
                this.isSelectedlalFile = true;
                this.commonService.userDetails.lalFile = fileData;
            }
        }
        else if (fileCat === 'lagl') {
            let fileData = event.target.files[0];
            if (fileData === undefined) {
                this.laglFile = null;
                this.isSelectedlaglFile = false;
            }
            if (fileData.size > 500000) {
                this.commonService.showGeneralMessage("", "Please upload < 500KB", false);
                // alert("Please upload < 500KB");
                fileData = undefined;
                this.laglFile = null;
                this.isSelectedlaglFile = false;
            }
            let fname = fileData.name.split('.');
            this.laglFileName = fname[0];
            this.laglFileExtension = fname[1];
            console.log("lagl fname::::" + fname);
            if (!this.allowedExtensions.some((item) => item == (fname[fname.length - 1]).toLowerCase())) {
                this.commonService.showGeneralMessage("", fname[fname.length - 1] + " file format is not allowed. Please upload recommended file types.", false);
                //alert(fname[fname.length - 1] + " file format is not allowed. Please upload recommended file types.");
                //  return this.isValidationOK=false;
            }
            else {
                this.laglFile = fileData;
                this.isSelectedlaglFile = true;
                this.commonService.userDetails.laglFile = fileData;
            }
        }
        else if (fileCat === 'cr') {
            let fileData = event.target.files[0];
            if (fileData === undefined) {
                this.crFile = null;
                this.isSelectedcrFile = false;
            }
            if (fileData.size > 500000) {
                this.commonService.showGeneralMessage("", "Please upload < 500KB", false);
                // alert("Please upload < 500KB");
                fileData = undefined;
                this.crFile = null;
                this.isSelectedcrFile = false;
            }
            let fname = fileData.name.split('.');
            this.crFileName = fname[0];
            this.crFileExtension = fname[1];
            console.log("cr fname::::" + fname);
            if (!this.allowedExtensions.some((item) => item == (fname[fname.length - 1]).toLowerCase())) {
                this.commonService.showGeneralMessage("", fname[fname.length - 1] + " file format is not allowed. Please upload recommended file types.", false);
                //alert(fname[fname.length - 1] + " file format is not allowed. Please upload recommended file types.");
                //  return this.isValidationOK=false;
            }
            else {
                this.crFile = fileData;
                this.isSelectedcrFile = true;
                this.commonService.userDetails.crFile = fileData;
            }
        }
        // if((this.rniFileName === this.lalFileName) || (this.rniFileName === this.laglFileExtension) || (this.rniFileName === this.crFileName)) {
        //   alert("Attachment file should not be same");
        // }
    }
    // fileProgress(event: any, fileCat: String) {
    //   if (fileCat === 'rni') {
    //     let fileData = <File>event.target.files[0];
    //       this.commonService.userDetails.rniFile = fileData;
    //       this.rniFile = fileData;
    //       this.isSelectedrniFile = true;
    //   }
    //   else if (fileCat === 'cr') {
    //     let fileData = <File>event.target.files[0];
    //     this.isSelectedcrFile = true;
    //     this.commonService.userDetails.crFile = fileData;
    //     this.crFile = fileData;
    //   }
    //   else if (fileCat === 'lal') {
    //     let fileData = <File>event.target.files[0];
    //     this.isSelectedlalFile = true;
    //     this.commonService.userDetails.lalFile = fileData;
    //     this.lalFile = fileData;
    //   }
    //   else if (fileCat === 'lagl') {
    //     let fileData = <File>event.target.files[0];
    //     this.isSelectedlaglFile = true;
    //     this.commonService.userDetails.laglFile = fileData;
    //     this.laglFile = fileData;
    //   }
    // }
    gotoPrevious() {
        this.router.navigate(['/privateEntityReg2']);
    }
    saveReg3() {
        console.log("Reg 3 data:::::" + JSON.stringify(this.submitReg3.value));
        if (this.submitReg3.valid) {
            // this.commonService.userDetails.rniFile = this.submitReg3.value.rniFile;
            // this.commonService.userDetails.crFile = this.submitReg3.value.crFile;
            // this.commonService.userDetails.lalFile = this.submitReg3.value.lalFile;
            // this.commonService.userDetails.laglFile = this.laglFile;
            this.commonService.userDetails.name = this.submitReg3.value.name;
            this.commonService.userDetails.userName = this.submitReg3.value.userName;
            this.commonService.userDetails.email = this.submitReg3.value.email;
            //this.commonService.userDetails.userId = this.submitReg3.value.userId;
            this.commonService.userDetails.mobileNo = this.submitReg3.value.mobileNo;
            //this.commonService.userDetails.nationalId = this.submitReg3.value.nationalId;
            this.commonService.userDetails.isChecked = this.isChecked;
            this.commonService.userDetails.password = this.submitReg3.value.password;
            this.commonService.userDetails.confirmPassword = this.submitReg3.value.confirmPassword;
            this.commonService.userDetails.bi = this.submitReg3.value.bi;
            this.commonService.userDetails.bankName = this.submitReg3.value.bankName;
            this.commonService.userDetails.userId = this.userId;
            console.log("this.commonService.userDetails::::" + JSON.stringify(this.commonService.userDetails));
            this.commonService.postRegistrationDetails(this.commonService.userDetails)
                .subscribe(res => {
                console.log("Response is::::" + JSON.stringify(res));
                //this.commonService.userDetails = res;
                if (res.responseCode == 1) {
                    this.commonService.responseCodeforRegistrationFinal = res.responseCode;
                    this.commonService.alertMsgforRegistrationFinal = res.responseMessage;
                    this.commonService.isPrivatePart3Completed = true;
                    console.log("test......");
                    //this.isOpenModal = true;
                    //alert("Your documents and details are pending for verification. You will be notified through the communication details you provided.")
                    this.router.navigate(['/privateEntityRegFinal']);
                    console.log("test.123.....");
                }
            });
        }
        else {
            this.isOpenValidationAlert = true;
        }
    }
    resetForm() {
        this.submitReg3.controls["bankName"].setValue(null);
        this.submitReg3.controls["bi"].setValue(null);
        this.submitReg3.controls["confirmPassword"].setValue(null);
        this.submitReg3.controls["password"].setValue(null);
        this.submitReg3.controls["checkBox"].setValue(false);
        this.submitReg3.controls["mobileNo"].setValue(null);
        this.submitReg3.controls["email"].setValue(null);
        this.submitReg3.controls["lalFile"].setValue(null);
        this.submitReg3.controls["laglFile"].setValue(null);
        this.submitReg3.controls["crFile"].setValue(null);
        this.submitReg3.controls["rniFile"].setValue(null);
        this.isSelectedcrFile = false;
        this.isSelectedlaglFile = false;
        this.isSelectedlalFile = false;
        this.isSelectedrniFile = false;
        // if (this.submitReg3.valid) {
        // console.log("Form Submitted!");
        // //this.submitReg3.reset();
        // }
    }
    closeModal() {
        this.isOpenModal = false;
    }
    closeAlert() {
        this.isOpenValidationAlert = false;
    }
};
PrivateEntityReg3Component.ctorParameters = () => [
    { type: _angular_router__WEBPACK_IMPORTED_MODULE_2__["Router"] },
    { type: _services_common_service_service__WEBPACK_IMPORTED_MODULE_4__["CommonService"] },
    { type: _angular_forms__WEBPACK_IMPORTED_MODULE_3__["FormBuilder"] }
];
PrivateEntityReg3Component = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-private-entity-reg3',
        template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! raw-loader!./private-entity-reg3.component.html */ "./node_modules/raw-loader/dist/cjs.js!./src/app/private-entity-reg3/private-entity-reg3.component.html")).default,
        styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! ./private-entity-reg3.component.css */ "./src/app/private-entity-reg3/private-entity-reg3.component.css")).default]
    }),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_angular_router__WEBPACK_IMPORTED_MODULE_2__["Router"], _services_common_service_service__WEBPACK_IMPORTED_MODULE_4__["CommonService"], _angular_forms__WEBPACK_IMPORTED_MODULE_3__["FormBuilder"]])
], PrivateEntityReg3Component);



/***/ }),

/***/ "./src/app/private-lg-details/private-lg-details.component.css":
/*!*********************************************************************!*\
  !*** ./src/app/private-lg-details/private-lg-details.component.css ***!
  \*********************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3ByaXZhdGUtbGctZGV0YWlscy9wcml2YXRlLWxnLWRldGFpbHMuY29tcG9uZW50LmNzcyJ9 */");

/***/ }),

/***/ "./src/app/private-lg-details/private-lg-details.component.ts":
/*!********************************************************************!*\
  !*** ./src/app/private-lg-details/private-lg-details.component.ts ***!
  \********************************************************************/
/*! exports provided: PrivateLgDetailsComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PrivateLgDetailsComponent", function() { return PrivateLgDetailsComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm2015/router.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm2015/forms.js");
/* harmony import */ var _services_common_service_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../services/common-service.service */ "./src/app/services/common-service.service.ts");
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/material */ "./node_modules/@angular/material/esm2015/material.js");
/* harmony import */ var _general_modal_general_modal_component__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../general-modal/general-modal.component */ "./src/app/general-modal/general-modal.component.ts");







let PrivateLgDetailsComponent = class PrivateLgDetailsComponent {
    constructor(router, formBuilder, commonService, dialog) {
        this.router = router;
        this.formBuilder = formBuilder;
        this.commonService = commonService;
        this.dialog = dialog;
        this.isDisableApprove = true;
        this.tncCheckbox = false;
        this.checkBox = false;
        this.ac_of_contract = false;
        this.agree_tag = false;
        this.isEnableButtons = false;
        this.bankNamesList = [];
        /******** */
        this.isEnableGovButtons = false;
        this.isDisablesendBackButton = true;
        this.isDisabledApprovedButton = false;
        this.isAllowToApprove = false;
        this.isEditTnC = false;
        this.nsAcceptButton = false;
        this.isIssuedLetterOfGuarantee = false;
        this.isLGBeneficiary = false;
        this.applicantIfo = [];
        this.LG_History = [];
        this.amendmentApproval = false;
        this.amendmentAmountApproval = false;
        this.amendmentWriteUpApproval = false;
        this.amendmentLGEndDateApproval = false;
        this.isalertMsgforAmendmentStatus = false;
        this.isACREnableButtons = true;
        this.aclAmendCreate = false;
        this.aclAmendReview = false;
        this.aclAmendApprove = false;
        this.aclConfiscateCreate = false;
        this.aclConfiscateReview = false;
        this.aclConfiscateApprove = false;
        this.aclReleaseCreate = false;
        this.aclReleaseReview = false;
        this.aclReleaseApprove = false;
        this.bankIbanList = [];
        this.IBANList = [];
        this.ispriceLimitOk = true;
        this.lgTypeList = [];
        this.isAmendmentUpdate = false;
        this.isConfiscateUpdate = false;
        this.isReleaseUpdate = false;
        this.roleId = localStorage.getItem('roleId');
        console.log("this.roleId::::" + this.roleId);
        this.loginId = localStorage.getItem('userId');
        console.log("this.loginId::::" + this.loginId);
        this.userId = localStorage.getItem('userId');
        console.log("this.userId::::" + this.userId);
        this.crNoOrUidNo = localStorage.getItem('crNoOrUidNo');
        console.log("crNoOrUidNo::::" + this.crNoOrUidNo);
        this.acl = JSON.parse(localStorage.getItem('acl'));
        /* console.log("currentWorkflowID >>"+localStorage.getItem('currentWorkflowID'));
        this.currentWorkflowID = localStorage.getItem('currentWorkflowID'); */
        this.currentmenuType = localStorage.getItem('currentmenuType');
        console.log("currentmenuType >>" + localStorage.getItem('currentmenuType'));
        console.log("this.supplierId::::" + this.commonService.lgIssuanceApproval.supplierId);
        console.log("this.beneficiaryId::::" + this.commonService.lgIssuanceApproval.beneficiaryId);
        console.log("this.beneficiary_UID::::" + this.commonService.lgIssuanceApproval.beneficiary_UID);
        console.log("LGType >:" + this.commonService.lgIssuanceApproval.LGType);
        this.commonService.currentWFIDObservable.subscribe((WFID) => {
            if (WFID) {
                this.currentWorkflowID = WFID;
                console.log("currentWFIDObservable  currentWorkflowID :" + this.currentWorkflowID);
                if (this.currentmenuType == 'Amendment') {
                    if (this.acl.Amendment !== undefined) {
                        if (localStorage.getItem('update_amendment') == 'update_amendment') {
                            localStorage.removeItem('update_amendment');
                            this.isAmendmentUpdate = true;
                        }
                        console.log("Amendment workflow_id :" + this.currentWorkflowID);
                        this.commonService.getBondTypeFromWorkFlow(this.currentWorkflowID, this.userId)
                            .subscribe(res => {
                            console.log("FromWorkFlow LG list::::" + JSON.stringify(res));
                            this.lgTypeList = res;
                            console.log("LGType " + this.commonService.lgIssuanceApproval.LGType);
                            var hasMatch = false;
                            for (var ind = 0; ind < this.lgTypeList.length; ++ind) {
                                var bondtype = this.lgTypeList[ind];
                                if (bondtype.bond == this.commonService.lgIssuanceApproval.LGType) {
                                    hasMatch = true;
                                    break;
                                }
                            }
                            if (hasMatch) {
                                for (let actions of this.acl.Amendment['subMenu']) {
                                    console.log(actions.action_nm);
                                    if (actions.action_nm === 'Create') {
                                        this.aclAmendCreate = true;
                                        this.commonService.getPriceLimitFromWorkFlow(this.currentWorkflowID, this.userId)
                                            .subscribe(res => {
                                            console.log("priceLimit::::" + JSON.stringify(res));
                                            this.amendPriceLimit = res[0].price_limit;
                                            console.log("priceLimit is::::" + JSON.stringify(this.priceLimit));
                                        });
                                    }
                                    if (actions.action_nm === 'Review') {
                                        this.aclAmendReview = true;
                                    }
                                    if (actions.action_nm === 'Approve') {
                                        this.aclAmendApprove = true;
                                    }
                                }
                            }
                        });
                    }
                }
                if (this.currentmenuType == 'Confiscate') {
                    if (this.acl.Confiscate !== undefined) {
                        console.log("Confiscate workflow_id :" + this.currentWorkflowID);
                        if (localStorage.getItem('update_confiscate') == 'update_confiscate') {
                            localStorage.removeItem('update_confiscate');
                            this.isConfiscateUpdate = true;
                        }
                        this.commonService.getBondTypeFromWorkFlow(this.currentWorkflowID, this.userId)
                            .subscribe(res => {
                            console.log("FromWorkFlow LGType Confiscate::::" + JSON.stringify(res));
                            this.lgTypeList = res;
                            console.log("LGType Confiscate" + this.commonService.lgIssuanceApproval.LGType);
                            var hasMatch = false;
                            for (var ind = 0; ind < this.lgTypeList.length; ++ind) {
                                var bondtype = this.lgTypeList[ind];
                                if (bondtype.bond == this.commonService.lgIssuanceApproval.LGType) {
                                    hasMatch = true;
                                    break;
                                }
                            }
                            if (hasMatch) {
                                for (let actions of this.acl.Confiscate['subMenu']) {
                                    console.log(actions.action_nm);
                                    if (actions.action_nm === 'Create') {
                                        this.aclConfiscateCreate = true;
                                        this.commonService.getPriceLimitFromWorkFlow(this.currentWorkflowID, this.userId)
                                            .subscribe(res => {
                                            console.log("priceLimit::::" + JSON.stringify(res));
                                            this.confiscatePriceLimit = res[0].price_limit;
                                        });
                                    }
                                    if (actions.action_nm === 'Review') {
                                        this.aclConfiscateReview = true;
                                    }
                                    if (actions.action_nm === 'Approve') {
                                        this.aclConfiscateApprove = true;
                                    }
                                }
                                this.commonService.getBankIbanListFromWorkFlow(this.currentWorkflowID, this.userId)
                                    .subscribe(res => {
                                    console.log("BankIbanList ::::" + JSON.stringify(res));
                                    this.bankIbanList = res;
                                    localStorage.setItem('bankIbanList', JSON.stringify(res));
                                    console.log("BankIbanList is::::" + JSON.stringify(this.bankIbanList));
                                });
                            }
                        });
                    }
                }
                if (this.currentmenuType == 'Release') {
                    if (this.acl.Release !== undefined) {
                        console.log("Release workflow_id :" + this.currentWorkflowID);
                        if (localStorage.getItem('update_release') == 'update_release') {
                            localStorage.removeItem('update_release');
                            this.isReleaseUpdate = true;
                        }
                        this.commonService.getBondTypeFromWorkFlow(this.currentWorkflowID, this.userId)
                            .subscribe(res => {
                            console.log("FromWorkFlow LGType Release::::" + JSON.stringify(res));
                            this.lgTypeList = res;
                            console.log("LGType Release" + this.commonService.lgIssuanceApproval.LGType);
                            var hasMatch = false;
                            for (var ind = 0; ind < this.lgTypeList.length; ++ind) {
                                var bondtype = this.lgTypeList[ind];
                                if (bondtype.bond == this.commonService.lgIssuanceApproval.LGType) {
                                    hasMatch = true;
                                    break;
                                }
                            }
                            if (hasMatch) {
                                for (let actions of this.acl.Release['subMenu']) {
                                    console.log(actions.action_nm);
                                    if (actions.action_nm === 'Create') {
                                        this.aclReleaseCreate = true;
                                        this.commonService.getPriceLimitFromWorkFlow(this.currentWorkflowID, this.userId)
                                            .subscribe(res => {
                                            console.log("priceLimit::::" + JSON.stringify(res));
                                            this.releasePriceLimit = res[0].price_limit;
                                        });
                                    }
                                    if (actions.action_nm === 'Review') {
                                        this.aclReleaseReview = true;
                                    }
                                    if (actions.action_nm === 'Approve') {
                                        this.aclReleaseApprove = true;
                                    }
                                }
                            }
                        });
                    }
                }
            }
        });
        /* if(this.currentmenuType == 'Amendment'){
          if(this.acl.Amendment !== undefined){
            console.log("Amendment workflow_id :"+this.currentWorkflowID);
            this.commonService.getBondTypeFromWorkFlow(this.currentWorkflowID, this.userId)
            .subscribe(res => {
              console.log("FromWorkFlow LG list::::" + JSON.stringify(res));
              this.lgTypeList = res;
              console.log("LGType " + this.commonService.lgIssuanceApproval.LGType);
              var hasMatch =false;
              for (var ind = 0; ind < this.lgTypeList.length; ++ind) {
              var bondtype = this.lgTypeList[ind];
              if(bondtype.bond == this.commonService.lgIssuanceApproval.LGType){
                hasMatch = true;
                break;
              }
              }
              if(hasMatch){
                for (let actions of this.acl.Amendment['subMenu']) {
                  console.log(actions.action_nm);
                  if(actions.action_nm === 'Create'){
                    this.aclAmendCreate = true;
    
    
    
                    this.commonService.getPriceLimitFromWorkFlow(this.currentWorkflowID, this.userId)
                    .subscribe(res => {
                      console.log("priceLimit::::" + JSON.stringify(res));
                      this.amendPriceLimit = res[0].price_limit;
                      console.log("priceLimit is::::" + JSON.stringify(this.priceLimit));
                    });
    
    
    
                  }
                  if(actions.action_nm === 'Review'){
                    this.aclAmendReview = true;
                  }
                  if(actions.action_nm === 'Approve'){
                    this.aclAmendApprove = true;
                  }
                }
              }
            });
            
          }
        }
    
    
    
        if(this.currentmenuType == 'Confiscate'){
          if(this.acl.Confiscate !== undefined){
            console.log("Confiscate workflow_id :"+this.currentWorkflowID);
            this.commonService.getBondTypeFromWorkFlow(this.currentWorkflowID, this.userId)
            .subscribe(res => {
              console.log("FromWorkFlow LGType Confiscate::::" + JSON.stringify(res));
              this.lgTypeList = res;
              console.log("LGType Confiscate" + this.commonService.lgIssuanceApproval.LGType);
              var hasMatch =false;
              for (var ind = 0; ind < this.lgTypeList.length; ++ind) {
              var bondtype = this.lgTypeList[ind];
              if(bondtype.bond == this.commonService.lgIssuanceApproval.LGType){
                hasMatch = true;
                break;
              }
              }
              if(hasMatch){
            for (let actions of this.acl.Confiscate['subMenu']) {
              console.log(actions.action_nm);
              if(actions.action_nm === 'Create'){
                this.aclConfiscateCreate = true;
              }
              if(actions.action_nm === 'Review'){
                this.aclConfiscateReview = true;
              }
              if(actions.action_nm === 'Approve'){
                this.aclConfiscateApprove = true;
              }
            }
            this.commonService.getBankIbanListFromWorkFlow(this.currentWorkflowID, this.userId)
            .subscribe(res => {
              console.log("BankIbanList ::::" + JSON.stringify(res));
              this.bankIbanList = res;
              localStorage.setItem('bankIbanList', JSON.stringify(res));
              console.log("BankIbanList is::::" + JSON.stringify(this.bankIbanList));
              });
            }
            });
    
    
          }
        }
    
        if(this.currentmenuType == 'Release'){
          if(this.acl.Release !== undefined){
            console.log("Release workflow_id :"+this.currentWorkflowID);
    
    
            this.commonService.getBondTypeFromWorkFlow(this.currentWorkflowID, this.userId)
            .subscribe(res => {
              console.log("FromWorkFlow LGType Release::::" + JSON.stringify(res));
              this.lgTypeList = res;
              console.log("LGType Release" + this.commonService.lgIssuanceApproval.LGType);
              var hasMatch =false;
              for (var ind = 0; ind < this.lgTypeList.length; ++ind) {
              var bondtype = this.lgTypeList[ind];
              if(bondtype.bond == this.commonService.lgIssuanceApproval.LGType){
                hasMatch = true;
                break;
              }
              }
              if(hasMatch){
                for (let actions of this.acl.Release['subMenu']) {
                  console.log(actions.action_nm);
                  if(actions.action_nm === 'Create'){
                    this.aclReleaseCreate = true;
                  }
                  if(actions.action_nm === 'Review'){
                    this.aclReleaseReview = true;
                  }
                  if(actions.action_nm === 'Approve'){
                    this.aclReleaseApprove = true;
                  }
                }
              }
            });
    
    
          }
        }
     */
        /* console.log("All localStorage");
        for (var i = 0; i < localStorage.length; i++){
          console.log(localStorage.key(i)+">>"+localStorage.getItem(localStorage.key(i)));
        } */
        //To get IBAN
        this.commonService.getIBANList(this.userId)
            .subscribe(res => {
            console.log("IBAN list::::" + JSON.stringify(res));
            this.bankNamesList = res;
            console.log(this.bankNamesList);
        });
        this.commonService.getBeneficiaryInfoAndApplicatInfo(this.commonService.lgIssuanceApproval.requestId)
            .subscribe(res => {
            console.log("applicantIfo::::" + JSON.stringify(res));
            // console.log(res.userObject.applicatInfo[0].cr_no);
            this.Applicant_CRN = res.userObject.applicatInfo[0].cr_no;
            this.Applicant_Entity_name_Arabic = res.userObject.applicatInfo[0].supplier_name;
            this.Applicant_Selected_Bank = res.userObject.applicatInfo[0].bank_code;
            this.Applicant_Selected_IBAN = res.userObject.applicatInfo[0].iban_no;
            this.Applicant_CR_type = res.userObject.applicatInfo[0].cr_type;
            this.Applicant_CR_status = res.userObject.applicatInfo[0].cr_status;
            this.Applicant_CR_Issue_Date = res.userObject.applicatInfo[0].cr_issue_date;
            this.Applicant_CR_expiry_Date = res.userObject.applicatInfo[0].cr_expiry_date;
            this.Applicant_Address = res.userObject.applicatInfo[0].addr;
            this.Applicant_City = res.userObject.applicatInfo[0].city;
        });
        this.commonService.getLgHistory(this.commonService.lgIssuanceApproval.lg_no)
            .subscribe(res => {
            console.log("lgHistoryList::::" + JSON.stringify(res));
            console.log(res);
            this.LG_History = res.userObject.lgHistorylis;
        });
        /* this.commonService.checkSessionExpired(this.loginId)
        .then((data:any)=>{
    
          if(data==0){
            this.commonService.showGeneralMessage("Session Expired","You will be logged out after pressing OK",false);
            this.commonService.logout(this.loginId);
            return  ;
          }
          else{
          }
          }); */
        console.log("this.commonService.lgIssuanceApproval in Details page*****" + JSON.stringify(this.commonService.lgIssuanceApproval));
        if (this.commonService.lgIssuanceApproval !== undefined || this.commonService.lgIssuanceApproval !== null) {
            if (this.commonService.lgIssuanceApproval.requestId !== undefined || this.commonService.lgIssuanceApproval.requestId !== null) {
                this.request_id = this.commonService.lgIssuanceApproval.requestId;
            }
            console.log("this.commonService.lgIssuanceApproval.create_by in private::::" + this.commonService.lgIssuanceApproval.create_by);
        }
        if (this.roleId !== null || this.roleId !== undefined) {
            //if(this.roleId == 1){
            // if (this.loginId == this.commonService.lgIssuanceApproval.create_by) {
            if (this.crNoOrUidNo == this.commonService.lgIssuanceApproval.supplier_entity_id) {
                console.log("this.roleId in this.commonService.lgIssuanceApproval:::::" + this.roleId);
                this.isIssuedLetterOfGuarantee = true;
                //PENDING
                //if(this.commonService.lgIssuanceApproval.status != null || this.commonService.lgIssuanceApproval.status != undefined){
                if (this.commonService.lgIssuanceApproval.response_code == '120') {
                    this.isEnableButtons = false;
                    this.isEnableGovButtons = false;
                    this.nsAcceptButton = false;
                    this.alertMsgforPrivateLGApproval = "The case request has been sent to bank for further processing";
                }
                // NS-CHANGE
                else if (this.commonService.lgIssuanceApproval.response_code == '121') {
                    this.isEnableButtons = true;
                    this.isEnableGovButtons = false;
                    this.nsAcceptButton = false;
                    this.alertMsgforPrivateLGApproval = "Your case request has been modified by the Beneficiary. Please accept for further processing.";
                }
                //NS-PENDING
                else if (this.commonService.lgIssuanceApproval.response_code == '124') {
                    this.isEnableButtons = false;
                    this.isEnableGovButtons = false;
                    this.nsAcceptButton = false;
                    this.alertMsgforPrivateLGApproval = "Your case request has been sent to Beneficiary. Please contact them for approving the Request.";
                }
                //NS-ACCEPT
                else if (this.commonService.lgIssuanceApproval.response_code == '122') {
                    this.isEnableButtons = false;
                    this.isEnableGovButtons = false;
                    this.nsAcceptButton = false;
                    this.alertMsgforPrivateLGApproval = "Your case request has been sent to beneficiary. You will be notified once approved.";
                }
                //CANCELLED
                else if (this.commonService.lgIssuanceApproval.response_code == '123') {
                    this.isEnableButtons = false;
                    this.isEnableGovButtons = false;
                    this.nsAcceptButton = false;
                    this.alertMsgforPrivateLGApproval = "Cancelled by private entity";
                }
                //}
            }
            if (this.crNoOrUidNo == this.commonService.lgIssuanceApproval.beneficiary_entity_id) {
                this.isLGBeneficiary = true;
                //if(this.roleId == 2 ){
                //PENDING
                //if(this.commonService.lgIssuanceApproval.status != null || this.commonService.lgIssuanceApproval.status != undefined){
                if (this.commonService.lgIssuanceApproval.response_code == '120') {
                    this.isEnableGovButtons = false;
                    this.isEnableButtons = false;
                    this.nsAcceptButton = false;
                    //this.alertMsgforGovLGApproval = "Your case request has been sent to bank. You will be notified once approved.";
                    this.alertMsgforPrivateLGApproval = "The case request has been sent to bank for further processing";
                }
                // NS-CHANGE
                else if (this.commonService.lgIssuanceApproval.response_code == '121') {
                    this.isEnableGovButtons = true;
                    this.isEnableButtons = false;
                    this.nsAcceptButton = false;
                    this.alertMsgforPrivateLGApproval = "The case request is waiting to be accepted by the supplier.";
                }
                //NS-PENDING
                else if (this.commonService.lgIssuanceApproval.response_code == '124') {
                    console.log("this.isEnableButtons for response_code == '124'::::" + this.isEnableButtons);
                    this.isEnableGovButtons = true;
                    this.isEnableButtons = false;
                    this.nsAcceptButton = false;
                    this.alertMsgforPrivateLGApproval = "The case request is waiting for your approval.";
                }
                //NS-ACCEPT
                else if (this.commonService.lgIssuanceApproval.response_code == '122') {
                    this.isEnableGovButtons = false;
                    this.isEnableButtons = false;
                    this.nsAcceptButton = true;
                    this.alertMsgforPrivateLGApproval = "The case request has been accepted by the supplier. Please approve.";
                }
                //  //CANCELLED
                //  else if(this.commonService.lgIssuanceApproval.response_code == '123'){
                //   this.isEnableGovButtons = false;
                //   this.isEnableButtons = false;
                //   this.alertMsgforPrivateLGApproval = "Cancelled by private entity";
                //  }
                //}
            }
        }
    }
    ngOnInit() {
        console.log("Applicant_Entity_name_Arabic 2 : " + this.Applicant_Entity_name_Arabic);
        //To get IBAN
        /* this.commonService.getIBANList(this.userId)
        .subscribe(res => {
          console.log("IBAN list::::" + JSON.stringify(res));
          this.bankNamesList = res;
          localStorage.setItem('bankNamesList', JSON.stringify(res));
          console.log(this.bankNamesList);
   
   
        }); */
        /* this.commonService.getBankIbanListFromWorkFlow(this.acl.Issuance.workflow_id, this.userId)
         .subscribe(res => {
           console.log("BankIbanList ::::" + JSON.stringify(res));
           this.bankIbanList = res;
           localStorage.setItem('bankIbanList', JSON.stringify(res));
           console.log("BankIbanList is::::" + JSON.stringify(this.bankIbanList));
         }); */
        this.submitLGIssuanceApproval = this.formBuilder.group({
            LGType: [
                ""
            ],
            Amount: [
                ""
            ],
            currency: [
                ""
            ],
            LGStartDate: [
                ""
            ],
            LGEndDate: [
                ""
            ],
            checkBox: [
                false
            ],
            ac_of_contract: [
                false
            ],
            agree_tag: [
                false
            ],
            TermsAndCondContent: [
                ""
            ],
            activeStatus: [
                ""
            ],
            requestId: [
                ""
            ],
            LGNumber: [
                ""
            ],
            writeUpType: [
                ""
            ],
            amountInText: [
                ""
            ],
            LGValidityDate: [
                ""
            ],
            zakatStartDate: [
                ""
            ],
            zakatEndDate: [
                ""
            ],
            projectName: [
                ""
            ],
            projectId: [
                ""
            ],
            purposeOfBond: [
                ""
            ],
            LGIssueDate: [
                ""
            ],
            byanNo: [
                ""
            ],
            Applicant_CRN: [
                ""
            ],
            Applicant_Entity_name_Arabic: [
                ""
            ],
            Applicant_Selected_Bank: [
                ""
            ],
            Applicant_Selected_IBAN: [
                ""
            ],
            Applicant_CR_type: [
                ""
            ],
            Applicant_CR_status: [
                ""
            ],
            Applicant_CR_Issue_Date: [
                ""
            ],
            Applicant_CR_expiry_Date: [
                ""
            ],
            Applicant_Address: [
                ""
            ],
            Applicant_City: [
                ""
            ],
            Beneficiary_Name: [
                ""
            ],
            Beneficiary_UID_or_CRN: [
                ""
            ],
            Represantitive_Name: [
                ""
            ],
            Represantitive_Mobile_number: [
                ""
            ],
            Represantitive_Email: [
                ""
            ],
            Represantitive_Address: [
                ""
            ]
        });
        console.log("LG Details ::::" + JSON.stringify(this.commonService.lgIssuanceApproval));
        var getLGEndDateSplit = this.commonService.lgIssuanceApproval.LGEndDate.split("/");
        var getLGEndDate = getLGEndDateSplit[2] + "-" + getLGEndDateSplit[1] + "-" + getLGEndDateSplit[0];
        this.new_getLGEndDate = new Date(getLGEndDate);
        this.today_date = new Date();
        if (this.new_getLGEndDate < this.today_date) {
            this.isACREnableButtons = false;
        }
        this.submitLGIssuanceApproval.controls["LGType"].setValue(this.commonService.lgIssuanceApproval.LGType);
        this.submitLGIssuanceApproval.controls["LGNumber"].setValue(this.commonService.lgIssuanceApproval.lg_no);
        this.submitLGIssuanceApproval.controls["Amount"].setValue(this.commonService.lgIssuanceApproval.Amount);
        if (this.commonService.lgIssuanceApproval.LGType != null || this.commonService.lgIssuanceApproval.LGType != undefined) {
        }
        if (this.commonService.lgIssuanceApproval.status != null || this.commonService.lgIssuanceApproval.status != undefined) {
            this.submitLGIssuanceApproval.controls["activeStatus"].setValue(this.commonService.lgIssuanceApproval.status);
        }
        if (this.commonService.lgIssuanceApproval.requestId != null || this.commonService.lgIssuanceApproval.requestId != undefined) {
            this.submitLGIssuanceApproval.controls["requestId"].setValue(this.commonService.lgIssuanceApproval.requestId);
        }
        if (this.commonService.lgIssuanceApproval.writeUpType != null || this.commonService.lgIssuanceApproval.writeUpType != undefined) {
            this.submitLGIssuanceApproval.controls["writeUpType"].setValue(this.commonService.lgIssuanceApproval.writeUpType);
        }
        // if (this.commonService.lgIssuanceApproval.bankName != null || this.commonService.lgIssuanceApproval.bankName != undefined) {
        //   this.submitLGIssuanceApproval.controls["bankName"].setValue(this.commonService.lgIssuanceApproval.bankName);
        // }
        if (this.commonService.lgIssuanceApproval.LGStartDate != null || this.commonService.lgIssuanceApproval.LGStartDate != undefined) {
            this.submitLGIssuanceApproval.controls["LGStartDate"].setValue(this.commonService.lgIssuanceApproval.LGStartDate);
        }
        if (this.commonService.lgIssuanceApproval.LGEndDate != null || this.commonService.lgIssuanceApproval.LGEndDate != undefined) {
            this.submitLGIssuanceApproval.controls["LGEndDate"].setValue(this.commonService.lgIssuanceApproval.LGEndDate);
        }
        if (this.commonService.lgIssuanceApproval.Amount != null || this.commonService.lgIssuanceApproval.Amount != undefined) {
        }
        if (this.commonService.lgIssuanceApproval.currency != null || this.commonService.lgIssuanceApproval.currency != undefined) {
            this.submitLGIssuanceApproval.controls["currency"].setValue(this.commonService.lgIssuanceApproval.currency);
        }
        if (this.commonService.lgIssuanceApproval.amountInNumber != null || this.commonService.lgIssuanceApproval.amountInNumber != undefined) {
            var converter = __webpack_require__(/*! number-to-words */ "./node_modules/number-to-words/numberToWords.min.js");
            this.submitLGIssuanceApproval.controls["amountInText"].setValue(converter.toWords(this.commonService.lgIssuanceApproval.Amount));
        }
        if (this.commonService.lgIssuanceApproval.ZakatPeriodStartDate != null || this.commonService.lgIssuanceApproval.ZakatPeriodStartDate != undefined) {
            this.submitLGIssuanceApproval.controls["zakatStartDate"].setValue(this.commonService.lgIssuanceApproval.ZakatPeriodStartDate);
        }
        if (this.commonService.lgIssuanceApproval.ZakatPeriodEndDate != null || this.commonService.lgIssuanceApproval.ZakatPeriodEndDate != undefined) {
            this.submitLGIssuanceApproval.controls["zakatEndDate"].setValue(this.commonService.lgIssuanceApproval.ZakatPeriodEndDate);
        }
        if (this.commonService.lgIssuanceApproval.projectName != null || this.commonService.lgIssuanceApproval.projectName != undefined) {
            this.submitLGIssuanceApproval.controls["projectName"].setValue(this.commonService.lgIssuanceApproval.projectName);
        }
        if (this.commonService.lgIssuanceApproval.projectNumber != null || this.commonService.lgIssuanceApproval.projectNumber != undefined) {
            this.submitLGIssuanceApproval.controls["projectId"].setValue(this.commonService.lgIssuanceApproval.projectNumber);
        }
        if (this.commonService.lgIssuanceApproval.puroseOfBond != null || this.commonService.lgIssuanceApproval.puroseOfBond != undefined) {
            this.submitLGIssuanceApproval.controls["purposeOfBond"].setValue(this.commonService.lgIssuanceApproval.puroseOfBond);
        }
        if (this.commonService.lgIssuanceApproval.bayanNuymber != null || this.commonService.lgIssuanceApproval.bayanNuymber != undefined) {
            this.submitLGIssuanceApproval.controls["byanNo"].setValue(this.commonService.lgIssuanceApproval.bayanNuymber);
        }
        if (this.commonService.lgIssuanceApproval.ac_of_contract != null || this.commonService.lgIssuanceApproval.ac_of_contract != undefined) {
            if (this.commonService.lgIssuanceApproval.ac_of_contract === 'y') {
                this.ac_of_contract = true;
                this.submitLGIssuanceApproval.controls["ac_of_contract"].setValue(this.ac_of_contract);
            }
            else {
                this.ac_of_contract = false;
                this.submitLGIssuanceApproval.controls["ac_of_contract"].setValue(this.ac_of_contract);
            }
        }
        if (this.commonService.lgIssuanceApproval.agree_tag != null || this.commonService.lgIssuanceApproval.agree_tag != undefined) {
            if (this.commonService.lgIssuanceApproval.agree_tag === 'y') {
                this.agree_tag = true;
                this.submitLGIssuanceApproval.controls["agree_tag"].setValue(this.agree_tag);
                this.isAllowToApprove = true;
            }
            else {
                this.agree_tag = false;
                this.submitLGIssuanceApproval.controls["agree_tag"].setValue(this.agree_tag);
                this.isAllowToApprove = false;
            }
        }
        if (this.commonService.lgIssuanceApproval.termsNconditionsMessage != null && this.commonService.lgIssuanceApproval.termsNconditionsMessage != undefined) {
            this.submitLGIssuanceApproval.controls["TermsAndCondContent"].setValue(this.commonService.lgIssuanceApproval.termsNconditionsMessage);
        }
        if (this.commonService.lgIssuanceApproval.lg_validity_date != null && this.commonService.lgIssuanceApproval.lg_validity_date != undefined) {
            this.submitLGIssuanceApproval.controls["LGValidityDate"].setValue(this.commonService.lgIssuanceApproval.lg_validity_date);
        }
        if (this.commonService.lgIssuanceApproval.LGIssueDate != null && this.commonService.lgIssuanceApproval.LGIssueDate != undefined) {
            this.submitLGIssuanceApproval.controls["LGIssueDate"].setValue(this.commonService.lgIssuanceApproval.LGIssueDate);
        }
        /* this.submitLGIssuanceApproval.controls["Applicant_CRN"].setValue(this.Applicant_CRN);
        this.submitLGIssuanceApproval.controls["Applicant_Entity_name_Arabic"].setValue(this.Applicant_Entity_name_Arabic);
        this.submitLGIssuanceApproval.controls["Applicant_Selected_Bank"].setValue(this.Applicant_Selected_Bank);
        this.submitLGIssuanceApproval.controls["Applicant_Selected_IBAN"].setValue(this.Applicant_Selected_IBAN);
        this.submitLGIssuanceApproval.controls["Applicant_CR_type"].setValue(this.Applicant_CR_type);
        this.submitLGIssuanceApproval.controls["Applicant_CR_status"].setValue(this.Applicant_CR_status);
        this.submitLGIssuanceApproval.controls["Applicant_CR_Issue_Date"].setValue(this.Applicant_CR_Issue_Date);
        this.submitLGIssuanceApproval.controls["Applicant_CR_expiry_Date"].setValue(this.Applicant_CR_expiry_Date);
        this.submitLGIssuanceApproval.controls["Applicant_Address"].setValue(this.Applicant_Address);
        this.submitLGIssuanceApproval.controls["Applicant_City"].setValue(this.Applicant_City); */
        this.submitLGIssuanceApproval.controls["Beneficiary_Name"].setValue(this.commonService.lgIssuanceApproval.beneficiary_name);
        this.submitLGIssuanceApproval.controls["Beneficiary_UID_or_CRN"].setValue(this.commonService.lgIssuanceApproval.beneficiary_UID);
        this.submitLGIssuanceApproval.controls["Represantitive_Name"].setValue(localStorage.getItem('crNoOrUidNo'));
        this.submitLGIssuanceApproval.controls["Represantitive_Mobile_number"].setValue(localStorage.getItem('crNoOrUidNo'));
        this.submitLGIssuanceApproval.controls["Represantitive_Email"].setValue(localStorage.getItem('crNoOrUidNo'));
        this.submitLGIssuanceApproval.controls["Represantitive_Address"].setValue(localStorage.getItem('crNoOrUidNo'));
    }
    rejectLGIssuanceApprovalData() {
        console.log("this.request_id::::" + this.request_id);
        this.commonService.CancellingLgRequestFromSupplier(this.request_id)
            .subscribe(res => {
            console.log("rejectLGIssuanceApprovalData response::::" + JSON.stringify(res));
        });
    }
    acceptLGIssuanceApprovalData() {
        console.log("this.request_id::::" + this.request_id);
        this.commonService.AcceptingLgRequestFromSupplier(this.request_id)
            .subscribe(res => {
            console.log("AcceptingLgRequestFromSupplier response::::" + JSON.stringify(res));
        });
    }
    /* ************************************************************** */
    resetData() {
        this.isDisablesendBackButton = true;
        this.isDisabledApprovedButton = false;
        if (this.commonService.lgIssuanceApproval.termsNconditionsMessage != null || this.commonService.lgIssuanceApproval.termsNconditionsMessage != undefined) {
            this.submitLGIssuanceApproval.controls["TermsAndCondContent"].setValue(this.commonService.lgIssuanceApproval.termsNconditionsMessage);
            this.TermsAndCondContent = this.commonService.lgIssuanceApproval.termsNconditionsMessage;
        }
    }
    sendBackLGIssuanceApprovalData() {
        //if(this.isEditTnC === true){
        this.commonService.postChangeedTnCOfLgRequestBeneficiary(this.commonService.lgIssuanceApproval.requestId, this.submitLGIssuanceApproval.value.TermsAndCondContent)
            .subscribe(res => {
            console.log("LG approval Response is::::" + JSON.stringify(res));
            if (res.responseCode === 121) {
                //alert("responce code"+res.responseCode);
                this.alertMsgforPrivateLGApproval = res.responseMessage;
                //localStorage.setItem('responseCode', res.responseCode);
            }
        });
        // }
    }
    editLGIssuanceApprovalData() {
        this.isEditTnC = true;
        this.isDisablesendBackButton = false;
        this.isDisabledApprovedButton = true;
        if (this.commonService.lgIssuanceApproval.termsNconditionsMessage != null || this.commonService.lgIssuanceApproval.termsNconditionsMessage != undefined) {
            this.TermsAndCondContent = this.commonService.lgIssuanceApproval.termsNconditionsMessage;
            this.submitLGIssuanceApproval.controls["TermsAndCondContent"].setValue(this.commonService.lgIssuanceApproval.termsNconditionsMessage);
        }
        console.log("I'm in editLGIssuanceApprovalData::::" + this.isEditTnC);
    }
    submitLGIssuanceApprovalData() {
        if (this.isAllowToApprove === true) {
            this.commonService.postTnCOfLgRequestBeneficiary(this.commonService.lgIssuanceApproval.requestId)
                .subscribe(res => {
                console.log("LG approval Response is::::" + JSON.stringify(res));
                if (res.responseCode === 120) {
                    this.alertMsgforPrivateLGApproval = res.responseMessage;
                    this.commonService.responseCode = res.responseCode;
                    //localStorage.setItem('responseCode', res.responseCode);
                }
            });
        }
    }
    styleObject() {
        if (this.isEditTnC) {
            return { background: '#fff', border: '1px solid #c3c3c3' };
        }
        else {
            return { background: '#efefef', border: '1px solid #c3c3c3' };
        }
    }
    updateTnC() {
        this.isEditTnC = false;
    }
    amendClicked() {
        console.log("amendClicked()");
        const dialogConfig = new _angular_material__WEBPACK_IMPORTED_MODULE_5__["MatDialogConfig"]();
        dialogConfig.disableClose = true;
        dialogConfig.autoFocus = true;
        dialogConfig.panelClass = 'custom-modalbox';
        // dialogConfig.height = "550px";
        // dialogConfig.width = "600px";
        if (this.isAmendmentUpdate) {
            // Update Amend
            this.amendmendData = {
                requestId: this.commonService.lgIssuanceApproval.Amendmend_request_id,
                lg_no: this.commonService.lgIssuanceApproval.lg_no,
                LGIssueDate: this.commonService.lgIssuanceApproval.LGIssueDate,
                LGStartDate: this.commonService.lgIssuanceApproval.LGStartDate,
                Amount: this.commonService.lgIssuanceApproval.amendment_amount,
                LGEndDate: this.commonService.lgIssuanceApproval.amendment_lg_end_date,
                termsNconditionsMessage: this.commonService.lgIssuanceApproval.amendment_writeup_mesg
            };
        }
        else {
            //Create Amend
            this.amendmendData = {
                requestId: this.commonService.lgIssuanceApproval.requestId,
                lg_no: this.commonService.lgIssuanceApproval.lg_no,
                LGIssueDate: this.commonService.lgIssuanceApproval.LGIssueDate,
                LGStartDate: this.commonService.lgIssuanceApproval.LGStartDate,
                Amount: this.commonService.lgIssuanceApproval.Amount,
                LGEndDate: this.commonService.lgIssuanceApproval.LGEndDate,
                termsNconditionsMessage: this.commonService.lgIssuanceApproval.termsNconditionsMessage
            };
        }
        dialogConfig.data = {
            description: 'description',
            modelData: { callerModule: 'LG_AMEND', formsdatas: this.amendmendData, entity_type: 'PRIVATE', priceLimit: this.amendPriceLimit }
        };
        this.dialogRef = this.dialog.open(_general_modal_general_modal_component__WEBPACK_IMPORTED_MODULE_6__["GeneralModalComponent"], dialogConfig);
        this.dialogRef.afterClosed().subscribe(result => {
            //console.log("New result : "+result);
            console.log("New result : " + JSON.stringify(result));
            //console.log("New result : "+JSON.parse(result));
            //console.log("New result lgNumber : "+JSON.stringify(result.lgNumber));
            //console.log("New result : "+JSON.parse(result.lgNumber));
            //console.log("New amendmentAmount : "+result.amendmentAmount);
            //console.log("Old Amount : "+this.commonService.lgIssuanceApproval.Amount);
            //console.log("LG Details : "+JSON.stringify(this.commonService.lgIssuanceApproval));
            if (result != null && result != undefined) {
                /* if (this.acl.Amendment.workflow_id != undefined) {
          
                  var workflow_id = this.acl.Amendment.workflow_id;
                } */
                if (this.currentWorkflowID != undefined) {
                    var workflow_id = this.currentWorkflowID;
                }
                if (this.crNoOrUidNo == this.commonService.lgIssuanceApproval.supplier_entity_id) { // If Supplier amend
                    this.amendmentAmountApproval = false;
                    this.amendmentLGEndDateApproval = false;
                    this.amendmentWriteUpApproval = false;
                    this.amendmentApproval = false;
                    this.amendmentBy = 'Supplier';
                    if (parseFloat(result.amendmentAmount) < parseFloat(this.commonService.lgIssuanceApproval.Amount)) {
                        this.amendmentAmountApproval = true;
                        this.amendmentApproval = true;
                    }
                    var splitted = this.commonService.lgIssuanceApproval.LGEndDate.split("/");
                    var old_lg_date = splitted[2] + "-" + splitted[1] + "-" + splitted[0];
                    var GivenDate = result.lgEndDate;
                    this.new_date = new Date(GivenDate);
                    this.old_date = new Date(old_lg_date);
                    if (this.new_date < this.old_date) {
                        this.amendmentLGEndDateApproval = true;
                        this.amendmentApproval = true;
                    }
                    if (result.writeUp.trim() != this.commonService.lgIssuanceApproval.termsNconditionsMessage.trim()) {
                        this.amendmentWriteUpApproval = true;
                        this.amendmentApproval = true;
                    }
                }
                if (this.crNoOrUidNo == this.commonService.lgIssuanceApproval.beneficiary_entity_id) { // If beneficiary amend
                    this.amendmentAmountApproval = false;
                    this.amendmentLGEndDateApproval = false;
                    this.amendmentWriteUpApproval = false;
                    this.amendmentApproval = false;
                    this.amendmentBy = 'Beneficiary';
                    if (parseFloat(result.amendmentAmount) > parseFloat(this.commonService.lgIssuanceApproval.Amount)) {
                        this.amendmentAmountApproval = true;
                        this.amendmentApproval = true;
                    }
                    if (result.writeUp.trim() != this.commonService.lgIssuanceApproval.termsNconditionsMessage.trim()) {
                        this.amendmentWriteUpApproval = true;
                        this.amendmentApproval = true;
                    }
                }
                console.log(this.amendmentApproval);
                this.commonService.saveLGAmendment(result.requestId, result.lgNumber, result.lgIssueDate, result.lgStartDate, result.amendmentAmount, result.lgEndDate, result.writeUp, this.amendmentAmountApproval, this.amendmentLGEndDateApproval, this.amendmentWriteUpApproval, this.amendmentApproval, this.amendmentBy, workflow_id, this.isAmendmentUpdate)
                    .subscribe(res => {
                    console.log("saveLGAmendment response::::" + JSON.stringify(res));
                    this.commonService.showGeneralMessage("Message", res.responseMessage, false);
                    this.alertMsgforAmendmentStatus = res.responseMessage;
                    this.isalertMsgforAmendmentStatus = true;
                    this.isACREnableButtons = false;
                });
                //alert(`Dialog result: ${result}`); // Pizza!
                // let r = result;
                // alert(JSON.stringify(r));
            }
        });
    }
    confiscateClicked() {
        //this.commonService.showGeneralMessage("", "Alert shows", false);
        if (this.isConfiscateUpdate) {
            // Update confiscate
            this.confiscateData = {
                requestId: this.commonService.lgIssuanceApproval.confiscate_request_id,
                lg_no: this.commonService.lgIssuanceApproval.lg_no,
                beneficiary_name: this.commonService.lgIssuanceApproval.beneficiary_name,
                beneficiaryId: this.commonService.lgIssuanceApproval.beneficiaryId,
                Amount: this.commonService.lgIssuanceApproval.Amount,
                confiscate_amount: this.commonService.lgIssuanceApproval.confiscate_amount,
                confiscate_bankName: this.commonService.lgIssuanceApproval.confiscate_bankName,
                confiscate_bankCode: this.commonService.lgIssuanceApproval.confiscate_bankCode,
                confiscate_IBAN: this.commonService.lgIssuanceApproval.confiscate_IBAN,
                confiscate_reason: this.commonService.lgIssuanceApproval.confiscate_reason,
                partial_confiscation: this.commonService.lgIssuanceApproval.partial_confiscation
            };
        }
        else {
            //Create confiscate
            this.confiscateData = {
                requestId: this.commonService.lgIssuanceApproval.requestId,
                lg_no: this.commonService.lgIssuanceApproval.lg_no,
                beneficiary_name: this.commonService.lgIssuanceApproval.beneficiary_name,
                beneficiaryId: this.commonService.lgIssuanceApproval.beneficiaryId,
                Amount: this.commonService.lgIssuanceApproval.Amount,
                confiscate_amount: this.commonService.lgIssuanceApproval.Amount
            };
        }
        const dialogConfig = new _angular_material__WEBPACK_IMPORTED_MODULE_5__["MatDialogConfig"]();
        dialogConfig.disableClose = true;
        dialogConfig.autoFocus = true;
        dialogConfig.panelClass = 'custom-modalbox';
        dialogConfig.data = {
            description: 'description',
            modelData: { callerModule: 'LG_CONFISCATE', formsdatas: this.confiscateData, entity_type: 'PRIVATE', priceLimit: this.confiscatePriceLimit }
        };
        this.dialogRef = this.dialog.open(_general_modal_general_modal_component__WEBPACK_IMPORTED_MODULE_6__["GeneralModalComponent"], dialogConfig);
        this.dialogRef.afterClosed().subscribe(result => {
            //alert(`Dialog result: ${result}`); // Pizza!
            // let r = result;
            // alert(JSON.stringify(r));
            console.log("New result : " + JSON.stringify(result));
            if (result != null && result != undefined) {
                /* if (this.acl.Confiscate.workflow_id != undefined) {
                  var workflow_id = this.acl.Confiscate.workflow_id;
                } */
                if (this.currentWorkflowID != undefined) {
                    var workflow_id = this.currentWorkflowID;
                }
                this.commonService.saveLGConfiscate(result.requestId, result.lgNumber, result.beneficiaryId, result.amount, result.bankName, result.IBAN, result.reason, result.partialConfiscation, result.confiscationAmount, workflow_id, this.isConfiscateUpdate)
                    .subscribe(res => {
                    console.log("saveLGConfiscate response::::" + JSON.stringify(res));
                    this.commonService.showGeneralMessage("Message", res.responseMessage, false);
                    this.alertMsgforAmendmentStatus = res.responseMessage;
                    this.isalertMsgforAmendmentStatus = true;
                    this.isACREnableButtons = false;
                });
            }
        });
    }
    releaselicked() {
        //this.commonService.showGeneralMessage("", "Alert shows", false);
        if (this.isReleaseUpdate) {
            // Update release
            this.releaseData = {
                requestId: this.commonService.lgIssuanceApproval.release_request_id,
                lg_no: this.commonService.lgIssuanceApproval.lg_no,
                beneficiary_name: this.commonService.lgIssuanceApproval.beneficiary_name,
                beneficiaryId: this.commonService.lgIssuanceApproval.beneficiaryId,
                Amount: this.commonService.lgIssuanceApproval.Amount,
                releaseAmount: this.commonService.lgIssuanceApproval.release_amount,
                partialRelease: this.commonService.lgIssuanceApproval.partial_release,
                releaseReason: this.commonService.lgIssuanceApproval.release_reason
            };
        }
        else {
            //Create release
            this.releaseData = {
                requestId: this.commonService.lgIssuanceApproval.requestId,
                lg_no: this.commonService.lgIssuanceApproval.lg_no,
                beneficiary_name: this.commonService.lgIssuanceApproval.beneficiary_name,
                beneficiaryId: this.commonService.lgIssuanceApproval.beneficiaryId,
                Amount: this.commonService.lgIssuanceApproval.Amount,
                releaseAmount: this.commonService.lgIssuanceApproval.Amount
            };
        }
        const dialogConfig = new _angular_material__WEBPACK_IMPORTED_MODULE_5__["MatDialogConfig"]();
        dialogConfig.disableClose = true;
        dialogConfig.autoFocus = true;
        dialogConfig.panelClass = 'custom-modalbox';
        dialogConfig.data = {
            description: 'description',
            modelData: { callerModule: 'LG_RELEASE', formsdatas: this.releaseData, entity_type: 'PRIVATE', priceLimit: this.releasePriceLimit }
        };
        this.dialogRef = this.dialog.open(_general_modal_general_modal_component__WEBPACK_IMPORTED_MODULE_6__["GeneralModalComponent"], dialogConfig);
        this.dialogRef.afterClosed().subscribe(result => {
            // alert(`Dialog result: ${result}`); // Pizza!
            //  let r = result;
            //   alert(JSON.stringify(r));
            if (result != null && result != undefined) {
                /* if (this.acl.Release.workflow_id != undefined) {
                  var workflow_id = this.acl.Release.workflow_id;
                } */
                if (this.currentWorkflowID != undefined) {
                    var workflow_id = this.currentWorkflowID;
                }
                this.commonService.saveLGRelease(result.requestId, result.lgNumber, result.beneficiaryId, result.amount, result.releaseReason, result.partialRelease, result.releaseAmount, workflow_id, this.isReleaseUpdate)
                    .subscribe(res => {
                    console.log("saveLGRelease response::::" + JSON.stringify(res));
                    this.commonService.showGeneralMessage("Message", res.responseMessage, false);
                    this.alertMsgforAmendmentStatus = res.responseMessage;
                    this.isalertMsgforAmendmentStatus = true;
                    this.isACREnableButtons = false;
                });
            }
        });
    }
};
PrivateLgDetailsComponent.ctorParameters = () => [
    { type: _angular_router__WEBPACK_IMPORTED_MODULE_2__["Router"] },
    { type: _angular_forms__WEBPACK_IMPORTED_MODULE_3__["FormBuilder"] },
    { type: _services_common_service_service__WEBPACK_IMPORTED_MODULE_4__["CommonService"] },
    { type: _angular_material__WEBPACK_IMPORTED_MODULE_5__["MatDialog"] }
];
PrivateLgDetailsComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-private-lg-details',
        template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! raw-loader!./private-lg-details.component.html */ "./node_modules/raw-loader/dist/cjs.js!./src/app/private-lg-details/private-lg-details.component.html")).default,
        styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! ./private-lg-details.component.css */ "./src/app/private-lg-details/private-lg-details.component.css")).default]
    }),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_angular_router__WEBPACK_IMPORTED_MODULE_2__["Router"], _angular_forms__WEBPACK_IMPORTED_MODULE_3__["FormBuilder"], _services_common_service_service__WEBPACK_IMPORTED_MODULE_4__["CommonService"], _angular_material__WEBPACK_IMPORTED_MODULE_5__["MatDialog"]])
], PrivateLgDetailsComponent);



/***/ }),

/***/ "./src/app/private-lg-management/private-lg-management.component.css":
/*!***************************************************************************!*\
  !*** ./src/app/private-lg-management/private-lg-management.component.css ***!
  \***************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3ByaXZhdGUtbGctbWFuYWdlbWVudC9wcml2YXRlLWxnLW1hbmFnZW1lbnQuY29tcG9uZW50LmNzcyJ9 */");

/***/ }),

/***/ "./src/app/private-lg-management/private-lg-management.component.ts":
/*!**************************************************************************!*\
  !*** ./src/app/private-lg-management/private-lg-management.component.ts ***!
  \**************************************************************************/
/*! exports provided: PrivateLgManagementComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PrivateLgManagementComponent", function() { return PrivateLgManagementComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm2015/forms.js");
/* harmony import */ var _services_common_service_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../services/common-service.service */ "./src/app/services/common-service.service.ts");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm2015/router.js");
/* harmony import */ var _models_lgIssuance_model__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../models/lgIssuance.model */ "./src/app/models/lgIssuance.model.ts");
/* harmony import */ var _ngx_translate_core__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @ngx-translate/core */ "./node_modules/@ngx-translate/core/fesm2015/ngx-translate-core.js");







let PrivateLgManagementComponent = class PrivateLgManagementComponent {
    constructor(commonService, router, fb, translate) {
        this.commonService = commonService;
        this.router = router;
        this.fb = fb;
        this.translate = translate;
        this.isOpenMyIssuedLGList = true;
        this.isOpenLgIssuedMeList = false;
        this.isMyIssuedLGClicked = true;
        this.isLgIssuedMeClicked = false;
        this.dtOptions = {};
        this.dtOptionsAR = {};
        this.userObject = {};
        localStorage.removeItem('currentWorkflowID');
        localStorage.removeItem('currentmenuType');
    }
    ngOnInit() {
        this.userId = localStorage.getItem('userId');
        console.log("this.userId::::" + this.userId);
        this.userName = localStorage.getItem('userName');
        console.log("this.userName::::" + this.userName);
        this.roleId = localStorage.getItem('roleId');
        console.log("this.role_ID::::" + this.roleId);
        this.crNoOrUidNo = localStorage.getItem('crNoOrUidNo');
        console.log("crNoOrUidNo::::" + this.crNoOrUidNo);
        /*************************************************** */
        /* this.commonService.checkSessionExpired(this.userId)
              .then((data:any)=>{
        
           if(data==0){
            this.commonService.showGeneralMessage("Session Expired","You will be logged out after pressing OK",false);
            this.commonService.logout(this.userId);
             return  ;
           }
           else{
        
        
           }
          }); */
        /************************************************** */
        this.commonService.getAllLgVerifiedBeneficiarySpecific(this.crNoOrUidNo)
            .subscribe(res => {
            console.log("AllLGRequestBeneficiarySpecific list::::" + JSON.stringify(res));
            this.myActiveLgLists = res;
            console.log("pending list is::::" + JSON.stringify(this.myActiveLgLists));
        });
        this.commonService.getAllInactiveLGforPrivateEntityList(this.crNoOrUidNo)
            .subscribe(res => {
            console.log("AllLGRequestBeneficiarySpecific list::::" + JSON.stringify(res));
            this.myInactiveLgLists = res;
            console.log("pending list is:::: >>" + JSON.stringify(this.myInactiveLgLists));
        });
        //this.myActiveLgLists = [];
        this.dtOptionsAR = {
            pageLength: 10,
            processing: true,
            language: {
                processing: "جارٍ التحميل...",
                search: "ابحث:",
                lengthMenu: "أظهر _MENU_ مدخلات",
                info: "إظهار _START_ إلى _END_ من أصل _TOTAL_ مدخل",
                infoEmpty: "يعرض 0 إلى 0 من أصل 0 سجل",
                infoFiltered: "(منتقاة من مجموع _MAX_ مُدخل)",
                infoPostFix: "",
                loadingRecords: "جارٍ التحميل...",
                zeroRecords: "لم يعثر على أية سجلات",
                emptyTable: "ليست هناك بيانات متاحة في الجدول",
                paginate: {
                    first: "الأول",
                    previous: "السابق",
                    next: "التالي",
                    last: "الأخير"
                },
                aria: {
                    sortAscending: ": تفعيل لترتيب العمود تصاعدياً",
                    sortDescending: ": تفعيل لترتيب العمود تنازلياً"
                }
            }
        };
        this.dtOptions = {
            pageLength: 10,
            processing: true,
        };
    }
    goToMyIssuedLGTab() {
        this.isOpenMyIssuedLGList = true;
        this.isOpenLgIssuedMeList = false;
        this.isMyIssuedLGClicked = true;
        this.isLgIssuedMeClicked = false;
        this.commonService.getAllLgVerifiedBeneficiarySpecific(this.crNoOrUidNo)
            .subscribe(res => {
            console.log("goToMyIssuedLGTab list::::" + JSON.stringify(res));
            this.myActiveLgLists = res;
            console.log("pending list is::::" + JSON.stringify(this.myActiveLgLists));
        });
        this.commonService.getAllInactiveLGforPrivateEntityList(this.crNoOrUidNo)
            .subscribe(res => {
            console.log("AllLGRequestBeneficiarySpecific list::::" + JSON.stringify(res));
            this.myInactiveLgLists = res;
            console.log("pending list is::::" + JSON.stringify(this.myInactiveLgLists));
        });
        this.dtOptionsAR = {
            pageLength: 10,
            processing: true,
            language: {
                processing: "جارٍ التحميل...",
                search: "ابحث:",
                lengthMenu: "أظهر _MENU_ مدخلات",
                info: "إظهار _START_ إلى _END_ من أصل _TOTAL_ مدخل",
                infoEmpty: "يعرض 0 إلى 0 من أصل 0 سجل",
                infoFiltered: "(منتقاة من مجموع _MAX_ مُدخل)",
                infoPostFix: "",
                loadingRecords: "جارٍ التحميل...",
                zeroRecords: "لم يعثر على أية سجلات",
                emptyTable: "ليست هناك بيانات متاحة في الجدول",
                paginate: {
                    first: "الأول",
                    previous: "السابق",
                    next: "التالي",
                    last: "الأخير"
                },
                aria: {
                    sortAscending: ": تفعيل لترتيب العمود تصاعدياً",
                    sortDescending: ": تفعيل لترتيب العمود تنازلياً"
                }
            }
        };
        this.dtOptions = {
            pageLength: 10,
            processing: true,
        };
    }
    goToLgIssuedMeTab() {
        this.isOpenMyIssuedLGList = false;
        this.isOpenLgIssuedMeList = true;
        this.isMyIssuedLGClicked = false;
        this.isLgIssuedMeClicked = true;
        this.commonService.getActiveLgListForGovt(this.crNoOrUidNo)
            .subscribe(res => {
            console.log("activeLgForMeLists");
            console.log(res);
            this.activeLgForMeLists = res;
        });
        this.commonService.getInActiveLgListForGovt(this.crNoOrUidNo)
            .subscribe(res => {
            this.inactiveLgForMeLists = res;
        });
    }
    RowSelected(pendingData) {
        this.commonService.isPrivateLgPending1Completed = true;
        console.log("private entity pending list::::" + JSON.stringify(pendingData));
        console.log("testy122" + pendingData.beneficiary_name);
        this.commonService.lgIssuanceApproval = new _models_lgIssuance_model__WEBPACK_IMPORTED_MODULE_5__["LGIssuanceModel"]();
        this.commonService.lgIssuanceApproval.lg_no = pendingData.lg_no;
        if (pendingData.lg_type !== null || pendingData.lg_type !== undefined) {
            this.commonService.lgIssuanceApproval.LGType = pendingData.lg_type;
        }
        if (pendingData.beneficiary_name !== null || pendingData.beneficiary_name !== undefined) {
            console.log("test beneficiary_name" + pendingData.beneficiary_name);
            this.commonService.lgIssuanceApproval.beneficiary_name = pendingData.beneficiary_name;
        }
        if (pendingData.bank_name !== null || pendingData.bank_name !== undefined) {
            console.log("bank_name" + pendingData.bank_name);
            this.commonService.lgIssuanceApproval.bankName = pendingData.bank_name;
        }
        if (pendingData.project_name !== null || pendingData.project_name !== undefined) {
            console.log("bank_name" + pendingData.project_name);
            this.commonService.lgIssuanceApproval.project_name = pendingData.project_name;
        }
        if (pendingData.request_date !== null || pendingData.request_date !== undefined) {
            console.log("bank_name" + pendingData.request_date);
            this.commonService.lgIssuanceApproval.request_date = pendingData.request_date;
        }
        if (pendingData.request_status_flag !== null || pendingData.request_status_flag !== undefined) {
            console.log("bank_name" + pendingData.request_status_flag);
            this.commonService.lgIssuanceApproval.status = pendingData.request_status_flag;
        }
        if (pendingData.start_date !== null || pendingData.start_date !== undefined) {
            this.commonService.lgIssuanceApproval.LGStartDate = pendingData.start_date;
        }
        if (pendingData.end_date !== null || pendingData.end_date !== undefined) {
            this.commonService.lgIssuanceApproval.LGEndDate = pendingData.end_date;
        }
        if (pendingData.contract_value !== null || pendingData.contract_value !== undefined) {
            this.commonService.lgIssuanceApproval.Amount = pendingData.lG_amount;
            //var converter = require('number-to-words');
            this.commonService.lgIssuanceApproval.amountInNumber = this.commonService.lgIssuanceApproval.Amount;
        }
        if (pendingData.currency !== null || pendingData.currency !== undefined) {
            this.commonService.lgIssuanceApproval.currency = pendingData.currency;
        }
        if (pendingData.termsNConditions !== null || pendingData.termsNConditions !== undefined) {
            this.commonService.lgIssuanceApproval.termsNconditionsMessage = pendingData.termsNConditions;
        }
        if (pendingData.status !== null || pendingData.status !== undefined) {
            this.commonService.lgIssuanceApproval.status = pendingData.status;
        }
        if (pendingData.response_code !== null || pendingData.response_code !== undefined) {
            this.commonService.lgIssuanceApproval.response_code = pendingData.response_code;
            console.log("............................pendingData.response_code" + pendingData.response_code);
        }
        if (pendingData.terms_condition_message !== null || pendingData.terms_condition_message !== undefined) {
            this.commonService.lgIssuanceApproval.terms_condition_message = pendingData.terms_condition_message;
            console.log("........................pendingData.terms_condition_message" + pendingData.terms_condition_message);
        }
        if (pendingData.request_id !== null || pendingData.request_id !== undefined) {
            this.commonService.lgIssuanceApproval.requestId = pendingData.request_id;
            console.log("........................pendingData.request_id" + pendingData.request_id);
        }
        if (pendingData.create_by !== null || pendingData.create_by !== undefined) {
            this.commonService.lgIssuanceApproval.create_by = pendingData.create_by;
        }
        /* if(pendingData.request_status_flag !== null || pendingData.request_status_flag !== undefined){
         this.commonService.lgIssuanceApproval.status = pendingData.request_status_flag;
        } */
        if (pendingData.write_up !== null || pendingData.write_up !== undefined) {
            this.commonService.lgIssuanceApproval.writeUpType = pendingData.write_up;
        }
        if (pendingData.project_name !== null || pendingData.project_name !== undefined) {
            this.commonService.lgIssuanceApproval.projectName = pendingData.project_name;
        }
        if (pendingData.project_no !== null || pendingData.project_no !== undefined) {
            this.commonService.lgIssuanceApproval.projectNumber = pendingData.project_no;
        }
        if (pendingData.purpose_of_bond !== null || pendingData.purpose_of_bond !== undefined) {
            this.commonService.lgIssuanceApproval.puroseOfBond = pendingData.purpose_of_bond;
        }
        if (pendingData.byan_no !== null || pendingData.byan_no !== undefined) {
            this.commonService.lgIssuanceApproval.bayanNuymber = pendingData.byan_no;
        }
        if (pendingData.zakat_start_date !== null || pendingData.zakat_start_date !== undefined) {
            this.commonService.lgIssuanceApproval.ZakatPeriodStartDate = pendingData.zakat_start_date;
        }
        if (pendingData.zakat_end_date !== null || pendingData.zakat_end_date !== undefined) {
            this.commonService.lgIssuanceApproval.ZakatPeriodEndDate = pendingData.zakat_end_date;
        }
        if (pendingData.lg_validity_date !== null || pendingData.lg_validity_date !== undefined) {
            this.commonService.lgIssuanceApproval.lg_validity_date = pendingData.validDt;
        }
        if (pendingData.account_of_contract_processed !== null || pendingData.account_of_contract_processed !== undefined) {
            this.commonService.lgIssuanceApproval.ac_of_contract = pendingData.account_of_contract_processed;
        }
        if (pendingData.agree_tag !== null || pendingData.agree_tag !== undefined) {
            this.commonService.lgIssuanceApproval.agree_tag = pendingData.agree_tag;
        }
        if (pendingData.beneficiary_id !== null || pendingData.beneficiary_id !== undefined) {
            this.commonService.lgIssuanceApproval.beneficiaryId = pendingData.beneficiary_id;
        }
        if (pendingData.supplier_id !== null || pendingData.supplier_id !== undefined) {
            this.commonService.lgIssuanceApproval.supplierId = pendingData.supplier_id;
            console.log("........................pendingData.terms_condition_message" + pendingData.supplier_id);
        }
        if (pendingData.lg_issue_date !== null || pendingData.lg_issue_date !== undefined) {
            this.commonService.lgIssuanceApproval.LGIssueDate = pendingData.lg_issue_date;
        }
        if (pendingData.beneficiary_UID !== null || pendingData.beneficiary_UID !== undefined) {
            this.commonService.lgIssuanceApproval.beneficiary_UID = pendingData.beneficiary_UID;
        }
        if (pendingData.role_id !== null || pendingData.role_id !== undefined) {
            this.commonService.lgIssuanceApproval.beneficiary_role_id = pendingData.role_id;
        }
        if (pendingData.supplier_entity_id !== null || pendingData.supplier_entity_id !== undefined) {
            this.commonService.lgIssuanceApproval.supplier_entity_id = pendingData.supplier_entity_id;
        }
        if (pendingData.beneficiary_entity_id !== null || pendingData.beneficiary_entity_id !== undefined) {
            this.commonService.lgIssuanceApproval.beneficiary_entity_id = pendingData.beneficiary_entity_id;
        }
        console.log("Before");
        console.log(pendingData);
        console.log("After");
        console.log(this.commonService.lgIssuanceApproval);
        this.router.navigate(['privateLgDetails']);
        //this.lgIssuance.
    }
};
PrivateLgManagementComponent.ctorParameters = () => [
    { type: _services_common_service_service__WEBPACK_IMPORTED_MODULE_3__["CommonService"] },
    { type: _angular_router__WEBPACK_IMPORTED_MODULE_4__["Router"] },
    { type: _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormBuilder"] },
    { type: _ngx_translate_core__WEBPACK_IMPORTED_MODULE_6__["TranslateService"] }
];
PrivateLgManagementComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-private-lg-management',
        template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! raw-loader!./private-lg-management.component.html */ "./node_modules/raw-loader/dist/cjs.js!./src/app/private-lg-management/private-lg-management.component.html")).default,
        styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! ./private-lg-management.component.css */ "./src/app/private-lg-management/private-lg-management.component.css")).default]
    }),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_services_common_service_service__WEBPACK_IMPORTED_MODULE_3__["CommonService"], _angular_router__WEBPACK_IMPORTED_MODULE_4__["Router"],
        _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormBuilder"], _ngx_translate_core__WEBPACK_IMPORTED_MODULE_6__["TranslateService"]])
], PrivateLgManagementComponent);



/***/ }),

/***/ "./src/app/private-release-list/private-release-list.component.css":
/*!*************************************************************************!*\
  !*** ./src/app/private-release-list/private-release-list.component.css ***!
  \*************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3ByaXZhdGUtcmVsZWFzZS1saXN0L3ByaXZhdGUtcmVsZWFzZS1saXN0LmNvbXBvbmVudC5jc3MifQ== */");

/***/ }),

/***/ "./src/app/private-release-list/private-release-list.component.ts":
/*!************************************************************************!*\
  !*** ./src/app/private-release-list/private-release-list.component.ts ***!
  \************************************************************************/
/*! exports provided: PrivateReleaseListComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PrivateReleaseListComponent", function() { return PrivateReleaseListComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm2015/forms.js");
/* harmony import */ var _services_common_service_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../services/common-service.service */ "./src/app/services/common-service.service.ts");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm2015/router.js");
/* harmony import */ var _models_lgIssuance_model__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../models/lgIssuance.model */ "./src/app/models/lgIssuance.model.ts");
/* harmony import */ var _ngx_translate_core__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @ngx-translate/core */ "./node_modules/@ngx-translate/core/fesm2015/ngx-translate-core.js");







let PrivateReleaseListComponent = class PrivateReleaseListComponent {
    constructor(commonService, router, fb, translate) {
        this.commonService = commonService;
        this.router = router;
        this.fb = fb;
        this.translate = translate;
        this.isOpenMyIssuedLGList = true;
        this.isOpenLgIssuedMeList = false;
        this.isMyIssuedLGClicked = true;
        this.isLgIssuedMeClicked = false;
        this.dtOptions = {};
        this.dtOptionsAR = {};
        this.userObject = {};
    }
    ngOnInit() {
        this.userId = localStorage.getItem('userId');
        console.log("this.userId::::" + this.userId);
        this.userName = localStorage.getItem('userName');
        console.log("this.userName::::" + this.userName);
        this.roleId = localStorage.getItem('roleId');
        console.log("this.role_ID::::" + this.roleId);
        this.crNoOrUidNo = localStorage.getItem('crNoOrUidNo');
        console.log("crNoOrUidNo::::" + this.crNoOrUidNo);
        console.log("currentWorkflowID >>" + localStorage.getItem('currentWorkflowID'));
        this.currentWorkflowID = localStorage.getItem('currentWorkflowID');
        this.commonService.amendmentReleaseAndconfiscateCreationLgListIssueForMe(this.crNoOrUidNo, this.currentWorkflowID)
            .subscribe(res => {
            console.log("AllLGRequestBeneficiarySpecific list::::" + JSON.stringify(res));
            this.myActiveLgLists = res;
            console.log("pending list is::::" + JSON.stringify(this.myActiveLgLists));
        });
        //this.myActiveLgLists = [];
        this.dtOptionsAR = {
            pageLength: 10,
            processing: true,
            language: {
                processing: "جارٍ التحميل...",
                search: "ابحث:",
                lengthMenu: "أظهر _MENU_ مدخلات",
                info: "إظهار _START_ إلى _END_ من أصل _TOTAL_ مدخل",
                infoEmpty: "يعرض 0 إلى 0 من أصل 0 سجل",
                infoFiltered: "(منتقاة من مجموع _MAX_ مُدخل)",
                infoPostFix: "",
                loadingRecords: "جارٍ التحميل...",
                zeroRecords: "لم يعثر على أية سجلات",
                emptyTable: "ليست هناك بيانات متاحة في الجدول",
                paginate: {
                    first: "الأول",
                    previous: "السابق",
                    next: "التالي",
                    last: "الأخير"
                },
                aria: {
                    sortAscending: ": تفعيل لترتيب العمود تصاعدياً",
                    sortDescending: ": تفعيل لترتيب العمود تنازلياً"
                }
            }
        };
        this.dtOptions = {
            pageLength: 10,
            processing: true,
        };
    }
    goToMyIssuedLGTab() {
        this.isOpenMyIssuedLGList = true;
        this.isOpenLgIssuedMeList = false;
        this.isMyIssuedLGClicked = true;
        this.isLgIssuedMeClicked = false;
        this.commonService.amendmentReleaseAndconfiscateCreationLgListIssueForMe(this.crNoOrUidNo, this.currentWorkflowID)
            .subscribe(res => {
            console.log("AllLGRequestBeneficiarySpecific list::::" + JSON.stringify(res));
            this.myActiveLgLists = res;
            console.log("pending list is::::" + JSON.stringify(this.myActiveLgLists));
        });
        this.dtOptionsAR = {
            pageLength: 10,
            processing: true,
            language: {
                processing: "جارٍ التحميل...",
                search: "ابحث:",
                lengthMenu: "أظهر _MENU_ مدخلات",
                info: "إظهار _START_ إلى _END_ من أصل _TOTAL_ مدخل",
                infoEmpty: "يعرض 0 إلى 0 من أصل 0 سجل",
                infoFiltered: "(منتقاة من مجموع _MAX_ مُدخل)",
                infoPostFix: "",
                loadingRecords: "جارٍ التحميل...",
                zeroRecords: "لم يعثر على أية سجلات",
                emptyTable: "ليست هناك بيانات متاحة في الجدول",
                paginate: {
                    first: "الأول",
                    previous: "السابق",
                    next: "التالي",
                    last: "الأخير"
                },
                aria: {
                    sortAscending: ": تفعيل لترتيب العمود تصاعدياً",
                    sortDescending: ": تفعيل لترتيب العمود تنازلياً"
                }
            }
        };
        this.dtOptions = {
            pageLength: 10,
            processing: true,
        };
    }
    /*   goToLgIssuedMeTab() {
        this.isOpenMyIssuedLGList = false;
        this.isOpenLgIssuedMeList = true;
        this.isMyIssuedLGClicked = false;
        this.isLgIssuedMeClicked = true;
    
        
        this.commonService.getActiveLgListForGovt(this.crNoOrUidNo)
        .subscribe(res => {
          console.log("activeLgForMeLists");
          console.log(res);
          this.activeLgForMeLists = res;
     
        });
      } */
    RowSelected(pendingData) {
        this.commonService.isPrivateLgPending1Completed = true;
        console.log("private entity pending list::::" + JSON.stringify(pendingData));
        console.log("testy122" + pendingData.beneficiary_name);
        this.commonService.lgIssuanceApproval = new _models_lgIssuance_model__WEBPACK_IMPORTED_MODULE_5__["LGIssuanceModel"]();
        this.commonService.lgIssuanceApproval.lg_no = pendingData.lg_no;
        if (pendingData.lg_type !== null || pendingData.lg_type !== undefined) {
            this.commonService.lgIssuanceApproval.LGType = pendingData.lg_type;
        }
        if (pendingData.beneficiary_name !== null || pendingData.beneficiary_name !== undefined) {
            console.log("test beneficiary_name" + pendingData.beneficiary_name);
            this.commonService.lgIssuanceApproval.beneficiary_name = pendingData.beneficiary_name;
        }
        if (pendingData.bank_name !== null || pendingData.bank_name !== undefined) {
            console.log("bank_name" + pendingData.bank_name);
            this.commonService.lgIssuanceApproval.bankName = pendingData.bank_name;
        }
        if (pendingData.project_name !== null || pendingData.project_name !== undefined) {
            console.log("bank_name" + pendingData.project_name);
            this.commonService.lgIssuanceApproval.project_name = pendingData.project_name;
        }
        if (pendingData.request_date !== null || pendingData.request_date !== undefined) {
            console.log("bank_name" + pendingData.request_date);
            this.commonService.lgIssuanceApproval.request_date = pendingData.request_date;
        }
        if (pendingData.request_status_flag !== null || pendingData.request_status_flag !== undefined) {
            console.log("bank_name" + pendingData.request_status_flag);
            this.commonService.lgIssuanceApproval.status = pendingData.request_status_flag;
        }
        if (pendingData.start_date !== null || pendingData.start_date !== undefined) {
            this.commonService.lgIssuanceApproval.LGStartDate = pendingData.start_date;
        }
        if (pendingData.end_date !== null || pendingData.end_date !== undefined) {
            this.commonService.lgIssuanceApproval.LGEndDate = pendingData.end_date;
        }
        if (pendingData.contract_value !== null || pendingData.contract_value !== undefined) {
            this.commonService.lgIssuanceApproval.Amount = pendingData.lG_amount;
            //var converter = require('number-to-words');
            this.commonService.lgIssuanceApproval.amountInNumber = this.commonService.lgIssuanceApproval.Amount;
        }
        if (pendingData.currency !== null || pendingData.currency !== undefined) {
            this.commonService.lgIssuanceApproval.currency = pendingData.currency;
        }
        if (pendingData.termsNConditions !== null || pendingData.termsNConditions !== undefined) {
            this.commonService.lgIssuanceApproval.termsNconditionsMessage = pendingData.termsNConditions;
        }
        if (pendingData.status !== null || pendingData.status !== undefined) {
            this.commonService.lgIssuanceApproval.status = pendingData.status;
        }
        if (pendingData.response_code !== null || pendingData.response_code !== undefined) {
            this.commonService.lgIssuanceApproval.response_code = pendingData.response_code;
            console.log("............................pendingData.response_code" + pendingData.response_code);
        }
        if (pendingData.terms_condition_message !== null || pendingData.terms_condition_message !== undefined) {
            this.commonService.lgIssuanceApproval.terms_condition_message = pendingData.terms_condition_message;
            console.log("........................pendingData.terms_condition_message" + pendingData.terms_condition_message);
        }
        if (pendingData.request_id !== null || pendingData.request_id !== undefined) {
            this.commonService.lgIssuanceApproval.requestId = pendingData.request_id;
            console.log("........................pendingData.request_id" + pendingData.request_id);
        }
        if (pendingData.create_by !== null || pendingData.create_by !== undefined) {
            this.commonService.lgIssuanceApproval.create_by = pendingData.create_by;
        }
        /* if(pendingData.request_status_flag !== null || pendingData.request_status_flag !== undefined){
         this.commonService.lgIssuanceApproval.status = pendingData.request_status_flag;
        } */
        if (pendingData.write_up !== null || pendingData.write_up !== undefined) {
            this.commonService.lgIssuanceApproval.writeUpType = pendingData.write_up;
        }
        if (pendingData.project_name !== null || pendingData.project_name !== undefined) {
            this.commonService.lgIssuanceApproval.projectName = pendingData.project_name;
        }
        if (pendingData.project_no !== null || pendingData.project_no !== undefined) {
            this.commonService.lgIssuanceApproval.projectNumber = pendingData.project_no;
        }
        if (pendingData.purpose_of_bond !== null || pendingData.purpose_of_bond !== undefined) {
            this.commonService.lgIssuanceApproval.puroseOfBond = pendingData.purpose_of_bond;
        }
        if (pendingData.byan_no !== null || pendingData.byan_no !== undefined) {
            this.commonService.lgIssuanceApproval.bayanNuymber = pendingData.byan_no;
        }
        if (pendingData.zakat_start_date !== null || pendingData.zakat_start_date !== undefined) {
            this.commonService.lgIssuanceApproval.ZakatPeriodStartDate = pendingData.zakat_start_date;
        }
        if (pendingData.zakat_end_date !== null || pendingData.zakat_end_date !== undefined) {
            this.commonService.lgIssuanceApproval.ZakatPeriodEndDate = pendingData.zakat_end_date;
        }
        if (pendingData.lg_validity_date !== null || pendingData.lg_validity_date !== undefined) {
            this.commonService.lgIssuanceApproval.lg_validity_date = pendingData.validDt;
        }
        if (pendingData.account_of_contract_processed !== null || pendingData.account_of_contract_processed !== undefined) {
            this.commonService.lgIssuanceApproval.ac_of_contract = pendingData.account_of_contract_processed;
        }
        if (pendingData.agree_tag !== null || pendingData.agree_tag !== undefined) {
            this.commonService.lgIssuanceApproval.agree_tag = pendingData.agree_tag;
        }
        if (pendingData.beneficiary_id !== null || pendingData.beneficiary_id !== undefined) {
            this.commonService.lgIssuanceApproval.beneficiaryId = pendingData.beneficiary_id;
        }
        if (pendingData.supplier_id !== null || pendingData.supplier_id !== undefined) {
            this.commonService.lgIssuanceApproval.supplierId = pendingData.supplier_id;
            console.log("........................pendingData.terms_condition_message" + pendingData.supplier_id);
        }
        if (pendingData.lg_issue_date !== null || pendingData.lg_issue_date !== undefined) {
            this.commonService.lgIssuanceApproval.LGIssueDate = pendingData.lg_issue_date;
        }
        if (pendingData.beneficiary_UID !== null || pendingData.beneficiary_UID !== undefined) {
            this.commonService.lgIssuanceApproval.beneficiary_UID = pendingData.beneficiary_UID;
        }
        if (pendingData.role_id !== null || pendingData.role_id !== undefined) {
            this.commonService.lgIssuanceApproval.beneficiary_role_id = pendingData.role_id;
        }
        if (pendingData.supplier_entity_id !== null || pendingData.supplier_entity_id !== undefined) {
            this.commonService.lgIssuanceApproval.supplier_entity_id = pendingData.supplier_entity_id;
        }
        if (pendingData.beneficiary_entity_id !== null || pendingData.beneficiary_entity_id !== undefined) {
            this.commonService.lgIssuanceApproval.beneficiary_entity_id = pendingData.beneficiary_entity_id;
        }
        console.log("Before");
        console.log(pendingData);
        console.log("After");
        console.log(this.commonService.lgIssuanceApproval);
        this.router.navigate(['privateLgDetails']);
        //this.lgIssuance.
    }
};
PrivateReleaseListComponent.ctorParameters = () => [
    { type: _services_common_service_service__WEBPACK_IMPORTED_MODULE_3__["CommonService"] },
    { type: _angular_router__WEBPACK_IMPORTED_MODULE_4__["Router"] },
    { type: _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormBuilder"] },
    { type: _ngx_translate_core__WEBPACK_IMPORTED_MODULE_6__["TranslateService"] }
];
PrivateReleaseListComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-private-release-list',
        template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! raw-loader!./private-release-list.component.html */ "./node_modules/raw-loader/dist/cjs.js!./src/app/private-release-list/private-release-list.component.html")).default,
        styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! ./private-release-list.component.css */ "./src/app/private-release-list/private-release-list.component.css")).default]
    }),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_services_common_service_service__WEBPACK_IMPORTED_MODULE_3__["CommonService"], _angular_router__WEBPACK_IMPORTED_MODULE_4__["Router"], _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormBuilder"], _ngx_translate_core__WEBPACK_IMPORTED_MODULE_6__["TranslateService"]])
], PrivateReleaseListComponent);



/***/ }),

/***/ "./src/app/privatependingtasks/privatependingtasks.component.css":
/*!***********************************************************************!*\
  !*** ./src/app/privatependingtasks/privatependingtasks.component.css ***!
  \***********************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3ByaXZhdGVwZW5kaW5ndGFza3MvcHJpdmF0ZXBlbmRpbmd0YXNrcy5jb21wb25lbnQuY3NzIn0= */");

/***/ }),

/***/ "./src/app/privatependingtasks/privatependingtasks.component.ts":
/*!**********************************************************************!*\
  !*** ./src/app/privatependingtasks/privatependingtasks.component.ts ***!
  \**********************************************************************/
/*! exports provided: PrivatependingtasksComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PrivatependingtasksComponent", function() { return PrivatependingtasksComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm2015/router.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm2015/forms.js");
/* harmony import */ var _services_common_service_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../services/common-service.service */ "./src/app/services/common-service.service.ts");
/* harmony import */ var _models_lgIssuance_model__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../models/lgIssuance.model */ "./src/app/models/lgIssuance.model.ts");
/* harmony import */ var _ngx_translate_core__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @ngx-translate/core */ "./node_modules/@ngx-translate/core/fesm2015/ngx-translate-core.js");







let PrivatependingtasksComponent = class PrivatependingtasksComponent {
    constructor(router, formBuilder, commonService, translate) {
        this.router = router;
        this.formBuilder = formBuilder;
        this.commonService = commonService;
        this.translate = translate;
        this.isOpenPendingList = true;
        this.isOpenLGAmendList = false;
        this.isOpenInternalList = false;
        this.isPendingClicked = true;
        this.isLGAmendClicked = false;
        this.isInternalClicked = false;
        this.pendingList = [];
        this.amendList = [];
        this.releaseList = [];
        this.confiscateList = [];
        this.dtOptions = {};
        this.dtOptionsAR = {};
        this.aclLGCreate = false;
        this.aclLGReview = false;
        this.aclLGApprove = false;
        this.aclAmendCreate = false;
        this.aclAmendReview = false;
        this.aclAmendApprove = false;
        this.aclConfiscateCreate = false;
        this.aclConfiscateReview = false;
        this.aclConfiscateApprove = false;
        this.aclReleaseCreate = false;
        this.aclReleaseReview = false;
        this.aclReleaseApprove = false;
        this.intIssuanceCreateList = [];
        this.intIssuanceRejectList = [];
        this.intIssuanceReviewList = [];
        this.intIssuanceApprovalList = [];
        this.intAmendmentCreateList = [];
        this.intAmendmentRejectList = [];
        this.intAmendmentReviewList = [];
        this.intAmendmentApproveList = [];
        this.intConfiscateCreateList = [];
        this.intConfiscateRejectList = [];
        this.intConfiscateReviewList = [];
        this.intConfiscateApproveList = [];
        this.intReleaseCreateList = [];
        this.intReleaseRejectList = [];
        this.intReleaseReviewList = [];
        this.intReleaseApproveList = [];
    }
    ngOnInit() {
        this.userId = localStorage.getItem('userId');
        console.log("this.userId::::" + this.userId);
        this.userName = localStorage.getItem('userName');
        console.log("this.userName::::" + this.userName);
        this.roleId = localStorage.getItem('roleId');
        console.log("this.role_ID::::" + this.roleId);
        this.crNoOrUidNo = localStorage.getItem('crNoOrUidNo');
        console.log("crNoOrUidNo::::" + this.crNoOrUidNo);
        this.acl = JSON.parse(localStorage.getItem('acl'));
        console.log("ACL ::::" + JSON.stringify(this.acl));
        console.log("ACL Amendment ::::" + this.acl.Amendment);
        if (this.acl.Issuance !== undefined) {
            for (let actions of this.acl.Issuance['subMenu']) {
                console.log(">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>" + actions.action_nm);
                if (actions.action_nm === 'Create') {
                    this.aclLGCreate = true;
                }
                if (actions.action_nm === 'Review') {
                    this.aclLGReview = true;
                }
                if (actions.action_nm === 'Approve') {
                    this.aclLGApprove = true;
                }
            }
        }
        if (this.acl.Amendment !== undefined) {
            for (let actions of this.acl.Amendment['subMenu']) {
                console.log(actions.action_nm);
                if (actions.action_nm === 'Create') {
                    this.aclAmendCreate = true;
                }
                if (actions.action_nm === 'Review') {
                    this.aclAmendReview = true;
                }
                if (actions.action_nm === 'Approve') {
                    this.aclAmendApprove = true;
                }
            }
        }
        if (this.acl.Confiscate !== undefined) {
            for (let actions of this.acl.Confiscate['subMenu']) {
                console.log(actions.action_nm);
                if (actions.action_nm === 'Create') {
                    this.aclConfiscateCreate = true;
                }
                if (actions.action_nm === 'Review') {
                    this.aclConfiscateReview = true;
                }
                if (actions.action_nm === 'Approve') {
                    this.aclConfiscateApprove = true;
                }
            }
        }
        if (this.acl.Release !== undefined) {
            for (let actions of this.acl.Release['subMenu']) {
                console.log(actions.action_nm);
                if (actions.action_nm === 'Create') {
                    this.aclReleaseCreate = true;
                }
                if (actions.action_nm === 'Review') {
                    this.aclReleaseReview = true;
                }
                if (actions.action_nm === 'Approve') {
                    this.aclReleaseApprove = true;
                }
            }
        }
        /*************************************************** */
        this.commonService.checkSessionExpired(this.userId)
            .then((data) => {
            if (data == 0) {
                this.commonService.showGeneralMessage(this.translate.instant('HOME.Session_Expired'), this.translate.instant('HOME.logged_out'), false);
                this.commonService.logout(this.userId);
                return;
            }
            else {
            }
        });
        /************************************************** */
        this.dtOptionsAR = {
            pageLength: 10,
            processing: true,
            language: {
                processing: "جارٍ التحميل...",
                search: "ابحث:",
                lengthMenu: "أظهر _MENU_ مدخلات",
                info: "إظهار _START_ إلى _END_ من أصل _TOTAL_ مدخل",
                infoEmpty: "يعرض 0 إلى 0 من أصل 0 سجل",
                infoFiltered: "(منتقاة من مجموع _MAX_ مُدخل)",
                infoPostFix: "",
                loadingRecords: "جارٍ التحميل...",
                zeroRecords: "لم يعثر على أية سجلات",
                emptyTable: "ليست هناك بيانات متاحة في الجدول",
                paginate: {
                    first: "الأول",
                    previous: "السابق",
                    next: "التالي",
                    last: "الأخير"
                },
                aria: {
                    sortAscending: ": تفعيل لترتيب العمود تصاعدياً",
                    sortDescending: ": تفعيل لترتيب العمود تنازلياً"
                }
            }
        };
        this.dtOptions = {
            pageLength: 10,
            processing: true,
        };
        this.cols = [
            { field: 'requestDate', header: 'Request date' },
            { field: 'lGAmount', header: 'LG amount' },
            { field: 'lGType', header: 'LG type' },
            { field: 'beneficiaryName', header: 'Beneficiary name' },
            { field: 'projectName', header: 'Project name' },
            { field: 'bankName', header: 'Bank name' }
        ];
        //To get pending list
        this.commonService.getAllLGRequestBeneficiarySpecificPendingPri(this.crNoOrUidNo)
            .subscribe(res => {
            console.log("AllLGRequestBeneficiarySpecific list::::" + JSON.stringify(res));
            this.pendingList = res.userObject;
            console.log("private pending list is::::" + JSON.stringify(this.pendingList));
        });
        this.commonService.getAmendmentAndReleseAndConfiscationPendingList(this.crNoOrUidNo)
            .subscribe(res => {
            console.log(res);
            this.amendList = res.userObject.amendList;
            this.releaseList = res.userObject.releaseList;
            this.confiscateList = res.userObject.confiscateList;
            console.log("pending Amend list is::::" + JSON.stringify(this.amendList));
            console.log("pending releaseList list is::::" + JSON.stringify(this.releaseList));
            console.log("pending confiscateList list is::::" + JSON.stringify(this.confiscateList));
        });
    }
    /* goToLGAmendTab() {
     
      this.isOpenPendingList = false;
      this.isOpenLGAmendList = true;
      this.isOpenInternalList = false;
      
      this.isPendingClicked = false;
      this.isLGAmendClicked = true;
      this.isInternalClicked = false;
  
      //To get pending list
      console.log("goToLGAmendTab");
      this.commonService.getAmendmentAndReleseAndConfiscationPendingList(this.crNoOrUidNo)
        .subscribe(res => {
          console.log(res);
          this.amendList = res.userObject.amendList;
          this.releaseList = res.userObject.releaseList;
          this.confiscateList = res.userObject.confiscateList;
          console.log("pending Amend list is::::" + JSON.stringify(this.amendList));
          console.log("pending releaseList list is::::" + JSON.stringify(this.releaseList));
          console.log("pending confiscateList list is::::" + JSON.stringify(this.confiscateList));
  
        });
    } */
    goToPendingReqTabPri() {
        this.isOpenPendingList = true;
        this.isOpenLGAmendList = false;
        this.isOpenInternalList = false;
        this.isPendingClicked = true;
        this.isLGAmendClicked = false;
        this.isInternalClicked = false;
        //To get pending list
        this.commonService.getAllLGRequestBeneficiarySpecificPendingPri(this.crNoOrUidNo)
            .subscribe(res => {
            console.log("AllLGRequestBeneficiarySpecific list::::" + JSON.stringify(res));
            this.pendingList = res.userObject;
            console.log("pending list is::::" + JSON.stringify(this.pendingList));
        });
        this.commonService.getAmendmentAndReleseAndConfiscationPendingList(this.crNoOrUidNo)
            .subscribe(res => {
            console.log(res);
            this.amendList = res.userObject.amendList;
            this.releaseList = res.userObject.releaseList;
            this.confiscateList = res.userObject.confiscateList;
            console.log("pending Amend list is::::" + JSON.stringify(this.amendList));
            console.log("pending releaseList list is::::" + JSON.stringify(this.releaseList));
            console.log("pending confiscateList list is::::" + JSON.stringify(this.confiscateList));
        });
    }
    goToInternalPendingTab() {
        this.isOpenPendingList = false;
        this.isOpenLGAmendList = false;
        this.isOpenInternalList = true;
        this.isPendingClicked = false;
        this.isLGAmendClicked = false;
        this.isInternalClicked = true;
        console.log("goToInternalPendingTab");
        //To get pending list Issuance
        this.commonService.getInternalIssuanceRejectList(this.userId)
            .subscribe(res => {
            console.log(res);
            console.log("Internal LG Reject Pending list::::" + JSON.stringify(res));
            this.intIssuanceRejectList = res.userObject;
        });
        this.commonService.getInternalPendingIssuanceCreateList(this.userId)
            .subscribe(res => {
            console.log(res);
            console.log("Internal LG Create Pending list::::" + JSON.stringify(res));
            this.intIssuanceCreateList = res.userObject;
        });
        this.commonService.getInternalPendingIssuanceReviewList(this.userId)
            .subscribe(res => {
            console.log(res);
            console.log("Internal LG Review Pending list::::" + JSON.stringify(res));
            this.intIssuanceReviewList = res.userObject;
        });
        this.commonService.getInternalIssuanceApprovalPendingList(this.userId)
            .subscribe(res => {
            console.log(res);
            console.log("Internal LG Approve Pending list::::" + JSON.stringify(res));
            this.intIssuanceApprovalList = res.userObject;
        });
        //To get pending list Amendment
        this.commonService.getInternalAmendmentRejectList(this.userId)
            .subscribe(res => {
            console.log(res);
            console.log("Internal Amendment Reject Pending list::::" + JSON.stringify(res));
            this.intAmendmentRejectList = res.userObject;
        });
        this.commonService.getInternalAmendmentPendingCreateList(this.userId)
            .subscribe(res => {
            console.log(res);
            console.log("Internal Amendment Pending Create list::::" + JSON.stringify(res));
            this.intAmendmentCreateList = res.userObject;
        });
        this.commonService.getInternalAmendmentPendingReviewList(this.userId)
            .subscribe(res => {
            console.log(res);
            console.log("Internal Amendment Pending list::::" + JSON.stringify(res));
            this.intAmendmentReviewList = res.userObject;
        });
        this.commonService.getInternalAmendmentApproveList(this.userId)
            .subscribe(res => {
            console.log(res);
            console.log("Internal Amendment Approve Pending list::::" + JSON.stringify(res));
            this.intAmendmentApproveList = res.userObject;
        });
        //To get pending list Confiscate
        this.commonService.getInternalConfiscateRejectPendingList(this.userId)
            .subscribe(res => {
            console.log(res);
            console.log("Internal Confiscate Create Pending list::::" + JSON.stringify(res));
            this.intConfiscateRejectList = res.userObject;
        });
        this.commonService.getInternalConfiscateCreatePendingList(this.userId)
            .subscribe(res => {
            console.log(res);
            console.log("Internal Confiscate Create Pending list::::" + JSON.stringify(res));
            this.intConfiscateCreateList = res.userObject;
        });
        this.commonService.getInternalConfiscateReviewPendingList(this.userId)
            .subscribe(res => {
            console.log(res);
            console.log("Internal Confiscate Review Pending list::::" + JSON.stringify(res));
            this.intConfiscateReviewList = res.userObject;
        });
        this.commonService.getInternalConfiscateApproveList(this.userId)
            .subscribe(res => {
            console.log(res);
            console.log("Internal Confiscate Approve Pending list::::" + JSON.stringify(res));
            this.intConfiscateApproveList = res.userObject;
        });
        //To get pending list Release
        this.commonService.getInternalReleaseRejectPendingList(this.userId)
            .subscribe(res => {
            console.log(res);
            console.log("Internal Release Create Pending list::::" + JSON.stringify(res));
            this.intReleaseRejectList = res.userObject;
        });
        this.commonService.getInternalReleaseCreatePendingList(this.userId)
            .subscribe(res => {
            console.log(res);
            console.log("Internal Release Create Pending list::::" + JSON.stringify(res));
            this.intReleaseCreateList = res.userObject;
        });
        this.commonService.getInternalReleaseReviewPendingList(this.userId)
            .subscribe(res => {
            console.log(res);
            console.log("Internal Release Review Pending list::::" + JSON.stringify(res));
            this.intReleaseReviewList = res.userObject;
        });
        this.commonService.getInternalReleaseApprovePendingList(this.userId)
            .subscribe(res => {
            console.log(res);
            console.log("Internal Release Approve Pending list::::" + JSON.stringify(res));
            this.intReleaseApproveList = res.userObject;
        });
        /*  */
    }
    RowSelected(pendingData, pendingtype) {
        this.commonService.isPrivateLgPending1Completed = true;
        console.log("private entity pending list::::" + JSON.stringify(pendingData));
        console.log("testy122" + pendingData.beneficiary_name);
        console.log("pendingtype" + pendingtype);
        this.commonService.lgIssuanceApproval = new _models_lgIssuance_model__WEBPACK_IMPORTED_MODULE_5__["LGIssuanceModel"]();
        if (pendingData.lg_type !== null || pendingData.lg_type !== undefined) {
            this.commonService.lgIssuanceApproval.LGType = pendingData.lg_type;
        }
        if (pendingData.beneficiary_name !== null || pendingData.beneficiary_name !== undefined) {
            console.log("test beneficiary_name" + pendingData.beneficiary_name);
            this.commonService.lgIssuanceApproval.beneficiary_name = pendingData.beneficiary_name;
        }
        if (pendingData.bank_name !== null || pendingData.bank_name !== undefined) {
            console.log("bank_name" + pendingData.bank_name);
            this.commonService.lgIssuanceApproval.bankName = pendingData.bank_name;
        }
        if (pendingData.project_name !== null || pendingData.project_name !== undefined) {
            console.log("bank_name" + pendingData.project_name);
            this.commonService.lgIssuanceApproval.project_name = pendingData.project_name;
        }
        if (pendingData.request_date !== null || pendingData.request_date !== undefined) {
            console.log("bank_name" + pendingData.request_date);
            this.commonService.lgIssuanceApproval.request_date = pendingData.request_date;
        }
        /* if(pendingData.request_status_flag !== null || pendingData.request_status_flag !== undefined){
          console.log("bank_name"+pendingData.request_status_flag);
         this.commonService.lgIssuanceApproval.status = pendingData.request_status_flag;
        } */
        if (pendingData.lg_start_date !== null || pendingData.lg_start_date !== undefined) {
            this.commonService.lgIssuanceApproval.LGStartDate = pendingData.lg_start_date;
        }
        if (pendingData.lg_end_date !== null || pendingData.lg_end_date !== undefined) {
            this.commonService.lgIssuanceApproval.LGEndDate = pendingData.lg_end_date;
        }
        if (pendingData.contract_value !== null || pendingData.contract_value !== undefined) {
            this.commonService.lgIssuanceApproval.Amount = pendingData.contract_value;
            var converter = __webpack_require__(/*! number-to-words */ "./node_modules/number-to-words/numberToWords.min.js");
            this.commonService.lgIssuanceApproval.amountInNumber = converter.toWords(this.commonService.lgIssuanceApproval.Amount);
        }
        if (pendingData.currency !== null || pendingData.currency !== undefined) {
            this.commonService.lgIssuanceApproval.currency = pendingData.currency;
        }
        if (pendingData.terms_condition_message !== null || pendingData.terms_condition_message !== undefined) {
            this.commonService.lgIssuanceApproval.termsNconditionsMessage = pendingData.terms_condition_message;
        }
        if (pendingData.active_status !== null || pendingData.active_status !== undefined) {
            this.commonService.lgIssuanceApproval.status = pendingData.active_status;
        }
        if (pendingData.response_code !== null || pendingData.response_code !== undefined) {
            this.commonService.lgIssuanceApproval.response_code = pendingData.response_code;
            console.log("............................pendingData.response_code" + pendingData.response_code);
        }
        if (pendingData.terms_condition_message !== null || pendingData.terms_condition_message !== undefined) {
            this.commonService.lgIssuanceApproval.terms_condition_message = pendingData.terms_condition_message;
            console.log("........................pendingData.terms_condition_message" + pendingData.terms_condition_message);
        }
        if (pendingData.request_id !== null || pendingData.request_id !== undefined) {
            this.commonService.lgIssuanceApproval.requestId = pendingData.request_id;
            console.log("........................pendingData.request_id" + pendingData.request_id);
        }
        if (pendingData.create_by !== null || pendingData.create_by !== undefined) {
            this.commonService.lgIssuanceApproval.create_by = pendingData.create_by;
        }
        /* if(pendingData.request_status_flag !== null || pendingData.request_status_flag !== undefined){
         this.commonService.lgIssuanceApproval.status = pendingData.request_status_flag;
        } */
        if (pendingData.terms_condition_type !== null || pendingData.terms_condition_type !== undefined) {
            this.commonService.lgIssuanceApproval.writeUpType = pendingData.terms_condition_type;
        }
        if (pendingData.project_name !== null || pendingData.project_name !== undefined) {
            this.commonService.lgIssuanceApproval.projectName = pendingData.project_name;
        }
        if (pendingData.project_id !== null || pendingData.project_id !== undefined) {
            this.commonService.lgIssuanceApproval.projectNumber = pendingData.project_id;
        }
        if (pendingData.purpose_of_bond !== null || pendingData.purpose_of_bond !== undefined) {
            this.commonService.lgIssuanceApproval.puroseOfBond = pendingData.purpose_of_bond;
        }
        if (pendingData.byan_no !== null || pendingData.byan_no !== undefined) {
            this.commonService.lgIssuanceApproval.bayanNuymber = pendingData.byan_no;
        }
        if (pendingData.zakat_start_date !== null || pendingData.zakat_start_date !== undefined) {
            this.commonService.lgIssuanceApproval.ZakatPeriodStartDate = pendingData.zakat_start_date;
        }
        if (pendingData.zakat_end_date !== null || pendingData.zakat_end_date !== undefined) {
            this.commonService.lgIssuanceApproval.ZakatPeriodEndDate = pendingData.zakat_end_date;
        }
        if (pendingData.lg_validity_date !== null || pendingData.lg_validity_date !== undefined) {
            this.commonService.lgIssuanceApproval.lg_validity_date = pendingData.validDt;
        }
        if (pendingData.account_of_contract_processed !== null || pendingData.account_of_contract_processed !== undefined) {
            this.commonService.lgIssuanceApproval.ac_of_contract = pendingData.account_of_contract_processed;
        }
        if (pendingData.agree_tag !== null || pendingData.agree_tag !== undefined) {
            this.commonService.lgIssuanceApproval.checkBox = pendingData.agree_tag;
        }
        if (pendingData.beneficiary_id !== null || pendingData.beneficiary_id !== undefined) {
            this.commonService.lgIssuanceApproval.beneficiaryId = pendingData.beneficiary_id;
        }
        if (pendingData.supplier_id !== null || pendingData.supplier_id !== undefined) {
            this.commonService.lgIssuanceApproval.supplierId = pendingData.supplier_id;
        }
        if (pendingData.beneficiary_UID !== null || pendingData.beneficiary_UID !== undefined) {
            this.commonService.lgIssuanceApproval.beneficiary_UID = pendingData.beneficiary_UID;
        }
        if (pendingtype !== null || pendingtype !== undefined) {
            this.commonService.lgIssuanceApproval.pendingtype = pendingtype;
        }
        if (pendingData.supplier_entity_id !== null || pendingData.supplier_entity_id !== undefined) {
            this.commonService.lgIssuanceApproval.supplier_entity_id = pendingData.supplier_entity_id;
        }
        if (pendingData.beneficiary_entity_id !== null || pendingData.beneficiary_entity_id !== undefined) {
            this.commonService.lgIssuanceApproval.beneficiary_entity_id = pendingData.beneficiary_entity_id;
        }
        if (pendingData.notification_message !== null || pendingData.notification_message !== undefined) {
            this.commonService.lgIssuanceApproval.notification_message = pendingData.notification_message;
        }
        this.router.navigate(['requestLgIssuanceApproval']);
        //this.lgIssuance.
    }
    ACRRowSelected(pendingData, pendingtype) {
        this.commonService.isPrivateLgPending1Completed = true;
        console.log("private entity pending list::::" + JSON.stringify(pendingData));
        console.log("testy122" + pendingData.beneficiary_name);
        console.log("pendingtype" + pendingtype);
        this.commonService.lgIssuanceApproval = new _models_lgIssuance_model__WEBPACK_IMPORTED_MODULE_5__["LGIssuanceModel"]();
        if (pendingData.lg_no !== null || pendingData.lg_no !== undefined) {
            this.commonService.lgIssuanceApproval.lg_no = pendingData.lg_no;
        }
        if (pendingData.lg_type !== null || pendingData.lg_type !== undefined) {
            this.commonService.lgIssuanceApproval.LGType = pendingData.lg_type;
        }
        if (pendingData.beneficiary_name !== null || pendingData.beneficiary_name !== undefined) {
            console.log("test beneficiary_name" + pendingData.beneficiary_name);
            this.commonService.lgIssuanceApproval.beneficiary_name = pendingData.beneficiary_name;
        }
        if (pendingData.bank_name !== null || pendingData.bank_name !== undefined) {
            console.log("bank_name" + pendingData.bank_name);
            this.commonService.lgIssuanceApproval.bankName = pendingData.bank_name;
        }
        if (pendingData.project_name !== null || pendingData.project_name !== undefined) {
            console.log("bank_name" + pendingData.project_name);
            this.commonService.lgIssuanceApproval.project_name = pendingData.project_name;
        }
        if (pendingData.request_date !== null || pendingData.request_date !== undefined) {
            console.log("bank_name" + pendingData.request_date);
            this.commonService.lgIssuanceApproval.request_date = pendingData.request_date;
        }
        /* if(pendingData.request_status_flag !== null || pendingData.request_status_flag !== undefined){
          console.log("bank_name"+pendingData.request_status_flag);
         this.commonService.lgIssuanceApproval.status = pendingData.request_status_flag;
        } */
        if (pendingData.lg_start_date !== null || pendingData.lg_start_date !== undefined) {
            this.commonService.lgIssuanceApproval.LGStartDate = pendingData.lg_start_date;
        }
        if (pendingData.lg_end_date !== null || pendingData.lg_end_date !== undefined) {
            this.commonService.lgIssuanceApproval.LGEndDate = pendingData.lg_end_date;
        }
        if (pendingData.lg_issue_date !== null || pendingData.lg_issue_date !== undefined) {
            this.commonService.lgIssuanceApproval.LGIssueDate = pendingData.lg_issue_date;
        }
        if (pendingData.lg_issue_date !== null || pendingData.lg_issue_date !== undefined) {
            this.commonService.lgIssuanceApproval.lg_validity_date = pendingData.lg_issue_date;
        }
        if (pendingData.contract_value !== null || pendingData.contract_value !== undefined) {
            this.commonService.lgIssuanceApproval.Amount = pendingData.contract_value;
            var converter = __webpack_require__(/*! number-to-words */ "./node_modules/number-to-words/numberToWords.min.js");
            this.commonService.lgIssuanceApproval.amountInNumber = converter.toWords(this.commonService.lgIssuanceApproval.Amount);
        }
        if (pendingData.currency !== null || pendingData.currency !== undefined) {
            this.commonService.lgIssuanceApproval.currency = pendingData.currency;
        }
        if (pendingData.terms_condition_message !== null || pendingData.terms_condition_message !== undefined) {
            this.commonService.lgIssuanceApproval.termsNconditionsMessage = pendingData.terms_condition_message;
        }
        if (pendingData.active_status !== null || pendingData.active_status !== undefined) {
            this.commonService.lgIssuanceApproval.status = pendingData.active_status;
        }
        if (pendingData.response_code !== null || pendingData.response_code !== undefined) {
            this.commonService.lgIssuanceApproval.response_code = pendingData.response_code;
            console.log("............................pendingData.response_code" + pendingData.response_code);
        }
        if (pendingData.terms_condition_message !== null || pendingData.terms_condition_message !== undefined) {
            this.commonService.lgIssuanceApproval.terms_condition_message = pendingData.terms_condition_message;
            console.log("........................pendingData.terms_condition_message" + pendingData.terms_condition_message);
        }
        if (pendingData.request_id !== null || pendingData.request_id !== undefined) {
            this.commonService.lgIssuanceApproval.requestId = pendingData.request_id;
            console.log("........................pendingData.request_id" + pendingData.request_id);
        }
        if (pendingData.create_by !== null || pendingData.create_by !== undefined) {
            this.commonService.lgIssuanceApproval.create_by = pendingData.create_by;
        }
        /* if(pendingData.request_status_flag !== null || pendingData.request_status_flag !== undefined){
         this.commonService.lgIssuanceApproval.status = pendingData.request_status_flag;
        } */
        if (pendingData.terms_condition_type !== null || pendingData.terms_condition_type !== undefined) {
            this.commonService.lgIssuanceApproval.writeUpType = pendingData.terms_condition_type;
        }
        if (pendingData.project_name !== null || pendingData.project_name !== undefined) {
            this.commonService.lgIssuanceApproval.projectName = pendingData.project_name;
        }
        if (pendingData.project_id !== null || pendingData.project_id !== undefined) {
            this.commonService.lgIssuanceApproval.projectNumber = pendingData.project_id;
        }
        if (pendingData.purpose_of_bond !== null || pendingData.purpose_of_bond !== undefined) {
            this.commonService.lgIssuanceApproval.puroseOfBond = pendingData.purpose_of_bond;
        }
        if (pendingData.byan_no !== null || pendingData.byan_no !== undefined) {
            this.commonService.lgIssuanceApproval.bayanNuymber = pendingData.byan_no;
        }
        if (pendingData.zakat_start_date !== null || pendingData.zakat_start_date !== undefined) {
            this.commonService.lgIssuanceApproval.ZakatPeriodStartDate = pendingData.zakat_start_date;
        }
        if (pendingData.zakat_end_date !== null || pendingData.zakat_end_date !== undefined) {
            this.commonService.lgIssuanceApproval.ZakatPeriodEndDate = pendingData.zakat_end_date;
        }
        /* if(pendingData.lg_validity_date !== null || pendingData.lg_validity_date !== undefined){
         this.commonService.lgIssuanceApproval.lg_validity_date = pendingData.validDt;
        } */
        if (pendingData.account_of_contract_processed !== null || pendingData.account_of_contract_processed !== undefined) {
            this.commonService.lgIssuanceApproval.ac_of_contract = pendingData.account_of_contract_processed;
        }
        if (pendingData.agree_tag !== null || pendingData.agree_tag !== undefined) {
            this.commonService.lgIssuanceApproval.checkBox = pendingData.agree_tag;
        }
        if (pendingData.beneficiary_id !== null || pendingData.beneficiary_id !== undefined) {
            this.commonService.lgIssuanceApproval.beneficiaryId = pendingData.beneficiary_id;
        }
        if (pendingData.supplier_id !== null || pendingData.supplier_id !== undefined) {
            this.commonService.lgIssuanceApproval.supplierId = pendingData.supplier_id;
        }
        if (pendingData.beneficiary_UID !== null || pendingData.beneficiary_UID !== undefined) {
            this.commonService.lgIssuanceApproval.beneficiary_UID = pendingData.beneficiary_UID;
        }
        if (pendingData.Amendmend_request_id !== null || pendingData.Amendmend_request_id !== undefined) {
            this.commonService.lgIssuanceApproval.Amendmend_request_id = pendingData.Amendmend_request_id;
        }
        if (pendingData.lg_amendment_amt !== null || pendingData.lg_amendment_amt !== undefined) {
            this.commonService.lgIssuanceApproval.amendment_amount = pendingData.lg_amendment_amt;
        }
        if (pendingData.amendment_end_date !== null || pendingData.amendment_end_date !== undefined) {
            this.commonService.lgIssuanceApproval.amendment_lg_end_date = pendingData.amendment_end_date;
        }
        if (pendingData.amendment_writeup_mesg !== null || pendingData.amendment_writeup_mesg !== undefined) {
            this.commonService.lgIssuanceApproval.amendment_writeup_mesg = pendingData.amendment_writeup_mesg;
        }
        if (pendingData.conf_request_id !== null || pendingData.conf_request_id !== undefined) {
            this.commonService.lgIssuanceApproval.confiscate_request_id = pendingData.conf_request_id;
        }
        if (pendingData.partial_confiscate_flag !== null || pendingData.partial_confiscate_flag !== undefined) {
            this.commonService.lgIssuanceApproval.partial_confiscation = pendingData.partial_confiscate_flag;
        }
        if (pendingData.confiscate_amt !== null || pendingData.confiscate_amt !== undefined) {
            this.commonService.lgIssuanceApproval.confiscate_amount = pendingData.confiscate_amt;
        }
        if (pendingData.conf_reason !== null || pendingData.conf_reason !== undefined) {
            this.commonService.lgIssuanceApproval.confiscate_reason = pendingData.conf_reason;
        }
        if (pendingData.conf_bank_name !== null || pendingData.conf_bank_name !== undefined) {
            this.commonService.lgIssuanceApproval.confiscate_bankName = pendingData.conf_bank_name;
        }
        if (pendingData.conf_iban_no !== null || pendingData.conf_iban_no !== undefined) {
            this.commonService.lgIssuanceApproval.confiscate_IBAN = pendingData.conf_iban_no;
        }
        if (pendingData.release_request_id !== null || pendingData.release_request_id !== undefined) {
            this.commonService.lgIssuanceApproval.release_request_id = pendingData.release_request_id;
        }
        if (pendingData.rel_release_reason !== null || pendingData.rel_release_reason !== undefined) {
            this.commonService.lgIssuanceApproval.release_reason = pendingData.rel_release_reason;
        }
        if (pendingData.partial_release_flag !== null || pendingData.partial_release_flag !== undefined) {
            this.commonService.lgIssuanceApproval.partial_release = pendingData.partial_release_flag;
        }
        if (pendingData.release_amt !== null || pendingData.release_amt !== undefined) {
            this.commonService.lgIssuanceApproval.release_amount = pendingData.release_amt;
        }
        if (pendingtype !== null || pendingtype !== undefined) {
            this.commonService.lgIssuanceApproval.pendingtype = pendingtype;
        }
        if (pendingData.supplier_entity_id !== null || pendingData.supplier_entity_id !== undefined) {
            this.commonService.lgIssuanceApproval.supplier_entity_id = pendingData.supplier_entity_id;
        }
        if (pendingData.beneficiary_entity_id !== null || pendingData.beneficiary_entity_id !== undefined) {
            this.commonService.lgIssuanceApproval.beneficiary_entity_id = pendingData.beneficiary_entity_id;
        }
        if (pendingData.notification_message !== null || pendingData.notification_message !== undefined) {
            this.commonService.lgIssuanceApproval.notification_message = pendingData.notification_message;
        }
        //console.log("lgIssuanceApproval >>>> "+JSON.stringify(this.commonService.lgIssuanceApproval));
        this.router.navigate(['requestLgIssuanceApproval']);
    }
    internalRowSelected(pendingData, pendingtype) {
        this.commonService.isPrivateLgPending1Completed = true;
        console.log("private entity pending list::::" + JSON.stringify(pendingData));
        console.log("pendingtype" + pendingtype);
        this.commonService.lgIssuanceApproval = new _models_lgIssuance_model__WEBPACK_IMPORTED_MODULE_5__["LGIssuanceModel"]();
        if (pendingData.lg_no !== null || pendingData.lg_no !== undefined) {
            this.commonService.lgIssuanceApproval.lg_no = pendingData.lg_no;
        }
        if (pendingData.lg_type !== null || pendingData.lg_type !== undefined) {
            this.commonService.lgIssuanceApproval.LGType = pendingData.lg_type;
        }
        if (pendingData.beneficiary_name !== null || pendingData.beneficiary_name !== undefined) {
            //console.log("test beneficiary_name"+pendingData.beneficiary_name);
            this.commonService.lgIssuanceApproval.beneficiary_name = pendingData.beneficiary_name;
        }
        if (pendingData.bank_name !== null || pendingData.bank_name !== undefined) {
            // console.log("bank_name"+pendingData.bank_name);
            this.commonService.lgIssuanceApproval.bankName = pendingData.bank_name;
        }
        if (pendingData.project_name !== null || pendingData.project_name !== undefined) {
            // console.log("bank_name"+pendingData.project_name);
            this.commonService.lgIssuanceApproval.project_name = pendingData.project_name;
        }
        if (pendingData.request_date !== null || pendingData.request_date !== undefined) {
            //  console.log("bank_name"+pendingData.request_date);
            this.commonService.lgIssuanceApproval.request_date = pendingData.request_date;
        }
        /* if(pendingData.request_status_flag !== null || pendingData.request_status_flag !== undefined){
          console.log("bank_name"+pendingData.request_status_flag);
         this.commonService.lgIssuanceApproval.status = pendingData.request_status_flag;
        } */
        if (pendingData.lg_start_date !== null || pendingData.lg_start_date !== undefined) {
            this.commonService.lgIssuanceApproval.LGStartDate = pendingData.lg_start_date;
        }
        if (pendingData.lg_end_date !== null || pendingData.lg_end_date !== undefined) {
            this.commonService.lgIssuanceApproval.LGEndDate = pendingData.lg_end_date;
        }
        if (pendingData.lg_issue_date !== null || pendingData.lg_issue_date !== undefined) {
            this.commonService.lgIssuanceApproval.LGIssueDate = pendingData.lg_issue_date;
        }
        if (pendingData.lg_issue_date !== null || pendingData.lg_issue_date !== undefined) {
            this.commonService.lgIssuanceApproval.lg_validity_date = pendingData.lg_issue_date;
        }
        if (pendingData.contract_value !== null || pendingData.contract_value !== undefined) {
            this.commonService.lgIssuanceApproval.Amount = pendingData.contract_value;
            var converter = __webpack_require__(/*! number-to-words */ "./node_modules/number-to-words/numberToWords.min.js");
            this.commonService.lgIssuanceApproval.amountInNumber = converter.toWords(this.commonService.lgIssuanceApproval.Amount);
        }
        if (pendingData.currency !== null || pendingData.currency !== undefined) {
            this.commonService.lgIssuanceApproval.currency = pendingData.currency;
        }
        if (pendingData.terms_condition_message !== null || pendingData.terms_condition_message !== undefined) {
            this.commonService.lgIssuanceApproval.termsNconditionsMessage = pendingData.terms_condition_message;
        }
        if (pendingData.active_status !== null || pendingData.active_status !== undefined) {
            this.commonService.lgIssuanceApproval.status = pendingData.active_status;
        }
        if (pendingData.response_code !== null || pendingData.response_code !== undefined) {
            this.commonService.lgIssuanceApproval.response_code = pendingData.response_code;
            //  console.log("............................pendingData.response_code"+pendingData.response_code);
        }
        if (pendingData.terms_condition_message !== null || pendingData.terms_condition_message !== undefined) {
            this.commonService.lgIssuanceApproval.terms_condition_message = pendingData.terms_condition_message;
            // console.log("........................pendingData.terms_condition_message"+pendingData.terms_condition_message);
        }
        if (pendingData.request_id !== null || pendingData.request_id !== undefined) {
            this.commonService.lgIssuanceApproval.requestId = pendingData.request_id;
            // console.log("........................pendingData.request_id"+pendingData.request_id);
        }
        if (pendingData.create_by !== null || pendingData.create_by !== undefined) {
            this.commonService.lgIssuanceApproval.create_by = pendingData.create_by;
        }
        /* if(pendingData.request_status_flag !== null || pendingData.request_status_flag !== undefined){
         this.commonService.lgIssuanceApproval.status = pendingData.request_status_flag;
        } */
        if (pendingData.terms_condition_type !== null || pendingData.terms_condition_type !== undefined) {
            this.commonService.lgIssuanceApproval.writeUpType = pendingData.terms_condition_type;
        }
        if (pendingData.project_name !== null || pendingData.project_name !== undefined) {
            this.commonService.lgIssuanceApproval.projectName = pendingData.project_name;
        }
        if (pendingData.project_id !== null || pendingData.project_id !== undefined) {
            this.commonService.lgIssuanceApproval.projectNumber = pendingData.project_id;
        }
        if (pendingData.purpose_of_bond !== null || pendingData.purpose_of_bond !== undefined) {
            this.commonService.lgIssuanceApproval.puroseOfBond = pendingData.purpose_of_bond;
        }
        if (pendingData.byan_no !== null || pendingData.byan_no !== undefined) {
            this.commonService.lgIssuanceApproval.bayanNuymber = pendingData.byan_no;
        }
        if (pendingData.zakat_start_date !== null || pendingData.zakat_start_date !== undefined) {
            this.commonService.lgIssuanceApproval.ZakatPeriodStartDate = pendingData.zakat_start_date;
        }
        if (pendingData.zakat_end_date !== null || pendingData.zakat_end_date !== undefined) {
            this.commonService.lgIssuanceApproval.ZakatPeriodEndDate = pendingData.zakat_end_date;
        }
        /* if(pendingData.lg_validity_date !== null || pendingData.lg_validity_date !== undefined){
         this.commonService.lgIssuanceApproval.lg_validity_date = pendingData.validDt;
        } */
        if (pendingData.account_of_contract_processed !== null || pendingData.account_of_contract_processed !== undefined) {
            this.commonService.lgIssuanceApproval.ac_of_contract = pendingData.account_of_contract_processed;
        }
        if (pendingData.agree_tag !== null || pendingData.agree_tag !== undefined) {
            this.commonService.lgIssuanceApproval.checkBox = pendingData.agree_tag;
        }
        if (pendingData.beneficiary_id !== null || pendingData.beneficiary_id !== undefined) {
            this.commonService.lgIssuanceApproval.beneficiaryId = pendingData.beneficiary_id;
        }
        if (pendingData.supplier_id !== null || pendingData.supplier_id !== undefined) {
            this.commonService.lgIssuanceApproval.supplierId = pendingData.supplier_id;
        }
        if (pendingData.beneficiary_UID !== null || pendingData.beneficiary_UID !== undefined) {
            this.commonService.lgIssuanceApproval.beneficiary_UID = pendingData.beneficiary_UID;
        }
        if (pendingData.Amendmend_request_id !== null || pendingData.Amendmend_request_id !== undefined) {
            this.commonService.lgIssuanceApproval.Amendmend_request_id = pendingData.Amendmend_request_id;
        }
        if (pendingData.lg_amendment_amt !== null || pendingData.lg_amendment_amt !== undefined) {
            this.commonService.lgIssuanceApproval.amendment_amount = pendingData.lg_amendment_amt;
        }
        if (pendingData.amendment_end_date !== null || pendingData.amendment_end_date !== undefined) {
            this.commonService.lgIssuanceApproval.amendment_lg_end_date = pendingData.amendment_end_date;
        }
        if (pendingData.amendment_writeup_mesg !== null || pendingData.amendment_writeup_mesg !== undefined) {
            this.commonService.lgIssuanceApproval.amendment_writeup_mesg = pendingData.amendment_writeup_mesg;
        }
        if (pendingData.conf_request_id !== null || pendingData.conf_request_id !== undefined) {
            this.commonService.lgIssuanceApproval.confiscate_request_id = pendingData.conf_request_id;
        }
        if (pendingData.partial_confiscate_flag !== null || pendingData.partial_confiscate_flag !== undefined) {
            this.commonService.lgIssuanceApproval.partial_confiscation = pendingData.partial_confiscate_flag;
        }
        if (pendingData.confiscate_amt !== null || pendingData.confiscate_amt !== undefined) {
            this.commonService.lgIssuanceApproval.confiscate_amount = pendingData.confiscate_amt;
        }
        if (pendingData.conf_reason !== null || pendingData.conf_reason !== undefined) {
            this.commonService.lgIssuanceApproval.confiscate_reason = pendingData.conf_reason;
        }
        if (pendingData.conf_bank_name !== null || pendingData.conf_bank_name !== undefined) {
            this.commonService.lgIssuanceApproval.confiscate_bankName = pendingData.conf_bank_name;
        }
        if (pendingData.conf_bank_code !== null || pendingData.conf_bank_code !== undefined) {
            this.commonService.lgIssuanceApproval.confiscate_bankCode = pendingData.conf_bank_code;
        }
        if (pendingData.conf_iban_no !== null || pendingData.conf_iban_no !== undefined) {
            this.commonService.lgIssuanceApproval.confiscate_IBAN = pendingData.conf_iban_no;
        }
        if (pendingData.release_request_id !== null || pendingData.release_request_id !== undefined) {
            this.commonService.lgIssuanceApproval.release_request_id = pendingData.release_request_id;
        }
        if (pendingData.rel_release_reason !== null || pendingData.rel_release_reason !== undefined) {
            this.commonService.lgIssuanceApproval.release_reason = pendingData.rel_release_reason;
        }
        if (pendingData.partial_release_flag !== null || pendingData.partial_release_flag !== undefined) {
            this.commonService.lgIssuanceApproval.partial_release = pendingData.partial_release_flag;
        }
        if (pendingData.release_amt !== null || pendingData.release_amt !== undefined) {
            this.commonService.lgIssuanceApproval.release_amount = pendingData.release_amt;
        }
        if (pendingData.step !== null || pendingData.step !== undefined) {
            this.commonService.lgIssuanceApproval.workflow_step = pendingData.step;
        }
        if (pendingData.workflow_status !== null || pendingData.workflow_status !== undefined) {
            this.commonService.lgIssuanceApproval.workflow_status = pendingData.workflow_status;
        }
        if (pendingData.workflow_state !== null || pendingData.workflow_state !== undefined) {
            this.commonService.lgIssuanceApproval.workflow_state = pendingData.workflow_state;
        }
        if (pendingtype !== null || pendingtype !== undefined) {
            this.commonService.lgIssuanceApproval.pendingtype = pendingtype;
        }
        if (pendingData.supplier_entity_id !== null || pendingData.supplier_entity_id !== undefined) {
            this.commonService.lgIssuanceApproval.supplier_entity_id = pendingData.supplier_entity_id;
        }
        if (pendingData.beneficiary_entity_id !== null || pendingData.beneficiary_entity_id !== undefined) {
            this.commonService.lgIssuanceApproval.beneficiary_entity_id = pendingData.beneficiary_entity_id;
        }
        if (pendingData.notification_message !== null || pendingData.notification_message !== undefined) {
            this.commonService.lgIssuanceApproval.notification_message = pendingData.notification_message;
        }
        if (pendingData.beneficiary_role !== null || pendingData.beneficiary_role !== undefined) {
            this.commonService.lgIssuanceApproval.beneficiary_role = pendingData.beneficiary_role;
        }
        if (pendingData.currency_code !== null || pendingData.currency_code !== undefined) {
            this.commonService.lgIssuanceApproval.currency_code = pendingData.currency_code;
        }
        if (pendingData.bank_code !== null || pendingData.bank_code !== undefined) {
            this.commonService.lgIssuanceApproval.bank_code = pendingData.bank_code;
        }
        if (pendingData.iban_no !== null || pendingData.iban_no !== undefined) {
            this.commonService.lgIssuanceApproval.iban_no = pendingData.iban_no;
        }
        if (pendingData.percentage_of_value !== null || pendingData.percentage_of_value !== undefined) {
            this.commonService.lgIssuanceApproval.percentage_of_value = pendingData.percentage_of_value;
        }
        if (pendingData.workflow_id !== null || pendingData.workflow_id !== undefined) {
            this.commonService.lgIssuanceApproval.workflow_id = pendingData.workflow_id;
        }
        //console.log("lgIssuanceApproval >>>> "+JSON.stringify(this.commonService.lgIssuanceApproval));
        if (pendingtype !== null || pendingtype !== undefined) {
            if (pendingtype == 'issuance_Reject') {
                this.commonService.setcurrentWFIDService(pendingData.workflow_id);
                localStorage.setItem('update_issuance', 'update_issuance');
                this.router.navigate(['requestLgIssuance']);
            }
            else if (pendingtype == 'amendment_Reject') {
                this.commonService.setcurrentWFIDService(pendingData.workflow_id);
                localStorage.setItem('update_amendment', 'update_amendment');
                localStorage.setItem('currentmenuType', 'Amendment');
                this.router.navigate(['privateLgDetails']);
            }
            else if (pendingtype == 'confiscate_Reject') {
                this.commonService.setcurrentWFIDService(pendingData.workflow_id);
                localStorage.setItem('update_confiscate', 'update_confiscate');
                localStorage.setItem('currentmenuType', 'Confiscate');
                this.router.navigate(['privateLgDetails']);
            }
            else if (pendingtype == 'release_Reject') {
                this.commonService.setcurrentWFIDService(pendingData.workflow_id);
                localStorage.setItem('update_release', 'update_release');
                localStorage.setItem('currentmenuType', 'Release');
                this.router.navigate(['privateLgDetails']);
            }
            else {
                this.router.navigate(['requestLgIssuanceApproval']);
            }
        }
    }
};
PrivatependingtasksComponent.ctorParameters = () => [
    { type: _angular_router__WEBPACK_IMPORTED_MODULE_2__["Router"] },
    { type: _angular_forms__WEBPACK_IMPORTED_MODULE_3__["FormBuilder"] },
    { type: _services_common_service_service__WEBPACK_IMPORTED_MODULE_4__["CommonService"] },
    { type: _ngx_translate_core__WEBPACK_IMPORTED_MODULE_6__["TranslateService"] }
];
PrivatependingtasksComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-privatependingtasks',
        template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! raw-loader!./privatependingtasks.component.html */ "./node_modules/raw-loader/dist/cjs.js!./src/app/privatependingtasks/privatependingtasks.component.html")).default,
        styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! ./privatependingtasks.component.css */ "./src/app/privatependingtasks/privatependingtasks.component.css")).default]
    }),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_angular_router__WEBPACK_IMPORTED_MODULE_2__["Router"], _angular_forms__WEBPACK_IMPORTED_MODULE_3__["FormBuilder"], _services_common_service_service__WEBPACK_IMPORTED_MODULE_4__["CommonService"], _ngx_translate_core__WEBPACK_IMPORTED_MODULE_6__["TranslateService"]])
], PrivatependingtasksComponent);



/***/ }),

/***/ "./src/app/request-lg-issuance-approval/request-lg-issuance-approval.component.css":
/*!*****************************************************************************************!*\
  !*** ./src/app/request-lg-issuance-approval/request-lg-issuance-approval.component.css ***!
  \*****************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3JlcXVlc3QtbGctaXNzdWFuY2UtYXBwcm92YWwvcmVxdWVzdC1sZy1pc3N1YW5jZS1hcHByb3ZhbC5jb21wb25lbnQuY3NzIn0= */");

/***/ }),

/***/ "./src/app/request-lg-issuance-approval/request-lg-issuance-approval.component.ts":
/*!****************************************************************************************!*\
  !*** ./src/app/request-lg-issuance-approval/request-lg-issuance-approval.component.ts ***!
  \****************************************************************************************/
/*! exports provided: RequestLgIssuanceApprovalComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RequestLgIssuanceApprovalComponent", function() { return RequestLgIssuanceApprovalComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm2015/router.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm2015/forms.js");
/* harmony import */ var _services_common_service_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../services/common-service.service */ "./src/app/services/common-service.service.ts");
/* harmony import */ var _ngx_translate_core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @ngx-translate/core */ "./node_modules/@ngx-translate/core/fesm2015/ngx-translate-core.js");
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/material */ "./node_modules/@angular/material/esm2015/material.js");
/* harmony import */ var _general_modal_general_modal_component__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../general-modal/general-modal.component */ "./src/app/general-modal/general-modal.component.ts");








let RequestLgIssuanceApprovalComponent = class RequestLgIssuanceApprovalComponent {
    constructor(translate, router, formBuilder, commonService, dialog) {
        this.translate = translate;
        this.router = router;
        this.formBuilder = formBuilder;
        this.commonService = commonService;
        this.dialog = dialog;
        this.isDisableApprove = true;
        this.tncCheckbox = false;
        this.checkBox = false;
        this.accountOfContractcheckBox = false;
        this.isEnableButtons = false;
        /******** */
        this.isEnableGovButtons = false;
        this.isDisablesendBackButton = true;
        this.isDisabledApprovedButton = false;
        this.isAllowToApprove = false;
        this.isEditTnC = false;
        this.nsAcceptButton = false;
        this.isDisabledCancelButton = false;
        this.isDisabledEditButton = false;
        this.LG_History = [];
        this.isACRpending = false;
        this.isAmendApprove = false;
        this.isReleaseApprove = false;
        this.isConfiscateApprove = false;
        this.partialConfiscation = false;
        this.partialRelease = false;
        this.isInternalPending = false;
        this.roleId = localStorage.getItem('roleId');
        console.log("this.roleId::::" + this.roleId);
        this.loginId = localStorage.getItem('userId');
        console.log("this.loginId::::" + this.loginId);
        this.crNoOrUidNo = localStorage.getItem('crNoOrUidNo');
        console.log("crNoOrUidNo::::" + this.crNoOrUidNo);
        this.onBoardResolution = localStorage.getItem('onBoardResolution');
        this.commonService.checkSessionExpired(this.loginId).then((data) => {
            if (data == 0) {
                this.commonService.showGeneralMessage(this.translate.instant('HOME.Session_Expired'), this.translate.instant('HOME.logged_out'), false);
                this.commonService.logout(this.loginId);
                return;
            }
            else {
            }
        });
        console.log("this.commonService.lgIssuanceApproval in approval page*****" + JSON.stringify(this.commonService.lgIssuanceApproval));
        if (this.commonService.lgIssuanceApproval !== undefined || this.commonService.lgIssuanceApproval !== null) {
            if (this.commonService.lgIssuanceApproval.requestId !== undefined || this.commonService.lgIssuanceApproval.requestId !== null) {
                this.request_id = this.commonService.lgIssuanceApproval.requestId;
            }
            console.log("this.commonService.lgIssuanceApproval.create_by in private::::" + this.commonService.lgIssuanceApproval.create_by);
        }
        if (this.roleId !== null || this.roleId !== undefined) {
            //This is for amend/release/confiscate
            if (this.commonService.lgIssuanceApproval.pendingtype !== null || this.commonService.lgIssuanceApproval.pendingtype !== undefined) {
                if (this.commonService.lgIssuanceApproval.pendingtype == 'amend' || this.commonService.lgIssuanceApproval.pendingtype == 'release' || this.commonService.lgIssuanceApproval.pendingtype == 'confiscate') {
                    this.isACRpending = true;
                    this.ACRpendingtype = this.commonService.lgIssuanceApproval.pendingtype;
                }
                if (this.commonService.lgIssuanceApproval.pendingtype == 'issuance_create' || this.commonService.lgIssuanceApproval.pendingtype == 'amendment_create' || this.commonService.lgIssuanceApproval.pendingtype == 'confiscate_create' || this.commonService.lgIssuanceApproval.pendingtype == 'release_create') {
                    this.isInternalPending = false;
                    //this.alertMsgforPrivateLGApproval1 = "This case request has been "+this.commonService.lgIssuanceApproval.workflow_state.toLowerCase( );
                    this.alertMsgforPrivateLGApproval1 = this.commonService.lgIssuanceApproval.notification_message;
                }
                if (this.commonService.lgIssuanceApproval.pendingtype == 'issuance_review' || this.commonService.lgIssuanceApproval.pendingtype == 'amendment_review' || this.commonService.lgIssuanceApproval.pendingtype == 'confiscate_review' || this.commonService.lgIssuanceApproval.pendingtype == 'release_review') {
                    if (this.commonService.lgIssuanceApproval.workflow_status == 'P') {
                        this.isInternalPending = true;
                        this.internalPendingType = this.commonService.lgIssuanceApproval.pendingtype;
                        this.alertMsgforPrivateLGApproval1 = this.commonService.lgIssuanceApproval.notification_message;
                    }
                    else {
                        this.isInternalPending = false;
                        this.alertMsgforPrivateLGApproval1 = this.commonService.lgIssuanceApproval.notification_message;
                    }
                }
                if (this.commonService.lgIssuanceApproval.pendingtype == 'issuance_approve' || this.commonService.lgIssuanceApproval.pendingtype == 'amendment_approve' || this.commonService.lgIssuanceApproval.pendingtype == 'confiscate_approve' || this.commonService.lgIssuanceApproval.pendingtype == 'release_approve') {
                    if (this.commonService.lgIssuanceApproval.workflow_status == 'P') {
                        this.isInternalPending = true;
                        this.internalPendingType = this.commonService.lgIssuanceApproval.pendingtype;
                        this.alertMsgforPrivateLGApproval1 = this.commonService.lgIssuanceApproval.notification_message;
                    }
                    else {
                        this.isInternalPending = false;
                        this.alertMsgforPrivateLGApproval1 = this.commonService.lgIssuanceApproval.notification_message;
                    }
                }
                /* if (this.commonService.lgIssuanceApproval.pendingtype == 'confiscate_create'  || this.commonService.lgIssuanceApproval.pendingtype == 'release_create') {
        
                  this.isInternalPending =false;
                  this.alertMsgforPrivateLGApproval1 = "This case request has been "+this.commonService.lgIssuanceApproval.workflow_state.toLowerCase( );
                  //this.alertMsgforPrivateLGApproval1 = this.commonService.lgIssuanceApproval.notification_message;
                } */
                /* if (this.commonService.lgIssuanceApproval.pendingtype == 'confiscate_review' || this.commonService.lgIssuanceApproval.pendingtype == 'release_review') {
                  if(this.commonService.lgIssuanceApproval.workflow_status == 'P'){
                    this.isInternalPending =true;
                    this.internalPendingType = this.commonService.lgIssuanceApproval.pendingtype;
                    this.alertMsgforPrivateLGApproval1 = 'This case request requires internal review';
                  }else{
                    this.isInternalPending =false;
                    this.alertMsgforPrivateLGApproval1 = "This case request has been "+this.commonService.lgIssuanceApproval.workflow_state.toLowerCase( );
                  }
                  
                } */
                /* if (this.commonService.lgIssuanceApproval.pendingtype == 'confiscate_approve'  || this.commonService.lgIssuanceApproval.pendingtype == 'release_approve') {
        
                  if(this.commonService.lgIssuanceApproval.workflow_status == 'P'){
                    this.isInternalPending =true;
                    this.internalPendingType = this.commonService.lgIssuanceApproval.pendingtype;
                    this.alertMsgforPrivateLGApproval1 = "This case request requires internal approval";
                  }else{
                    this.isInternalPending =false;
                    this.alertMsgforPrivateLGApproval1 = "This case request has been "+this.commonService.lgIssuanceApproval.workflow_state.toLowerCase( );
                  }
                } */
            }
            console.log("This is for amend/release/confiscate ::" + this.internalPendingType);
            if (this.crNoOrUidNo == this.commonService.lgIssuanceApproval.supplier_entity_id) {
                console.log("this.roleId in this.commonService.lgIssuanceApproval:::::" + this.roleId);
                //PENDING
                //if(this.commonService.lgIssuanceApproval.status != null || this.commonService.lgIssuanceApproval.status != undefined){
                if (this.commonService.lgIssuanceApproval.response_code == '120') {
                    this.isEnableButtons = false;
                    this.isEnableGovButtons = false;
                    this.nsAcceptButton = false;
                    //this.alertMsgforPrivateLGApproval1 = this.translate.instant('HOME.sent_to_bank_for_further_processing');
                    this.alertMsgforPrivateLGApproval1 = this.commonService.lgIssuanceApproval.notification_message;
                }
                // NS-CHANGE
                else if (this.commonService.lgIssuanceApproval.response_code == '121') {
                    this.isEnableButtons = true;
                    this.isEnableGovButtons = false;
                    this.nsAcceptButton = false;
                    // this.alertMsgforPrivateLGApproval1 = this.translate.instant('HOME.been_modified_by_the_Beneficiaryfurther_processing');
                    this.alertMsgforPrivateLGApproval1 = this.commonService.lgIssuanceApproval.notification_message;
                }
                //NS-PENDING
                else if (this.commonService.lgIssuanceApproval.response_code == '124') {
                    this.isEnableButtons = false;
                    this.isEnableGovButtons = false;
                    this.nsAcceptButton = false;
                    //this.alertMsgforPrivateLGApproval1 = this.translate.instant('HOME.sent_to_Beneficiary_approving_Request');
                    this.alertMsgforPrivateLGApproval1 = this.commonService.lgIssuanceApproval.notification_message;
                }
                //NS-ACCEPT
                else if (this.commonService.lgIssuanceApproval.response_code == '122') {
                    this.isEnableButtons = false;
                    this.isEnableGovButtons = false;
                    this.nsAcceptButton = false;
                    // this.alertMsgforPrivateLGApproval1 = this.translate.instant('HOME.notified_once_approved');
                    this.alertMsgforPrivateLGApproval1 = this.commonService.lgIssuanceApproval.notification_message;
                }
                //CANCELLED
                else if (this.commonService.lgIssuanceApproval.response_code == '123') {
                    this.isEnableButtons = false;
                    this.isEnableGovButtons = false;
                    this.nsAcceptButton = false;
                    // this.alertMsgforPrivateLGApproval1 = this.translate.instant('HOME.Cancelled_private_entity');
                    this.alertMsgforPrivateLGApproval1 = this.commonService.lgIssuanceApproval.notification_message;
                }
                /* //AMENDMENT-PENDING
                else if (this.commonService.lgIssuanceApproval.response_code == '3001') {
                  this.isAmendApprove = false;
                  this.alertMsgforPrivateLGApproval1 = "This case request requires beneficiary approval";
                }
                //AMENDMENT-PENDING-BANK
                else if (this.commonService.lgIssuanceApproval.response_code == '3002') {
                  this.isAmendApprove = false;
                  this.alertMsgforPrivateLGApproval1 = "This case request requires bank approval";
                } */
                //AMENDMENT-PENDING
                else if (this.commonService.lgIssuanceApproval.response_code == '3001') {
                    this.isAmendApprove = true;
                    //this.alertMsgforPrivateLGApproval1 = "This Amendment case request requires supplier approval";
                }
                //AMENDMENT-PENDING-BANK
                else if (this.commonService.lgIssuanceApproval.response_code == '3002') {
                    this.isAmendApprove = false;
                    //this.alertMsgforPrivateLGApproval1 = "This Amendment case request requires bank approval";
                }
                //AMENDMENT-REJECTED
                else if (this.commonService.lgIssuanceApproval.response_code == '3003') {
                    this.isAmendApprove = false;
                    //this.alertMsgforPrivateLGApproval1 = "This Amendment case request is Rejected";
                }
                //AMENDMENT-APPROVED
                else if (this.commonService.lgIssuanceApproval.response_code == '3004') {
                    this.isAmendApprove = false;
                    //this.alertMsgforPrivateLGApproval1 = "This Amendment case request is Approved";
                }
                //AMENDMENT-PENDING-SUPP
                else if (this.commonService.lgIssuanceApproval.response_code == '3005') {
                    this.isAmendApprove = false;
                    //this.alertMsgforPrivateLGApproval1 = "This Amendment case request requires beneficiary approval";
                }
                //AMENDMENT-PENDING
                else if (this.commonService.lgIssuanceApproval.response_code == '4001') {
                    this.isAmendApprove = false;
                    //this.alertMsgforPrivateLGApproval1 = "This confiscation Case Request Requires Bank Approval";
                }
                //AMENDMENT-PENDING-BANK
                else if (this.commonService.lgIssuanceApproval.response_code == '4002') {
                    this.isAmendApprove = false;
                    // this.alertMsgforPrivateLGApproval1 = "This confiscation Case Request Requires Bank Approval ";
                } //AMENDMENT-PENDING
                else if (this.commonService.lgIssuanceApproval.response_code == '5001') {
                    this.isAmendApprove = false;
                    //this.alertMsgforPrivateLGApproval1 = "This Release Case Request Requires Bank Approval ";
                }
                //AMENDMENT-PENDING-BANK
                else if (this.commonService.lgIssuanceApproval.response_code == '5002') {
                    this.isAmendApprove = false;
                    //this.alertMsgforPrivateLGApproval1 = "This Release Case Request Requires Bank Approval ";
                }
            }
            if (this.crNoOrUidNo == this.commonService.lgIssuanceApproval.beneficiary_entity_id) {
                //if(this.roleId == 2 ){
                //PENDING
                //if(this.commonService.lgIssuanceApproval.status != null || this.commonService.lgIssuanceApproval.status != undefined){
                if (this.commonService.lgIssuanceApproval.response_code == '120') {
                    this.isEnableGovButtons = false;
                    this.isEnableButtons = false;
                    this.nsAcceptButton = false;
                    //this.alertMsgforGovLGApproval = "Your case request has been sent to bank. You will be notified once approved.";
                    this.alertMsgforPrivateLGApproval1 = this.commonService.lgIssuanceApproval.notification_message;
                    //this.alertMsgforPrivateLGApproval1 =this.translate.instant('HOME.sent_to_bank_for_further_processing');
                }
                // NS-CHANGE
                else if (this.commonService.lgIssuanceApproval.response_code == '121') {
                    this.isEnableGovButtons = true;
                    this.isEnableButtons = false;
                    this.nsAcceptButton = false;
                    this.isDisabledCancelButton = true;
                    this.isDisablesendBackButton = true;
                    this.isDisabledEditButton = true;
                    this.isDisabledApprovedButton = true;
                    // this.alertMsgforPrivateLGApproval1 =this.translate.instant('HOME.waiting_accepted_the_supplier');
                    this.alertMsgforPrivateLGApproval1 = this.commonService.lgIssuanceApproval.notification_message;
                }
                //NS-PENDING
                else if (this.commonService.lgIssuanceApproval.response_code == '124') {
                    console.log("this.isEnableButtons for response_code == '124'::::" + this.isEnableButtons);
                    this.isEnableGovButtons = true;
                    this.isEnableButtons = false;
                    this.nsAcceptButton = false;
                    // this.alertMsgforPrivateLGApproval1 =this.translate.instant('HOME.waiting_for_your_approval');
                    this.alertMsgforPrivateLGApproval1 = this.commonService.lgIssuanceApproval.notification_message;
                }
                //NS-ACCEPT
                else if (this.commonService.lgIssuanceApproval.response_code == '122') {
                    this.isEnableGovButtons = false;
                    this.isEnableButtons = false;
                    this.nsAcceptButton = true;
                    //  this.alertMsgforPrivateLGApproval1 =this.translate.instant('HOME.has_been_accepted_supplier_Please_approve');
                    this.alertMsgforPrivateLGApproval1 = this.commonService.lgIssuanceApproval.notification_message;
                }
                //  //CANCELLED
                //  else if(this.commonService.lgIssuanceApproval.response_code == '123'){
                //   this.isEnableGovButtons = false;
                //   this.isEnableButtons = false;
                //   this.alertMsgforPrivateLGApproval = "Cancelled by private entity";
                //  }
                //}
                /*  //AMENDMENT-PENDING
                else if (this.commonService.lgIssuanceApproval.response_code == '3001') {
                  this.isAmendApprove = true;
                  this.alertMsgforPrivateLGApproval1 = "This case request requires beneficiary approval";
                }
                //AMENDMENT-PENDING-BANK
                else if (this.commonService.lgIssuanceApproval.response_code == '3002') {
                  this.isAmendApprove = false;
                  this.alertMsgforPrivateLGApproval1 = "This case request requires bank approval";
                } */
                //AMENDMENT-PENDING
                else if (this.commonService.lgIssuanceApproval.response_code == '3001') {
                    this.isAmendApprove = false;
                    //this.alertMsgforPrivateLGApproval1 = "This Amendment case request requires supplier approval";
                }
                //AMENDMENT-PENDING-BANK
                else if (this.commonService.lgIssuanceApproval.response_code == '3002') {
                    this.isAmendApprove = false;
                    //this.alertMsgforPrivateLGApproval1 = "This Amendment case request requires bank approval";
                }
                //AMENDMENT-REJECTED
                else if (this.commonService.lgIssuanceApproval.response_code == '3003') {
                    this.isAmendApprove = false;
                    // this.alertMsgforPrivateLGApproval1 = "This Amendment case request is Rejected";
                }
                //AMENDMENT-APPROVED
                else if (this.commonService.lgIssuanceApproval.response_code == '3004') {
                    this.isAmendApprove = false;
                    //this.alertMsgforPrivateLGApproval1 = "This Amendment case request is Approved";
                }
                //AMENDMENT-PENDING-SUPP
                else if (this.commonService.lgIssuanceApproval.response_code == '3005') {
                    this.isAmendApprove = true;
                    // this.alertMsgforPrivateLGApproval1 = "This Amendment case request requires beneficiary approval";
                }
                //AMENDMENT-PENDING
                else if (this.commonService.lgIssuanceApproval.response_code == '4001') {
                    this.isAmendApprove = false;
                    //this.alertMsgforPrivateLGApproval1 = "This confiscation Case Request Requires Bank Approval";
                }
                //AMENDMENT-PENDING-BANK
                else if (this.commonService.lgIssuanceApproval.response_code == '4002') {
                    this.isAmendApprove = false;
                    //this.alertMsgforPrivateLGApproval1 = "This confiscation Case Request Requires Bank Approval";
                } //AMENDMENT-PENDING
                else if (this.commonService.lgIssuanceApproval.response_code == '5001') {
                    this.isAmendApprove = false;
                    //this.alertMsgforPrivateLGApproval1 = "This Release Case Request Requires Bank Approval";
                }
                //AMENDMENT-PENDING-BANK
                else if (this.commonService.lgIssuanceApproval.response_code == '5002') {
                    this.isAmendApprove = false;
                    //this.alertMsgforPrivateLGApproval1 = "This Release Case Request Requires Bank Approval";
                }
            }
        }
        this.commonService.getBeneficiaryInfoAndApplicatInfo(this.commonService.lgIssuanceApproval.requestId)
            .subscribe(res => {
            console.log("applicantIfo::::" + JSON.stringify(res));
            // console.log(res.userObject.applicatInfo[0].cr_no);
            this.Applicant_CRN = res.userObject.applicatInfo[0].cr_no;
            this.Applicant_Entity_name_Arabic = res.userObject.applicatInfo[0].supplier_name;
            this.Applicant_Selected_Bank = res.userObject.applicatInfo[0].bank_code;
            this.Applicant_Selected_IBAN = res.userObject.applicatInfo[0].iban_no;
            this.Applicant_CR_type = res.userObject.applicatInfo[0].cr_type;
            this.Applicant_CR_status = res.userObject.applicatInfo[0].cr_status;
            this.Applicant_CR_Issue_Date = res.userObject.applicatInfo[0].cr_issue_date;
            this.Applicant_CR_expiry_Date = res.userObject.applicatInfo[0].cr_expiry_date;
            this.Applicant_Address = res.userObject.applicatInfo[0].addr;
            this.Applicant_City = res.userObject.applicatInfo[0].city;
        });
        if (this.commonService.lgIssuanceApproval.lg_no !== null || this.commonService.lgIssuanceApproval.lg_no !== undefined) {
            this.commonService.getLgHistory(this.commonService.lgIssuanceApproval.lg_no)
                .subscribe(res => {
                console.log("Gov lgHistoryList::::" + JSON.stringify(res));
                this.LG_History = res.userObject.lgHistorylis;
            });
        }
    }
    ngOnInit() {
        this.submitLGIssuanceApproval = this.formBuilder.group({
            LGType: [
                ""
            ],
            Amount: [
                ""
            ],
            currency: [
                ""
            ],
            LGStartDate: [
                ""
            ],
            LGEndDate: [
                ""
            ],
            checkBox: [
                false
            ],
            accountOfContractcheckBox: [
                false
            ],
            TermsAndCondContent: [
                ""
            ],
            activeStatus: [
                ""
            ],
            requestId: [
                ""
            ],
            LGNumber: [
                ""
            ],
            writeUpType: [
                ""
            ],
            amountInText: [
                ""
            ],
            LGValidityDate: [
                ""
            ],
            zakatStartDate: [
                ""
            ],
            zakatEndDate: [
                ""
            ],
            projectName: [
                ""
            ],
            projectId: [
                ""
            ],
            purposeOfBond: [
                ""
            ],
            byanNo: [
                ""
            ],
            Applicant_CRN: [
                ""
            ],
            Applicant_Entity_name_Arabic: [
                ""
            ],
            Applicant_Selected_Bank: [
                ""
            ],
            Applicant_Selected_IBAN: [
                ""
            ],
            Applicant_CR_type: [
                ""
            ],
            Applicant_CR_status: [
                ""
            ],
            Applicant_CR_Issue_Date: [
                ""
            ],
            Applicant_CR_expiry_Date: [
                ""
            ],
            Applicant_Address: [
                ""
            ],
            Applicant_City: [
                ""
            ],
            Beneficiary_Name: [
                ""
            ],
            Beneficiary_UID_or_CRN: [
                ""
            ],
            Represantitive_Name: [
                ""
            ],
            Represantitive_Mobile_number: [
                ""
            ],
            Represantitive_Email: [
                ""
            ],
            Represantitive_Address: [
                ""
            ],
            Amendmend_request_id: [
                ""
            ],
            amendAmount: [
                ""
            ],
            amendLGenddate: [
                ""
            ],
            amendWriteup: [
                ""
            ],
            confiscate_request_id: [
                ""
            ],
            confiscatebankName: [
                ""
            ],
            confiscateIBAN: [
                ""
            ],
            confiscateReason: [
                ""
            ],
            partialConfiscation: [
                false
            ],
            confiscateAmount: [
                ""
            ],
            release_request_id: [
                ""
            ],
            releaseReason: [
                ""
            ],
            partialRelease: [
                false
            ],
            releaseAmount: [
                ""
            ]
        });
        //console.log("this.commonService.lgIssuanceApproval::::"+JSON.stringify(this.commonService.lgIssuanceApproval));
        if (this.commonService.lgIssuanceApproval.lg_no != null || this.commonService.lgIssuanceApproval.lg_no != undefined) {
            this.submitLGIssuanceApproval.controls["LGNumber"].setValue(this.commonService.lgIssuanceApproval.lg_no);
        }
        if (this.commonService.lgIssuanceApproval.LGType != null || this.commonService.lgIssuanceApproval.LGType != undefined) {
            this.submitLGIssuanceApproval.controls["LGType"].setValue(this.commonService.lgIssuanceApproval.LGType);
        }
        if (this.commonService.lgIssuanceApproval.status != null || this.commonService.lgIssuanceApproval.status != undefined) {
            this.submitLGIssuanceApproval.controls["activeStatus"].setValue(this.commonService.lgIssuanceApproval.status);
        }
        if (this.commonService.lgIssuanceApproval.requestId != null || this.commonService.lgIssuanceApproval.requestId != undefined) {
            this.submitLGIssuanceApproval.controls["requestId"].setValue(this.commonService.lgIssuanceApproval.requestId);
        }
        if (this.commonService.lgIssuanceApproval.writeUpType != null || this.commonService.lgIssuanceApproval.writeUpType != undefined) {
            this.submitLGIssuanceApproval.controls["writeUpType"].setValue(this.commonService.lgIssuanceApproval.writeUpType);
        }
        // if (this.commonService.lgIssuanceApproval.bankName != null || this.commonService.lgIssuanceApproval.bankName != undefined) {
        //   this.submitLGIssuanceApproval.controls["bankName"].setValue(this.commonService.lgIssuanceApproval.bankName);
        // }
        if (this.commonService.lgIssuanceApproval.LGStartDate != null || this.commonService.lgIssuanceApproval.LGStartDate != undefined) {
            this.submitLGIssuanceApproval.controls["LGStartDate"].setValue(this.commonService.lgIssuanceApproval.LGStartDate);
        }
        if (this.commonService.lgIssuanceApproval.LGEndDate != null || this.commonService.lgIssuanceApproval.LGEndDate != undefined) {
            this.submitLGIssuanceApproval.controls["LGEndDate"].setValue(this.commonService.lgIssuanceApproval.LGEndDate);
        }
        if (this.commonService.lgIssuanceApproval.Amount != null || this.commonService.lgIssuanceApproval.Amount != undefined) {
            this.submitLGIssuanceApproval.controls["Amount"].setValue(this.commonService.lgIssuanceApproval.Amount);
        }
        if (this.commonService.lgIssuanceApproval.currency != null || this.commonService.lgIssuanceApproval.currency != undefined) {
            this.submitLGIssuanceApproval.controls["currency"].setValue(this.commonService.lgIssuanceApproval.currency);
        }
        if (this.commonService.lgIssuanceApproval.amountInNumber != null || this.commonService.lgIssuanceApproval.amountInNumber != undefined) {
            this.submitLGIssuanceApproval.controls["amountInText"].setValue(this.commonService.lgIssuanceApproval.amountInNumber);
        }
        if (this.commonService.lgIssuanceApproval.ZakatPeriodStartDate != null || this.commonService.lgIssuanceApproval.ZakatPeriodStartDate != undefined) {
            this.submitLGIssuanceApproval.controls["zakatStartDate"].setValue(this.commonService.lgIssuanceApproval.ZakatPeriodStartDate);
        }
        if (this.commonService.lgIssuanceApproval.ZakatPeriodEndDate != null || this.commonService.lgIssuanceApproval.ZakatPeriodEndDate != undefined) {
            this.submitLGIssuanceApproval.controls["zakatEndDate"].setValue(this.commonService.lgIssuanceApproval.ZakatPeriodEndDate);
        }
        if (this.commonService.lgIssuanceApproval.projectName != null || this.commonService.lgIssuanceApproval.projectName != undefined) {
            this.submitLGIssuanceApproval.controls["projectName"].setValue(this.commonService.lgIssuanceApproval.projectName);
        }
        if (this.commonService.lgIssuanceApproval.projectNumber != null || this.commonService.lgIssuanceApproval.projectNumber != undefined) {
            this.submitLGIssuanceApproval.controls["projectId"].setValue(this.commonService.lgIssuanceApproval.projectNumber);
        }
        if (this.commonService.lgIssuanceApproval.puroseOfBond != null || this.commonService.lgIssuanceApproval.puroseOfBond != undefined) {
            this.submitLGIssuanceApproval.controls["purposeOfBond"].setValue(this.commonService.lgIssuanceApproval.puroseOfBond);
        }
        if (this.commonService.lgIssuanceApproval.bayanNuymber != null || this.commonService.lgIssuanceApproval.bayanNuymber != undefined) {
            this.submitLGIssuanceApproval.controls["byanNo"].setValue(this.commonService.lgIssuanceApproval.bayanNuymber);
        }
        if (this.commonService.lgIssuanceApproval.checkBox != null || this.commonService.lgIssuanceApproval.checkBox != undefined) {
            if (this.commonService.lgIssuanceApproval.checkBox === 'y') {
                this.checkBox = true;
                this.submitLGIssuanceApproval.controls["checkBox"].setValue(this.checkBox);
                this.isAllowToApprove = true;
            }
            else {
                this.checkBox = false;
                this.submitLGIssuanceApproval.controls["checkBox"].setValue(this.checkBox);
                this.isAllowToApprove = false;
            }
            this.submitLGIssuanceApproval.get('checkBox').disable();
        }
        if (this.commonService.lgIssuanceApproval.ac_of_contract != null || this.commonService.lgIssuanceApproval.ac_of_contract != undefined) {
            if (this.commonService.lgIssuanceApproval.ac_of_contract === 'y') {
                this.accountOfContractcheckBox = true;
                this.submitLGIssuanceApproval.controls["accountOfContractcheckBox"].setValue(this.accountOfContractcheckBox);
                //this.isAllowToApprove = true;
            }
            else {
                this.accountOfContractcheckBox = false;
                this.submitLGIssuanceApproval.controls["accountOfContractcheckBox"].setValue(this.accountOfContractcheckBox);
                //this.isAllowToApprove = false;
            }
            this.submitLGIssuanceApproval.get('checkBox').disable();
            this.submitLGIssuanceApproval.get('accountOfContractcheckBox').disable();
        }
        if (this.commonService.lgIssuanceApproval.termsNconditionsMessage != null && this.commonService.lgIssuanceApproval.termsNconditionsMessage != undefined) {
            this.submitLGIssuanceApproval.controls["TermsAndCondContent"].setValue(this.commonService.lgIssuanceApproval.termsNconditionsMessage);
        }
        if (this.commonService.lgIssuanceApproval.lg_validity_date != null && this.commonService.lgIssuanceApproval.lg_validity_date != undefined) {
            this.submitLGIssuanceApproval.controls["LGValidityDate"].setValue(this.commonService.lgIssuanceApproval.lg_validity_date);
        }
        this.submitLGIssuanceApproval.controls["Beneficiary_Name"].setValue(this.commonService.lgIssuanceApproval.beneficiary_name);
        this.submitLGIssuanceApproval.controls["Beneficiary_UID_or_CRN"].setValue(this.commonService.lgIssuanceApproval.beneficiary_UID);
        this.submitLGIssuanceApproval.controls["Represantitive_Name"].setValue(localStorage.getItem('crNoOrUidNo'));
        this.submitLGIssuanceApproval.controls["Represantitive_Mobile_number"].setValue(localStorage.getItem('crNoOrUidNo'));
        this.submitLGIssuanceApproval.controls["Represantitive_Email"].setValue(localStorage.getItem('crNoOrUidNo'));
        this.submitLGIssuanceApproval.controls["Represantitive_Address"].setValue(localStorage.getItem('crNoOrUidNo'));
        if (this.commonService.lgIssuanceApproval.Amendmend_request_id != null || this.commonService.lgIssuanceApproval.Amendmend_request_id != undefined) {
            this.submitLGIssuanceApproval.controls["Amendmend_request_id"].setValue(this.commonService.lgIssuanceApproval.Amendmend_request_id);
        }
        if (this.commonService.lgIssuanceApproval.amendment_amount != null || this.commonService.lgIssuanceApproval.amendment_amount != undefined) {
            this.submitLGIssuanceApproval.controls["amendAmount"].setValue(this.commonService.lgIssuanceApproval.amendment_amount);
        }
        if (this.commonService.lgIssuanceApproval.amendment_lg_end_date != null || this.commonService.lgIssuanceApproval.amendment_lg_end_date != undefined) {
            this.submitLGIssuanceApproval.controls["amendLGenddate"].setValue(this.commonService.lgIssuanceApproval.amendment_lg_end_date);
        }
        if (this.commonService.lgIssuanceApproval.amendment_writeup_mesg != null || this.commonService.lgIssuanceApproval.amendment_writeup_mesg != undefined) {
            this.submitLGIssuanceApproval.controls["amendWriteup"].setValue(this.commonService.lgIssuanceApproval.amendment_writeup_mesg);
        }
        if (this.commonService.lgIssuanceApproval.confiscate_request_id != null || this.commonService.lgIssuanceApproval.confiscate_request_id != undefined) {
            this.submitLGIssuanceApproval.controls["confiscate_request_id"].setValue(this.commonService.lgIssuanceApproval.confiscate_request_id);
        }
        if (this.commonService.lgIssuanceApproval.confiscate_bankName != null || this.commonService.lgIssuanceApproval.confiscate_bankName != undefined) {
            this.submitLGIssuanceApproval.controls["confiscatebankName"].setValue(this.commonService.lgIssuanceApproval.confiscate_bankName);
        }
        if (this.commonService.lgIssuanceApproval.confiscate_IBAN != null || this.commonService.lgIssuanceApproval.confiscate_IBAN != undefined) {
            this.submitLGIssuanceApproval.controls["confiscateIBAN"].setValue(this.commonService.lgIssuanceApproval.confiscate_IBAN);
        }
        if (this.commonService.lgIssuanceApproval.confiscate_reason != null || this.commonService.lgIssuanceApproval.confiscate_reason != undefined) {
            this.submitLGIssuanceApproval.controls["confiscateReason"].setValue(this.commonService.lgIssuanceApproval.confiscate_reason);
        }
        if (this.commonService.lgIssuanceApproval.partial_confiscation != null || this.commonService.lgIssuanceApproval.partial_confiscation != undefined) {
            if (this.commonService.lgIssuanceApproval.partial_confiscation === 'Y') {
                this.partialConfiscation = true;
                this.submitLGIssuanceApproval.controls["partialConfiscation"].setValue(this.partialConfiscation);
            }
            else {
                this.partialConfiscation = false;
                this.submitLGIssuanceApproval.controls["partialConfiscation"].setValue(this.partialConfiscation);
            }
            this.submitLGIssuanceApproval.get('partialConfiscation').disable();
        }
        if (this.commonService.lgIssuanceApproval.confiscate_amount != null || this.commonService.lgIssuanceApproval.confiscate_amount != undefined) {
            this.submitLGIssuanceApproval.controls["confiscateAmount"].setValue(this.commonService.lgIssuanceApproval.confiscate_amount);
        }
        if (this.commonService.lgIssuanceApproval.release_request_id != null || this.commonService.lgIssuanceApproval.release_request_id != undefined) {
            this.submitLGIssuanceApproval.controls["release_request_id"].setValue(this.commonService.lgIssuanceApproval.release_request_id);
        }
        if (this.commonService.lgIssuanceApproval.release_reason != null || this.commonService.lgIssuanceApproval.release_reason != undefined) {
            this.submitLGIssuanceApproval.controls["releaseReason"].setValue(this.commonService.lgIssuanceApproval.release_reason);
        }
        if (this.commonService.lgIssuanceApproval.partial_release != null || this.commonService.lgIssuanceApproval.partial_release != undefined) {
            if (this.commonService.lgIssuanceApproval.partial_release === 'Y') {
                this.partialRelease = true;
                this.submitLGIssuanceApproval.controls["partialRelease"].setValue(this.partialRelease);
            }
            else {
                this.partialRelease = false;
                this.submitLGIssuanceApproval.controls["partialRelease"].setValue(this.partialRelease);
            }
            this.submitLGIssuanceApproval.get('partialRelease').disable();
        }
        if (this.commonService.lgIssuanceApproval.release_amount != null || this.commonService.lgIssuanceApproval.release_amount != undefined) {
            this.submitLGIssuanceApproval.controls["releaseAmount"].setValue(this.commonService.lgIssuanceApproval.release_amount);
        }
    }
    rejectLGIssuanceApprovalData() {
        console.log("this.request_id::::" + this.request_id);
        this.commonService.CancellingLgRequestFromSupplier(this.request_id)
            .subscribe(res => {
            console.log("rejectLGIssuanceApprovalData response::::" + JSON.stringify(res));
            this.commonService.showGeneralMessage("Message", this.translate.instant('HOME.Successfully_rejected'), false);
        });
    }
    acceptLGIssuanceApprovalData() {
        console.log("this.request_id::::" + this.request_id);
        this.commonService.AcceptingLgRequestFromSupplier(this.request_id)
            .subscribe(res => {
            console.log("AcceptingLgRequestFromSupplier response::::" + JSON.stringify(res));
            this.commonService.showGeneralMessage("Message", this.translate.instant('HOME.request_has_been_successfully'), false);
        });
    }
    /* ************************************************************** */
    resetData() {
        this.isDisablesendBackButton = true;
        this.isDisabledApprovedButton = false;
        if (this.commonService.lgIssuanceApproval.termsNconditionsMessage != null || this.commonService.lgIssuanceApproval.termsNconditionsMessage != undefined) {
            this.submitLGIssuanceApproval.controls["TermsAndCondContent"].setValue(this.commonService.lgIssuanceApproval.termsNconditionsMessage);
            this.TermsAndCondContent = this.commonService.lgIssuanceApproval.termsNconditionsMessage;
        }
    }
    sendBackLGIssuanceApprovalData() {
        //if(this.isEditTnC === true){
        this.commonService.postChangeedTnCOfLgRequestBeneficiary(this.commonService.lgIssuanceApproval.requestId, this.submitLGIssuanceApproval.value.TermsAndCondContent)
            .subscribe(res => {
            console.log("LG approval Response is::::" + JSON.stringify(res));
            if (res.responseCode === 121) {
                //alert("responce code"+res.responseCode);
                this.alertMsgforPrivateLGApproval1 = res.responseMessage;
                this.commonService.showGeneralMessage("Message", this.translate.instant('HOME.successfully_sent_back'), false);
                //localStorage.setItem('responseCode', res.responseCode);
            }
        });
        // }
    }
    editLGIssuanceApprovalData() {
        this.isEditTnC = true;
        this.isDisablesendBackButton = false;
        this.isDisabledApprovedButton = true;
        if (this.commonService.lgIssuanceApproval.termsNconditionsMessage != null || this.commonService.lgIssuanceApproval.termsNconditionsMessage != undefined) {
            this.TermsAndCondContent = this.commonService.lgIssuanceApproval.termsNconditionsMessage;
            this.submitLGIssuanceApproval.controls["TermsAndCondContent"].setValue(this.commonService.lgIssuanceApproval.termsNconditionsMessage);
        }
        console.log("I'm in editLGIssuanceApprovalData::::" + this.isEditTnC);
    }
    submitLGIssuanceApprovalData() {
        if (this.isAllowToApprove === true) {
            console.log("submitLGIssuanceApprovalData");
            this.commonService.postTnCOfLgRequestBeneficiary(this.commonService.lgIssuanceApproval.requestId)
                .subscribe(res => {
                console.log("LG approval Response is::::" + JSON.stringify(res));
                if (res.responseCode === 120) {
                    this.alertMsgforPrivateLGApproval1 = res.responseMessage;
                    this.commonService.responseCode = res.responseCode;
                    this.commonService.showGeneralMessage("Message", this.translate.instant('HOME.successfully_approved'), false);
                    //localStorage.setItem('responseCode', res.responseCode);
                }
            });
        }
    }
    styleObject() {
        if (this.isEditTnC) {
            return { background: '#fff', border: '1px solid #c3c3c3' };
        }
        else {
            return { background: '#efefef', border: '1px solid #c3c3c3' };
        }
    }
    updateTnC() {
        this.isEditTnC = false;
    }
    /* This is Extarnal Amendment Reject */
    rejectAmendApprovalData() {
        console.log("rejectAmendApprovalData this.Amendmend_request_id::::" + this.commonService.lgIssuanceApproval.Amendmend_request_id);
        const dialogConfig = new _angular_material__WEBPACK_IMPORTED_MODULE_6__["MatDialogConfig"]();
        dialogConfig.disableClose = true;
        dialogConfig.autoFocus = true;
        dialogConfig.panelClass = 'custom-modalbox';
        dialogConfig.data = {
            description: 'description',
            modelData: { callerModule: 'ACRconfirm', entity_type: 'PRIVATE', headerTitle: this.translate.instant('HOME.warning'), bodyLabel: this.translate.instant('Are you sure to reject this amendment!') }
        };
        this.dialogRef = this.dialog.open(_general_modal_general_modal_component__WEBPACK_IMPORTED_MODULE_7__["GeneralModalComponent"], dialogConfig);
        this.dialogRef.afterClosed().subscribe(result => {
            console.log("New result : " + result);
            if (result != null && result != undefined) {
                if (result == 'Ok') {
                    console.log('Clicked on OK');
                    if (this.crNoOrUidNo == this.commonService.lgIssuanceApproval.supplier_entity_id) {
                        var message = 'AMENDMENT-REJECTED-SUPP';
                    }
                    if (this.crNoOrUidNo == this.commonService.lgIssuanceApproval.beneficiary_entity_id) {
                        var message = 'AMENDMENT-REJECTED';
                    }
                    this.commonService.updateLGAmendmentForApproveOrReject(this.commonService.lgIssuanceApproval.Amendmend_request_id, this.commonService.lgIssuanceApproval.pendingtype, message)
                        .subscribe(res => {
                        console.log("rejectAmendApprovalData response::::" + JSON.stringify(res));
                        this.commonService.showGeneralMessage("Message", res.responseMessage, false);
                        this.alertMsgforPrivateLGApproval1 = res.responseMessage;
                        this.isAmendApprove = false;
                    });
                }
            }
        });
    }
    /* This is Extarnal Amendment Approval */
    acceptAmendApprovalData() {
        console.log("acceptAmendApprovalData this.Amendmend_request_id::::" + this.commonService.lgIssuanceApproval.Amendmend_request_id);
        const dialogConfig = new _angular_material__WEBPACK_IMPORTED_MODULE_6__["MatDialogConfig"]();
        dialogConfig.disableClose = true;
        dialogConfig.autoFocus = true;
        dialogConfig.panelClass = 'custom-modalbox';
        dialogConfig.data = {
            description: 'description',
            modelData: { callerModule: 'ACRconfirm', entity_type: 'PRIVATE', headerTitle: this.translate.instant('HOME.warning'), bodyLabel: this.translate.instant('Are you sure to approve this amendment!') }
        };
        this.dialogRef = this.dialog.open(_general_modal_general_modal_component__WEBPACK_IMPORTED_MODULE_7__["GeneralModalComponent"], dialogConfig);
        this.dialogRef.afterClosed().subscribe(result => {
            console.log("New result : " + result);
            if (result != null && result != undefined) {
                if (result == 'Ok') {
                    console.log('Clicked on OK');
                    if (this.crNoOrUidNo == this.commonService.lgIssuanceApproval.supplier_entity_id) {
                        var message = 'AMENDMENT-PENDING-BANK';
                    }
                    if (this.crNoOrUidNo == this.commonService.lgIssuanceApproval.beneficiary_entity_id) {
                        var message = 'AMENDMENT-PENDING-BANK';
                    }
                    this.commonService.updateLGAmendmentForApproveOrReject(this.commonService.lgIssuanceApproval.Amendmend_request_id, this.commonService.lgIssuanceApproval.pendingtype, message)
                        .subscribe(res => {
                        console.log("acceptAmendApprovalData response::::" + JSON.stringify(res));
                        this.commonService.showGeneralMessage("Message", res.responseMessage, false);
                        this.alertMsgforPrivateLGApproval1 = res.responseMessage;
                        this.isAmendApprove = false;
                    });
                }
            }
        });
    }
    cancelACRApproval() {
        this.router.navigate(['privatependingtasks']);
    }
    /* This is Internal reject */
    rejectInternalApproval() {
        console.log("rejectAmendApprovalData this.Amendmend_request_id::::" + this.commonService.lgIssuanceApproval.Amendmend_request_id);
        if (this.commonService.lgIssuanceApproval.pendingtype == 'issuance_review') {
            var confirm_msg = 'This issuance request will be rejected for further reassessment. Continue?';
        }
        if (this.commonService.lgIssuanceApproval.pendingtype == 'issuance_approve') {
            var confirm_msg = 'This issuance request will be rejected for further reassessment. Continue?';
        }
        if (this.commonService.lgIssuanceApproval.pendingtype == 'amendment_review') {
            var confirm_msg = 'This amendment request will be rejected for further reassessment. Continue?';
        }
        if (this.commonService.lgIssuanceApproval.pendingtype == 'amendment_approve') {
            var confirm_msg = 'This amendment request will be rejected for further reassessment. Continue?';
        }
        if (this.commonService.lgIssuanceApproval.pendingtype == 'confiscate_review') {
            var confirm_msg = 'This confiscate request will be rejected for further reassessment. Continue?';
        }
        if (this.commonService.lgIssuanceApproval.pendingtype == 'confiscate_approve') {
            var confirm_msg = 'This confiscate request will be rejected for further reassessment. Continue?';
        }
        if (this.commonService.lgIssuanceApproval.pendingtype == 'release_review') {
            var confirm_msg = 'This release request will be rejected for further reassessment. Continue?';
        }
        if (this.commonService.lgIssuanceApproval.pendingtype == 'release_approve') {
            var confirm_msg = 'This release request will be rejected for further reassessment. Continue?';
        }
        const dialogConfig = new _angular_material__WEBPACK_IMPORTED_MODULE_6__["MatDialogConfig"]();
        dialogConfig.disableClose = true;
        dialogConfig.autoFocus = true;
        dialogConfig.panelClass = 'custom-modalbox';
        dialogConfig.data = {
            description: 'description',
            modelData: { callerModule: 'ACRconfirm', entity_type: 'PRIVATE', headerTitle: this.translate.instant('HOME.warning'), bodyLabel: this.translate.instant(confirm_msg) }
        };
        this.dialogRef = this.dialog.open(_general_modal_general_modal_component__WEBPACK_IMPORTED_MODULE_7__["GeneralModalComponent"], dialogConfig);
        this.dialogRef.afterClosed().subscribe(result => {
            console.log("New result : " + result);
            if (result != null && result != undefined) {
                if (result == 'Ok') {
                    console.log('Clicked on OK');
                    if (this.commonService.lgIssuanceApproval.pendingtype == 'issuance_review') {
                        var requestId = this.commonService.lgIssuanceApproval.requestId;
                        var activity = 'Issuance';
                        var message = 'Rejected';
                    }
                    if (this.commonService.lgIssuanceApproval.pendingtype == 'issuance_approve') {
                        var requestId = this.commonService.lgIssuanceApproval.requestId;
                        var activity = 'Issuance';
                        var message = 'Rejected';
                    }
                    if (this.commonService.lgIssuanceApproval.pendingtype == 'amendment_review') {
                        var requestId = this.commonService.lgIssuanceApproval.Amendmend_request_id;
                        var activity = 'Amendment';
                        var message = 'Rejected';
                    }
                    if (this.commonService.lgIssuanceApproval.pendingtype == 'amendment_approve') {
                        var requestId = this.commonService.lgIssuanceApproval.Amendmend_request_id;
                        var activity = 'Amendment';
                        var message = 'Rejected';
                    }
                    if (this.commonService.lgIssuanceApproval.pendingtype == 'confiscate_review') {
                        var requestId = this.commonService.lgIssuanceApproval.confiscate_request_id;
                        var activity = 'Confiscate';
                        var message = 'Rejected';
                    }
                    if (this.commonService.lgIssuanceApproval.pendingtype == 'confiscate_approve') {
                        var requestId = this.commonService.lgIssuanceApproval.confiscate_request_id;
                        var activity = 'Confiscate';
                        var message = 'Rejected';
                    }
                    if (this.commonService.lgIssuanceApproval.pendingtype == 'release_review') {
                        var requestId = this.commonService.lgIssuanceApproval.release_request_id;
                        var activity = 'Release';
                        var message = 'Rejected';
                    }
                    if (this.commonService.lgIssuanceApproval.pendingtype == 'release_approve') {
                        var requestId = this.commonService.lgIssuanceApproval.release_request_id;
                        var activity = 'Release';
                        var message = 'Rejected';
                    }
                    var step = this.commonService.lgIssuanceApproval.workflow_step;
                    this.commonService.updateInternalWorkflowApproveOrReject(this.loginId, requestId, step, message, activity)
                        .subscribe(res => {
                        console.log("InternalApproveOrReject response::::" + JSON.stringify(res));
                        this.commonService.showGeneralMessage("Message", res.responseMessage, false);
                        this.alertMsgforPrivateLGApproval1 = res.responseMessage;
                        this.isInternalPending = false;
                    });
                }
            }
        });
    }
    /* This is Internal Approval */
    acceptInternalApproval() {
        console.log("acceptInternalApproval ::::" + this.commonService.lgIssuanceApproval.pendingtype);
        if (this.commonService.lgIssuanceApproval.pendingtype == 'issuance_review') {
            var confirm_msg = 'This issuance request will be reviewed successfully. Continue?';
        }
        if (this.commonService.lgIssuanceApproval.pendingtype == 'issuance_approve') {
            var confirm_msg = 'This issuance request will be approved successfully. Continue?';
        }
        if (this.commonService.lgIssuanceApproval.pendingtype == 'amendment_review') {
            var confirm_msg = 'This amendment request will be reviewed successfully. Continue?';
        }
        if (this.commonService.lgIssuanceApproval.pendingtype == 'amendment_approve') {
            var confirm_msg = 'This amendment request will be approved successfully. Continue?';
        }
        if (this.commonService.lgIssuanceApproval.pendingtype == 'confiscate_review') {
            var confirm_msg = 'This confiscate request will be reviewed successfully. Continue?';
        }
        if (this.commonService.lgIssuanceApproval.pendingtype == 'confiscate_approve') {
            var confirm_msg = 'This confiscate request will be approved successfully. Continue?';
        }
        if (this.commonService.lgIssuanceApproval.pendingtype == 'release_review') {
            var confirm_msg = 'This release request will be reviewed successfully. Continue?';
        }
        if (this.commonService.lgIssuanceApproval.pendingtype == 'release_approve') {
            var confirm_msg = 'This release request will be approved successfully. Continue?';
        }
        const dialogConfig = new _angular_material__WEBPACK_IMPORTED_MODULE_6__["MatDialogConfig"]();
        dialogConfig.disableClose = true;
        dialogConfig.autoFocus = true;
        dialogConfig.panelClass = 'custom-modalbox';
        dialogConfig.data = {
            description: 'description',
            modelData: { callerModule: 'ACRconfirm', entity_type: 'PRIVATE', headerTitle: this.translate.instant('HOME.warning'), bodyLabel: this.translate.instant(confirm_msg) }
        };
        this.dialogRef = this.dialog.open(_general_modal_general_modal_component__WEBPACK_IMPORTED_MODULE_7__["GeneralModalComponent"], dialogConfig);
        this.dialogRef.afterClosed().subscribe(result => {
            console.log("New result : " + result);
            if (result != null && result != undefined) {
                if (result == 'Ok') {
                    console.log('Clicked on OK');
                    if (this.commonService.lgIssuanceApproval.pendingtype == 'issuance_review') {
                        var requestId = this.commonService.lgIssuanceApproval.requestId;
                        var activity = 'Issuance';
                        var message = 'Reviewed';
                    }
                    if (this.commonService.lgIssuanceApproval.pendingtype == 'issuance_approve') {
                        var requestId = this.commonService.lgIssuanceApproval.requestId;
                        var activity = 'Issuance';
                        var message = 'Approved';
                    }
                    if (this.commonService.lgIssuanceApproval.pendingtype == 'amendment_review') {
                        var requestId = this.commonService.lgIssuanceApproval.Amendmend_request_id;
                        var activity = 'Amendment';
                        var message = 'Reviewed';
                    }
                    if (this.commonService.lgIssuanceApproval.pendingtype == 'amendment_approve') {
                        var requestId = this.commonService.lgIssuanceApproval.Amendmend_request_id;
                        var activity = 'Amendment';
                        var message = 'Approved';
                    }
                    if (this.commonService.lgIssuanceApproval.pendingtype == 'confiscate_review') {
                        var requestId = this.commonService.lgIssuanceApproval.confiscate_request_id;
                        var activity = 'Confiscate';
                        var message = 'Reviewed';
                    }
                    if (this.commonService.lgIssuanceApproval.pendingtype == 'confiscate_approve') {
                        var requestId = this.commonService.lgIssuanceApproval.confiscate_request_id;
                        var activity = 'Confiscate';
                        var message = 'Approved';
                    }
                    if (this.commonService.lgIssuanceApproval.pendingtype == 'release_review') {
                        var requestId = this.commonService.lgIssuanceApproval.release_request_id;
                        var activity = 'Release';
                        var message = 'Reviewed';
                    }
                    if (this.commonService.lgIssuanceApproval.pendingtype == 'release_approve') {
                        var requestId = this.commonService.lgIssuanceApproval.release_request_id;
                        var activity = 'Release';
                        var message = 'Approved';
                    }
                    var step = this.commonService.lgIssuanceApproval.workflow_step;
                    this.commonService.updateInternalWorkflowApproveOrReject(this.loginId, requestId, step, message, activity)
                        .subscribe(res => {
                        console.log("InternalApproveOrReject response::::" + JSON.stringify(res));
                        this.commonService.showGeneralMessage("Message", res.responseMessage, false);
                        this.alertMsgforPrivateLGApproval1 = res.responseMessage;
                        this.isInternalPending = false;
                        if (res.responseCode === 999) {
                            if (activity == 'Issuance') {
                                this.commonService.isLGSubmitted = true;
                                this.router.navigate(['/requestLgIssuancePayment']);
                            }
                        }
                    });
                }
            }
        });
    }
    cancelInternalApproval() {
        this.router.navigate(['privatependingtasks']);
    }
};
RequestLgIssuanceApprovalComponent.ctorParameters = () => [
    { type: _ngx_translate_core__WEBPACK_IMPORTED_MODULE_5__["TranslateService"] },
    { type: _angular_router__WEBPACK_IMPORTED_MODULE_2__["Router"] },
    { type: _angular_forms__WEBPACK_IMPORTED_MODULE_3__["FormBuilder"] },
    { type: _services_common_service_service__WEBPACK_IMPORTED_MODULE_4__["CommonService"] },
    { type: _angular_material__WEBPACK_IMPORTED_MODULE_6__["MatDialog"] }
];
RequestLgIssuanceApprovalComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-request-lg-issuance-approval',
        template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! raw-loader!./request-lg-issuance-approval.component.html */ "./node_modules/raw-loader/dist/cjs.js!./src/app/request-lg-issuance-approval/request-lg-issuance-approval.component.html")).default,
        styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! ./request-lg-issuance-approval.component.css */ "./src/app/request-lg-issuance-approval/request-lg-issuance-approval.component.css")).default]
    }),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_ngx_translate_core__WEBPACK_IMPORTED_MODULE_5__["TranslateService"], _angular_router__WEBPACK_IMPORTED_MODULE_2__["Router"], _angular_forms__WEBPACK_IMPORTED_MODULE_3__["FormBuilder"], _services_common_service_service__WEBPACK_IMPORTED_MODULE_4__["CommonService"], _angular_material__WEBPACK_IMPORTED_MODULE_6__["MatDialog"]])
], RequestLgIssuanceApprovalComponent);



/***/ }),

/***/ "./src/app/request-lg-issuance-gov-approval/request-lg-issuance-gov-approval.component.css":
/*!*************************************************************************************************!*\
  !*** ./src/app/request-lg-issuance-gov-approval/request-lg-issuance-gov-approval.component.css ***!
  \*************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3JlcXVlc3QtbGctaXNzdWFuY2UtZ292LWFwcHJvdmFsL3JlcXVlc3QtbGctaXNzdWFuY2UtZ292LWFwcHJvdmFsLmNvbXBvbmVudC5jc3MifQ== */");

/***/ }),

/***/ "./src/app/request-lg-issuance-gov-approval/request-lg-issuance-gov-approval.component.ts":
/*!************************************************************************************************!*\
  !*** ./src/app/request-lg-issuance-gov-approval/request-lg-issuance-gov-approval.component.ts ***!
  \************************************************************************************************/
/*! exports provided: RequestLgIssuanceGovApprovalComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RequestLgIssuanceGovApprovalComponent", function() { return RequestLgIssuanceGovApprovalComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm2015/router.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm2015/forms.js");
/* harmony import */ var _services_common_service_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../services/common-service.service */ "./src/app/services/common-service.service.ts");
/* harmony import */ var _ngx_translate_core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @ngx-translate/core */ "./node_modules/@ngx-translate/core/fesm2015/ngx-translate-core.js");






let RequestLgIssuanceGovApprovalComponent = class RequestLgIssuanceGovApprovalComponent {
    // isEnablePrivateLGApprovalbuttons: string;
    // isEnablePrivateApproval: boolean = false;
    constructor(translate, router, formBuilder, commonService) {
        this.translate = translate;
        this.router = router;
        this.formBuilder = formBuilder;
        this.commonService = commonService;
        this.isDisableApprove = true;
        this.tncCheckbox = false;
        this.isEditTnC = false;
        this.TermsAndCondContent = "Lorem Ipsum is simply dummy text of the printing and typesetting industry.";
        this.defaultTermsAndCondContent = "Lorem Ipsum is simply dummy text of the printing and typesetting industry.";
        this.isEnableButtons = false;
        this.isDisablesendBackButton = true;
        this.isDisabledApprovedButton = false;
        this.isAllowToApprove = false;
        this.checkBox = false;
        this.roleId = localStorage.getItem('roleId');
        console.log("this.roleId::::" + this.roleId);
        this.loginId = localStorage.getItem('userId');
        console.log("this.loginId::::" + this.loginId);
        this.commonService.checkSessionExpired(this.loginId)
            .then((data) => {
            if (data == 0) {
                this.commonService.showGeneralMessage(this.translate.instant('HOME.Session_Expired'), this.translate.instant('HOME.logged_out'), false);
                this.commonService.logout(this.loginId);
                return;
            }
            else {
            }
        });
        console.log("this.commonService.lgIssuanceApproval*****" + JSON.stringify(this.commonService.lgIssuanceApproval));
        // if(this.commonService.lgIssuanceApproval !== undefined || this.commonService.lgIssuanceApproval !== null){
        //   if(this.commonService.lgIssuanceApproval.request_id !== undefined || this.commonService.lgIssuanceApproval.request_id !== null){
        //     this.request_id = this.commonService.lgIssuanceApproval.request_id;
        //   }
        //   console.log("this.commonService.lgIssuanceApproval.create_by::::"+this.commonService.lgIssuanceApproval.create_by);
        // }
        if (this.roleId !== null || this.roleId !== undefined) {
            // if(this.loginId != this.commonService.lgIssuanceApproval.create_by){
            if (this.loginId == this.commonService.lgIssuanceApproval.beneficiaryId) {
                //if(this.roleId == 2 ){
                //PENDING
                //if(this.commonService.lgIssuanceApproval.status != null || this.commonService.lgIssuanceApproval.status != undefined){
                if (this.commonService.lgIssuanceApproval.response_code == '120') {
                    this.isEnableButtons = false;
                    //this.alertMsgforGovLGApproval = "Your case request has been sent to bank. You will be notified once approved.";
                    this.alertMsgforGovLGApproval = "Your case request is waiting for your approval.";
                }
                // NS-CHANGE
                else if (this.commonService.lgIssuanceApproval.response_code == '121') {
                    this.isEnableButtons = true;
                    this.alertMsgforGovLGApproval = "Your case request has been modified by the Beneficiary. Please accept for further processing.";
                }
                //NS-PENDING
                else if (this.commonService.lgIssuanceApproval.response_code == '124') {
                    console.log("this.isEnableButtons for response_code == '124'::::" + this.isEnableButtons);
                    this.isEnableButtons = true;
                    this.alertMsgforGovLGApproval = "Your case request has been sent to Beneficiary. Please contact them for approving the Request.";
                }
                //NS-ACCEPT
                else if (this.commonService.lgIssuanceApproval.response_code == '122') {
                    this.isEnableButtons = false;
                    this.alertMsgforGovLGApproval = "Request Accepted By Supplier";
                }
                //CANCELLED
                else if (this.commonService.lgIssuanceApproval.response_code == '123') {
                    this.isEnableButtons = false;
                    this.alertMsgforGovLGApproval = "Cancelled by private entity";
                }
                //}
            }
        }
    }
    ngOnInit() {
        if (this.commonService.isLGSubmitted === false && this.commonService.IsLGPaid === false && this.commonService.isLGApproved === false) {
            this.router.navigate(['/requestLgIssuance']);
        }
        if (this.commonService.isLGSubmitted === true && this.commonService.IsLGPaid === false && this.commonService.isLGApproved === false) {
            this.router.navigate(['/requestLgIssuancePayment']);
        }
        if (this.commonService.isLGSubmitted === true && this.commonService.IsLGPaid === true && this.commonService.isLGApproved === false) {
            this.router.navigate(['/requestLgIssuanceApproval']);
        }
        this.submitLGIssuanceApproval = this.formBuilder.group({
            LGType: [
                ""
            ],
            Amount: [
                ""
            ],
            currency: [
                ""
            ],
            LGStartDate: [
                ""
            ],
            LGEndDate: [
                ""
            ],
            checkBox: [
                false
            ],
            TermsAndCondContent: [
                ""
            ],
            activeStatus: [
                ""
            ],
            requestId: [
                ""
            ],
            LGNumber: [
                ""
            ],
            writeUpType: [
                ""
            ],
            amountInText: [
                ""
            ],
            LGValidityDate: [
                ""
            ],
            zakatStartDate: [
                ""
            ],
            zakatEndDate: [
                ""
            ],
            projectName: [
                ""
            ],
            projectId: [
                ""
            ],
            purposeOfBond: [
                ""
            ],
            byanNo: [
                ""
            ]
        });
        if (this.commonService.lgIssuanceApproval.LGType != null || this.commonService.lgIssuanceApproval.LGType != undefined) {
            this.submitLGIssuanceApproval.controls["LGType"].setValue(this.commonService.lgIssuanceApproval.LGType);
        }
        if (this.commonService.lgIssuanceApproval.status != null || this.commonService.lgIssuanceApproval.status != undefined) {
            this.submitLGIssuanceApproval.controls["activeStatus"].setValue(this.commonService.lgIssuanceApproval.status);
        }
        if (this.commonService.lgIssuanceApproval.requestId != null || this.commonService.lgIssuanceApproval.requestId != undefined) {
            this.submitLGIssuanceApproval.controls["requestId"].setValue(this.commonService.lgIssuanceApproval.requestId);
        }
        if (this.commonService.lgIssuanceApproval.writeUpType != null || this.commonService.lgIssuanceApproval.writeUpType != undefined) {
            this.submitLGIssuanceApproval.controls["writeUpType"].setValue(this.commonService.lgIssuanceApproval.writeUpType);
        }
        // if (this.commonService.lgIssuanceApproval.bankName != null || this.commonService.lgIssuanceApproval.bankName != undefined) {
        //   this.submitLGIssuanceApproval.controls["bankName"].setValue(this.commonService.lgIssuanceApproval.bankName);
        // }
        if (this.commonService.lgIssuanceApproval.LGStartDate != null || this.commonService.lgIssuanceApproval.LGStartDate != undefined) {
            this.submitLGIssuanceApproval.controls["LGStartDate"].setValue(this.commonService.lgIssuanceApproval.LGStartDate);
        }
        if (this.commonService.lgIssuanceApproval.LGEndDate != null || this.commonService.lgIssuanceApproval.LGEndDate != undefined) {
            this.submitLGIssuanceApproval.controls["LGEndDate"].setValue(this.commonService.lgIssuanceApproval.LGEndDate);
        }
        if (this.commonService.lgIssuanceApproval.Amount != null || this.commonService.lgIssuanceApproval.Amount != undefined) {
            this.submitLGIssuanceApproval.controls["Amount"].setValue(this.commonService.lgIssuanceApproval.Amount);
        }
        if (this.commonService.lgIssuanceApproval.currency != null || this.commonService.lgIssuanceApproval.currency != undefined) {
            this.submitLGIssuanceApproval.controls["currency"].setValue(this.commonService.lgIssuanceApproval.currency);
        }
        if (this.commonService.lgIssuanceApproval.amountInNumber != null || this.commonService.lgIssuanceApproval.amountInNumber != undefined) {
            this.submitLGIssuanceApproval.controls["amountInText"].setValue(this.commonService.lgIssuanceApproval.amountInNumber);
        }
        if (this.commonService.lgIssuanceApproval.ZakatPeriodStartDate != null || this.commonService.lgIssuanceApproval.ZakatPeriodStartDate != undefined) {
            this.submitLGIssuanceApproval.controls["zakatStartDate"].setValue(this.commonService.lgIssuanceApproval.ZakatPeriodStartDate);
        }
        if (this.commonService.lgIssuanceApproval.ZakatPeriodEndDate != null || this.commonService.lgIssuanceApproval.ZakatPeriodEndDate != undefined) {
            this.submitLGIssuanceApproval.controls["zakatEndDate"].setValue(this.commonService.lgIssuanceApproval.ZakatPeriodEndDate);
        }
        if (this.commonService.lgIssuanceApproval.projectName != null || this.commonService.lgIssuanceApproval.projectName != undefined) {
            this.submitLGIssuanceApproval.controls["projectName"].setValue(this.commonService.lgIssuanceApproval.projectName);
        }
        if (this.commonService.lgIssuanceApproval.projectNumber != null || this.commonService.lgIssuanceApproval.projectNumber != undefined) {
            this.submitLGIssuanceApproval.controls["projectId"].setValue(this.commonService.lgIssuanceApproval.projectNumber);
        }
        if (this.commonService.lgIssuanceApproval.puroseOfBond != null || this.commonService.lgIssuanceApproval.puroseOfBond != undefined) {
            this.submitLGIssuanceApproval.controls["purposeOfBond"].setValue(this.commonService.lgIssuanceApproval.puroseOfBond);
        }
        if (this.commonService.lgIssuanceApproval.bayanNuymber != null || this.commonService.lgIssuanceApproval.bayanNuymber != undefined) {
            this.submitLGIssuanceApproval.controls["byanNo"].setValue(this.commonService.lgIssuanceApproval.bayanNuymber);
        }
        if (this.commonService.lgIssuanceApproval.checkBox != null || this.commonService.lgIssuanceApproval.checkBox != undefined) {
            if (this.commonService.lgIssuanceApproval.checkBox === 'y') {
                this.checkBox = true;
                this.submitLGIssuanceApproval.controls["checkBox"].setValue(this.checkBox);
            }
            else {
                this.checkBox = false;
                this.submitLGIssuanceApproval.controls["checkBox"].setValue(this.checkBox);
            }
        }
        if (this.commonService.lgIssuanceApproval.termsNconditionsMessage != null || this.commonService.lgIssuanceApproval.termsNconditionsMessage != undefined) {
            this.submitLGIssuanceApproval.controls["TermsAndCondContent"].setValue(this.commonService.lgIssuanceApproval.termsNconditionsMessage);
        }
    }
    toggleVisibility(e) {
        console.log("this.theCheckbox::::" + e);
        if (e === false) {
            this.isDisableApprove = true;
            this.isAllowToApprove = false;
        }
        else {
            this.isDisableApprove = false;
            this.isAllowToApprove = true;
        }
    }
    editLGIssuanceApprovalData() {
        this.isEditTnC = true;
        this.isDisablesendBackButton = false;
        this.isDisabledApprovedButton = true;
        console.log("I'm in editLGIssuanceApprovalData::::" + this.isEditTnC);
    }
    sendBackLGIssuanceApprovalData() {
        if (this.isEditTnC === true) {
            this.commonService.postChangeedTnCOfLgRequestBeneficiary(this.commonService.lgIssuanceApproval.requestId, this.submitLGIssuanceApproval.value.TermsAndCondContent)
                .subscribe(res => {
                console.log("LG approval Response is::::" + JSON.stringify(res));
                if (res.responseCode === 121) {
                    alert("responce code" + res.responseCode);
                    this.alertMsgforGovLGApproval = res.responseMessage;
                    localStorage.setItem('responseCode', res.responseCode);
                    this.commonService.showGeneralMessage("", this.translate.instant('HOME.Successfully_sentback'), false);
                }
            });
        }
    }
    updateTnC() {
        this.isEditTnC = false;
    }
    submitLGIssuanceApprovalData() {
        if (this.isAllowToApprove === true) {
            this.commonService.postTnCOfLgRequestBeneficiary(this.commonService.lgIssuanceApproval.requestId)
                .subscribe(res => {
                console.log("LG approval Response is::::" + JSON.stringify(res));
                if (res.responseCode === 120) {
                    this.alertMsgforGovLGApproval = res.responseMessage;
                    this.commonService.responseCode = res.responseCode;
                    localStorage.setItem('responseCode', res.responseCode);
                    this.commonService.showGeneralMessage("", this.translate.instant('HOME.approved_successfully'), false);
                }
            });
        }
    }
    resetData() {
        this.isDisablesendBackButton = true;
        this.isDisabledApprovedButton = false;
        this.submitLGIssuanceApproval.controls["TermsAndCondContent"].setValue(this.defaultTermsAndCondContent);
    }
    rejectLGIssuanceApprovalData() {
    }
    acceptLGIssuanceApprovalData() {
    }
};
RequestLgIssuanceGovApprovalComponent.ctorParameters = () => [
    { type: _ngx_translate_core__WEBPACK_IMPORTED_MODULE_5__["TranslateService"] },
    { type: _angular_router__WEBPACK_IMPORTED_MODULE_2__["Router"] },
    { type: _angular_forms__WEBPACK_IMPORTED_MODULE_3__["FormBuilder"] },
    { type: _services_common_service_service__WEBPACK_IMPORTED_MODULE_4__["CommonService"] }
];
RequestLgIssuanceGovApprovalComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-request-lg-issuance-gov-approval',
        template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! raw-loader!./request-lg-issuance-gov-approval.component.html */ "./node_modules/raw-loader/dist/cjs.js!./src/app/request-lg-issuance-gov-approval/request-lg-issuance-gov-approval.component.html")).default,
        styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! ./request-lg-issuance-gov-approval.component.css */ "./src/app/request-lg-issuance-gov-approval/request-lg-issuance-gov-approval.component.css")).default]
    }),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_ngx_translate_core__WEBPACK_IMPORTED_MODULE_5__["TranslateService"], _angular_router__WEBPACK_IMPORTED_MODULE_2__["Router"], _angular_forms__WEBPACK_IMPORTED_MODULE_3__["FormBuilder"], _services_common_service_service__WEBPACK_IMPORTED_MODULE_4__["CommonService"]])
], RequestLgIssuanceGovApprovalComponent);



/***/ }),

/***/ "./src/app/request-lg-issuance-payment/request-lg-issuance-payment.component.css":
/*!***************************************************************************************!*\
  !*** ./src/app/request-lg-issuance-payment/request-lg-issuance-payment.component.css ***!
  \***************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3JlcXVlc3QtbGctaXNzdWFuY2UtcGF5bWVudC9yZXF1ZXN0LWxnLWlzc3VhbmNlLXBheW1lbnQuY29tcG9uZW50LmNzcyJ9 */");

/***/ }),

/***/ "./src/app/request-lg-issuance-payment/request-lg-issuance-payment.component.ts":
/*!**************************************************************************************!*\
  !*** ./src/app/request-lg-issuance-payment/request-lg-issuance-payment.component.ts ***!
  \**************************************************************************************/
/*! exports provided: RequestLgIssuancePaymentComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RequestLgIssuancePaymentComponent", function() { return RequestLgIssuancePaymentComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm2015/router.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm2015/forms.js");
/* harmony import */ var _services_common_service_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../services/common-service.service */ "./src/app/services/common-service.service.ts");
/* harmony import */ var _ngx_translate_core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @ngx-translate/core */ "./node_modules/@ngx-translate/core/fesm2015/ngx-translate-core.js");






let RequestLgIssuancePaymentComponent = class RequestLgIssuancePaymentComponent {
    constructor(translate, router, formBuilder, commonService) {
        this.translate = translate;
        this.router = router;
        this.formBuilder = formBuilder;
        this.commonService = commonService;
        this.tncPaymentCheckbox = false;
        this.isDesableSendButton = true;
        this.isOpenValidationAlert = false;
    }
    ngOnInit() {
        this.userId = localStorage.getItem('userId');
        console.log("this.userId::::" + this.userId);
        this.roleId = localStorage.getItem('roleId');
        console.log("this.roleId::::" + this.roleId);
        if (this.commonService.lgIssuanceApproval !== undefined || this.commonService.lgIssuanceApproval !== null) {
            if (this.commonService.lgIssuanceApproval.requestId !== undefined || this.commonService.lgIssuanceApproval.requestId !== null) {
                this.request_id = this.commonService.lgIssuanceApproval.requestId;
            }
            console.log("this  request ID::::" + this.request_id);
        }
        if (this.commonService.isLGSubmitted === false && this.commonService.IsLGPaid === false && this.commonService.isLGApproved === false) {
            this.router.navigate(['/requestLgIssuance']);
        }
        if (this.commonService.isLGSubmitted === true && this.commonService.IsLGPaid === false && this.commonService.isLGApproved === false) {
            this.router.navigate(['/requestLgIssuancePayment']);
        }
        this.commonService.checkSessionExpired(this.userId)
            .then((data) => {
            //alert("checkSessionExpired 1234567890: "+data);
            if (data == 0) {
                this.commonService.showGeneralMessage(this.translate.instant('HOME.Session_Expired'), this.translate.instant('HOME.logged_out'), false);
                this.commonService.logout(this.userId);
                return;
            }
            else {
            }
        });
        this.submitLGPayment = this.formBuilder.group({
            bankName: [
                ""
            ],
            Account: [
                ""
            ],
            TermsAndCondPayment: ["", [_angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].required]]
        });
    }
    toggleVisibility(e) {
        if (e === true) {
            this.isDesableSendButton = false;
        }
        else {
            this.isDesableSendButton = true;
        }
    }
    submitLGIssuancePaymentData() {
        if (this.submitLGPayment.valid) {
            console.log("Submitted payment data::::" + JSON.stringify(this.submitLGPayment.value));
            /* this.commonService.showGeneralModal({
              callerModule: 'LOADER',
              headerTitle: this.translate.instant('HOME.Loading'),
              bodyLabel: this.translate.instant('HOME.Please_wait'),
              checkSession: false,
              imgName: 'loader.gif'
            }); */
            this.commonService.updateLgRequestAfterPayment(this.request_id)
                .subscribe(res => {
                this.commonService.showGeneralMessage("Message", res.responseMessage, false);
                this.router.navigate(['privateLgManagement']);
            });
            /* setTimeout(() => {
      
              this.commonService.hideGeneralModal();
              this.commonService.showGeneralModal({
                callerModule: 'SUBMIT_REDIRECT',
                headerTitle: this.translate.instant('HOME.Success'),
                bodyLabel: '',
                description: this.translate.instant('HOME.Payment_received_successfully'),
                hint: this.translate.instant('HOME.taken_to_next_page') + '',
                checkSession: true,
                redirectURL: '/requestLgIssuanceApproval'
              });
      
            }, 3000); */
            this.commonService.IsLGPaid = true;
        }
        else {
            this.isOpenValidationAlert = true;
        }
    }
    closeAlert() {
        this.isOpenValidationAlert = false;
    }
};
RequestLgIssuancePaymentComponent.ctorParameters = () => [
    { type: _ngx_translate_core__WEBPACK_IMPORTED_MODULE_5__["TranslateService"] },
    { type: _angular_router__WEBPACK_IMPORTED_MODULE_2__["Router"] },
    { type: _angular_forms__WEBPACK_IMPORTED_MODULE_3__["FormBuilder"] },
    { type: _services_common_service_service__WEBPACK_IMPORTED_MODULE_4__["CommonService"] }
];
RequestLgIssuancePaymentComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-request-lg-issuance-payment',
        template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! raw-loader!./request-lg-issuance-payment.component.html */ "./node_modules/raw-loader/dist/cjs.js!./src/app/request-lg-issuance-payment/request-lg-issuance-payment.component.html")).default,
        styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! ./request-lg-issuance-payment.component.css */ "./src/app/request-lg-issuance-payment/request-lg-issuance-payment.component.css")).default]
    }),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_ngx_translate_core__WEBPACK_IMPORTED_MODULE_5__["TranslateService"], _angular_router__WEBPACK_IMPORTED_MODULE_2__["Router"], _angular_forms__WEBPACK_IMPORTED_MODULE_3__["FormBuilder"], _services_common_service_service__WEBPACK_IMPORTED_MODULE_4__["CommonService"]])
], RequestLgIssuancePaymentComponent);



/***/ }),

/***/ "./src/app/request-lg-issuance/request-lg-issuance.component.css":
/*!***********************************************************************!*\
  !*** ./src/app/request-lg-issuance/request-lg-issuance.component.css ***!
  \***********************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3JlcXVlc3QtbGctaXNzdWFuY2UvcmVxdWVzdC1sZy1pc3N1YW5jZS5jb21wb25lbnQuY3NzIn0= */");

/***/ }),

/***/ "./src/app/request-lg-issuance/request-lg-issuance.component.ts":
/*!**********************************************************************!*\
  !*** ./src/app/request-lg-issuance/request-lg-issuance.component.ts ***!
  \**********************************************************************/
/*! exports provided: RequestLgIssuanceComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RequestLgIssuanceComponent", function() { return RequestLgIssuanceComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm2015/router.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm2015/forms.js");
/* harmony import */ var _services_common_service_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../services/common-service.service */ "./src/app/services/common-service.service.ts");
/* harmony import */ var _models_lgIssuance_model__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../models/lgIssuance.model */ "./src/app/models/lgIssuance.model.ts");
/* harmony import */ var primeng_api__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! primeng/api */ "./node_modules/primeng/fesm2015/primeng-api.js");
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/material */ "./node_modules/@angular/material/esm2015/material.js");
/* harmony import */ var _general_modal_general_modal_component__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../general-modal/general-modal.component */ "./src/app/general-modal/general-modal.component.ts");
/* harmony import */ var _ngx_translate_core__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @ngx-translate/core */ "./node_modules/@ngx-translate/core/fesm2015/ngx-translate-core.js");










let RequestLgIssuanceComponent = class RequestLgIssuanceComponent {
    constructor(translate, router, formBuilder, commonService, messageService, dialog) {
        this.translate = translate;
        this.router = router;
        this.formBuilder = formBuilder;
        this.commonService = commonService;
        this.messageService = messageService;
        this.dialog = dialog;
        this.msgs = [];
        this.lgTypeList = [];
        this.currencyList = [];
        this.bankNamesList = [];
        this.beneficiaryList = [];
        this.writeUpList = [];
        this.checkBox = false;
        this.privateEntityCheckBox = false;
        this.isChecked = 'n';
        this.isOpenValidationAlert = false;
        // SAMATermsAndCondContent: string;
        // NONSAMATermsAndCondContent: string;
        this.CRNumberList = [];
        this.crNumber = "";
        this.isEditTnC = false;
        //isEnableSelectEntity: boolean = true;
        this.isEnableCRNumber = true;
        this.noPattern = '^(0|[1-9][0-9]*)$';
        this.textPattern = "^[A-Za-z ]*$";
        this.alphanumericPattern = "^[a-zA-Z0-9 ]+$";
        this.amountPattern = "^[+]?([0-9]+(?:[\.][0-9]*)?|\.[0-9]+)$";
        //amountPattern = "^-\d+$";
        //amountPattern = "^\-?[1-9]\d{0,2}(\.\d*)?$";
        this.percentageOfContractValuePattern = "^[0-9][0-9]?$|^100$";
        this.assignmentOfContractcheckBox = false;
        this.selectedLGTypeName = "Bid Bond";
        this.isEnablebayanNuymber = false;
        this.isEnableZakatPeriodStartDate = false;
        this.isEnableZakatPeriodEndDate = false;
        this.entityName = "";
        //email: string = "abc@gmail.com";
        this.email = "";
        this.isEmail = false;
        this.isEntityName = false;
        this.isAssignmentOfContractChecked = 'n';
        this.bDataExistInDB = false;
        this.isEmailNotExist = false;
        this.bValidCRFromMCI = false;
        this.bValidCRFromMCINEmailExists = false;
        this.bValidCRFromMCINEmailNotExists = false;
        this.bDBCRDataAvailableName = false;
        this.bDBCRDataAvailableEmail = false;
        this.beneficiary_name = "";
        this.beneficiary_UID = "";
        this.bankIbanList = [];
        this.IBANList = [];
        this.ispriceLimitOk = true;
        this.lgIssueUpdate = false;
        this.validation_messages = {
            LGType: [
                { type: "required", message: "This is a required field." }
            ],
            writeUpType: [
                { type: "required", message: "This is a required field." }
            ],
            bankName: [
                { type: "required", message: "This is a required field." }
            ],
            IBAN: [
                { type: "required", message: "This is a required field." }
            ],
            beneficiaryId: [
                { type: "required", message: "This is a required field." }
            ],
            CR: [
                { type: "required", message: "This is a required field & self CRN not allowed." },
                {
                    type: "pattern",
                    message: "CRN number should be numeric."
                },
                /* {
                  type: "maxlength",
                  message: "CRN number should be 15 digits number."
                }, */
                {
                    type: "minlength",
                    message: "CRN number should be 15 digits number."
                }
            ],
            Amount: [
                { type: "required", message: "This is a required field." },
                {
                    type: "pattern",
                    message: "Amount should be composed of digits. It accepts only positive numbers."
                }
            ],
            amountInNumber: [
                { type: "required", message: "This is a required field." }
            ],
            currency: [
                { type: "required", message: "Required field." }
            ],
            LGStartDate: [
                { type: "required", message: "This is a required field." }
            ],
            LGEndDate: [
                { type: "required", message: "This is a required field." }
            ],
            projectName: [
                {
                    type: "pattern",
                    message: "Project Name should be composed of alphanumeric characters."
                }
            ],
            projectNumber: [
                {
                    type: "pattern",
                    message: "Project Number should be composed of alphanumeric characters."
                }
            ],
            ZakatPeriodStartDate: [
                { type: "required", message: "This is a required field." }
            ],
            ZakatPeriodEndDate: [
                { type: "required", message: "This is a required field." }
            ],
            puroseOfBond: [
                { type: "required", message: "This is a required field." },
                {
                    type: "maxlength",
                    message: "You can enter purose of bond of maximum 300 characters."
                }
            ],
            bayanNuymber: [
                { type: "required", message: "This is a required field." },
                {
                    type: "pattern",
                    message: "Bayan Number should be alphanumeric. Special characters not allowed."
                },
            ],
            percentageOfContractValue: [
                {
                    type: "pattern",
                    message: " Percentage of contract matches from 0 to 100."
                },
            ]
        };
    }
    ngOnInit() {
        this.userId = localStorage.getItem('userId');
        console.log("this.userId::::" + this.userId);
        this.roleId = localStorage.getItem('roleId');
        console.log("this.roleId::::" + this.roleId);
        console.log("this.selecteWriteUpTypeName::::" + this.writeUpType);
        this.loginId = localStorage.getItem('loginId');
        console.log("this.loginId::::" + this.loginId);
        this.crNoOrUidNo = localStorage.getItem('crNoOrUidNo');
        console.log("this.crNoOrUidNo::::" + this.crNoOrUidNo);
        this.acl = JSON.parse(localStorage.getItem('acl'));
        console.log("ACL ::::" + JSON.stringify(this.acl));
        console.log(this.acl.Issuance.workflow_id);
        console.log("currentWorkflowID >>" + localStorage.getItem('currentWorkflowID'));
        this.currentWorkflowID = localStorage.getItem('currentWorkflowID');
        //console.log("pendingtype >>"+this.commonService.lgIssuanceApproval.pendingtype);
        this.commonService.checkSessionExpired(this.userId)
            .then((data) => {
            //alert("checkSessionExpired 1234567890: "+data);
            if (data == 0) {
                this.commonService.showGeneralMessage(this.translate.instant('HOME.Session_Expired'), this.translate.instant('HOME.logged_out'), false);
                this.commonService.logout(this.userId);
                return;
            }
            else {
            }
        });
        // observable data get
        this.commonService.currentWFIDObservable.subscribe((WFID) => {
            if (WFID) {
                this.currentWorkflowID = WFID;
                console.log('observable data get @=================>', WFID);
                this.commonService.getBondTypeFromWorkFlow(WFID, this.userId)
                    .subscribe(res => {
                    console.log("FromWorkFlow LG list::::" + JSON.stringify(res));
                    this.lgTypeList = res;
                    console.log("FromWorkFlow lgTypeList list is::::" + JSON.stringify(this.lgTypeList));
                });
                this.commonService.getPriceLimitFromWorkFlow(WFID, this.userId)
                    .subscribe(res => {
                    console.log("priceLimit::::" + JSON.stringify(res));
                    this.priceLimit = res[0].price_limit;
                    console.log("priceLimit is::::" + JSON.stringify(this.priceLimit));
                });
                this.commonService.getBankIbanListFromWorkFlow(WFID, this.userId)
                    .subscribe(res => {
                    console.log("BankIbanList ::::" + JSON.stringify(res));
                    this.bankIbanList = res;
                    console.log("BankIbanList is::::" + JSON.stringify(this.bankIbanList));
                });
            }
        });
        let today = new Date();
        let month = today.getMonth();
        let year = today.getFullYear();
        this.minDate = new Date();
        this.minDate.setMonth(month);
        this.minDate.setFullYear(year);
        //console.log("this.startDate::::"+this.startDate);
        //To get Lg Type
        /* this.commonService.getLGTypeList()
          .subscribe(res => {
            console.log("LG list::::" + JSON.stringify(res));
            this.lgTypeList = res;
            console.log("lgTypeList list is::::" + JSON.stringify(this.lgTypeList));
    
    
          }); */
        /* this.commonService.getBondTypeFromWorkFlow(this.currentWorkflowID, this.userId)
        .subscribe(res => {
          console.log("FromWorkFlow LG list::::" + JSON.stringify(res));
          this.lgTypeList = res;
          console.log("FromWorkFlow lgTypeList list is::::" + JSON.stringify(this.lgTypeList));
        });
  
        this.commonService.getPriceLimitFromWorkFlow(this.currentWorkflowID, this.userId)
        .subscribe(res => {
          console.log("priceLimit::::" + JSON.stringify(res));
          this.priceLimit = res[0].price_limit;
          console.log("priceLimit is::::" + JSON.stringify(this.priceLimit));
        });
        
        this.commonService.getBankIbanListFromWorkFlow(this.currentWorkflowID, this.userId)
        .subscribe(res => {
          console.log("BankIbanList ::::" + JSON.stringify(res));
          this.bankIbanList = res;
          console.log("BankIbanList is::::" + JSON.stringify(this.bankIbanList));
        }); */
        //to get write-up type
        if (localStorage.getItem('update_issuance') == 'update_issuance') {
            this.commonService.getWriteUpList()
                .subscribe(res => {
                console.log("WriteUp list::::" + JSON.stringify(res));
                this.writeUpList = res;
                console.log("writeUp list is::::" + JSON.stringify(this.writeUpList));
                for (let w of this.writeUpList) {
                    if (w.writeuptype === 'SAMA') {
                        this.defaultTermsAndCondContent = w.termsConditionMessage;
                        break;
                    }
                }
                this.TermsAndCondContent = this.commonService.lgIssuanceApproval.termsNconditionsMessage;
            });
            this.selecteWriteUpTypeName = this.commonService.lgIssuanceApproval.writeUpType;
        }
        else {
            this.commonService.getWriteUpList()
                .subscribe(res => {
                console.log("WriteUp list::::" + JSON.stringify(res));
                this.writeUpList = res;
                console.log("writeUp list is::::" + JSON.stringify(this.writeUpList));
                for (let w of this.writeUpList) {
                    if (w.writeuptype === 'SAMA') {
                        this.TermsAndCondContent = w.termsConditionMessage;
                        this.defaultTermsAndCondContent = w.termsConditionMessage;
                        break;
                    }
                }
            });
            this.selecteWriteUpTypeName = 'SAMA';
        }
        //To get currency list
        this.commonService.getCurrencyList()
            .subscribe(res => {
            console.log("Currency list::::" + JSON.stringify(res));
            this.currencyList = res;
            console.log("Currency list is::::" + JSON.stringify(this.currencyList));
        });
        //To get IBAN
        /* this.commonService.getIBANList(this.userId)
          .subscribe(res => {
            console.log("IBAN list::::" + JSON.stringify(res));
            this.bankNamesList = res;
            console.log(this.bankNamesList);
    
    
          }); */
        //To get beneficiary
        this.commonService.getSelectGovermentEntityRegistered()
            .subscribe(res => {
            console.log("benificiary list::::" + JSON.stringify(res));
            this.beneficiaryList = res;
            console.log(this.beneficiaryList);
        });
        //get CRN
        this.commonService.getSelectedCRN(this.userId)
            .subscribe(res => {
            this.CRNumberList = res.userObject;
            for (let cr of this.CRNumberList) {
                console.log("CRN::::" + JSON.stringify(cr.crnNo));
                this.crNumber = cr.crnNo;
                break;
            }
            console.log(this.crNumber);
            //this.submitLG.controls["CR"].setValue(this.crNumber);
        });
        this.buildForm();
        this.setLGCategoryValidators();
        // if(){
        // }
        if (this.privateEntityCheckBox) {
            this.submitLG.get('beneficiaryId').disable();
            this.isEnableCRNumber = true;
            this.isEditTnC = true;
            console.log("in if");
            console.log("this.isEnableCRNumber" + this.isEnableCRNumber);
            console.log("this.isEditTnC" + this.isEditTnC);
        }
        else {
            this.submitLG.get('beneficiaryId').enable();
            this.isEnableCRNumber = false;
            this.isEditTnC = false;
            console.log("in else");
            console.log("this.isEnableCRNumber" + this.isEnableCRNumber);
            console.log("this.isEditTnC" + this.isEditTnC);
        }
        if (this.writeUpType === undefined) {
            return this.privateEntityCheckBox.valueOf() == true;
        }
    } /* end of ngOnInit() */
    buildForm() {
        this.submitLG = this.formBuilder.group({
            LGType: ["", [_angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].required]],
            writeUpType: [""],
            bankName: ["", [_angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].required]],
            IBAN: ["", [_angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].required]],
            beneficiaryId: [""],
            CR: [""],
            disableCR: [""],
            Amount: ["", [_angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].pattern(this.amountPattern)]],
            amountInNumber: ["", [_angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].required]],
            currency: ["", [_angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].required]],
            LGStartDate: [null, [_angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].required]],
            LGEndDate: [null, [_angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].required]],
            projectName: ["", [_angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].pattern(this.alphanumericPattern)]],
            projectNumber: ["", [_angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].pattern(this.alphanumericPattern)]],
            ZakatPeriodStartDate: [null],
            ZakatPeriodEndDate: [null],
            puroseOfBond: ["", [_angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].maxLength(300)]],
            bayanNuymber: ["", [_angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].pattern(this.alphanumericPattern)]],
            checkBox: ["", [_angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].required]],
            assignmentOfContractcheckBox: [""],
            TermsAndCondContent: [this.TermsAndCondContent],
            privateEntityCheckBox: [""],
            disabledBayanNuymber: [""],
            disabledZakatPeriodStartDate: [""],
            disabledZakatPeriodEndtDate: [""],
            percentageOfContractValue: ["", [_angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].pattern(this.percentageOfContractValuePattern)]],
            email: [""]
        });
        this.submitLG.get('IBAN').disable();
        if (localStorage.getItem('update_issuance') == 'update_issuance') {
            localStorage.removeItem('update_issuance');
            if (this.commonService.lgIssuanceApproval !== undefined || this.commonService.lgIssuanceApproval !== null) {
                console.log('ISSUANCE MODEL');
                console.log(JSON.stringify(this.commonService.lgIssuanceApproval));
                if (this.commonService.lgIssuanceApproval.pendingtype == 'issuance_Reject') {
                    this.lgIssueUpdate = true;
                    this.requestId = this.commonService.lgIssuanceApproval.requestId;
                    //this.writeUpType = this.commonService.lgIssuanceApproval.writeUpType;
                    //this.selecteWriteUpTypeName = this.commonService.lgIssuanceApproval.writeUpType;
                    if (this.commonService.lgIssuanceApproval.beneficiary_role == 1) {
                        this.privateEntityCheckBox = true;
                        var gov_beneficiary_name = '';
                        var private_beneficiary_CR = this.commonService.lgIssuanceApproval.beneficiary_entity_id;
                        this.checkSupplierCR(this.commonService.lgIssuanceApproval.beneficiary_entity_id);
                    }
                    else {
                        this.privateEntityCheckBox = false;
                        var gov_beneficiary_name = this.commonService.lgIssuanceApproval.beneficiary_name;
                        var private_beneficiary_CR = '';
                    }
                    this.commonService.getBankIbanListFromWorkFlow(this.commonService.lgIssuanceApproval.workflow_id, this.userId)
                        .subscribe(res => {
                        this.bankIbanList = res;
                        this.onClickBank(this.commonService.lgIssuanceApproval.bank_code);
                    });
                    var splitted_LGStartDate = this.commonService.lgIssuanceApproval.LGStartDate.split("-");
                    //console.log(splitted_LGStartDate);
                    var LGStartDate_implode = splitted_LGStartDate[2] + "-" + splitted_LGStartDate[1] + "-" + splitted_LGStartDate[0];
                    var newLGStartDate = new Date(LGStartDate_implode);
                    this.startDate = newLGStartDate;
                    var splitted_LGEndDate = this.commonService.lgIssuanceApproval.LGEndDate.split("-");
                    console.log(splitted_LGEndDate);
                    var LGEndDate_implode = splitted_LGEndDate[2] + "-" + splitted_LGEndDate[1] + "-" + splitted_LGEndDate[0];
                    var newLGEndDate = new Date(LGEndDate_implode);
                    this.endDate = newLGEndDate;
                    if (this.commonService.lgIssuanceApproval.ZakatPeriodStartDate != null) {
                        var splitted_ZakatStartDate = this.commonService.lgIssuanceApproval.ZakatPeriodStartDate.split("-");
                        //console.log(splitted_LGStartDate);
                        var ZakatStartDate_implode = splitted_ZakatStartDate[2] + "-" + splitted_ZakatStartDate[1] + "-" + splitted_ZakatStartDate[0];
                        var newZakatStartDate = new Date(ZakatStartDate_implode);
                        this.zakatStartDate = newZakatStartDate;
                    }
                    else {
                        var newZakatStartDate = new Date(this.commonService.lgIssuanceApproval.ZakatPeriodStartDate);
                        this.zakatStartDate = new Date();
                    }
                    if (this.commonService.lgIssuanceApproval.ZakatPeriodEndDate != null) {
                        var splitted_ZakatEndDate = this.commonService.lgIssuanceApproval.ZakatPeriodEndDate.split("-");
                        var ZakatEndDate_implode = splitted_ZakatEndDate[2] + "-" + splitted_ZakatEndDate[1] + "-" + splitted_ZakatEndDate[0];
                        var newZakatEndDate = new Date(ZakatEndDate_implode);
                        this.zakatEndDate = newZakatEndDate;
                    }
                    else {
                        var newZakatEndDate = new Date(this.commonService.lgIssuanceApproval.ZakatPeriodEndDate);
                        this.zakatEndDate = new Date();
                    }
                    // console.log(LGEndDate_implode)
                    if (this.commonService.lgIssuanceApproval.ac_of_contract == 'y') {
                        var ac_of_contract = true;
                        this.assignmentOfContractcheckBox = true;
                        this.isAssignmentOfContractChecked = 'y';
                    }
                    else {
                        this.isAssignmentOfContractChecked = 'n';
                    }
                    if (this.commonService.lgIssuanceApproval.checkBox == 'y') {
                        var ac_of_contract = true;
                        this.checkBox = true;
                        this.isChecked = 'y';
                    }
                    else {
                        this.isChecked = 'n';
                    }
                    this.submitLG.patchValue({
                        LGType: this.commonService.lgIssuanceApproval.LGType,
                        //writeUpType: this.writeUpType,
                        bankName: this.commonService.lgIssuanceApproval.bank_code,
                        IBAN: this.commonService.lgIssuanceApproval.iban_no,
                        beneficiaryId: gov_beneficiary_name,
                        CR: private_beneficiary_CR,
                        disableCR: '',
                        Amount: this.commonService.lgIssuanceApproval.Amount,
                        amountInNumber: this.commonService.lgIssuanceApproval.amountInNumber,
                        currency: this.commonService.lgIssuanceApproval.currency_code,
                        //currency: 'SAR',
                        //LGStartDate: new Date(old_lg_date),
                        LGStartDate: newLGStartDate,
                        LGEndDate: newLGEndDate,
                        projectName: this.commonService.lgIssuanceApproval.project_name,
                        projectNumber: this.commonService.lgIssuanceApproval.projectNumber,
                        ZakatPeriodStartDate: newZakatStartDate,
                        ZakatPeriodEndDate: newZakatEndDate,
                        puroseOfBond: this.commonService.lgIssuanceApproval.puroseOfBond,
                        bayanNuymber: this.commonService.lgIssuanceApproval.bayanNuymber,
                        checkBox: this.commonService.lgIssuanceApproval.checkBox,
                        assignmentOfContractcheckBox: ac_of_contract,
                        TermsAndCondContent: this.commonService.lgIssuanceApproval.termsNconditionsMessage,
                        privateEntityCheckBox: '',
                        disabledBayanNuymber: '',
                        disabledZakatPeriodStartDate: '',
                        disabledZakatPeriodEndtDate: '',
                        percentageOfContractValue: this.commonService.lgIssuanceApproval.percentage_of_value,
                        email: ''
                    });
                    if (this.commonService.lgIssuanceApproval.LGType === 'Custom Guarantee Bond') {
                        this.isEnablebayanNuymber = true;
                    }
                    else {
                        this.isEnablebayanNuymber = false;
                    }
                    if (this.commonService.lgIssuanceApproval.LGType === 'Zakat Guarantee Bond') {
                        this.isEnableZakatPeriodStartDate = true;
                        this.isEnableZakatPeriodEndDate = true;
                    }
                    else {
                        this.isEnableZakatPeriodStartDate = false;
                        this.isEnableZakatPeriodEndDate = false;
                    }
                    /* this.onClickBank('ALB');
                    if (event === '') {
                      this.submitLG.controls['IBAN'].setValue("Select IBAN");
                      this.submitLG.get('IBAN').disable();
                    }
                    else {
                      console.log('ALB Select');
                    } */
                    // this.submitLG.get('IBAN').enable();
                    /* for (let b of this.bankNamesList) {
                      if (b.tBankmaster.bankName === event) {
                        this.bankCode = b.tBankmaster.bankCode;
                        break;
                      }
                    } */
                    this.TermsAndCondContent = this.commonService.lgIssuanceApproval.termsNconditionsMessage;
                    //this.commonService.lgIssuanceApproval = new LGIssuanceModel();
                }
                else {
                }
            }
        }
    }
    setLGCategoryValidators() {
        const beneficiaryIdControl = this.submitLG.get('beneficiaryId');
        const CRControl = this.submitLG.get('CR');
        const ZakatPeriodStartDateControl = this.submitLG.get('ZakatPeriodStartDate');
        const ZakatPeriodEndDateControl = this.submitLG.get('ZakatPeriodEndDate');
        const bayanNuymberControl = this.submitLG.get('bayanNuymber');
        const emailControl = this.submitLG.get('email');
        this.submitLG.get('privateEntityCheckBox').valueChanges
            .subscribe(privateEntityCheckBoxValue => {
            if (privateEntityCheckBoxValue) {
                beneficiaryIdControl.setValidators(null);
                CRControl.setValidators([_angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].pattern(this.noPattern), _angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].minLength(15)]);
            }
            else {
                beneficiaryIdControl.setValidators([_angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].required]);
                CRControl.setValidators(null);
            }
            CRControl.updateValueAndValidity();
            beneficiaryIdControl.updateValueAndValidity();
        });
        this.submitLG.get('LGType').valueChanges
            .subscribe(LGType => {
            if (LGType === 'Zakat Guarantee Bond') {
                ZakatPeriodStartDateControl.setValidators([_angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].required]);
                ZakatPeriodEndDateControl.setValidators([_angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].required]);
            }
            else {
                ZakatPeriodStartDateControl.setValidators(null);
                ZakatPeriodEndDateControl.setValidators(null);
            }
            if (LGType === 'Custom Guarantee Bond') {
                bayanNuymberControl.setValidators([_angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].required]);
            }
            else {
                bayanNuymberControl.setValidators(null);
            }
            ZakatPeriodStartDateControl.updateValueAndValidity();
            ZakatPeriodEndDateControl.updateValueAndValidity();
            bayanNuymberControl.updateValueAndValidity();
        });
        // if (this.email === null || this.email === undefined || this.email !== "") {
        //   emailControl.setValidators([Validators.required]);
        //   emailControl.updateValueAndValidity();
        // }
    }
    getStartDate(startDate) {
        console.log("startDate::::" + startDate);
        //this.submitLG.controls['LGEndDate'].setValue(null);
        var d = new Date(startDate);
        var date = d.setDate(d.getDate() + 1);
        var month = d.getMonth(); // Since getMonth() returns month from 0-11 not 1-12
        var year = d.getFullYear();
        this.minDateforEndDate = new Date(d.setDate(d.getDate()));
        this.minDateforEndDate.setMonth(month);
        this.minDateforEndDate.setFullYear(year);
    }
    getZakatStartDate(zakatStartDate) {
        console.log("zakatStartDate::::" + zakatStartDate);
        this.submitLG.controls['ZakatPeriodEndDate'].setValue(null);
        var d = new Date(zakatStartDate);
        var date = d.setDate(d.getDate() + 1);
        var month = d.getMonth(); // Since getMonth() returns month from 0-11 not 1-12
        var year = d.getFullYear();
        this.minDateforzakatEndDate = new Date(d.setDate(d.getDate()));
        this.minDateforzakatEndDate.setMonth(month);
        this.minDateforzakatEndDate.setFullYear(year);
    }
    onClickLGType(event) {
        console.log("Selected lg type::::" + event);
        if (event === 'Custom Guarantee Bond') {
            this.isEnablebayanNuymber = true;
        }
        else {
            this.isEnablebayanNuymber = false;
        }
        if (event === 'Zakat Guarantee Bond') {
            this.isEnableZakatPeriodStartDate = true;
            this.isEnableZakatPeriodEndDate = true;
        }
        else {
            this.isEnableZakatPeriodStartDate = false;
            this.isEnableZakatPeriodEndDate = false;
        }
    }
    onClick(event) {
        console.log("selected write-up type::::" + event);
        console.log("*******" + this.privateEntityCheckBox);
        /* **** */
        this.submitLG.controls['beneficiaryId'].setValue("Select entity");
        this.submitLG.controls['CR'].setValue(null);
        this.submitLG.controls['TermsAndCondContent'].setValue(this.TermsAndCondContent);
        this.submitLG.get('privateEntityCheckBox').enable();
        this.privateEntityCheckBox = false;
        for (let w of this.writeUpList) {
            if (event === w.writeuptype) {
                this.TermsAndCondContent = w.termsConditionMessage;
                break;
            }
        }
        /* ****** */
        if (event === 'SAMA') {
            if (this.privateEntityCheckBox) {
                this.submitLG.get('beneficiaryId').disable();
                this.isEnableCRNumber = true;
                this.isEditTnC = true;
                console.log("in if");
                console.log("this.isEnableCRNumber" + this.isEnableCRNumber);
                console.log("this.isEditTnC" + this.isEditTnC);
            }
            else {
                this.submitLG.get('beneficiaryId').enable();
                this.isEnableCRNumber = false;
                this.isEditTnC = false;
                console.log("in else");
                console.log("this.isEnableCRNumber" + this.isEnableCRNumber);
                console.log("this.isEditTnC" + this.isEditTnC);
            }
        }
        else if (event === 'NONSAMA') {
            // this.selectedWriteupType = 'NONSAMA'
            this.submitLG.controls['privateEntityCheckBox'].setValue(true);
            this.submitLG.get('privateEntityCheckBox').disable();
            this.submitLG.get('beneficiaryId').disable();
            this.isEnableCRNumber = true;
            this.isEditTnC = true;
            console.log("privateEntityCheckBox:::::" + this.privateEntityCheckBox);
        }
    }
    onBlur(crn) {
        console.log("crn:::::" + crn);
        this.checkSupplierCR(crn);
    }
    checkSupplierCR(crn) {
        this.commonService.checkSupplierCR(crn)
            .subscribe(res => {
            console.log("Response for CRN is::::" + JSON.stringify(res));
            if (res.responseCode === 0) {
                this.commonService.showGeneralMessage("", res.responseMessage, false);
                //alert(res.responseMessage);
                this.submitLG.controls["CR"].setValue(null);
                this.beneficiary_name = '';
                this.beneficiary_UID = '';
            }
            else if (this.crNoOrUidNo === crn) {
                this.submitLG.controls["CR"].setValue(null);
                this.beneficiary_name = '';
                this.beneficiary_UID = '';
                //this.isEnableCRNumber = false;
            }
            else if (res.responseCode === 1) {
                if (res.isDataExistInDB === 'N') {
                    this.isDataExistInDB = 'N';
                    this.bDataExistInDB = false;
                    this.userObject = res.userObject;
                    if (res.userObject != null || res.userObject != undefined) {
                        console.log("I'm in if" + res.userObject.entity_name);
                        if (res.userObject.entity_name != null || res.userObject.entity_name != undefined || res.userObject.nin != null || res.userObject.nin != undefined) {
                            this.bValidCRFromMCI = true;
                        }
                        if (this.bValidCRFromMCI) {
                            console.log("I'm in if *****" + res.userObject.entity_name);
                            this.entityName = res.userObject.entity_name;
                            // this.isEntityName = true;
                            this.beneficiary_name = this.entityName;
                            this.beneficiary_UID = crn;
                        }
                        else {
                            this.entityName = "The Record is not available in MCI";
                        }
                        if ((res.userObject.email != null || res.userObject.email != undefined) && (this.bValidCRFromMCI)) {
                            this.bValidCRFromMCINEmailExists = true;
                        }
                        if (this.bValidCRFromMCINEmailExists) {
                            this.email = res.userObject.email;
                            //this.isEmail = true;
                            console.log("i'm in if");
                        }
                        else if (this.bValidCRFromMCI && (res.userObject.email == null || res.userObject.email == undefined)) {
                            this.bValidCRFromMCINEmailNotExists = true;
                            this.email = "Please enter your email";
                            //this.isEmail = false;
                        }
                    }
                    this.ninNumber = res.userObject.nin;
                }
                else {
                    this.isDataExistInDB = 'Y';
                    this.bDataExistInDB = true;
                    if (res.userObject != null || res.userObject != undefined) {
                        for (let r of res.userObject) {
                            console.log("I'm in else@@@" + r.supplierName);
                            if (r.supplierName != null || r.supplierName != undefined) {
                                console.log("I'm in else *****" + r.supplierName);
                                this.entityName = r.supplierName;
                                this.bDBCRDataAvailableName = true;
                                this.beneficiary_name = this.entityName;
                                this.beneficiary_UID = crn;
                                // this.isEntityName = true;
                            }
                            if (r.repEmail != null || r.repEmail != undefined) {
                                this.email = r.repEmail;
                                this.bDBCRDataAvailableEmail = true;
                                //this.isEmail = true;
                                //console.log("i'm in if");
                            }
                            this.ninNumber = r.repNationalId;
                            console.log("this.ninNumber Subhra: " + this.ninNumber);
                        }
                    }
                    //this.ninNumber = null;
                }
            }
            else if (res.responseCode === 2) {
                alert(res.responseMessage);
                this.submitLG.controls["CR"].setValue(null);
            }
        });
    }
    isCRNumberEnabled() {
        return this.privateEntityCheckBox.valueOf() == true;
    }
    onClickBenificiary(event) {
        // this.bDataExistInDB = true;
        //this.bValidCRFromMCI = true;
        console.log("Selected benificiary::::" + event);
        for (let b of this.beneficiaryList) {
            if (b[1] === event) {
                this.bId = b[0];
                this.beneficiary_name = b[1];
                this.beneficiary_UID = b[2];
                break;
            }
        }
    }
    onClickCurrency(event) {
        console.log("Selected Currency::::" + event);
        for (let c of this.currencyList) {
            if (c[0] === event) {
                this.currencyCode = c[0];
                console.log("Selected Currency::::" + this.currencyCode);
                break;
            }
        }
    }
    onClickBank(event) {
        console.log("Selected bank::::" + event);
        if (event === '') {
            this.submitLG.controls['IBAN'].setValue("Select IBAN");
            this.submitLG.get('IBAN').disable();
        }
        else {
            console.log('ALB Select');
            this.submitLG.get('IBAN').enable();
        }
        /* for (let b of this.bankNamesList) {
          if (b.tBankmaster.bankName === event) {
            this.bankCode = b.tBankmaster.bankCode;
            break;
          }
        } */
        this.iban_no = "";
        let dropDownData = this.bankIbanList.find((data) => data.bank_code === event);
        if (dropDownData) {
            console.log(dropDownData);
            this.IBANList = dropDownData.Iban_no;
        }
    }
    onKeyup(num) {
        console.log("Selected amount::::" + num);
        if (parseFloat(num) <= parseFloat(this.priceLimit)) {
            //console.log("true");
            this.ispriceLimitOk = true;
            var converter = __webpack_require__(/*! number-to-words */ "./node_modules/number-to-words/numberToWords.min.js");
            this.amountInWords = converter.toWords(num);
            console.log(this.amountInWords);
            this.submitLG.controls['amountInNumber'].setValue(this.amountInWords);
        }
        else {
            console.log("False");
            this.ispriceLimitOk = false;
            this.submitLG.controls['Amount'].setValue('');
            this.submitLG.controls['amountInNumber'].setValue('');
        }
    }
    toggleVisibility(e) {
        if (e.target.checked) {
            this.checkBox = true;
            this.isChecked = 'y';
        }
        else {
            this.checkBox = false;
            this.isChecked = 'n';
        }
        this.submitLG.controls['checkBox'].setValue(this.checkBox);
    }
    toggleVisibilityPrivateEntity(e) {
        var writeUpType = this.submitLG.get('writeUpType').value;
        console.log("writeUpType" + writeUpType);
        this.submitLG.controls['CR'].setValue(null);
        this.beneficiary_name = '';
        this.beneficiary_UID = '';
        if (writeUpType === 'SAMA' || writeUpType === undefined) {
            this.submitLG.controls['TermsAndCondContent'].setValue(this.defaultTermsAndCondContent);
        }
        else {
            this.submitLG.controls['TermsAndCondContent'].setValue(this.defaultTermsAndCondContent);
        }
        console.log("private entity::::" + e.target.checked);
        if (e.target.checked) {
            // document.getElementById('mciDataDiv').remove();
            this.entityName = "";
            this.email = "";
            this.privateEntityCheckBox = true;
            if (writeUpType === 'SAMA') {
                this.submitLG.controls['beneficiaryId'].setValue("Select entity");
                this.submitLG.get('beneficiaryId').disable();
                this.isEnableCRNumber = true;
                this.isEditTnC = true;
                console.log("in if when checkbox clicked");
                console.log("this.isEnableCRNumber" + this.isEnableCRNumber);
                console.log("this.isEditTnC" + this.isEditTnC);
            }
            if (writeUpType === undefined) {
                this.submitLG.controls['beneficiaryId'].setValue("Select entity");
                this.submitLG.get('beneficiaryId').disable();
                this.isEnableCRNumber = true;
                this.isEditTnC = true;
                console.log("in if when checkbox clicked");
                console.log("this.isEnableCRNumber" + this.isEnableCRNumber);
                console.log("this.isEditTnC" + this.isEditTnC);
            }
        }
        else {
            this.privateEntityCheckBox = false;
            if (writeUpType === 'SAMA') {
                this.submitLG.get('beneficiaryId').enable();
                this.isEnableCRNumber = false;
                this.isEditTnC = false;
                console.log("in if when checkbox clicked");
                console.log("this.isEnableCRNumber" + this.isEnableCRNumber);
                console.log("this.isEditTnC" + this.isEditTnC);
            }
            if (writeUpType === undefined) {
                this.submitLG.get('beneficiaryId').enable();
                this.isEnableCRNumber = false;
                this.isEditTnC = false;
                console.log("in if when checkbox clicked");
                console.log("this.isEnableCRNumber" + this.isEnableCRNumber);
                console.log("this.isEditTnC" + this.isEditTnC);
            }
        }
        this.submitLG.controls['privateEntityCheckBox'].setValue(this.privateEntityCheckBox);
    }
    updateTnC() {
        this.isEditTnC = false;
    }
    submitLGIssuance() {
        this.lgIssuance = new _models_lgIssuance_model__WEBPACK_IMPORTED_MODULE_5__["LGIssuanceModel"]();
        console.log("this.submitLG.value****" + JSON.stringify(this.submitLG.value));
        if (this.submitLG.valid) {
            this.commonService.showGeneralModal({
                callerModule: 'LOADER',
                headerTitle: this.translate.instant('HOME.Loading'),
                bodyLabel: this.translate.instant('HOME.Please_wait'),
                checkSession: false,
                imgName: 'loader.gif'
            });
            if (this.requestId === null || this.requestId === undefined || this.requestId === "") {
                this.lgIssuance.requestId = null;
            }
            else {
                this.lgIssuance.requestId = this.requestId;
            }
            if (this.submitLG.value.LGType === null || this.submitLG.value.LGType === undefined || this.submitLG.value.LGType === "") {
                this.lgIssuance.LGType = this.selectedLGTypeName;
            }
            else {
                this.lgIssuance.LGType = this.submitLG.value.LGType;
            }
            if (this.submitLG.value.writeUpType === null || this.submitLG.value.writeUpType === undefined || this.submitLG.value.writeUpType === "") {
                this.lgIssuance.writeUpType = this.selecteWriteUpTypeName;
            }
            else {
                this.lgIssuance.writeUpType = this.submitLG.value.writeUpType;
            }
            this.lgIssuance.bankCode = this.submitLG.value.bankName;
            this.lgIssuance.IBAN = this.submitLG.value.IBAN;
            this.lgIssuance.beneficiaryId = this.bId;
            this.lgIssuance.ninNumber = this.ninNumber;
            this.lgIssuance.CR = this.submitLG.value.CR;
            this.lgIssuance.Amount = this.submitLG.value.Amount;
            this.lgIssuance.amountInNumber = this.submitLG.value.amountInNumber;
            //this.lgIssuance.currency = this.currencyCode;
            this.lgIssuance.currency = this.submitLG.value.currency;
            this.lgIssuance.LGStartDate = this.startDate.toLocaleDateString('en-GB');
            this.lgIssuance.LGEndDate = this.endDate.toLocaleDateString('en-GB');
            if (this.submitLG.value.ZakatPeriodStartDate === null || this.submitLG.value.ZakatPeriodStartDate === undefined || this.submitLG.value.ZakatPeriodStartDate === "") {
                this.lgIssuance.ZakatPeriodStartDate = "";
            }
            else {
                this.lgIssuance.ZakatPeriodStartDate = this.zakatStartDate.toLocaleDateString('en-GB');
            }
            if (this.submitLG.value.ZakatPeriodEndDate === null || this.submitLG.value.ZakatPeriodEndDate === undefined || this.submitLG.value.ZakatPeriodEndDate === "") {
                this.lgIssuance.ZakatPeriodEndDate = "";
            }
            else {
                this.lgIssuance.ZakatPeriodEndDate = this.zakatEndDate.toLocaleDateString('en-GB');
            }
            this.lgIssuance.projectName = this.submitLG.value.projectName;
            this.lgIssuance.projectNumber = this.submitLG.value.projectNumber;
            this.lgIssuance.puroseOfBond = this.submitLG.value.puroseOfBond;
            if (this.submitLG.value.bayanNuymber === null || this.submitLG.value.bayanNuymber === undefined || this.submitLG.value.bayanNuymber === "") {
                this.lgIssuance.bayanNuymber = "";
            }
            else {
                this.lgIssuance.bayanNuymber = this.submitLG.value.bayanNuymber;
            }
            this.lgIssuance.checkBox = this.isChecked;
            this.lgIssuance.assignmentOfContractcheckBox = this.isAssignmentOfContractChecked;
            this.lgIssuance.termsNconditionsMessage = this.submitLG.value.TermsAndCondContent;
            this.lgIssuance.privateEntityCheckBox = this.privateEntityCheckBox;
            if (this.email !== null || this.email !== undefined || this.email !== "") {
                this.lgIssuance.email = this.email;
            }
            else {
                this.lgIssuance.email = this.submitLG.value.email;
            }
            this.lgIssuance.entityName = this.entityName;
            this.lgIssuance.beneficiary_name = this.beneficiary_name;
            this.lgIssuance.beneficiary_UID = this.beneficiary_UID;
            this.lgIssuance.supplier_entity_id = this.crNoOrUidNo;
            this.lgIssuance.beneficiary_entity_id = this.beneficiary_UID;
            //this.lgIssuance.privateEntityCheckBox = this.submitLG.value.privateEntityCheckBox;
            console.log("this.lgIssuance::::" + JSON.stringify(this.lgIssuance));
            //alert("OK");
            this.commonService.postLGIssuanceDetails(this.lgIssuance, this.userId, this.crNoOrUidNo, this.userObject, this.isDataExistInDB, this.currentWorkflowID)
                .subscribe(res => {
                console.log("Reg final page Response is::::" + JSON.stringify(res));
                if (res.userObject !== undefined || res.userObject !== null) {
                    this.commonService.lgIssuanceApproval = new _models_lgIssuance_model__WEBPACK_IMPORTED_MODULE_5__["LGIssuanceModel"]();
                    this.commonService.lgIssuanceApproval.beneficiary_name = this.beneficiary_name;
                    this.commonService.lgIssuanceApproval.beneficiary_UID = this.beneficiary_UID;
                    if (res.userObject.lgTypeId !== null || res.userObject.lgTypeId !== undefined) {
                        for (let lg of this.lgTypeList) {
                            if (lg.lg_type_id === res.userObject.lgTypeId) {
                                this.commonService.lgIssuanceApproval.LGType = lg.bond;
                            }
                        }
                    }
                    if (res.userObject.activeStatus !== null || res.userObject.activeStatus !== undefined) {
                        this.commonService.lgIssuanceApproval.status = res.userObject.activeStatus;
                    }
                    if (res.userObject.requestId !== null || res.userObject.requestId !== undefined) {
                        this.commonService.lgIssuanceApproval.requestId = res.userObject.requestId;
                    }
                    if (res.userObject.termsConditionType !== null || res.userObject.termsConditionType !== undefined) {
                        this.commonService.lgIssuanceApproval.writeUpType = res.userObject.termsConditionType;
                    }
                    if (res.userObject.strtDt !== null || res.userObject.strtDt !== undefined) {
                        this.commonService.lgIssuanceApproval.LGStartDate = res.userObject.strtDt;
                    }
                    if (res.userObject.endDt !== null || res.userObject.endDt !== undefined) {
                        this.commonService.lgIssuanceApproval.LGEndDate = res.userObject.endDt;
                    }
                    if (res.userObject.zakatStartDate !== null || res.userObject.zakatStartDate !== undefined) {
                        this.commonService.lgIssuanceApproval.ZakatPeriodStartDate = res.userObject.zakatStartDate;
                    }
                    if (res.userObject.zakatEndDate !== null || res.userObject.zakatEndDate !== undefined) {
                        this.commonService.lgIssuanceApproval.ZakatPeriodEndDate = res.userObject.zakatEndDate;
                    }
                    if (res.userObject.lgValue !== null || res.userObject.lgValue !== undefined) {
                        this.commonService.lgIssuanceApproval.Amount = res.userObject.lgValue;
                        var converter = __webpack_require__(/*! number-to-words */ "./node_modules/number-to-words/numberToWords.min.js");
                        this.commonService.lgIssuanceApproval.amountInNumber = converter.toWords(this.commonService.lgIssuanceApproval.Amount);
                    }
                    if (res.userObject.currencyCode !== null || res.userObject.currencyCode !== undefined) {
                        for (let currency of this.currencyList) {
                            if (currency[0] === res.userObject.currencyCode) {
                                this.commonService.lgIssuanceApproval.currency = currency[1];
                            }
                        }
                    }
                    if (res.userObject.projectName !== null || res.userObject.projectName !== undefined) {
                        this.commonService.lgIssuanceApproval.projectName = res.userObject.projectName;
                    }
                    if (res.userObject.projectId !== null || res.userObject.projectId !== undefined) {
                        this.commonService.lgIssuanceApproval.projectNumber = res.userObject.projectId;
                    }
                    if (res.userObject.purposeOfBond !== null || res.userObject.purposeOfBond !== undefined) {
                        this.commonService.lgIssuanceApproval.puroseOfBond = res.userObject.purposeOfBond;
                    }
                    if (res.userObject.byanNo !== null || res.userObject.byanNo !== undefined) {
                        this.commonService.lgIssuanceApproval.bayanNuymber = res.userObject.byanNo;
                    }
                    if (res.userObject.termsConditionMessage !== null || res.userObject.termsConditionMessage !== undefined) {
                        this.commonService.lgIssuanceApproval.termsNconditionsMessage = res.userObject.termsConditionMessage;
                    }
                    // if (res.userObject.checkBox !== null || res.userObject.checkBox !== undefined) {
                    //   this.commonService.lgIssuanceApproval.checkBox = res.userObject.checkBox;
                    // }
                    //  if(pendingData.status !== null || pendingData.status !== undefined){
                    //   this.commonService.lgIssuanceApproval.status = pendingData.status;
                    //  }
                    if (res.userObject.responseCode !== null || res.userObject.responseCode !== undefined) {
                        this.commonService.lgIssuanceApproval.response_code = res.userObject.responseCode;
                    }
                    if (res.userObject.createBy !== null || res.userObject.createBy !== undefined) {
                        this.commonService.lgIssuanceApproval.create_by = res.userObject.createBy;
                    }
                    if (res.userObject.agreeTag !== null || res.userObject.agreeTag !== undefined) {
                        console.log("&&&&&&&_______@@@@@@@" + res.userObject.agreeTag);
                        this.commonService.lgIssuanceApproval.checkBox = res.userObject.agreeTag;
                    }
                    if (res.userObject.validDt !== null || res.userObject.validDt !== undefined) {
                        console.log("&&&&&&&_______@@@@@@@" + res.userObject.validDt);
                        this.commonService.lgIssuanceApproval.lg_validity_date = res.userObject.validDt;
                    }
                    if (res.userObject.supplierId !== null || res.userObject.supplierId !== undefined) {
                        this.commonService.lgIssuanceApproval.supplierId = res.userObject.supplierId;
                    }
                    if (res.userObject.beneficiaryId !== null || res.userObject.beneficiaryId !== undefined) {
                        this.commonService.lgIssuanceApproval.beneficiaryId = res.userObject.beneficiaryId;
                    }
                    if (res.userObject.ac_of_contract !== null || res.userObject.ac_of_contract !== undefined) {
                        this.commonService.lgIssuanceApproval.ac_of_contract = res.userObject.ac_of_contract;
                    }
                }
                this.commonService.hideGeneralModal();
                if ((res.responseCode === 1) && (this.selectedWriteupType === 'NONSAMA')) {
                    if (this.roleId !== null || this.roleId !== undefined) {
                        // if (this.roleId == 1) {
                        if (this.loginId == this.commonService.lgIssuanceApproval.supplierId) {
                            //this.router.navigate(['/requestLgIssuancePayment']);
                            this.router.navigate(['/privatependingtasks']);
                        }
                        // else if (this.roleId == 2) {
                        if (this.loginId == this.commonService.lgIssuanceApproval.beneficiaryId) {
                            //this.router.navigate(['/requestLgIssuancePayment']);
                            this.router.navigate(['/privatependingtasks']);
                        }
                    }
                    this.commonService.isLGSubmitted = true;
                    this.commonService.alertMsgforLGIssuancePayment = res.responseMessage;
                }
                else if ((res.responseCode === 1) && (this.selectedWriteupType === 'SAMA' || this.selectedWriteupType === undefined)) {
                    if (this.roleId !== null || this.roleId !== undefined) {
                        if (this.roleId == 1) {
                            this.commonService.showGeneralMessage("Message", res.responseMessage, false); // true if you want to check session validity, false otherwise
                            //this.router.navigate(['/requestLgIssuancePayment']);
                            this.router.navigate(['/privatependingtasks']);
                        }
                        else if (this.roleId == 2) {
                            this.commonService.showGeneralMessage("Message", res.responseMessage, false); // true if you want to check session validity, false otherwise
                            //this.router.navigate(['/requestLgIssuancePayment']);
                            this.router.navigate(['/privatependingtasks']);
                        }
                    }
                    this.commonService.isLGSubmitted = true;
                }
            });
        }
        else {
            // this.msgs = [];
            // this.msgs.push({severity:'error', summary:'Error Message', detail:'Validation failed'});
            this.isOpenValidationAlert = true;
        }
    }
    resetForm() {
        if (this.submitLG.valid) {
            console.log("Form Submitted!");
            this.submitLG.reset();
        }
        this.isEmail = false;
        this.email = "";
        this.entityName = "";
        //this.isHideAll = true;
    }
    closeAlert() {
        this.isOpenValidationAlert = false;
    }
    styleObject() {
        if (this.isEditTnC) {
            return { background: '#fff', border: '1px solid #c3c3c3' };
        }
        else {
            return { background: '#efefef', border: '1px solid #c3c3c3' };
        }
    }
    toggleVisibilityassignmentOfContract(e) {
        if (e.target.checked) {
            this.assignmentOfContractcheckBox = true;
            this.isAssignmentOfContractChecked = 'y';
        }
        else {
            this.assignmentOfContractcheckBox = false;
            this.isAssignmentOfContractChecked = 'n';
        }
        this.submitLG.controls['assignmentOfContractcheckBox'].setValue(this.assignmentOfContractcheckBox);
    }
    openModal() {
        const dialogConfig = new _angular_material__WEBPACK_IMPORTED_MODULE_7__["MatDialogConfig"]();
        dialogConfig.disableClose = true;
        dialogConfig.autoFocus = true;
        dialogConfig.panelClass = 'custom-modalbox';
        dialogConfig.data = {
            description: 'description',
            modelData: { callerModule: 'LG_EMAIL' }
        };
        this.dialogRef = this.dialog.open(_general_modal_general_modal_component__WEBPACK_IMPORTED_MODULE_8__["GeneralModalComponent"], dialogConfig);
        this.dialogRef.afterClosed().subscribe(result => {
            //alert(`Dialog result: ${result}`); // Pizza!
            this.email = result;
            this.isEmail = false;
            this.submitLG.controls['email'].setValue(result);
        });
    }
    cancelUpdate() {
        this.router.navigate(['/privatependingtasks']);
    }
};
RequestLgIssuanceComponent.ctorParameters = () => [
    { type: _ngx_translate_core__WEBPACK_IMPORTED_MODULE_9__["TranslateService"] },
    { type: _angular_router__WEBPACK_IMPORTED_MODULE_2__["Router"] },
    { type: _angular_forms__WEBPACK_IMPORTED_MODULE_3__["FormBuilder"] },
    { type: _services_common_service_service__WEBPACK_IMPORTED_MODULE_4__["CommonService"] },
    { type: primeng_api__WEBPACK_IMPORTED_MODULE_6__["MessageService"] },
    { type: _angular_material__WEBPACK_IMPORTED_MODULE_7__["MatDialog"] }
];
RequestLgIssuanceComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-request-lg-issuance',
        template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! raw-loader!./request-lg-issuance.component.html */ "./node_modules/raw-loader/dist/cjs.js!./src/app/request-lg-issuance/request-lg-issuance.component.html")).default,
        styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! ./request-lg-issuance.component.css */ "./src/app/request-lg-issuance/request-lg-issuance.component.css")).default]
    }),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_ngx_translate_core__WEBPACK_IMPORTED_MODULE_9__["TranslateService"], _angular_router__WEBPACK_IMPORTED_MODULE_2__["Router"], _angular_forms__WEBPACK_IMPORTED_MODULE_3__["FormBuilder"], _services_common_service_service__WEBPACK_IMPORTED_MODULE_4__["CommonService"],
        primeng_api__WEBPACK_IMPORTED_MODULE_6__["MessageService"], _angular_material__WEBPACK_IMPORTED_MODULE_7__["MatDialog"]])
], RequestLgIssuanceComponent);



/***/ }),

/***/ "./src/app/services/common-service.service.ts":
/*!****************************************************!*\
  !*** ./src/app/services/common-service.service.ts ***!
  \****************************************************/
/*! exports provided: CommonService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CommonService", function() { return CommonService; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/common/http */ "./node_modules/@angular/common/fesm2015/http.js");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm2015/index.js");
/* harmony import */ var _models_govEntity_model__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../models/govEntity.model */ "./src/app/models/govEntity.model.ts");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm2015/router.js");
/* harmony import */ var _general_modal_general_modal_component__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../general-modal/general-modal.component */ "./src/app/general-modal/general-modal.component.ts");
/* harmony import */ var _environments_environment__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../environments/environment */ "./src/environments/environment.ts");
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @angular/material */ "./node_modules/@angular/material/esm2015/material.js");









let CommonService = class CommonService {
    constructor(http, dialog, router) {
        this.http = http;
        this.dialog = dialog;
        this.router = router;
        this.alertMsgforGovLGApproval = "";
        this.alertMsgforPrivateLGApproval = "";
        this.isClickPrivateEntityReg = false;
        this.isClickGovernmentEntityReg = false;
        this.isLGSubmitted = false;
        this.IsLGPaid = false;
        this.isLGApproved = false;
        this.logoutStatus = 0;
        /*  private  */
        this.CC_PENDING_CODE = 100;
        this.CC_SUCCESS_CODE = 101;
        this.CC_FAILED_CODE = 102;
        this.BANK_VERIFIED_CODE = 104;
        this.BANK_NOT_VERIFIED_CODE = 105;
        this.BANK_PENDING_CODE = 106;
        /*  govt  */
        this.GCC_PENDING_CODE = 107;
        this.G_CC_SUCCESS = 108;
        /*  admin  */
        this.ADMIN_LOGIN = 109;
        /* Role ID   */
        this.ROLE_PRIV = 1;
        this.ROLE_GOVT = 2;
        this.ROLE_ADMIN = 3;
        //public hostUrl: string = 'http://182.73.216.91:8080';
        //public hostUrl: string = 'http://192.168.1.75:8080';
        //public mciUrl: string = "/mciData ";
        this.mciUrl = "/mciValidData ";
        this.saveUserUrl = "/save-user ";
        this.loginUrl = "/LogInUser ";
        this.bankListUrl = "/selectBankName ";
        this.ibanVerifyUrl = "/ibanVerify ";
        this.selectGovermentEntityUrl = "/selectGovermentEntity ";
        this.govtEntitySaveUrl = "/govtEntitySave ";
        this.selectLGTypeUrl = "/selectLGType ";
        this.selectCurrencyUrl = "/selectCurrency ";
        this.selectIBANUrl = "/selectIBAN/ ";
        this.lgIssueDataSubmitUrl = "/lgIssueDataSubmit/ ";
        this.lgIssueSubmitUrl = "/lgIssueDataSubmit/ ";
        this.lgIssueDataUpdateUrl = "/lgIssueDataUpdate/ ";
        this.getAllLgRequestBeneficiarySpecificUrl = "/getAllLgRequestBeneficiarySpecific/ ";
        this.selectGovermentEntityRegisteredUrl = "/selectGovermentEntityRegistered/ ";
        this.changeStatusOfLgRequestBeneficiaryUrl = "/changeStatusOfLgRequestBeneficiary/ ";
        this.forgotPasswordUrl = "/forgotPassword/ ";
        this.checkSupplierCrnUrl = "/CheckSupplierCrn/ ";
        this.checkValidLoginIdUrl = "/CheckValidLoginId/ ";
        this.checkBenNameUrl = "/checkBenName/ ";
        this.selectWriteUpTypeUrl = "/selectWriteUpType/ ";
        this.cancellingLgRequestFromSupplierUrl = "/CancellingLgRequestFromSupplier/ ";
        this.acceptingLgRequestFromSupplierUrl = "/AcceptingLgRequestFromSupplier/ ";
        this.getBeneficiaryUnverifiedEntityListUrl = "/getGovUnverifiedEntityList/ "; //Added by Subhra
        this.getSupplierUnverifiedEntityListUrl = "/getSupplierUnverifiedEntityList/ "; //Added by Subhra
        this.CCDetailsAfterVerifyUrl = "/ccDetailsAfterVerify/ "; //Added by Subhra
        this.verifyBenEntityUrl = "/verifyBenEntity/ "; //Added by Subhra
        this.getAllLgVerifiedBeneficiarySpecificUrl = "/getAllLgVerifiedBeneficiarySpecific/"; //Added by Subhra
        this.privateCountOfActiveUrl = "/countOfActive/"; //Added by Subhra
        this.privateCountOfPendingUrl = "/countOfPending/"; //Added by Subhra
        this.privateCountOfExpiredUrl = "/countOfExpired/"; //Added by Subhra
        this.privateCountOfNotPendingUrl = "/countOfNotPending/"; //Added by Subhra
        //public privateCountOfNotPendingUrl: string = "/countOfNotPending/";//Added by Subhra
        this.privateGetGraphDataUrl = "/getGraphData/"; //Added by Subhra
        this.getGovtEntryRegistrationDataUrl = "/getGovtEntryRegistrationData/"; //Added by Ismail
        this.verifyBeneficiaryEntity = "/verifyBeneficiaryEntity/ "; //Added by Ismail
        this.zakilValidDataUrl = "/zakilValidData/ "; //added by Ipsita
        this.govCountOfActiveUrl = "/countOfActiveByGovt/"; //Added by Subhra 300120
        this.govCountOfPendingUrl = "/countOfPendingByGovt/"; //Added by Subhra 300120
        this.govCountOfExpiredUrl = "/countOfExpiredByGovt/"; //Added by Subhra 300120
        this.govCountOfPendingApprovalUrl = "/countOfPendingApprovalByGovt/"; //Added by Subhra 300120
        this.govGetGraphDataUrl = "/getGraphDataForGovt/"; //Added by Subhra 300120
        this.getActiveLgListForGovtUrl = "/getActiveLgListForGovt/"; //Added by Subhra 300120
        this.adminCountOfActiveUrl = "/countOfActiveLgForAdminDashboard/"; //Added by Subhra 310120
        this.adminCountOfPendingUrl = "/countOfPendingLgForAdminDashboard/"; //Added by Subhra 310120
        this.adminCountOfExpiredUrl = "/countOfExpiredLgForAdminDashboard/"; //Added by Subhra 310120
        this.adminCountOfPendingApprovalUrl = "/countOfPendingApprovalLgForAdminDashboard/"; //Added by Subhra 310120
        this.adminGetGraphDataUrl = "/getGraphDataForAdmin/"; //Added by Subhra 310120
        this.getActiveLgListForAdminUrl = "/getActiveLgListForAdmin/"; //Added by Subhra 310120
        this.getPendingLgListForAdminUrl = "/getPendingLgListForAdmin/"; //Added by Subhra 310120
        this.getAllInactiveLGforPrivateEntityListUrl = "/getAllInactiveLGforPrivateEntityList/"; //Added by Subhra 040220
        this.getInActiveLgListForGovtUrl = "/getInActiveLgListForGovt/"; //Added by Subhra 040220
        this.getGovtEntityActiveLGListUrl = "/getGovtEntityActiveLGList/"; //Added by Subhra 070220
        this.getGovtEntityInActiveLGListUrl = "/getGovtEntityInactiveLGList/"; //Added by Subhra 070220
        this.saveLGAmendmentUrl = "/saveLGAmendment/"; //Added by Subhra 190320
        this.updateLGAmendmentUrl = "/updateLGAmendment/"; //Added by Subhra 150520
        this.saveLGReleaseUrl = "/saveLGRelease/"; //Added by Subhra 190320
        this.updateLGReleaseUrl = "/updateLGRelease/";
        this.saveLGConfiscateUrl = "/saveLGConfiscate/"; //Added by Subhra 190320
        this.updateLGConfiscateUrl = "/updateLGConfiscate/"; //Added by Subhra 190320
        this.getBeneficiaryInfoAndApplicatInfoUrl = "/getBeneficiaryInfoAndApplicatInfo/"; //250320
        this.getLgHistoryUrl = "/getLgHistory/"; //250320
        this.getAciveUserListUrl = "/getAciveUserList/"; //250320
        this.getAmendmentAndReleseAndConfiscationPendingListUrl = "/getAmendmentAndReleseAndConfiscationPendingList/"; //300320
        this.updateLGAmendmentForApproveOrRejectUrl = "/updateLGAmendmentForApproveOrReject/"; //310320
        this.getActionListUrl = "/getAction/";
        this.getSupplierByCRNoUrl = "/getSupplierByCRNo/";
        this.getGovUserByCRNoUrl = "/getGovUserByCRNo/";
        this.getActivityMasterListUrl = "/getActivityMasterList/";
        this.saveworkflowUrl = "/saveWorkFlowDetails/";
        this.getWorkFlowMasterListByLoginIdUrl = "/getWorkFlowMasterListByLoginId/";
        this.getWorkFlowDetailsListByWorkFlowIdAndloginidUrl = "/getWorkFlowDetailsListByWorkFlowIdAndloginid/";
        this.getIbanListByLoginIdUrl = "/getIbanListByLoginId";
        this.getMenuByLoginIdUrl = "/getMenuByLoginId";
        this.getBondTypeFromWorkFlowUrl = "/getBondTypeFromWorkFlow";
        this.getPriceLimitFromWorkFlowUrl = "/getPriceLimitFromWorkFlow";
        this.getBankIbanListFromWorkFlowUrl = "/getBankIbanListFromWorkFlow";
        this.getInternalIssuanceRejectListUrl = "/getInternalIssuanceRejectList";
        this.getInternalPendingIssuanceCreateListUrl = "/getInternalPendingIssuanceCreateList";
        this.getInternalPendingIssuanceReviewListUrl = "/getInternalPendingIssuanceReviewList";
        this.getInternalIssuanceApprovalPendingListUrl = "/getInternalIssuanceApprovalPendingList";
        this.getInternalAmendmentRejectListUrl = "/getInternalAmendmentRejectedList";
        this.getInternalAmendmentPendingCreateListUrl = "/getInternalAmendmentPendingCreateList";
        this.getInternalAmendmentPendingReviewListUrl = "/getInternalAmendmentPendingReviewList";
        this.getInternalAmendmentApproveListUrl = "/getInternalAmendmentApproveList";
        this.getInternalConfiscateRejectPendingListUrl = "/getInternalConfiscateRejectList";
        this.getInternalConfiscateCreatePendingListUrl = "/getInternalConfiscateCreatePendingList";
        this.getInternalConfiscateReviewPendingListUrl = "/getInternalConfiscateReviewPendingList";
        this.getInternalConfiscateApproveListUrl = "/getInternalConfiscateApproveList";
        this.getInternalReleaseRejectPendingListUrl = "/getInternalReleaseRejectPendingList";
        this.getInternalReleaseCreatePendingListUrl = "/getInternalReleaseCreatePendingList";
        this.getInternalReleaseReviewPendingListUrl = "/getInternalReleaseReviewPendingList";
        this.getInternalReleaseApprovePendingListUrl = "/getInternalReleaseApprovePendingList";
        this.updateInternalWorkflowApproveOrRejectUrl = "/updateInternalWorkflowApproveOrReject";
        this.updateLgRequestAfterPaymentUrl = "/updateLgRequestAfterPayment";
        this.getWorkFlowDetailsListByMultipleWorkFlowIdsAndloginidUrl = "/getWorkFlowDetailsListByMultipleWorkFlowIdsAndloginid/"; //250320
        this.amendmentCreationLgListIssueByMeUrl = "/amendmentCreationLgListIssueByMe/";
        this.amendmentReleaseAndconfiscateCreationLgListIssueForMeUrl = "/amendmentReleaseAndconfiscateCreationLgListIssueForMe/";
        this.getNotificationListUrl = "/getNotificationList/";
        this.getNotificationCountByLoginIdUrl = "/getNotificationCountByLoginId/";
        this.updateNewNotificationFlagUrl = "/updateNewNotificationFlag/";
        this.govEntityDEtails = new _models_govEntity_model__WEBPACK_IMPORTED_MODULE_4__["GovernmentEntityModel"]();
        this.isPrivatePart1Completed = false;
        this.isPrivatePart2Completed = false;
        this.isPrivatePart3Completed = false;
        this.isGovPart1Completed = false;
        this.isGovPart2Completed = false;
        this.isGovPart3Completed = false;
        this.isPrivateLgPending1Completed = false;
        this.tokenParam = { 'WTHAQ_AUTH_TOKEN': '' };
        this.headers = new _angular_common_http__WEBPACK_IMPORTED_MODULE_2__["HttpHeaders"]();
        //---------observable variable For Workflow ID---------------
        this._currentWFID = new rxjs__WEBPACK_IMPORTED_MODULE_3__["BehaviorSubject"]([]);
        // observable variable end
        //---------observable variable For Workflow Edit---------------
        this._editworkflowId = new rxjs__WEBPACK_IMPORTED_MODULE_3__["BehaviorSubject"]([]);
        // observable variable end
        //---------observable variable For Workflow add/Edit from addnewworkflow---------------
        this._workflowchangeObj = new rxjs__WEBPACK_IMPORTED_MODULE_3__["BehaviorSubject"]([]);
    }
    get currentWFIDObservable() {
        return this._currentWFID.asObservable();
    }
    setcurrentWFIDService(data) {
        this._currentWFID.next(data);
    }
    get editworkflowIdObservable() {
        return this._editworkflowId.asObservable();
    }
    seteditworkflowIdService(data) {
        this._editworkflowId.next(data);
    }
    get workflowchangeObjObservable() {
        return this._workflowchangeObj.asObservable();
    }
    setworkflowchangeObjService(data) {
        this._workflowchangeObj.next(data);
    }
    // observable variable end
    //post MCI data
    postMCIDetails(body) {
        let params = new FormData();
        params.append('cr_no', body.crn);
        params.append('NIN', body.mno);
        params.append('dob', body.dateOfBirth);
        return this.http.post(_environments_environment__WEBPACK_IMPORTED_MODULE_7__["environment"].hostUrl + this.mciUrl, params, this.createJWTTokenHeader());
    }
    //Post private Registration details
    postRegistrationDetails(body) {
        console.log("body:::::" + JSON.stringify(body));
        let params = new FormData();
        params.append('commRegNo', body.userObject.cr_no);
        params.append('rep_national_id', body.userObject.nin);
        params.append('dob', body.userObject.dob);
        //params.append('rep_dob', body.userObject.dob);
        params.append('cr_type', body.userObject.cr_type);
        params.append('cr_status', body.userObject.cr_status);
        params.append('cr_issue_dt', body.userObject.cr_issue_dt);
        params.append('cr_expiry_dt', body.userObject.cr_expiry_dt);
        params.append('rniFileContent', body.rniFile);
        params.append('crFileContent', body.crFile);
        params.append('lalFileContent', body.lalFile);
        params.append('laglFileContent', body.laglFile);
        params.append('name', body.name);
        params.append('rep_last_name', body.userName);
        //params.append('rep_national_id', body.nationalId);
        params.append('Email', body.email);
        //params.append('userId', body.userId);
        params.append('ContactInformation', body.mobileNo);
        params.append('EntityName', body.userObject.entity_name);
        params.append('commRegNoMCI', body.userObject.cr_no);
        params.append('mobileNo', body.mobileNo);
        //params.append('Email', body.emailAddress);
        params.append('address', body.userObject.address);
        params.append('city', body.userObject.city);
        params.append('commRegNo', body.userObject.cr_no);
        params.append('OfficeMobileNumber', body.mobileNo);
        params.append('password', body.password);
        params.append('agree_tag', body.isChecked);
        params.append('bi', body.bi);
        params.append('bankName', body.bankName);
        params.append('userId', body.userId);
        params.append('on_board_resolution', 'Y');
        params.append('regType', 'P');
        //params.append('crn', body.crn);</div>
        //params.append('mno', body.mno);
        return this.http.post(_environments_environment__WEBPACK_IMPORTED_MODULE_7__["environment"].hostUrl + this.saveUserUrl, params);
    }
    //Login
    postLoginDetails(body) {
        let params = new FormData();
        params.append('userId', body.userId);
        params.append('password', body.password);
        return this.http.post(_environments_environment__WEBPACK_IMPORTED_MODULE_7__["environment"].hostUrl + this.loginUrl, params);
    }
    //Get bank list
    getBankNameList() {
        return this.http.get(_environments_environment__WEBPACK_IMPORTED_MODULE_7__["environment"].hostUrl + this.bankListUrl);
    }
    //Post bank details
    postBankDetails(body, userId) {
        let params = new FormData();
        params.append('bi', body.bi);
        params.append('bankName', body.bankName);
        params.append('userId', userId);
        return this.http.post(_environments_environment__WEBPACK_IMPORTED_MODULE_7__["environment"].hostUrl + this.ibanVerifyUrl, params);
    }
    //Entity list
    getEntityList() {
        return this.http.get(_environments_environment__WEBPACK_IMPORTED_MODULE_7__["environment"].hostUrl + this.selectGovermentEntityUrl);
    }
    //save gov entity
    postGovEntityDetails(body) {
        console.log("body::::" + JSON.stringify(body));
        let params = new FormData();
        ///params.append('entity', body.UID);
        params.append('entityname', body.entityname);
        params.append('entityUID', body.entityUID);
        params.append('entityNationalID', body.nationalId);
        params.append('entityMobNo', body.mobile);
        params.append('entityEmail', body.email);
        params.append('entityTnC', body.isChecked);
        if (body.checkedGovEntity) {
            params.append('checkedGovEntity', 'y');
        }
        else {
            params.append('checkedGovEntity', 'n');
        }
        params.append('lalFileContent', body.lalFile);
        params.append('laglFileContent', body.laglFile);
        params.append('rniFileContent', body.rniFile);
        params.append('firstName', body.fname);
        params.append('lastName', body.lname);
        params.append('password', body.password);
        params.append('rep_dob', body.dateofbirth);
        params.append('bankName', body.bankName);
        params.append('bi', body.bi);
        //params.append('userId', body.userId);
        return this.http.post(_environments_environment__WEBPACK_IMPORTED_MODULE_7__["environment"].hostUrl + this.govtEntitySaveUrl, params);
    }
    getLoginDetailsFromNid(loginid) {
        this.checkLocalStorageForLogout();
        let params = new FormData();
        params.append('loginId', loginid);
        return this.http.post(_environments_environment__WEBPACK_IMPORTED_MODULE_7__["environment"].hostUrl + `//getLoginDetailsFromNid`, params, this.createJWTTokenHeader());
    }
    //post MCI data for government
    postMCIGovDetails(body) {
        let params = new FormData();
        params.append('entityUID', body.entityUID);
        params.append('entityname', body.entityname);
        params.append('representativeDateOfBirth', body.representativeDateOfBirth);
        if (body.checkedGovEntity) {
            params.append('checkedGovEntity', 'y');
        }
        else {
            params.append('checkedGovEntity', 'n');
        }
        return this.http.post(_environments_environment__WEBPACK_IMPORTED_MODULE_7__["environment"].hostUrl + this.zakilValidDataUrl, params);
    }
    //Get Lg type list
    getLGTypeList() {
        return this.http.get(_environments_environment__WEBPACK_IMPORTED_MODULE_7__["environment"].hostUrl + this.selectLGTypeUrl);
    }
    //Get Currency type list
    getCurrencyList() {
        return this.http.get(_environments_environment__WEBPACK_IMPORTED_MODULE_7__["environment"].hostUrl + this.selectCurrencyUrl);
    }
    //Get writeup list
    getWriteUpList() {
        return this.http.get(_environments_environment__WEBPACK_IMPORTED_MODULE_7__["environment"].hostUrl + this.selectWriteUpTypeUrl);
    }
    //get IBAN list
    getIBANList(id) {
        // let params = new FormData();
        // params.append('id', userId);
        return this.http.get(_environments_environment__WEBPACK_IMPORTED_MODULE_7__["environment"].hostUrl + `/selectIBAN/${id}`);
    }
    //get IBAN list
    getselectBankNameList(id) {
        // let params = new FormData();
        // params.append('id', userId);
        return this.http.get(_environments_environment__WEBPACK_IMPORTED_MODULE_7__["environment"].hostUrl + `/selectBankName`);
    }
    //get IBAN list
    getIBANListByBankName(id) {
        // let params = new FormData();
        // params.append('id', userId);
        return this.http.post(_environments_environment__WEBPACK_IMPORTED_MODULE_7__["environment"].hostUrl + `/getIbanListByLoginId?loginid=${id}`, {});
    }
    //--------------- get list data  --------------------------------------
    //get IBAN list
    getListData(_url, id, _iban) {
        // let params = new FormData();
        // params.append('id', userId);
        let dataapi;
        if (_iban) {
            dataapi = this.http.get(_environments_environment__WEBPACK_IMPORTED_MODULE_7__["environment"].hostUrl + `/${_url}/${id}/${_iban}`);
        }
        else {
            dataapi = this.http.get(_environments_environment__WEBPACK_IMPORTED_MODULE_7__["environment"].hostUrl + `/${_url}/${id}`);
        }
        return dataapi;
    }
    //--------------- get National Identity govment --------------------------------------
    getNationalIdentyDatagov(id, CrNoOrUidNo, getEntityName) {
        console.log('mciValidData  id.length >', id.length);
        if (id.length >= 10) {
            console.log('mciValidData >', id);
            console.log('CrNoOrUidNo >', CrNoOrUidNo);
            console.log('getEntityName >', getEntityName);
            /* let params = new FormData();
             params.append('entityUID', id);
             params.append('CrNoOrUidNo', CrNoOrUidNo);
             params.append('entityname', getEntityName);*/
            return this.http.get(_environments_environment__WEBPACK_IMPORTED_MODULE_7__["environment"].hostUrl + '/validateNinForGovEntity/' + id);
        }
    }
    //--------------- get National Identity private --------------------------------------
    getNationalIdentyData(id, getCrn) {
        console.log('mciValidData  id.length >', id.length);
        if (id.length >= 10) {
            console.log('mciValidData >', id);
            console.log('getCrn >', getCrn);
            // return this.http.get<any>(environment.hostUrl+'/mciValidData')
            let params = new FormData();
            params.append('NIN', id);
            params.append('cr_no', getCrn);
            return this.http.post(_environments_environment__WEBPACK_IMPORTED_MODULE_7__["environment"].hostUrl + this.mciUrl, params, this.createJWTTokenHeader());
        }
    }
    chekingNinData(id) {
        console.log('mciValidData  id.length >', id.length);
        console.log('mciValidData >', id);
        // return this.http.post<any>(environment.hostUrl + this.mciUrl, {})
        return this.http.post(_environments_environment__WEBPACK_IMPORTED_MODULE_7__["environment"].hostUrl + `/checkNinNumberExistInDB?loginid=${id}`, {});
    }
    //---------------------- submit from  data -----------------------
    submitFormData(_url, _params) {
        console.log(" submitFormData _url >>>>" + _url);
        // console.log(" submitFormData _params >>>>"+ JSON.stringify(_params));
        return this.http.post(_environments_environment__WEBPACK_IMPORTED_MODULE_7__["environment"].hostUrl + '/' + _url, _params);
    }
    submitFormDataJson(_url, _params) {
        console.log(" submitFormData _url >>>>" + _url);
        // console.log(" submitFormData _params >>>>"+ JSON.stringify(_params));
        let hdr = {
            'Content-Type': 'application/json'
        };
        let options = { headers: hdr };
        return this.http.post(_environments_environment__WEBPACK_IMPORTED_MODULE_7__["environment"].hostUrl + '/' + _url, _params, options);
    }
    //post LGIssuance Details
    postLGIssuanceDetails(body, userId, crNoOrUidNo, userObject, isDataExistInDB, workflow_id) {
        console.log("Submitted data::::" + JSON.stringify(body));
        console.log("userId:::" + userId);
        let params = new FormData();
        if (isDataExistInDB === 'Y') {
            params.append('LGType', body.LGType);
            params.append('writeUpType', body.writeUpType);
            params.append('bankCode', body.bankCode);
            params.append('IBAN', body.IBAN);
            params.append('beneficiaryId', body.beneficiaryId);
            params.append('CR', body.CR);
            params.append('Amount', body.Amount);
            params.append('amountInNumber', body.amountInNumber);
            params.append('currency', body.currency);
            params.append('LGStartDate', body.LGStartDate);
            params.append('LGEndDate', body.LGEndDate);
            params.append('projectName', body.projectName);
            params.append('projectNumber', body.projectNumber);
            params.append('ZakatPeriodStartDate', body.ZakatPeriodStartDate);
            params.append('ZakatPeriodEndDate', body.ZakatPeriodEndDate);
            params.append('puroseOfBond', body.puroseOfBond);
            params.append('bayanNuymber', body.bayanNuymber);
            params.append('checkBox', body.checkBox);
            params.append('termsNconditionsMessage', body.termsNconditionsMessage);
            params.append('ninNumber', body.ninNumber);
            if (body.privateEntityCheckBox) {
                params.append('privateEntityCheckBox', 'true');
            }
            else {
                params.append('privateEntityCheckBox', 'false');
            }
            params.append('assignmentOfContractcheckBox', body.assignmentOfContractcheckBox);
            params.append('email', body.email);
            params.append('entityName', body.entityName);
            params.append('userId', userId);
            params.append('isDataExistInDB', isDataExistInDB);
            params.append('applicantCR', crNoOrUidNo);
        }
        else if (isDataExistInDB === 'N') {
            params.append('LGType', body.LGType);
            params.append('writeUpType', body.writeUpType);
            params.append('bankCode', body.bankCode);
            params.append('IBAN', body.IBAN);
            params.append('beneficiaryId', body.beneficiaryId);
            params.append('CR', body.CR);
            params.append('Amount', body.Amount);
            params.append('amountInNumber', body.amountInNumber);
            params.append('currency', body.currency);
            params.append('LGStartDate', body.LGStartDate);
            params.append('LGEndDate', body.LGEndDate);
            params.append('projectName', body.projectName);
            params.append('projectNumber', body.projectNumber);
            params.append('ZakatPeriodStartDate', body.ZakatPeriodStartDate);
            params.append('ZakatPeriodEndDate', body.ZakatPeriodEndDate);
            params.append('puroseOfBond', body.puroseOfBond);
            params.append('bayanNuymber', body.bayanNuymber);
            params.append('checkBox', body.checkBox);
            params.append('termsNconditionsMessage', body.termsNconditionsMessage);
            params.append('ninNumber', body.ninNumber);
            if (body.privateEntityCheckBox) {
                params.append('privateEntityCheckBox', 'true');
            }
            else {
                params.append('privateEntityCheckBox', 'false');
            }
            params.append('assignmentOfContractcheckBox', body.assignmentOfContractcheckBox);
            params.append('email', body.email);
            params.append('entityName', body.entityName);
            params.append('userId', userId);
            params.append('isDataExistInDB', isDataExistInDB);
            params.append('cr_type', userObject.cr_type);
            params.append('cr_status', userObject.cr_status);
            params.append('address', userObject.address);
            params.append('city', userObject.city);
            params.append('cr_issue_dt', userObject.cr_issue_dt);
            params.append('cr_expiry_dt', userObject.cr_expiry_dt);
            params.append('fname', userObject.fname);
            params.append('lname', userObject.lname);
            params.append('dob', userObject.dob);
            params.append('mob_no', userObject.mob_no);
            params.append('nationalId', userObject.nationalId);
            params.append('applicantCR', crNoOrUidNo);
        }
        else {
            params.append('LGType', body.LGType);
            params.append('writeUpType', body.writeUpType);
            params.append('bankCode', body.bankCode);
            params.append('IBAN', body.IBAN);
            params.append('beneficiaryId', body.beneficiaryId);
            params.append('CR', body.CR);
            params.append('Amount', body.Amount);
            params.append('amountInNumber', body.amountInNumber);
            params.append('currency', body.currency);
            params.append('LGStartDate', body.LGStartDate);
            params.append('LGEndDate', body.LGEndDate);
            params.append('projectName', body.projectName);
            params.append('projectNumber', body.projectNumber);
            params.append('ZakatPeriodStartDate', body.ZakatPeriodStartDate);
            params.append('ZakatPeriodEndDate', body.ZakatPeriodEndDate);
            params.append('puroseOfBond', body.puroseOfBond);
            params.append('bayanNuymber', body.bayanNuymber);
            params.append('checkBox', body.checkBox);
            params.append('termsNconditionsMessage', body.termsNconditionsMessage);
            params.append('ninNumber', body.ninNumber);
            if (body.privateEntityCheckBox) {
                params.append('privateEntityCheckBox', 'true');
            }
            else {
                params.append('privateEntityCheckBox', 'false');
            }
            params.append('assignmentOfContractcheckBox', body.assignmentOfContractcheckBox);
            params.append('email', body.email);
            params.append('entityName', body.entityName);
            params.append('userId', userId);
            params.append('isDataExistInDB', 'Y');
            params.append('applicantCR', crNoOrUidNo);
        }
        params.append('workflow_id', workflow_id);
        params.append('supplier_entity_id', body.supplier_entity_id);
        params.append('beneficiary_entity_id', body.beneficiary_entity_id);
        params.append('requestID', body.requestId);
        if (body.requestId == null) {
            return this.http.post(_environments_environment__WEBPACK_IMPORTED_MODULE_7__["environment"].hostUrl + this.lgIssueSubmitUrl, params, this.createJWTTokenHeader());
        }
        else {
            return this.http.post(_environments_environment__WEBPACK_IMPORTED_MODULE_7__["environment"].hostUrl + this.lgIssueDataUpdateUrl, params, this.createJWTTokenHeader());
        }
    }
    getAllLGRequestBeneficiarySpecific(benId) {
        //return this.http.get<any>(`http://192.168.1.75:8080/getAllLgRequestBeneficiarySpecific/${benId }`)
        return this.http.get(_environments_environment__WEBPACK_IMPORTED_MODULE_7__["environment"].hostUrl + `/getAllLgRequestBeneficiarySpecific/${benId}`);
    }
    getAllLGRequestBeneficiarySpecificPri(benId) {
        return this.http.get(_environments_environment__WEBPACK_IMPORTED_MODULE_7__["environment"].hostUrl + `/getAllLgRequestSupplierSpecific/${benId}`);
    }
    getAllLGRequestBeneficiarySpecificPendingPri(crNoOrUidNo) {
        return this.http.get(_environments_environment__WEBPACK_IMPORTED_MODULE_7__["environment"].hostUrl + `/getAllLgRequestSupplierSpecific/${crNoOrUidNo}`);
    }
    getSelectGovermentEntityRegistered() {
        return this.http.get(_environments_environment__WEBPACK_IMPORTED_MODULE_7__["environment"].hostUrl + this.selectGovermentEntityRegisteredUrl);
    }
    //post LGIssuance Approval Details
    postChangeedTnCOfLgRequestBeneficiary(requestId, termsNconditions) {
        console.log("requestId::::" + requestId);
        console.log("termsNconditions:::" + termsNconditions);
        let params = new FormData();
        params.append('requestId', requestId);
        params.append('termsNconditions', termsNconditions);
        return this.http.post(_environments_environment__WEBPACK_IMPORTED_MODULE_7__["environment"].hostUrl + this.changeStatusOfLgRequestBeneficiaryUrl, params, this.createJWTTokenHeader());
    }
    //post LGIssuance Approval Details
    postTnCOfLgRequestBeneficiary(requestId) {
        console.log("requestId::::" + requestId);
        let params = new FormData();
        params.append('requestId', requestId);
        return this.http.post(_environments_environment__WEBPACK_IMPORTED_MODULE_7__["environment"].hostUrl + this.changeStatusOfLgRequestBeneficiaryUrl, params, this.createJWTTokenHeader());
    }
    //forgot password
    postForgotPasswordDetails(userIdForgotPass) {
        console.log("userIdForgotPass::::" + userIdForgotPass);
        let params = new FormData();
        params.append('userIdForgotPass', userIdForgotPass);
        //return this.http.get<any>(`http://192.168.1.75:8080/forgotPassword/${userIdForgotPass }`)
        return this.http.post(_environments_environment__WEBPACK_IMPORTED_MODULE_7__["environment"].hostUrl + this.forgotPasswordUrl, params);
    }
    checkSupplierCrn(crnno) {
        let params = new FormData();
        params.append('crnno', crnno);
        return this.http.post(_environments_environment__WEBPACK_IMPORTED_MODULE_7__["environment"].hostUrl + this.checkSupplierCrnUrl, params);
    }
    checkSupplierCR(crn) {
        return this.http.get(_environments_environment__WEBPACK_IMPORTED_MODULE_7__["environment"].hostUrl + `/mciGetBenName/${crn}`);
        // let params = new FormData();
        // params.append('crn', crn);
        // return this.http.post<any>(environment.hostUrl+this.mciGetBenNameUrl, params)
    }
    checkValidLoginId(tempLoginId) {
        let params = new FormData();
        params.append('tempLoginId', tempLoginId);
        return this.http.post(_environments_environment__WEBPACK_IMPORTED_MODULE_7__["environment"].hostUrl + this.checkValidLoginIdUrl, params);
    }
    checkBenName(benName) {
        let params = new FormData();
        params.append('benName', benName);
        return this.http.post(_environments_environment__WEBPACK_IMPORTED_MODULE_7__["environment"].hostUrl + this.checkBenNameUrl, params);
    }
    getSelectedCRN(loginid) {
        return this.http.get(_environments_environment__WEBPACK_IMPORTED_MODULE_7__["environment"].hostUrl + `//selectCRN/${loginid}`);
    }
    CancellingLgRequestFromSupplier(requestId) {
        let params = new FormData();
        params.append('requestId', requestId);
        return this.http.post(_environments_environment__WEBPACK_IMPORTED_MODULE_7__["environment"].hostUrl + this.cancellingLgRequestFromSupplierUrl, params, this.createJWTTokenHeader());
    }
    AcceptingLgRequestFromSupplier(requestId) {
        let params = new FormData();
        params.append('requestId', requestId);
        return this.http.post(_environments_environment__WEBPACK_IMPORTED_MODULE_7__["environment"].hostUrl + this.acceptingLgRequestFromSupplierUrl, params, this.createJWTTokenHeader());
    }
    /*  Tajel  */
    logout(loginid) {
        let params = new FormData();
        params.append('loginId', loginid);
        this.http.post(_environments_environment__WEBPACK_IMPORTED_MODULE_7__["environment"].hostUrl + `//logout`, params, this.createJWTTokenHeader()).subscribe(res => { });
        localStorage.clear();
        this.router.navigate(['login']);
        return;
    }
    quickLogout() {
        let params = new FormData();
        params.append('loginId', localStorage.getItem('userId'));
        this.http.post(_environments_environment__WEBPACK_IMPORTED_MODULE_7__["environment"].hostUrl + `//logout`, params, this.createJWTTokenHeader()).subscribe(res => { });
        localStorage.clear();
        this.router.navigate(['login']);
        return;
    }
    populateTableOfCRNByNID(loginid) {
        this.checkLocalStorageForLogout();
        let params = new FormData();
        params.append('loginId', loginid);
        return this.http.post(_environments_environment__WEBPACK_IMPORTED_MODULE_7__["environment"].hostUrl + `//getCRNDetailsByNID`, params, this.createJWTTokenHeader());
    }
    otpByLoginId(loginid) {
        //  alert(" otpByLoginId "+loginid)
        this.checkLocalStorageForLogout();
        let params = new FormData();
        params.append('loginId', loginid);
        return this.http.post(_environments_environment__WEBPACK_IMPORTED_MODULE_7__["environment"].hostUrl + `//getOtpByloginId`, params, this.createJWTTokenHeader());
    }
    checkSessionExpired(loginid) {
        this.checkLocalStorageForLogout();
        let params = new FormData();
        params.append('loginId', loginid);
        /******************************************* */
        return new Promise(resolve => {
            this.http.post(_environments_environment__WEBPACK_IMPORTED_MODULE_7__["environment"].hostUrl + `//checkSessionExpired`, params, this.createJWTTokenHeader())
                .subscribe((data) => {
                console.log(data);
                // data=0;
                resolve(data);
            });
        });
        /*********************************************** */
        /*
        
          .subscribe(res => {
        
          alert("checkSessionExpired logout "+res);
        
          if(res==0)
          {
        
          this.logoutStatus=0;
          this.logout(loginid);
        }
        else{
          this.logoutStatus=1;
         }
        
         alert("logoutStatus checkSessionExpired "+this.logoutStatus);
         return this.logoutStatus;
        
          })
        
        
        
        */
        // if(logout==0){
        //  this.logout(loginid);
        // }
    }
    checkLocalStorageForLogout() {
        if (localStorage.getItem('jwtToken') !== undefined && localStorage.getItem('jwtToken') !== null) {
            return;
        }
        else {
            localStorage.clear();
            this.router.navigateByUrl('/login');
            return;
        }
    }
    setTokenHeaderValueFromStorage() {
        // alert("token: "+localStorage.getItem('jwtToken') );
        this.tokenParam.WTHAQ_AUTH_TOKEN = localStorage.getItem('jwtToken');
    }
    getTokenHeaderValueFromStorage() {
        this.setTokenHeaderValueFromStorage();
        return this.tokenParam.WTHAQ_AUTH_TOKEN;
    }
    setTokenHeaderFromStorage() {
        //this.setTokenHeaderValueFromStorage();
        alert("SET: " + this.getTokenHeaderValueFromStorage());
        this.headers.append('WTHAQ_AUTH_TOKEN', this.getTokenHeaderValueFromStorage());
    }
    getTokenHeaderFromStorage() {
        this.setTokenHeaderFromStorage();
        // alert("GET: "+this.headers.has('WTHAQ_AUTH_TOKEN'));
        return this.headers;
    }
    createJWTTokenHeader() {
        let httpOptions = {
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_2__["HttpHeaders"]({
                'WTHAQ-AUTH-TOKEN': '' + localStorage.getItem('jwtToken'),
                'WTHAQ-AUTH-UID': '' + localStorage.getItem('userId') /*this.getTokenHeaderValueFromStorage()*/
            })
        };
        //  alert("Token: "+localStorage.getItem('jwtToken'));
        //  let headers = new HttpHeaders();
        //  headers= headers.append('WTHAQ_AUTH_TOKEN', this.getTokenHeaderValueFromStorage())  ;
        // alert("GET: "+headers.has('WTHAQ_AUTH_TOKEN'));
        return httpOptions;
    }
    showGeneralModal(pageData) {
        if (pageData.checkSession) {
            this.checkSessionExpired(localStorage.getItem('userId'))
                .then((data) => {
                if (data == 0) {
                    this.hideGeneralModal();
                    this.logout(localStorage.getItem('userId'));
                    return;
                }
                else {
                    const dialogConfig = new _angular_material__WEBPACK_IMPORTED_MODULE_8__["MatDialogConfig"]();
                    dialogConfig.disableClose = true;
                    dialogConfig.autoFocus = true;
                    dialogConfig.panelClass = 'custom-modalbox-small';
                    dialogConfig.data = {
                        description: 'description',
                        modelData: pageData
                    };
                    this.dialogRef = this.dialog.open(_general_modal_general_modal_component__WEBPACK_IMPORTED_MODULE_6__["GeneralModalComponent"], dialogConfig);
                }
            });
        }
        else {
            const dialogConfig = new _angular_material__WEBPACK_IMPORTED_MODULE_8__["MatDialogConfig"]();
            dialogConfig.disableClose = true;
            dialogConfig.autoFocus = true;
            dialogConfig.panelClass = 'custom-modalbox-small';
            dialogConfig.data = {
                description: 'description',
                modelData: pageData
            };
            this.dialogRef = this.dialog.open(_general_modal_general_modal_component__WEBPACK_IMPORTED_MODULE_6__["GeneralModalComponent"], dialogConfig);
        }
    }
    hideGeneralModal() {
        if (this.dialogRef)
            this.dialogRef.close();
    }
    close() {
        this.dialogRef.close();
    }
    closeAndLogout() {
        this.dialogRef.close();
        this.dialogRef.afterClosed().subscribe((result) => {
            if (result === 'closed') {
                this.logout(localStorage.getItem('userId'));
            }
        });
    }
    closeAndRedirect(url) {
        this.dialogRef.close();
        this.dialogRef.afterClosed().subscribe((result) => {
            if (result === 'closed') {
                this.router.navigate([url]);
            }
        });
    }
    /*  Tajel  */
    /* Subhra */
    getBeneficiaryUnverifiedEntity() {
        return this.http.get(_environments_environment__WEBPACK_IMPORTED_MODULE_7__["environment"].hostUrl + this.getBeneficiaryUnverifiedEntityListUrl);
    }
    getSupplierUnverifiedEntity() {
        return this.http.get(_environments_environment__WEBPACK_IMPORTED_MODULE_7__["environment"].hostUrl + this.getSupplierUnverifiedEntityListUrl);
    }
    /* getPrivateRowEntitySelect(national_id, cr_no){
    
      let rowval = {
        national_id: national_id,
        cr_no:cr_no
      };
      return rowval;
    
    } */
    getPrivateRowEntitySelect(national_id, cr_no) {
        //  alert(" otpByLoginId "+loginid)
        let params = new FormData();
        params.append('national_id', national_id);
        params.append('cr_no', cr_no);
        return params;
    }
    getPriEntityDetails(pending_national_id, pending_cr_no) {
        let params = new FormData();
        params.append('nId', pending_national_id);
        params.append('crn', pending_cr_no);
        return this.http.post(_environments_environment__WEBPACK_IMPORTED_MODULE_7__["environment"].hostUrl + `//getPriEntityDetails`, params, this.createJWTTokenHeader());
        //return this.http.post<any>(environment.hostUrl+this.getSupplierUnverifiedEntityListUrl.)
    }
    ApprovePrivateReg(nationalId, crNumber, isApprove) {
        let params = new FormData();
        //isApprove = true;
        params.append('national_id', nationalId);
        params.append('cr_no', crNumber);
        params.append('status', isApprove);
        return this.http.post(_environments_environment__WEBPACK_IMPORTED_MODULE_7__["environment"].hostUrl + this.CCDetailsAfterVerifyUrl, params, this.createJWTTokenHeader());
    }
    /* ApproveGovReg(nationalId, crNumber, isApprove){
      let params = new FormData();
      //isApprove = true;
      params.append('nationalId', nationalId);
      params.append('crNumber', crNumber);
      params.append('isApprove', isApprove);
      return this.http.post<any>(environment.hostUrl+this.verifyBenEntityUrl, params)
    } */
    /* Subhra */
    getAllLgVerifiedBeneficiarySpecific(crNoOrUidNo) {
        return this.http.get(_environments_environment__WEBPACK_IMPORTED_MODULE_7__["environment"].hostUrl + this.getAllLgVerifiedBeneficiarySpecificUrl + `${crNoOrUidNo}`);
    }
    privateCountOfActive(crNoOrUidNo) {
        return this.http.get(_environments_environment__WEBPACK_IMPORTED_MODULE_7__["environment"].hostUrl + this.privateCountOfActiveUrl + `${crNoOrUidNo}`);
    }
    privateCountOfPending(crNoOrUidNo) {
        return this.http.get(_environments_environment__WEBPACK_IMPORTED_MODULE_7__["environment"].hostUrl + this.privateCountOfPendingUrl + `${crNoOrUidNo}`);
    }
    privateCountOfExpired(crNoOrUidNo) {
        return this.http.get(_environments_environment__WEBPACK_IMPORTED_MODULE_7__["environment"].hostUrl + this.privateCountOfExpiredUrl + `${crNoOrUidNo}`);
    }
    privateCountOfNotPending(crNoOrUidNo) {
        return this.http.get(_environments_environment__WEBPACK_IMPORTED_MODULE_7__["environment"].hostUrl + this.privateCountOfNotPendingUrl + `${crNoOrUidNo}`);
    }
    privateGetGraphData(crNoOrUidNo) {
        return this.http.get(_environments_environment__WEBPACK_IMPORTED_MODULE_7__["environment"].hostUrl + this.privateGetGraphDataUrl + `${crNoOrUidNo}`);
    }
    /* Subhra */
    ApproveGovtEntityReg(nationalId, isApprove) {
        //alert("nationalId::"+nationalId+"==>>"+isApprove);
        let params = new FormData();
        params.append('nationalId', nationalId);
        params.append('isApprove', isApprove);
        return this.http.post(_environments_environment__WEBPACK_IMPORTED_MODULE_7__["environment"].hostUrl + this.verifyBeneficiaryEntity, params, this.createJWTTokenHeader());
    }
    getGovtEntryRegistrationData(pending_beneficiary_UID, pending_national_id) {
        console.log("User id is::-->>" + pending_beneficiary_UID + " National id is::-->>" + pending_national_id);
        return this.http.get(_environments_environment__WEBPACK_IMPORTED_MODULE_7__["environment"].hostUrl + this.getGovtEntryRegistrationDataUrl + `${pending_national_id}/${pending_beneficiary_UID}`);
    }
    showGeneralMessage(headerTitle, description, checkSession) {
        this.hideGeneralModal();
        this.showGeneralModal({ callerModule: 'GENERAL_MESSAGE',
            headerTitle: headerTitle,
            description: description,
            checkSession: checkSession
        });
    }
    /* Gov DashBoard */
    getActiveLgListForGovt(crNoOrUidNo) {
        return this.http.get(_environments_environment__WEBPACK_IMPORTED_MODULE_7__["environment"].hostUrl + this.getActiveLgListForGovtUrl + `${crNoOrUidNo}`);
    }
    govCountOfActive(crNoOrUidNo) {
        return this.http.get(_environments_environment__WEBPACK_IMPORTED_MODULE_7__["environment"].hostUrl + this.govCountOfActiveUrl + `${crNoOrUidNo}`);
    }
    govCountOfPending(crNoOrUidNo) {
        return this.http.get(_environments_environment__WEBPACK_IMPORTED_MODULE_7__["environment"].hostUrl + this.govCountOfPendingUrl + `${crNoOrUidNo}`);
    }
    govCountOfExpired(crNoOrUidNo) {
        return this.http.get(_environments_environment__WEBPACK_IMPORTED_MODULE_7__["environment"].hostUrl + this.govCountOfExpiredUrl + `${crNoOrUidNo}`);
    }
    govCountOfPendingApproval(crNoOrUidNo) {
        return this.http.get(_environments_environment__WEBPACK_IMPORTED_MODULE_7__["environment"].hostUrl + this.govCountOfPendingApprovalUrl + `${crNoOrUidNo}`);
    }
    govGetGraphData(crNoOrUidNo) {
        return this.http.get(_environments_environment__WEBPACK_IMPORTED_MODULE_7__["environment"].hostUrl + this.govGetGraphDataUrl + `${crNoOrUidNo}`);
    }
    /* Gov DashBoard */
    /* Admin DashBoard */
    getActiveLgListForAdmin() {
        return this.http.get(_environments_environment__WEBPACK_IMPORTED_MODULE_7__["environment"].hostUrl + this.getActiveLgListForAdminUrl);
    }
    getPendingLgListForAdmin() {
        return this.http.get(_environments_environment__WEBPACK_IMPORTED_MODULE_7__["environment"].hostUrl + this.getPendingLgListForAdminUrl);
    }
    adminCountOfActive() {
        return this.http.get(_environments_environment__WEBPACK_IMPORTED_MODULE_7__["environment"].hostUrl + this.adminCountOfActiveUrl);
    }
    adminCountOfPending() {
        return this.http.get(_environments_environment__WEBPACK_IMPORTED_MODULE_7__["environment"].hostUrl + this.adminCountOfPendingUrl);
    }
    adminCountOfExpired() {
        return this.http.get(_environments_environment__WEBPACK_IMPORTED_MODULE_7__["environment"].hostUrl + this.adminCountOfExpiredUrl);
    }
    adminCountOfPendingApproval() {
        return this.http.get(_environments_environment__WEBPACK_IMPORTED_MODULE_7__["environment"].hostUrl + this.adminCountOfPendingApprovalUrl);
    }
    adminGetGraphData() {
        return this.http.get(_environments_environment__WEBPACK_IMPORTED_MODULE_7__["environment"].hostUrl + this.adminGetGraphDataUrl);
    }
    /* Admin DashBoard */
    /* LG Management By Subhra */
    getAllInactiveLGforPrivateEntityList(crNoOrUidNo) {
        return this.http.get(_environments_environment__WEBPACK_IMPORTED_MODULE_7__["environment"].hostUrl + this.getAllInactiveLGforPrivateEntityListUrl + `${crNoOrUidNo}`);
    }
    getInActiveLgListForGovt(crNoOrUidNo) {
        return this.http.get(_environments_environment__WEBPACK_IMPORTED_MODULE_7__["environment"].hostUrl + this.getInActiveLgListForGovtUrl + `${crNoOrUidNo}`);
    }
    /* LG Management By Subhra */
    /* Govt LG Management By Subhra */
    getGovtEntityActiveLGList(crNoOrUidNo) {
        return this.http.get(_environments_environment__WEBPACK_IMPORTED_MODULE_7__["environment"].hostUrl + this.getGovtEntityActiveLGListUrl + `${crNoOrUidNo}`);
    }
    getGovtEntityInActiveLGList(crNoOrUidNo) {
        return this.http.get(_environments_environment__WEBPACK_IMPORTED_MODULE_7__["environment"].hostUrl + this.getGovtEntityInActiveLGListUrl + `${crNoOrUidNo}`);
    }
    /* Govt LG Management By Subhra */
    saveLGAmendment(requestId, lgNumber, lgIssueDate, lgStartDate, amendmentAmount, lgEndDate, writeup, amendmentAmountApproval, amendmentLGEndDateApproval, amendmentWriteUpApproval, amendmentApproval, amendmentBy, workflow_id, amendmentUpdate) {
        //alert("nationalId::"+nationalId+"==>>"+isApprove);
        console.log(requestId + "" + lgNumber + "" + lgIssueDate + "" + lgStartDate + "" + amendmentAmount + "" + lgEndDate + "" + writeup);
        let params = new FormData();
        params.append('request_id', requestId);
        params.append('lg_no', lgNumber);
        params.append('lg_issue_date', lgIssueDate);
        //params.append('lgIssueDate', '17-03-1990');
        params.append('lg_start_date', lgStartDate);
        //params.append('lgStartDate', '07-03-1990');
        params.append('lg_amendment_amt', amendmentAmount);
        params.append('lg_end_date', lgEndDate);
        // params.append('lgEndDate', '27-03-1990');
        params.append('terms_condition_message', writeup);
        params.append('amendmentAmountApproval', amendmentAmountApproval);
        params.append('amendmentLGEndDateApproval', amendmentLGEndDateApproval);
        params.append('amendmentWriteUpApproval', amendmentWriteUpApproval);
        params.append('amendmentApproval', amendmentApproval);
        params.append('amendmentBy', amendmentBy);
        params.append('workflow_id', workflow_id);
        // console.log("params "+JSON.stringify(params));
        //return this.http.post<any>(environment.hostUrl, params, this.createJWTTokenHeader() )
        if (amendmentUpdate) {
            return this.http.post(_environments_environment__WEBPACK_IMPORTED_MODULE_7__["environment"].hostUrl + this.updateLGAmendmentUrl, params, this.createJWTTokenHeader());
        }
        else {
            return this.http.post(_environments_environment__WEBPACK_IMPORTED_MODULE_7__["environment"].hostUrl + this.saveLGAmendmentUrl, params, this.createJWTTokenHeader());
        }
    }
    saveLGRelease(requestId, lgNumber, beneficiaryId, amount, releaseReason, partialRelease, releaseAmount, workflow_id, isReleaseUpdate) {
        //alert("nationalId::"+nationalId+"==>>"+isApprove);
        console.log(requestId + "" + lgNumber + "" + beneficiaryId + "" + amount + "" + releaseReason + "" + partialRelease + "" + releaseAmount);
        let params = new FormData();
        params.append('request_id', requestId);
        params.append('lg_no', lgNumber);
        params.append('beneficiary_id', beneficiaryId);
        params.append('lg_value', amount);
        params.append('release_reason', releaseReason);
        //params.append('partial_release_flag', );
        if (partialRelease) {
            params.append('partial_release_flag', 'Y');
        }
        else {
            params.append('partial_release_flag', 'N');
        }
        params.append('lg_release_amt', releaseAmount);
        //params.append('lgIssueDate', '17-03-1990');
        //params.append('lgStartDate', '07-03-1990');
        // params.append('lgEndDate', '27-03-1990');
        // console.log("params "+JSON.stringify(params));
        params.append('workflow_id', workflow_id);
        if (isReleaseUpdate) {
            return this.http.post(_environments_environment__WEBPACK_IMPORTED_MODULE_7__["environment"].hostUrl + this.updateLGReleaseUrl, params, this.createJWTTokenHeader());
        }
        else {
            return this.http.post(_environments_environment__WEBPACK_IMPORTED_MODULE_7__["environment"].hostUrl + this.saveLGReleaseUrl, params, this.createJWTTokenHeader());
        }
    }
    saveLGConfiscate(requestId, lgNumber, beneficiaryId, amount, bankName, IBAN, reason, partialConfiscation, confiscationAmount, workflow_id, isConfiscateUpdate) {
        //alert("nationalId::"+nationalId+"==>>"+isApprove);
        console.log(requestId + "" + lgNumber + "" + beneficiaryId + "" + amount + "" + bankName + "" + IBAN + "" + reason + "" + partialConfiscation + "" + confiscationAmount);
        let params = new FormData();
        params.append('request_id', requestId);
        params.append('lg_no', lgNumber);
        params.append('beneficiary_id', beneficiaryId);
        params.append('lg_value', amount);
        params.append('bank_code', bankName);
        params.append('Iban_no', IBAN);
        params.append('confiscate_reason', reason);
        if (partialConfiscation) {
            params.append('partial_confiscate_flag', 'Y');
        }
        else {
            params.append('partial_confiscate_flag', 'N');
        }
        params.append('lg_confiscate_amt', confiscationAmount);
        params.append('workflow_id', workflow_id);
        if (isConfiscateUpdate) {
            return this.http.post(_environments_environment__WEBPACK_IMPORTED_MODULE_7__["environment"].hostUrl + this.updateLGConfiscateUrl, params, this.createJWTTokenHeader());
        }
        else {
            return this.http.post(_environments_environment__WEBPACK_IMPORTED_MODULE_7__["environment"].hostUrl + this.saveLGConfiscateUrl, params, this.createJWTTokenHeader());
        }
    }
    addUserSubmit(body) {
        console.log("body:::::" + JSON.stringify(body));
        let params = new FormData();
        params.append('commRegNo', body.userObject.cr_no);
        params.append('rep_national_id', body.userObject.nin);
        params.append('dob', body.userObject.dob);
        //params.append('rep_dob', body.userObject.dob);
        params.append('cr_type', body.userObject.cr_type);
        params.append('cr_status', body.userObject.cr_status);
        params.append('cr_issue_dt', body.userObject.cr_issue_dt);
        params.append('cr_expiry_dt', body.userObject.cr_expiry_dt);
        params.append('rniFileContent', body.rniFile);
        params.append('crFileContent', body.crFile);
        params.append('lalFileContent', body.lalFile);
        params.append('laglFileContent', body.laglFile);
        params.append('name', body.name);
        params.append('rep_last_name', body.userName);
        //params.append('rep_national_id', body.nationalId);
        params.append('Email', body.email);
        //params.append('userId', body.userId);
        params.append('ContactInformation', body.mobileNo);
        params.append('EntityName', body.userObject.entity_name);
        params.append('commRegNoMCI', body.userObject.cr_no);
        params.append('mobileNo', body.mobileNo);
        //params.append('Email', body.emailAddress);
        params.append('address', body.userObject.address);
        params.append('city', body.userObject.city);
        params.append('commRegNo', body.userObject.cr_no);
        params.append('OfficeMobileNumber', body.mobileNo);
        params.append('password', body.password);
        params.append('agree_tag', body.isChecked);
        params.append('bi', body.bi);
        params.append('bankName', body.bankName);
        params.append('userId', body.userId);
        //params.append('crn', body.crn);</div>
        //params.append('mno', body.mno);
        return this.http.post(_environments_environment__WEBPACK_IMPORTED_MODULE_7__["environment"].hostUrl + this.saveUserUrl, params);
    }
    getBeneficiaryInfoAndApplicatInfo(requestId) {
        console.log(" request id is::-->>" + requestId);
        return this.http.get(_environments_environment__WEBPACK_IMPORTED_MODULE_7__["environment"].hostUrl + this.getBeneficiaryInfoAndApplicatInfoUrl + `${requestId}`);
    }
    getLgHistory(lg_no) {
        console.log(" lg_no is::-->>" + lg_no);
        return this.http.get(_environments_environment__WEBPACK_IMPORTED_MODULE_7__["environment"].hostUrl + this.getLgHistoryUrl + `${lg_no}`);
    }
    getAciveUserList(userId) {
        console.log("userId ::-->>" + userId);
        return this.http.get(_environments_environment__WEBPACK_IMPORTED_MODULE_7__["environment"].hostUrl + this.getAciveUserListUrl + `${userId}`);
    }
    getAciveUserListGov(userId) {
        console.log("userId ::-->>" + userId);
        return this.http.get(_environments_environment__WEBPACK_IMPORTED_MODULE_7__["environment"].hostUrl + '/getAciveGovEntityList/' + `${userId}`);
    }
    getAmendmentAndReleseAndConfiscationPendingList(crNoOrUidNo) {
        return this.http.get(_environments_environment__WEBPACK_IMPORTED_MODULE_7__["environment"].hostUrl + this.getAmendmentAndReleseAndConfiscationPendingListUrl + `${crNoOrUidNo}`);
    }
    updateLGAmendmentForApproveOrReject(requestId, type, message) {
        let params = new FormData();
        params.append('requestId', requestId);
        params.append('type', type);
        params.append('message', message);
        return this.http.post(_environments_environment__WEBPACK_IMPORTED_MODULE_7__["environment"].hostUrl + this.updateLGAmendmentForApproveOrRejectUrl, params, this.createJWTTokenHeader());
    }
    //Get Action list
    getActionList() {
        //return this.http.post<any>(environment.hostUrl+this.getActionListUrl)
        let params = new FormData();
        return this.http.post(_environments_environment__WEBPACK_IMPORTED_MODULE_7__["environment"].hostUrl + this.getActionListUrl, params);
    }
    //get IBAN list
    getSupplierByCRNo(loginid) {
        let params = new FormData();
        params.append('loginid', loginid);
        return this.http.post(_environments_environment__WEBPACK_IMPORTED_MODULE_7__["environment"].hostUrl + this.getSupplierByCRNoUrl, params);
    }
    getGovUserByCRNo(loginid) {
        let params = new FormData();
        params.append('loginid', loginid);
        return this.http.post(_environments_environment__WEBPACK_IMPORTED_MODULE_7__["environment"].hostUrl + this.getGovUserByCRNoUrl, params);
    }
    //get IBAN list
    getActivityMasterList() {
        // let params = new FormData();
        // params.append('id', userId);
        let params = new FormData();
        return this.http.post(_environments_environment__WEBPACK_IMPORTED_MODULE_7__["environment"].hostUrl + this.getActivityMasterListUrl, params);
    }
    saveworkflow(body) {
        /*  let params = new FormData();
         params.append('userId', body.userId);
         params.append('password', body.password); */
        return this.http.post(_environments_environment__WEBPACK_IMPORTED_MODULE_7__["environment"].hostUrl + this.saveworkflowUrl, body, this.createJWTTokenHeader());
    }
    getWorkFlowListByLoginId(loginid) {
        let params = new FormData();
        params.append('loginid', loginid);
        return this.http.post(_environments_environment__WEBPACK_IMPORTED_MODULE_7__["environment"].hostUrl + this.getWorkFlowMasterListByLoginIdUrl, params);
    }
    workflowDetails(crNoOrUidNo, workflow_id) {
        let params = new FormData();
        params.append('crNoOrUidNo', crNoOrUidNo);
        params.append('workflow_id', workflow_id);
        return this.http.post(_environments_environment__WEBPACK_IMPORTED_MODULE_7__["environment"].hostUrl + this.getWorkFlowDetailsListByWorkFlowIdAndloginidUrl, params);
    }
    getIbanListByLoginId(id) {
        // let params = new FormData();
        // params.append('id', userId);
        return this.http.post(_environments_environment__WEBPACK_IMPORTED_MODULE_7__["environment"].hostUrl + this.getIbanListByLoginIdUrl + `?loginid=${id}`, {});
    }
    getMenuByLoginId(loginid) {
        let params = new FormData();
        params.append('loginid', loginid);
        return this.http.post(_environments_environment__WEBPACK_IMPORTED_MODULE_7__["environment"].hostUrl + this.getMenuByLoginIdUrl, params);
    }
    getBondTypeFromWorkFlow(workflow_id, loginid) {
        let params = new FormData();
        params.append('workflow_id', workflow_id);
        params.append('loginid', loginid);
        return this.http.post(_environments_environment__WEBPACK_IMPORTED_MODULE_7__["environment"].hostUrl + this.getBondTypeFromWorkFlowUrl, params);
    }
    getPriceLimitFromWorkFlow(workflow_id, loginid) {
        let params = new FormData();
        params.append('workflow_id', workflow_id);
        params.append('loginid', loginid);
        return this.http.post(_environments_environment__WEBPACK_IMPORTED_MODULE_7__["environment"].hostUrl + this.getPriceLimitFromWorkFlowUrl, params);
    }
    getBankIbanListFromWorkFlow(workflow_id, loginid) {
        let params = new FormData();
        params.append('workflow_id', workflow_id);
        params.append('loginid', loginid);
        return this.http.post(_environments_environment__WEBPACK_IMPORTED_MODULE_7__["environment"].hostUrl + this.getBankIbanListFromWorkFlowUrl, params);
    }
    getInternalIssuanceRejectList(loginid) {
        let params = new FormData();
        params.append('loginid', loginid);
        return this.http.post(_environments_environment__WEBPACK_IMPORTED_MODULE_7__["environment"].hostUrl + this.getInternalIssuanceRejectListUrl, params);
    }
    getInternalPendingIssuanceCreateList(loginid) {
        let params = new FormData();
        params.append('loginid', loginid);
        return this.http.post(_environments_environment__WEBPACK_IMPORTED_MODULE_7__["environment"].hostUrl + this.getInternalPendingIssuanceCreateListUrl, params);
    }
    getInternalPendingIssuanceReviewList(loginid) {
        let params = new FormData();
        params.append('loginid', loginid);
        return this.http.post(_environments_environment__WEBPACK_IMPORTED_MODULE_7__["environment"].hostUrl + this.getInternalPendingIssuanceReviewListUrl, params);
    }
    getInternalIssuanceApprovalPendingList(loginid) {
        let params = new FormData();
        params.append('loginid', loginid);
        return this.http.post(_environments_environment__WEBPACK_IMPORTED_MODULE_7__["environment"].hostUrl + this.getInternalIssuanceApprovalPendingListUrl, params);
    }
    getInternalAmendmentRejectList(loginid) {
        let params = new FormData();
        params.append('loginid', loginid);
        return this.http.post(_environments_environment__WEBPACK_IMPORTED_MODULE_7__["environment"].hostUrl + this.getInternalAmendmentRejectListUrl, params);
    }
    getInternalAmendmentPendingCreateList(loginid) {
        let params = new FormData();
        params.append('loginid', loginid);
        return this.http.post(_environments_environment__WEBPACK_IMPORTED_MODULE_7__["environment"].hostUrl + this.getInternalAmendmentPendingCreateListUrl, params);
    }
    getInternalAmendmentPendingReviewList(loginid) {
        let params = new FormData();
        params.append('loginid', loginid);
        return this.http.post(_environments_environment__WEBPACK_IMPORTED_MODULE_7__["environment"].hostUrl + this.getInternalAmendmentPendingReviewListUrl, params);
    }
    getInternalAmendmentApproveList(loginid) {
        let params = new FormData();
        params.append('loginid', loginid);
        return this.http.post(_environments_environment__WEBPACK_IMPORTED_MODULE_7__["environment"].hostUrl + this.getInternalAmendmentApproveListUrl, params);
    }
    getInternalConfiscateRejectPendingList(loginid) {
        let params = new FormData();
        params.append('loginid', loginid);
        return this.http.post(_environments_environment__WEBPACK_IMPORTED_MODULE_7__["environment"].hostUrl + this.getInternalConfiscateRejectPendingListUrl, params);
    }
    getInternalConfiscateCreatePendingList(loginid) {
        let params = new FormData();
        params.append('loginid', loginid);
        return this.http.post(_environments_environment__WEBPACK_IMPORTED_MODULE_7__["environment"].hostUrl + this.getInternalConfiscateCreatePendingListUrl, params);
    }
    getInternalConfiscateReviewPendingList(loginid) {
        let params = new FormData();
        params.append('loginid', loginid);
        return this.http.post(_environments_environment__WEBPACK_IMPORTED_MODULE_7__["environment"].hostUrl + this.getInternalConfiscateReviewPendingListUrl, params);
    }
    getInternalConfiscateApproveList(loginid) {
        let params = new FormData();
        params.append('loginid', loginid);
        return this.http.post(_environments_environment__WEBPACK_IMPORTED_MODULE_7__["environment"].hostUrl + this.getInternalConfiscateApproveListUrl, params);
    }
    getInternalReleaseRejectPendingList(loginid) {
        let params = new FormData();
        params.append('loginid', loginid);
        return this.http.post(_environments_environment__WEBPACK_IMPORTED_MODULE_7__["environment"].hostUrl + this.getInternalReleaseRejectPendingListUrl, params);
    }
    getInternalReleaseCreatePendingList(loginid) {
        let params = new FormData();
        params.append('loginid', loginid);
        return this.http.post(_environments_environment__WEBPACK_IMPORTED_MODULE_7__["environment"].hostUrl + this.getInternalReleaseCreatePendingListUrl, params);
    }
    getInternalReleaseReviewPendingList(loginid) {
        let params = new FormData();
        params.append('loginid', loginid);
        return this.http.post(_environments_environment__WEBPACK_IMPORTED_MODULE_7__["environment"].hostUrl + this.getInternalReleaseReviewPendingListUrl, params);
    }
    getInternalReleaseApprovePendingList(loginid) {
        let params = new FormData();
        params.append('loginid', loginid);
        return this.http.post(_environments_environment__WEBPACK_IMPORTED_MODULE_7__["environment"].hostUrl + this.getInternalReleaseApprovePendingListUrl, params);
    }
    updateInternalWorkflowApproveOrReject(loginId, requestId, step, message, activity) {
        let params = new FormData();
        params.append('loginid', loginId);
        params.append('requestId', requestId);
        params.append('step', step);
        params.append('message', message);
        params.append('activity', activity);
        return this.http.post(_environments_environment__WEBPACK_IMPORTED_MODULE_7__["environment"].hostUrl + this.updateInternalWorkflowApproveOrRejectUrl, params, this.createJWTTokenHeader());
    }
    updateLgRequestAfterPayment(requestId) {
        /* let params = new FormData();
        params.append('requestId', requestId); */
        return this.http.post(_environments_environment__WEBPACK_IMPORTED_MODULE_7__["environment"].hostUrl + this.updateLgRequestAfterPaymentUrl + `?requestId=${requestId}`, {});
    }
    getWorkFlowDetailsListByMultipleWorkFlowIdsAndloginid(loginid, workflow_ids) {
        let params = new FormData();
        params.append('loginid', loginid);
        params.append('workflow_ids', workflow_ids);
        return this.http.post(_environments_environment__WEBPACK_IMPORTED_MODULE_7__["environment"].hostUrl + this.getWorkFlowDetailsListByMultipleWorkFlowIdsAndloginidUrl, params, this.createJWTTokenHeader());
        //return this.http.post<any>(environment.hostUrl+this.getWorkFlowDetailsListByMultipleWorkFlowIdsAndloginidUrl+`${lg_no}`)
    }
    amendmentCreationLgListIssueByMe(crNoOrUidNo, workflow_id) {
        let params = new FormData();
        params.append('crNoOrUidNo', crNoOrUidNo);
        params.append('workflow_id', workflow_id);
        return this.http.post(_environments_environment__WEBPACK_IMPORTED_MODULE_7__["environment"].hostUrl + this.amendmentCreationLgListIssueByMeUrl, params, this.createJWTTokenHeader());
    }
    amendmentReleaseAndconfiscateCreationLgListIssueForMe(crNoOrUidNo, workflow_id) {
        let params = new FormData();
        params.append('crNoOrUidNo', crNoOrUidNo);
        params.append('workflow_id', workflow_id);
        return this.http.post(_environments_environment__WEBPACK_IMPORTED_MODULE_7__["environment"].hostUrl + this.amendmentReleaseAndconfiscateCreationLgListIssueForMeUrl, params, this.createJWTTokenHeader());
    }
    getNotificationList(loginid, crNoOrUidNo) {
        let params = new FormData();
        params.append('loginid', loginid);
        params.append('crNoOrUidNo', crNoOrUidNo);
        return this.http.post(_environments_environment__WEBPACK_IMPORTED_MODULE_7__["environment"].hostUrl + this.getNotificationListUrl, params);
    }
    getNotificationCountByLoginId(loginid, crNoOrUidNo) {
        let params = new FormData();
        params.append('loginid', loginid);
        params.append('crNoOrUidNo', crNoOrUidNo);
        return this.http.post(_environments_environment__WEBPACK_IMPORTED_MODULE_7__["environment"].hostUrl + this.getNotificationCountByLoginIdUrl, params);
    }
    updateNewNotificationFlag(notification_ids) {
        let params = new FormData();
        params.append('notification_ids', notification_ids);
        return this.http.post(_environments_environment__WEBPACK_IMPORTED_MODULE_7__["environment"].hostUrl + this.updateNewNotificationFlagUrl, params);
    }
};
CommonService.ctorParameters = () => [
    { type: _angular_common_http__WEBPACK_IMPORTED_MODULE_2__["HttpClient"] },
    { type: _angular_material__WEBPACK_IMPORTED_MODULE_8__["MatDialog"] },
    { type: _angular_router__WEBPACK_IMPORTED_MODULE_5__["Router"] }
];
CommonService = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])({
        providedIn: 'root'
    }),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_angular_common_http__WEBPACK_IMPORTED_MODULE_2__["HttpClient"], _angular_material__WEBPACK_IMPORTED_MODULE_8__["MatDialog"], _angular_router__WEBPACK_IMPORTED_MODULE_5__["Router"]])
], CommonService);



/***/ }),

/***/ "./src/app/sidemenu/sidemenu.component.css":
/*!*************************************************!*\
  !*** ./src/app/sidemenu/sidemenu.component.css ***!
  \*************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NpZGVtZW51L3NpZGVtZW51LmNvbXBvbmVudC5jc3MifQ== */");

/***/ }),

/***/ "./src/app/sidemenu/sidemenu.component.ts":
/*!************************************************!*\
  !*** ./src/app/sidemenu/sidemenu.component.ts ***!
  \************************************************/
/*! exports provided: SidemenuComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SidemenuComponent", function() { return SidemenuComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _services_common_service_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../services/common-service.service */ "./src/app/services/common-service.service.ts");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm2015/router.js");
/* harmony import */ var _ngx_translate_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @ngx-translate/core */ "./node_modules/@ngx-translate/core/fesm2015/ngx-translate-core.js");
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/material */ "./node_modules/@angular/material/esm2015/material.js");
/* harmony import */ var _workflow_select_modal_workflow_select_modal_component__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../workflow-select-modal/workflow-select-modal.component */ "./src/app/workflow-select-modal/workflow-select-modal.component.ts");







let SidemenuComponent = class SidemenuComponent {
    constructor(commonService, router, translate, dialog) {
        this.commonService = commonService;
        this.router = router;
        this.translate = translate;
        this.dialog = dialog;
        this.menuIssuanceCreate = false;
        this.menuReleaseCreate = false;
        this.menuAmendCreate = false;
        this.menuConfiscateCreate = false;
        this.workflowLists = [];
        this.Issuance_workflow_ids = [];
        this.Amendment_workflow_ids = [];
        this.Confiscate_workflow_ids = [];
        this.Release_workflow_ids = [];
        this.roleId = localStorage.getItem('roleId');
        console.log("Side this.roleId::::" + this.roleId);
        this.loginId = localStorage.getItem('userId');
        console.log("this.loginId::::" + this.loginId);
        this.userId = localStorage.getItem('userId');
        console.log("this.userId::::" + this.userId);
        this.crNoOrUidNo = localStorage.getItem('crNoOrUidNo');
        console.log("this.crNoOrUidNo::::" + this.crNoOrUidNo);
        /* this.acl = JSON.parse(localStorage.getItem('acl'));
        console.log("ACL ::::" + JSON.stringify(this.acl)); */
        this.commonService.workflowchangeObjObservable.subscribe((acl) => {
            if (acl) {
                this.menuIssuanceCreate = false;
                this.menuReleaseCreate = false;
                this.menuAmendCreate = false;
                this.menuConfiscateCreate = false;
                this.Issuance_workflow_ids = [];
                this.Amendment_workflow_ids = [];
                this.Confiscate_workflow_ids = [];
                this.Release_workflow_ids = [];
                this.acl = JSON.parse(localStorage.getItem('acl'));
                console.log("ACL ::::" + JSON.stringify(this.acl));
                if (this.acl.Issuance !== undefined) {
                    console.log("Issuance workflow_id :" + this.acl.Issuance.workflow_id);
                    for (let actions of this.acl.Issuance['subMenu']) {
                        console.log(actions.action_nm);
                        if (actions.action_nm === 'Create') {
                            this.menuIssuanceCreate = true;
                            this.Issuance_workflow_ids = this.acl.Issuance.workflow_ids;
                        }
                    }
                }
                if (this.acl.Amendment !== undefined) {
                    console.log("Amendment workflow_id :" + this.acl.Amendment.workflow_id);
                    for (let actions of this.acl.Amendment['subMenu']) {
                        console.log(actions.action_nm);
                        if (actions.action_nm === 'Create') {
                            this.menuAmendCreate = true;
                            this.Amendment_workflow_ids = this.acl.Amendment.workflow_ids;
                        }
                    }
                }
                if (this.acl.Confiscate !== undefined) {
                    console.log("Confiscate workflow_id :" + this.acl.Confiscate.workflow_id);
                    for (let actions of this.acl.Confiscate['subMenu']) {
                        console.log(actions.action_nm);
                        if (actions.action_nm === 'Create') {
                            this.menuConfiscateCreate = true;
                            this.Confiscate_workflow_ids = this.acl.Confiscate.workflow_ids;
                        }
                    }
                }
                if (this.acl.Release !== undefined) {
                    console.log("Release workflow_id :" + this.acl.Release.workflow_id);
                    for (let actions of this.acl.Release['subMenu']) {
                        console.log(actions.action_nm);
                        if (actions.action_nm === 'Create') {
                            this.menuReleaseCreate = true;
                            this.Release_workflow_ids = this.acl.Release.workflow_ids;
                        }
                    }
                }
            }
        });
    }
    ngOnInit() {
    }
    workflowSelect(menuType) {
        //this.commonService.showGeneralMessage("", "Alert shows", false);
        console.log(menuType);
        if (menuType == 'Issuance') {
            var workflowIDS = this.Issuance_workflow_ids;
        }
        if (menuType == 'Amendment') {
            var workflowIDS = this.Amendment_workflow_ids;
        }
        if (menuType == 'Confiscate') {
            var workflowIDS = this.Confiscate_workflow_ids;
        }
        if (menuType == 'Release') {
            var workflowIDS = this.Release_workflow_ids;
        }
        const dialogConfig = new _angular_material__WEBPACK_IMPORTED_MODULE_5__["MatDialogConfig"]();
        dialogConfig.disableClose = true;
        dialogConfig.autoFocus = true;
        dialogConfig.panelClass = 'custom-modalbox';
        dialogConfig.data = {
            description: 'description',
            menuType: menuType,
            workflowIDS: workflowIDS
        };
        this.dialogRef = this.dialog.open(_workflow_select_modal_workflow_select_modal_component__WEBPACK_IMPORTED_MODULE_6__["WorkflowSelectModalComponent"], dialogConfig);
        this.dialogRef.afterClosed().subscribe(result => {
            console.log('Dialog result: ${result} >>', result); // Pizza!
            if (result) {
            }
        });
    }
};
SidemenuComponent.ctorParameters = () => [
    { type: _services_common_service_service__WEBPACK_IMPORTED_MODULE_2__["CommonService"] },
    { type: _angular_router__WEBPACK_IMPORTED_MODULE_3__["Router"] },
    { type: _ngx_translate_core__WEBPACK_IMPORTED_MODULE_4__["TranslateService"] },
    { type: _angular_material__WEBPACK_IMPORTED_MODULE_5__["MatDialog"] }
];
SidemenuComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-sidemenu',
        template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! raw-loader!./sidemenu.component.html */ "./node_modules/raw-loader/dist/cjs.js!./src/app/sidemenu/sidemenu.component.html")).default,
        styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! ./sidemenu.component.css */ "./src/app/sidemenu/sidemenu.component.css")).default]
    }),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_services_common_service_service__WEBPACK_IMPORTED_MODULE_2__["CommonService"], _angular_router__WEBPACK_IMPORTED_MODULE_3__["Router"], _ngx_translate_core__WEBPACK_IMPORTED_MODULE_4__["TranslateService"], _angular_material__WEBPACK_IMPORTED_MODULE_5__["MatDialog"]])
], SidemenuComponent);



/***/ }),

/***/ "./src/app/summary.pipe.ts":
/*!*********************************!*\
  !*** ./src/app/summary.pipe.ts ***!
  \*********************************/
/*! exports provided: SummaryPipe */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SummaryPipe", function() { return SummaryPipe; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");


let SummaryPipe = class SummaryPipe {
    transform(value, args) {
        if (!value)
            return null;
        if (value.length < 20) {
            return value;
        }
        else {
            return value.substr(0, 20) + '...';
        }
    }
};
SummaryPipe = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Pipe"])({
        name: 'summary'
    })
], SummaryPipe);



/***/ }),

/***/ "./src/app/user-reset-password-modal/user-reset-password-modal.component.css":
/*!***********************************************************************************!*\
  !*** ./src/app/user-reset-password-modal/user-reset-password-modal.component.css ***!
  \***********************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VzZXItcmVzZXQtcGFzc3dvcmQtbW9kYWwvdXNlci1yZXNldC1wYXNzd29yZC1tb2RhbC5jb21wb25lbnQuY3NzIn0= */");

/***/ }),

/***/ "./src/app/user-reset-password-modal/user-reset-password-modal.component.ts":
/*!**********************************************************************************!*\
  !*** ./src/app/user-reset-password-modal/user-reset-password-modal.component.ts ***!
  \**********************************************************************************/
/*! exports provided: UserResetPasswordModalComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "UserResetPasswordModalComponent", function() { return UserResetPasswordModalComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/material */ "./node_modules/@angular/material/esm2015/material.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm2015/forms.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm2015/router.js");
/* harmony import */ var _ngx_translate_core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @ngx-translate/core */ "./node_modules/@ngx-translate/core/fesm2015/ngx-translate-core.js");
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/common/http */ "./node_modules/@angular/common/fesm2015/http.js");
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! moment */ "./node_modules/moment/moment.js");
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(moment__WEBPACK_IMPORTED_MODULE_7__);
/* harmony import */ var _services_common_service_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../services/common-service.service */ "./src/app/services/common-service.service.ts");









let UserResetPasswordModalComponent = class UserResetPasswordModalComponent {
    constructor(http, zone, commonService, router, fb, dialogRef, data, translate) {
        this.http = http;
        this.zone = zone;
        this.commonService = commonService;
        this.router = router;
        this.fb = fb;
        this.dialogRef = dialogRef;
        this.translate = translate;
        this.bankNamesList = [];
        this.noPattern = '^(0|[1-9][0-9]*)$';
        this.emailPattern = "^[a-z0-9._%+-]+@[a-z0-9.-]+.[a-z]{2,4}$";
        this.notSelected = "Not selected";
        this.isSelectedrniFile = false;
        this.isSelectedlalFile = false;
        this.isSelectedcrFile = false;
        this.isSelectedlaglFile = false;
        this.allowedExtensions = ['jpg', 'gif', 'pdf', 'png'];
        this.validation_messages = {
            password: [
                { type: "required", message: "This is a required field." }
            ],
            confirmPassword: [
                { type: "required", message: "This is a required field." }
            ],
        };
        this.dropdownListBank = [];
        this.isNotPasswordMatch = false;
        this.formSendModel = {};
        console.log('modal data >', data.modalData);
        this.getComponentData = data.modalData;
    }
    ngOnInit() {
        console.log('<<<<<<<<<<< --- ngOnInit --- >>>>>>>>>>>');
        let today = new Date();
        let yesterday = new Date(today);
        yesterday.setDate(today.getDate() - 1);
        let month = today.getMonth();
        let year = today.getFullYear();
        this.maxDate = yesterday;
        this.maxDate.setMonth(month);
        this.maxDate.setFullYear(year);
        this.roleId = localStorage.getItem('roleId');
        console.log("this.roleId::::" + this.roleId);
        this.loginId = localStorage.getItem('userId');
        console.log("this.loginId::::" + this.loginId);
        this.userId = localStorage.getItem('userId');
        this.stroageCrNoOrUidNo = localStorage.getItem('crNoOrUidNo');
        console.log("this.stroageCrNoOrUidNo::::" + this.stroageCrNoOrUidNo);
        console.log("this.userId::::" + this.userId);
        this.submitUser = this.fb.group({
            password: [
                "",
                [
                    _angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].required
                ]
            ],
            confirmPassword: [
                "",
                [
                    _angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].required
                ]
            ],
        });
    }
    ngAfterViewInit() {
        console.log('<<<<<<<<<<< ngAfterViewInit >>>>>>>>>>>');
        /*
        this.roleId = localStorage.getItem('roleId');
        console.log("this.roleId::::" + this.roleId);
        this.loginId = localStorage.getItem('userId');
        console.log("this.loginId::::" + this.loginId);
        this.userId = localStorage.getItem('userId');
        this.stroageCrNoOrUidNo = localStorage.getItem('crNoOrUidNo');
    
        console.log("this.stroageCrNoOrUidNo::::" + this.stroageCrNoOrUidNo);
        console.log("this.userId::::" + this.userId);*/
        /*this.dropdownListBank = [];
        this.dataSubscribe = this.commonService.getIBANList(this.userId)
        .subscribe(res => {
          console.log("IBAN list::::" + res);
          this.bankNamesList = res;
    
          // this.zone.run(() => {
            for(let item of res){
             this.dropdownListBank.push({'name':item.tBankmaster.bankName});
             console.log('this.dropdownListBank >', this.dropdownListBank);
            }
          // });
        });*/
    }
    onBlurPasswordMatch(confirmPassword) {
        console.log("confirmPassword >>" + confirmPassword);
        var index = this.submitUser.value.password.localeCompare(confirmPassword);
        if (index !== 0) {
            // alert("Passwords must match");
            this.isNotPasswordMatch = true;
            // this.commonService.showGeneralMessage("", "Password must match", false);
            this.submitUser.controls["confirmPassword"].setValue(null);
        }
        else {
            this.isNotPasswordMatch = false;
        }
    }
    onBlurPasswordMatchkeyup(confirmPassword) {
        this.isNotPasswordMatch = false;
    }
    getDOB(_getDAte) {
        this.dobFormat = moment__WEBPACK_IMPORTED_MODULE_7__(_getDAte).format('DD/MM/YYYY');
        console.log('getDOB >', _getDAte);
        console.log('formatDate >', this.dobFormat);
    }
    onBlurMobile(mobile) {
        console.log("mobile[0] and type" + mobile[0] + ' ' + typeof (mobile[0]));
        /*if(mobile[0] !== '0' && mobile.length === 11){
          this.submitUser.controls["mobileNo"].setValue(null);
        }*/
    }
    close() {
        this.dialogRef.close();
    }
    addUserSubmit() {
        console.log("amenaddUserSubmitdSubmit() called valid >", this.submitUser.valid);
        // console.log("amendSubmit() called" + JSON.stringify(this.submitUser.value));
        /*if (this.submitUser.valid) {
         this.dialogRef.close(this.submitUser.value);
       }*/
        if (this.submitUser.valid) {
            // let params = new FormData();
            // params.append('login_id', this.getComponentData.login_id);
            // params.append('password', this.submitUser.controls['password'].value);
            let parmsData = {
                login_id: this.getComponentData.login_id,
                password: this.submitUser.controls['password'].value,
            };
            // params.append('confirmPassword', this.submitUser.controls['confirmPassword'].value);         
            this.dataSubscribe = this.commonService.submitFormDataJson('updatePassword', parmsData)
                .subscribe(res => {
                console.log("reset password form submit Response is::::" + JSON.stringify(res));
                // if (res.responseCode == 107) {
                //if (res.responseCode == 1) {
                // this.submitUser.reset();
                this.dialogRef.close(this.submitUser.value);
                this.commonService.showGeneralMessage("", res.responseMessage, false);
                // this.commonService.showGeneralMessage("", "User form is submitted successfully.", false);
                //this.router.navigate(['login']);
                //}
            });
            //this.commonService.isGovPart2Completed = true;
            //this.router.navigate(['governmentEntityReg3']);
        }
        else {
            console.log('in valid form');
            // this.isOpenValidationAlert = true;
            Object.keys(this.submitUser.controls).forEach(field => {
                // console.log('field >', field);
                const control = this.submitUser.get(field);
                // console.log('control >', control);
                control.markAsTouched({ onlySelf: true });
            });
        }
    }
    closeAddUserButton() {
        this.dialogRef.close();
        // this.router.navigate(['editUserDetails/1494']);
    }
    onBlurNationalIdentity(_val) {
        console.log('onBlurNationalIdentity val >', _val);
        this.dataSubscribe = this.commonService.getNationalIdentyData(_val, this.stroageCrNoOrUidNo).subscribe(res => {
            this.getMciValideDataAll = res.userObject;
            console.log("onBlurNationalIdentity ::::" + JSON.stringify(res));
            this.submitUser.controls["FirstName"].setValue(res.userObject.fname);
            this.submitUser.controls["LastName"].setValue(res.userObject.lname);
        });
    }
    // ----------- destroy subscription ---------
    ngOnDestroy() {
        console.log('<<<<<<<<<<< --- ngOnDestroy --- >>>>>>>>>>>');
        if (this.dataSubscribe !== undefined) {
            this.dataSubscribe.unsubscribe();
        }
    }
};
UserResetPasswordModalComponent.ctorParameters = () => [
    { type: _angular_common_http__WEBPACK_IMPORTED_MODULE_6__["HttpClient"] },
    { type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["NgZone"] },
    { type: _services_common_service_service__WEBPACK_IMPORTED_MODULE_8__["CommonService"] },
    { type: _angular_router__WEBPACK_IMPORTED_MODULE_4__["Router"] },
    { type: _angular_forms__WEBPACK_IMPORTED_MODULE_3__["FormBuilder"] },
    { type: _angular_material__WEBPACK_IMPORTED_MODULE_2__["MatDialogRef"] },
    { type: undefined, decorators: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"], args: [_angular_material__WEBPACK_IMPORTED_MODULE_2__["MAT_DIALOG_DATA"],] }] },
    { type: _ngx_translate_core__WEBPACK_IMPORTED_MODULE_5__["TranslateService"] }
];
UserResetPasswordModalComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-user-reset-password-modal',
        template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! raw-loader!./user-reset-password-modal.component.html */ "./node_modules/raw-loader/dist/cjs.js!./src/app/user-reset-password-modal/user-reset-password-modal.component.html")).default,
        styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! ./user-reset-password-modal.component.css */ "./src/app/user-reset-password-modal/user-reset-password-modal.component.css")).default]
    }),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__param"](6, Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"])(_angular_material__WEBPACK_IMPORTED_MODULE_2__["MAT_DIALOG_DATA"])),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_angular_common_http__WEBPACK_IMPORTED_MODULE_6__["HttpClient"],
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["NgZone"],
        _services_common_service_service__WEBPACK_IMPORTED_MODULE_8__["CommonService"],
        _angular_router__WEBPACK_IMPORTED_MODULE_4__["Router"],
        _angular_forms__WEBPACK_IMPORTED_MODULE_3__["FormBuilder"],
        _angular_material__WEBPACK_IMPORTED_MODULE_2__["MatDialogRef"], Object, _ngx_translate_core__WEBPACK_IMPORTED_MODULE_5__["TranslateService"]])
], UserResetPasswordModalComponent);



/***/ }),

/***/ "./src/app/workflow-select-modal/workflow-select-modal.component.css":
/*!***************************************************************************!*\
  !*** ./src/app/workflow-select-modal/workflow-select-modal.component.css ***!
  \***************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3dvcmtmbG93LXNlbGVjdC1tb2RhbC93b3JrZmxvdy1zZWxlY3QtbW9kYWwuY29tcG9uZW50LmNzcyJ9 */");

/***/ }),

/***/ "./src/app/workflow-select-modal/workflow-select-modal.component.ts":
/*!**************************************************************************!*\
  !*** ./src/app/workflow-select-modal/workflow-select-modal.component.ts ***!
  \**************************************************************************/
/*! exports provided: WorkflowSelectModalComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "WorkflowSelectModalComponent", function() { return WorkflowSelectModalComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/material */ "./node_modules/@angular/material/esm2015/material.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm2015/forms.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm2015/router.js");
/* harmony import */ var _ngx_translate_core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @ngx-translate/core */ "./node_modules/@ngx-translate/core/fesm2015/ngx-translate-core.js");
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/common/http */ "./node_modules/@angular/common/fesm2015/http.js");
/* harmony import */ var _services_common_service_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../services/common-service.service */ "./src/app/services/common-service.service.ts");








let WorkflowSelectModalComponent = class WorkflowSelectModalComponent {
    constructor(http, zone, commonService, router, fb, dialogRef, data, translate) {
        this.http = http;
        this.zone = zone;
        this.commonService = commonService;
        this.router = router;
        this.fb = fb;
        this.dialogRef = dialogRef;
        this.translate = translate;
        this.validation_messages = {
            workflow_id: [
                { type: "required", message: "This is a required field." }
            ],
        };
        this.dropdownListBank = [];
        this.formSendModel = {};
        console.log('modal data >', data);
        console.log('modal data workflowIDS >', data.workflowIDS);
        this.getComponentData = data.modalData;
        this.workflowIDS = data.workflowIDS;
        this.menuType = data.menuType;
    }
    ngOnInit() {
        console.log("this.getComponentData::::" + this.getComponentData);
        console.log('<<<<<<<<<<< --- ngOnInit --- >>>>>>>>>>>');
        this.roleId = localStorage.getItem('roleId');
        console.log("this.roleId::::" + this.roleId);
        this.loginId = localStorage.getItem('userId');
        console.log("this.loginId::::" + this.loginId);
        this.userId = localStorage.getItem('userId');
        this.stroageCrNoOrUidNo = localStorage.getItem('crNoOrUidNo');
        console.log("this.stroageCrNoOrUidNo::::" + this.stroageCrNoOrUidNo);
        console.log("this.userId::::" + this.userId);
        this.selectwork = this.fb.group({
            workflow_id: [
                "",
                [
                    _angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].required
                ]
            ],
        });
        this.commonService.getWorkFlowDetailsListByMultipleWorkFlowIdsAndloginid(this.userId, this.workflowIDS)
            .subscribe(res => {
            console.log("lgHistoryList::::" + JSON.stringify(res));
            console.log(res);
            this.workflowLists = res;
        });
    }
    ngAfterViewInit() {
        console.log('<<<<<<<<<<< ngAfterViewInit >>>>>>>>>>>');
    }
    close() {
        this.dialogRef.close();
    }
    SelectWorkflow() {
        if (this.selectwork.valid) {
            console.log(this.selectwork.value.workflow_id);
            this.commonService.setcurrentWFIDService(this.selectwork.value.workflow_id);
            localStorage.removeItem('currentWorkflowID');
            localStorage.setItem('currentWorkflowID', JSON.stringify(this.selectwork.value.workflow_id));
            localStorage.removeItem('currentmenuType');
            localStorage.setItem('currentmenuType', this.menuType);
            if (this.roleId == 1) {
                console.log('This is PRIVATE' + this.roleId);
                if (this.menuType == 'Issuance') {
                    this.router.navigate(['/requestLgIssuance']);
                }
                if (this.menuType == 'Amendment') {
                    this.router.navigate(['/privateAmendmentList']);
                }
                if (this.menuType == 'Confiscate') {
                    this.router.navigate(['/privateConfiscateList']);
                }
                if (this.menuType == 'Release') {
                    this.router.navigate(['/privateReleaseList']);
                }
            }
            if (this.roleId == 2) {
                console.log('This is GOV' + this.roleId);
                if (this.menuType == 'Amendment') {
                    this.router.navigate(['/governmentAmendmentList']);
                }
                if (this.menuType == 'Confiscate') {
                    this.router.navigate(['/governmentConfiscateList']);
                }
                if (this.menuType == 'Release') {
                    this.router.navigate(['/governmentReleaseList']);
                }
            }
            this.dialogRef.close();
        }
        else {
            console.log('No');
        }
    }
    closeSelectWorkflow() {
        this.dialogRef.close();
        // this.router.navigate(['editUserDetails/1494']);
    }
    // ----------- destroy subscription ---------
    ngOnDestroy() {
        console.log('<<<<<<<<<<< --- ngOnDestroy --- >>>>>>>>>>>');
        if (this.dataSubscribe !== undefined) {
            this.dataSubscribe.unsubscribe();
        }
    }
    workflowDetails(details) {
        console.log('workflowDetails');
        console.log(details.workflow_id);
        this.commonService.seteditworkflowIdService(details.workflow_id);
        /* localStorage.removeItem('editworkflowId');
        localStorage.setItem('editworkflowId', JSON.stringify(details.workflow_id)); */
        if (this.roleId == 1) {
            this.router.navigate(['/addnewworkflow']);
        }
        if (this.roleId == 2) {
            this.router.navigate(['/governmentworkflow']);
        }
        this.dialogRef.close();
        /* this.commonService.workflowDetails(this.userId,details.workflow_id)
        .subscribe(res => {
          this.Aciveworkflows = res;
          console.log("Acive workflow List :::: >>>>>>" + JSON.stringify(this.Aciveworkflows));
        }); */
    }
};
WorkflowSelectModalComponent.ctorParameters = () => [
    { type: _angular_common_http__WEBPACK_IMPORTED_MODULE_6__["HttpClient"] },
    { type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["NgZone"] },
    { type: _services_common_service_service__WEBPACK_IMPORTED_MODULE_7__["CommonService"] },
    { type: _angular_router__WEBPACK_IMPORTED_MODULE_4__["Router"] },
    { type: _angular_forms__WEBPACK_IMPORTED_MODULE_3__["FormBuilder"] },
    { type: _angular_material__WEBPACK_IMPORTED_MODULE_2__["MatDialogRef"] },
    { type: undefined, decorators: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"], args: [_angular_material__WEBPACK_IMPORTED_MODULE_2__["MAT_DIALOG_DATA"],] }] },
    { type: _ngx_translate_core__WEBPACK_IMPORTED_MODULE_5__["TranslateService"] }
];
WorkflowSelectModalComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-workflow-select-modal',
        template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! raw-loader!./workflow-select-modal.component.html */ "./node_modules/raw-loader/dist/cjs.js!./src/app/workflow-select-modal/workflow-select-modal.component.html")).default,
        styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! ./workflow-select-modal.component.css */ "./src/app/workflow-select-modal/workflow-select-modal.component.css")).default]
    }),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__param"](6, Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"])(_angular_material__WEBPACK_IMPORTED_MODULE_2__["MAT_DIALOG_DATA"])),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_angular_common_http__WEBPACK_IMPORTED_MODULE_6__["HttpClient"],
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["NgZone"],
        _services_common_service_service__WEBPACK_IMPORTED_MODULE_7__["CommonService"],
        _angular_router__WEBPACK_IMPORTED_MODULE_4__["Router"],
        _angular_forms__WEBPACK_IMPORTED_MODULE_3__["FormBuilder"],
        _angular_material__WEBPACK_IMPORTED_MODULE_2__["MatDialogRef"], Object, _ngx_translate_core__WEBPACK_IMPORTED_MODULE_5__["TranslateService"]])
], WorkflowSelectModalComponent);



/***/ }),

/***/ "./src/environments/environment.ts":
/*!*****************************************!*\
  !*** ./src/environments/environment.ts ***!
  \*****************************************/
/*! exports provided: environment */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "environment", function() { return environment; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
// This file can be replaced during build by using the `fileReplacements` array.
// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.
// The list of file replacements can be found in `angular.json`.

const environment = {
    hostUrl: 'http://116.193.137.66:8181',
    production: false
};
/*
 * For easier debugging in development mode, you can import the following file
 * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.
 *
 * This import should be commented out in production mode because it will have a negative impact
 * on performance if an error is thrown.
 */
// import 'zone.js/dist/zone-error';  // Included with Angular CLI.


/***/ }),

/***/ "./src/main.ts":
/*!*********************!*\
  !*** ./src/main.ts ***!
  \*********************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _angular_platform_browser_dynamic__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/platform-browser-dynamic */ "./node_modules/@angular/platform-browser-dynamic/fesm2015/platform-browser-dynamic.js");
/* harmony import */ var _app_app_module__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./app/app.module */ "./src/app/app.module.ts");
/* harmony import */ var _environments_environment__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./environments/environment */ "./src/environments/environment.ts");





if (_environments_environment__WEBPACK_IMPORTED_MODULE_4__["environment"].production) {
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["enableProdMode"])();
}
Object(_angular_platform_browser_dynamic__WEBPACK_IMPORTED_MODULE_2__["platformBrowserDynamic"])().bootstrapModule(_app_app_module__WEBPACK_IMPORTED_MODULE_3__["AppModule"])
    .catch(err => console.error(err));


/***/ }),

/***/ 0:
/*!***************************!*\
  !*** multi ./src/main.ts ***!
  \***************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(/*! F:\@@@@@Tabadul Project\@@@@CodeBase\beasdev-elg-latest-20-05-2020\beasdev-elg-latest-158ce867d9f8\Wethaq_20_05_2020\WethaqUI\src\main.ts */"./src/main.ts");


/***/ })

},[[0,"runtime","vendor"]]]);